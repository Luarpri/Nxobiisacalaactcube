0000000000000000 a __start__
0000000000000000 0000000000000008 D _glapi_tls_Dispatch
0000000000000000 T _start
0000000000000000 d _TLS_MODULE_BASE_
0000000000000008 0000000000000008 b _egl_TLS
0000000000000010 0000000000000008 B _glapi_tls_Context
0000000000000018 0000000000000004 B g_bsdErrno
000000000000001c 0000000000000004 B g_bsdResult
0000000000000020 0000000000000004 b g_fsPriority
0000000000000024 0000000000000004 b fsdev_last_result
0000000000000028 0000000000000401 B __nx_dev_path_buf
00000000000000e0 T __nx_exit
00000000000000f0 T __nx_mod0
0000000000000124 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000000158 0000000000000034 W __gnu_cxx::__throw_concurrence_unlock_error()
000000000000018c 0000000000000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
00000000000001c0 0000000000000034 T std::__throw_bad_alloc()
00000000000001f4 0000000000000034 T std::__throw_bad_array_new_length()
0000000000000228 0000000000000050 T std::__throw_logic_error(char const*)
0000000000000278 0000000000000050 T std::__throw_length_error(char const*)
00000000000002c8 0000000000000050 T std::__throw_out_of_range(char const*)
0000000000000318 000000000000000c T std::__throw_out_of_range_fmt(char const*, ...)
0000000000000324 0000000000000010 T std::terminate()
0000000000000334 0000000000000010 T std::unexpected()
0000000000000344 0000000000000044 T __cxa_call_terminate
0000000000000390 000000000000000c t _GLOBAL__sub_D_builtin_functions.cpp
00000000000003a0 00000000000008a0 t _GLOBAL__sub_D_glsl_types.cpp
0000000000000c40 000000000000006c t _GLOBAL__sub_D_builtin_types.cpp
0000000000000cc0 0000000000000034 t _GLOBAL__sub_D_eh_globals.cc
0000000000000d00 0000000000000034 T exit
0000000000000d40 0000000000000684 T main
00000000000013d0 0000000000000024 t _GLOBAL__sub_I_fastmix.cpp
0000000000001400 0000000000000010 t _GLOBAL__sub_I_builtin_functions.cpp
0000000000001410 0000000000001f80 t _GLOBAL__sub_I_glsl_types.cpp
0000000000003390 0000000000000044 t _GLOBAL__sub_I_ir_to_mesa.cpp
00000000000033e0 0000000000000090 t _GLOBAL__sub_I_st_glsl_to_tgsi.cpp
0000000000003470 0000000000000ec4 t _GLOBAL__sub_I_builtin_types.cpp
0000000000004340 0000000000000048 t _GLOBAL__sub_I_nv50_ir_ra.cpp
00000000000043a0 00000000000001f0 t _GLOBAL__sub_I_eh_alloc.cc
00000000000045a0 0000000000000038 t _GLOBAL__sub_I_eh_globals.cc
00000000000045e0 t __do_global_dtors_aux
0000000000004640 t frame_dummy
0000000000004670 0000000000000058 T render_text
00000000000046d0 000000000000007c t _Mix_remove_all_effects
0000000000004750 0000000000000044 t _Mix_channel_done_playing
00000000000047a0 00000000000000d4 t Mix_DoEffects
0000000000004880 00000000000000b0 t add_chunk_decoder
0000000000004930 000000000000017c T Mix_Init
0000000000004ab0 0000000000000004 T Mix_Quit
0000000000004ac0 000000000000061c T Mix_LoadWAV_RW
00000000000050e0 00000000000000bc T Mix_FreeChunk
00000000000051a0 00000000000000b4 T Mix_Volume
00000000000051a0 00000000000000b4 t Mix_Volume.localalias.9
0000000000005260 00000000000003ec t mix_channels
0000000000005650 00000000000000ec T Mix_HaltChannel
0000000000005650 00000000000000ec t Mix_HaltChannel.localalias.8
0000000000005740 00000000000000bc T Mix_Playing
0000000000005800 0000000000000200 T Mix_PlayChannelTimed
0000000000005a00 0000000000000060 t _Mix_UnregisterAllEffects_locked
0000000000005a60 0000000000000040 T Mix_UnregisterAllEffects
0000000000005aa0 00000000000000d4 T Mix_CloseAudio
0000000000005b80 00000000000001cc T Mix_OpenAudioDevice
0000000000005d50 000000000000000c T Mix_OpenAudio
0000000000005d60 0000000000000100 T Mix_AllocateChannels
0000000000005e60 000000000000000c t Mix_LockAudio
0000000000005e70 000000000000000c t Mix_UnlockAudio
0000000000005e80 0000000000000058 t music_internal_halt
0000000000005ee0 000000000000006c t music_internal_playing
0000000000005f50 00000000000000b0 t add_music_decoder
0000000000006000 0000000000000308 t open_music_type.part.0
0000000000006310 0000000000000008 t get_num_music_interfaces
0000000000006320 0000000000000010 t get_music_interface
0000000000006330 0000000000000100 t music_pcm_getaudio
0000000000006430 00000000000001b4 T music_mixer
00000000000065f0 0000000000000108 t load_music_type
0000000000006700 000000000000001c t open_music_type
0000000000006720 00000000000000b4 t detect_music_type_from_magic
00000000000067e0 0000000000000350 T Mix_LoadMUSType_RW
0000000000006b30 00000000000003e0 T Mix_LoadMUS
0000000000006f10 000000000000007c T Mix_FreeMusic
0000000000006f90 0000000000000220 T Mix_FadeInMusicPos
00000000000071b0 000000000000000c T Mix_PlayMusic
00000000000071c0 0000000000000078 T Mix_VolumeMusic
0000000000007240 000000000000008c t open_music
00000000000072d0 000000000000003c T Mix_HaltMusic
0000000000007310 0000000000000080 T Mix_SetMusicCMD
0000000000007390 00000000000000a0 t close_music
0000000000007430 0000000000000068 t unload_music
00000000000074a0 0000000000000068 t MODPLUG_Load
0000000000007510 0000000000000018 t MODPLUG_Unload
0000000000007530 00000000000000dc t MODPLUG_Open
0000000000007610 0000000000000014 t MODPLUG_SetVolume
0000000000007630 0000000000000030 t MODPLUG_Play
0000000000007660 0000000000000038 t MODPLUG_Seek
00000000000076a0 000000000000004c t MODPLUG_Delete
00000000000076f0 0000000000000168 T MODPLUG_CreateFromRW
0000000000007860 0000000000000010 t MODPLUG_GetAudio
0000000000007870 00000000000000e4 t MODPLUG_GetSome
0000000000007960 00000000000000b8 t MPG123_Load
0000000000007a20 0000000000000018 t MPG123_Unload
0000000000007a40 0000000000000010 t rwops_read
0000000000007a50 0000000000000008 t rwops_seek
0000000000007a60 0000000000000004 t rwops_cleanup
0000000000007a70 0000000000000008 t MPG123_SetVolume
0000000000007a80 000000000000000c t MPG123_Close
0000000000007a90 0000000000000074 t MPG123_Delete
0000000000007b10 0000000000000034 t MPG123_Open
0000000000007b50 0000000000000010 t MPG123_GetAudio
0000000000007b60 0000000000000028 t mpg_err
0000000000007b90 0000000000000074 t MPG123_Seek
0000000000007c10 000000000000000c t MPG123_Play
0000000000007c20 000000000000020c t MPG123_CreateFromRW
0000000000007e30 00000000000001e4 t MPG123_GetSome
0000000000008020 000000000000007c t OGG_Load
00000000000080a0 0000000000000018 t OGG_Unload
00000000000080c0 000000000000001c t sdl_read_func
00000000000080e0 0000000000000018 t sdl_seek_func
0000000000008100 0000000000000010 t sdl_tell_func
0000000000008110 0000000000000008 t OGG_SetVolume
0000000000008120 0000000000000060 t OGG_Delete
0000000000008180 00000000000001dc t set_ov_error
0000000000008360 0000000000000050 t OGG_Seek
00000000000083b0 000000000000000c t OGG_Play
00000000000083c0 0000000000000010 t OGG_GetAudio
00000000000083d0 000000000000010c t OGG_UpdateSection
00000000000084e0 0000000000000304 t OGG_CreateFromRW
00000000000087f0 00000000000001d0 t OGG_GetSome
00000000000089c0 000000000000005c t OPUS_Load
0000000000008a20 0000000000000018 t OPUS_Unload
0000000000008a40 0000000000000020 t sdl_read_func
0000000000008a60 000000000000001c t sdl_seek_func
0000000000008a80 0000000000000010 t sdl_tell_func
0000000000008a90 0000000000000008 t OPUS_SetVolume
0000000000008aa0 0000000000000060 t OPUS_Delete
0000000000008b00 00000000000001f8 t set_op_error
0000000000008d00 0000000000000050 t OPUS_Seek
0000000000008d50 000000000000000c t OPUS_Play
0000000000008d60 0000000000000010 t OPUS_GetAudio
0000000000008d70 0000000000000108 t OPUS_UpdateSection
0000000000008e80 0000000000000144 t OPUS_CreateFromRW
0000000000008fd0 0000000000000140 t OPUS_GetSome
0000000000009110 0000000000000044 t TIMIDITY_Delete
0000000000009160 0000000000000124 T TIMIDITY_CreateFromRW
0000000000009290 0000000000000004 t TIMIDITY_Close
00000000000092a0 0000000000000030 t TIMIDITY_Seek
00000000000092d0 0000000000000010 t TIMIDITY_GetAudio
00000000000092e0 0000000000000038 t TIMIDITY_Play
0000000000009320 0000000000000008 t TIMIDITY_SetVolume
0000000000009330 0000000000000004 t TIMIDITY_Open
0000000000009340 000000000000011c t TIMIDITY_GetSome
0000000000009460 0000000000000008 t WAV_SetVolume
0000000000009470 0000000000000074 t WAV_Play
00000000000094f0 000000000000005c t WAV_Delete
0000000000009550 0000000000000010 t WAV_GetAudio
0000000000009560 000000000000022c t WAV_GetSome
0000000000009790 0000000000000738 t WAV_CreateFromRW
0000000000009ed0 0000000000000164 t recompute_freq
000000000000a040 0000000000000114 t recompute_amp
000000000000a160 00000000000000a0 t adjust_volume
000000000000a200 00000000000000c0 t do_compute_data
000000000000a2c0 0000000000000140 t compute_data
000000000000a400 0000000000000324 t start_note
000000000000a730 0000000000000048 t finish_note.part.2
000000000000a780 00000000000000b4 t note_off
000000000000a840 00000000000000a4 t Timidity_Start
000000000000a8f0 0000000000000280 t Timidity_Seek
000000000000ab70 0000000000000630 t Timidity_PlaySome
000000000000b1a0 00000000000000c4 t Timidity_SetVolume
000000000000b270 0000000000000810 t read_config_file
000000000000ba80 00000000000000b4 t Timidity_Init_NoConfig
000000000000bb40 00000000000000a4 t Timidity_Init
000000000000bbf0 0000000000000390 t Timidity_LoadSong
000000000000bf80 0000000000000074 t Timidity_FreeSong
000000000000c000 00000000000000e4 t Timidity_Exit
000000000000c0f0 000000000000002c t _Mix_InitEffects
000000000000c120 0000000000000004 t _Mix_DeinitEffects
000000000000c130 000000000000059c t Mix_LoadAIFF_RW
000000000000c6d0 0000000000000538 t voc_get_block.isra.0
000000000000cc10 0000000000000334 t Mix_LoadVOC_RW
000000000000cf50 0000000000000184 t open_file
000000000000d0e0 0000000000000004 t safe_malloc
000000000000d0f0 0000000000000080 t add_to_pathlist
000000000000d170 000000000000004c t free_pathlist
000000000000d1c0 0000000000000074 t free_instrument
000000000000d240 000000000000099c t load_instrument.isra.5
000000000000dbe0 0000000000000198 t fill_bank
000000000000dd80 0000000000000088 t load_missing_instruments
000000000000de10 00000000000000a4 t free_instruments
000000000000dec0 0000000000000058 t set_default_instrument
000000000000df20 00000000000000dc t recompute_envelope
000000000000e000 0000000000000108 t apply_envelope_to_amp
000000000000e110 0000000000000168 t update_signal
000000000000e280 0000000000000780 t mix_voice
000000000000ea00 0000000000000048 T s32tos8
000000000000ea50 000000000000004c T s32tou8
000000000000eaa0 0000000000000048 T s32tos16
000000000000eaf0 000000000000004c T s32tou16
000000000000eb40 000000000000004c T s32tos16x
000000000000eb90 0000000000000050 T s32tou16x
000000000000ebe0 0000000000000038 T s32tof32
000000000000ec20 0000000000000030 T s32tos32
000000000000ec50 0000000000000034 T s32tos32x
000000000000ec90 00000000000008e8 t read_track
000000000000f580 0000000000000754 t read_midi_file
000000000000fce0 00000000000001b8 t update_vibrato.isra.2
000000000000fea0 0000000000000874 t resample_voice
0000000000010720 00000000000002f0 t pre_resample
0000000000010a10 000000000000007c t _Eff_PositionDeinit
0000000000010a90 0000000000000138 t _get_next_page
0000000000010bd0 00000000000000f0 t _initial_pcmoffset
0000000000010cc0 0000000000000094 t _seek_helper
0000000000010d60 0000000000000094 t _make_decode_ready
0000000000010e00 0000000000000170 t _get_prev_page_serial
0000000000010f70 0000000000000330 t _fetch_headers
00000000000112a0 0000000000000490 t _bisect_forward_serialno
0000000000011730 00000000000002f8 t _fetch_and_process_packet.constprop.11
0000000000011a30 0000000000000100 T ov_clear
0000000000011b30 0000000000000220 t _ov_open1
0000000000011d50 00000000000000a8 T ov_pcm_total
0000000000011e00 00000000000000c8 T ov_time_total
0000000000011ed0 0000000000000414 T ov_raw_seek
00000000000122f0 0000000000000140 t _open_seekable2
0000000000012430 0000000000000090 T ov_open_callbacks
00000000000124c0 0000000000000084 T rescale64
0000000000012550 000000000000068c T ov_pcm_seek_page
0000000000012be0 000000000000034c T ov_pcm_seek
0000000000012f30 0000000000000128 T ov_time_seek
0000000000013060 000000000000001c T ov_pcm_tell
0000000000013080 0000000000000060 T ov_info
00000000000130e0 000000000000005c T ov_comment
0000000000013140 00000000000001bc T ov_read
0000000000013300 0000000000000034 T vorbis_block_init
0000000000013340 000000000000008c T _vorbis_block_alloc
00000000000133d0 0000000000000094 T _vorbis_block_ripcord
0000000000013470 0000000000000058 T vorbis_block_clear
00000000000134d0 0000000000000054 T vorbis_synthesis_restart
0000000000013530 000000000000012c T vorbis_dsp_clear
0000000000013660 0000000000000290 T vorbis_synthesis_init
00000000000138f0 000000000000047c T vorbis_synthesis_blockin
0000000000013d70 0000000000000070 T vorbis_synthesis_pcmout
0000000000013de0 0000000000000030 T vorbis_synthesis_read
0000000000013e10 00000000000000b4 T _vorbis_window
0000000000013ed0 000000000000015c T _vorbis_apply_window
0000000000014030 0000000000000210 t _vorbis_synthesis1
0000000000014240 0000000000000008 T vorbis_synthesis
0000000000014250 0000000000000008 T vorbis_synthesis_trackonly
0000000000014260 0000000000000098 T vorbis_packet_blocksize
0000000000014300 000000000000000c T vorbis_comment_init
0000000000014310 0000000000000088 T vorbis_comment_clear
00000000000143a0 0000000000000018 T vorbis_info_blocksize
00000000000143c0 0000000000000038 T vorbis_info_init
0000000000014400 00000000000001b0 T vorbis_info_clear
00000000000145b0 00000000000000cc T vorbis_synthesis_idheader
0000000000014680 0000000000000738 T vorbis_synthesis_headerin
0000000000014dc0 0000000000000044 t bitreverse
0000000000014e10 0000000000000410 T vorbis_staticbook_unpack
0000000000015220 000000000000016c T vorbis_book_decode
0000000000015390 0000000000000418 T vorbis_book_decodevs_add
00000000000157b0 0000000000000388 T vorbis_book_decodev_add
0000000000015b40 0000000000000394 T vorbis_book_decodev_set
0000000000015ee0 0000000000000390 T vorbis_book_decodevv_add
0000000000016270 0000000000000044 t bitreverse
00000000000162c0 0000000000000020 t sort32a
00000000000162e0 000000000000001c T _ilog
0000000000016300 000000000000023c T _make_words
0000000000016540 00000000000000b8 T _book_maptype1_quantvals
0000000000016600 00000000000006e8 T _book_unquantize
0000000000016cf0 0000000000000038 T vorbis_staticbook_destroy
0000000000016d30 0000000000000070 T vorbis_book_clear
0000000000016da0 0000000000000468 T vorbis_book_init_decode
0000000000017210 0000000000000018 t icomp
0000000000017230 00000000000001e0 t floor1_inverse2
0000000000017410 000000000000031c t floor1_inverse1
0000000000017730 000000000000000c t floor1_free_look
0000000000017740 000000000000000c t floor1_free_info
0000000000017750 0000000000000230 t floor1_look
0000000000017980 0000000000000380 t floor1_unpack
0000000000017d00 000000000000019c t floor0_inverse1
0000000000017ea0 000000000000000c t floor0_free_info
0000000000017eb0 0000000000000148 t floor0_unpack
0000000000018000 0000000000000040 t floor0_free_look
0000000000018040 0000000000000238 t floor0_look
0000000000018280 00000000000004dc T vorbis_lsp_to_curve
0000000000018760 0000000000000074 t floor0_inverse2
00000000000187e0 000000000000000c T res0_free_info
00000000000187f0 0000000000000244 T res0_unpack
0000000000018a40 0000000000000274 T res0_look
0000000000018cc0 000000000000034c t _01inverse
0000000000019010 000000000000004c T res0_inverse
0000000000019060 000000000000004c T res1_inverse
00000000000190b0 000000000000025c T res2_inverse
0000000000019310 0000000000000098 T res0_free_look
00000000000193b0 000000000000042c t mapping0_inverse
00000000000197e0 000000000000000c t mapping0_free_info
00000000000197f0 0000000000000180 t mapping0_look
0000000000019970 0000000000000264 t mapping0_unpack
0000000000019be0 00000000000000a0 t mapping0_free_look
0000000000019c80 00000000000019ac T mdct_backward
000000000001b630 00000000000000f0 t ModPlug::UpdateSettings(bool)
000000000001b720 00000000000000a4 T ModPlug_Load
000000000001b7d0 0000000000000044 T ModPlug_Unload
000000000001b820 0000000000000020 T ModPlug_Read
000000000001b840 0000000000000008 T ModPlug_SetMasterVolume
000000000001b850 0000000000000078 T ModPlug_Seek
000000000001b8d0 0000000000000024 T ModPlug_GetSettings
000000000001b900 000000000000002c T ModPlug_SetSettings
000000000001b930 000000000000000c t _muldiv(long, long, long)
000000000001b940 0000000000000010 t _muldivr(long, long, long)
000000000001b950 000000000000010c T CSoundFile::InitPlayer(bool)
000000000001ba60 00000000000000d8 T CSoundFile::FadeSong(unsigned int)
000000000001bb40 0000000000000058 T CSoundFile::GlobalFadeSong(unsigned int)
000000000001bba0 00000000000002a8 T CSoundFile::ProcessRow()
000000000001be50 0000000000001588 T CSoundFile::ReadNote()
000000000001d3e0 00000000000003fc T CSoundFile::Read(void*, unsigned int)
000000000001d7e0 0000000000000130 T CSoundFile::CSoundFile()
000000000001d7e0 0000000000000130 T CSoundFile::CSoundFile()
000000000001d910 0000000000000040 T CSoundFile::AllocatePattern(unsigned int, unsigned int)
000000000001d950 000000000000000c T CSoundFile::FreePattern(void*)
000000000001d960 0000000000000028 T CSoundFile::AllocateSample(unsigned int)
000000000001d990 0000000000000010 T CSoundFile::FreeSample(void*)
000000000001d9a0 0000000000000144 T CSoundFile::Destroy()
000000000001daf0 0000000000000004 T CSoundFile::~CSoundFile()
000000000001daf0 0000000000000004 T CSoundFile::~CSoundFile()
000000000001db00 0000000000000128 T CSoundFile::ResetMidiCfg()
000000000001dc30 0000000000000790 T CSoundFile::Create(unsigned char const*, unsigned int)
000000000001e3c0 00000000000000b4 T CSoundFile::SetWaveConfig(unsigned int, unsigned int, unsigned int, bool)
000000000001e480 0000000000000030 T CSoundFile::SetMixConfig(unsigned int, unsigned int)
000000000001e4b0 000000000000005c T CSoundFile::SetResamplingMode(unsigned int)
000000000001e510 0000000000000078 T CSoundFile::SetMasterVolume(unsigned int, bool)
000000000001e590 0000000000000050 T CSoundFile::GetMaxPosition() const
000000000001e5e0 0000000000000210 T CSoundFile::SetCurrentPos(unsigned int)
000000000001e7f0 0000000000000344 T CSoundFile::AdjustSampleLoop(_MODINSTRUMENT*)
000000000001eb40 0000000000000948 T CSoundFile::ReadSample(_MODINSTRUMENT*, unsigned int, char const*, unsigned int)
000000000001f490 000000000000003c T CSoundFile::TransposeToFrequency(int, int)
000000000001f4d0 0000000000000034 T CSoundFile::FrequencyToTranspose(unsigned int)
000000000001f510 0000000000000060 T CSoundFile::FrequencyToTranspose(_MODINSTRUMENT*)
000000000001f570 0000000000000118 T CSoundFile::SetPatternName(unsigned int, char const*)
000000000001f690 0000000000000184 T CSoundFile::DetectUnusedSamples(bool*)
000000000001f820 00000000000000a8 T CSoundFile::DestroySample(unsigned int)
000000000001f8d0 0000000000000804 T CSoundFile::GetLength(bool, bool)
00000000000200e0 00000000000003c0 T CSoundFile::InstrumentChange(_MODCHANNEL*, unsigned int, bool, bool, bool)
00000000000204a0 00000000000000e8 T CSoundFile::GetNNAChannel(unsigned int) const
0000000000020590 00000000000000ac T CSoundFile::FinePortamentoUp(_MODCHANNEL*, unsigned int)
0000000000020640 00000000000000b0 T CSoundFile::FinePortamentoDown(_MODCHANNEL*, unsigned int)
00000000000206f0 00000000000000a8 T CSoundFile::ExtraFinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000000207a0 00000000000000b0 T CSoundFile::ExtraFinePortamentoDown(_MODCHANNEL*, unsigned int)
0000000000020850 000000000000012c T CSoundFile::TonePortamento(_MODCHANNEL*, unsigned int)
0000000000020980 0000000000000030 T CSoundFile::Vibrato(_MODCHANNEL*, unsigned int)
00000000000209b0 000000000000002c T CSoundFile::FineVibrato(_MODCHANNEL*, unsigned int)
00000000000209e0 000000000000002c T CSoundFile::Panbrello(_MODCHANNEL*, unsigned int)
0000000000020a10 00000000000000cc T CSoundFile::PanningSlide(_MODCHANNEL*, unsigned int)
0000000000020ae0 000000000000004c T CSoundFile::FineVolumeUp(_MODCHANNEL*, unsigned int)
0000000000020b30 0000000000000044 T CSoundFile::FineVolumeDown(_MODCHANNEL*, unsigned int)
0000000000020b80 00000000000000f8 T CSoundFile::VolumeSlide(_MODCHANNEL*, unsigned int)
0000000000020c80 0000000000000030 T CSoundFile::Tremolo(_MODCHANNEL*, unsigned int)
0000000000020cb0 00000000000000b8 T CSoundFile::ChannelVolSlide(_MODCHANNEL*, unsigned int)
0000000000020d70 0000000000000134 T CSoundFile::ExtendedChannelEffect(_MODCHANNEL*, unsigned int)
0000000000020eb0 0000000000000398 T CSoundFile::ProcessMidiMacro(unsigned int, char const*, unsigned int)
0000000000021250 00000000000000d8 T CSoundFile::DoFreqSlide(_MODCHANNEL*, int)
0000000000021330 0000000000000070 T CSoundFile::PortamentoUp(_MODCHANNEL*, unsigned int)
00000000000213a0 0000000000000070 T CSoundFile::PortamentoDown(_MODCHANNEL*, unsigned int)
0000000000021410 000000000000003c T CSoundFile::NoteCut(unsigned int, unsigned int)
0000000000021450 0000000000000104 T CSoundFile::KeyOff(unsigned int)
0000000000021560 000000000000046c T CSoundFile::CheckNNA(unsigned int, unsigned int, int, bool)
00000000000219d0 000000000000005c T CSoundFile::SetTempo(unsigned int)
0000000000021a30 0000000000000084 T CSoundFile::PatternLoop(_MODCHANNEL*, unsigned int)
0000000000021ac0 00000000000000c0 T CSoundFile::GlobalVolSlide(unsigned int)
0000000000021b80 0000000000000118 T CSoundFile::IsSongFinished(unsigned int, unsigned int) const
0000000000021ca0 00000000000000cc T CSoundFile::SetSpeed(unsigned int)
0000000000021d70 000000000000017c T CSoundFile::IsValidBackwardJump(unsigned int, unsigned int, unsigned int, unsigned int) const
0000000000021ef0 00000000000001dc T CSoundFile::GetPeriodFromNote(unsigned int, int, unsigned int) const
00000000000220d0 00000000000007c8 T CSoundFile::NoteChange(unsigned int, int, bool, bool)
00000000000228a0 00000000000002dc T CSoundFile::RetrigNote(unsigned int, unsigned int)
0000000000022b80 000000000000027c T CSoundFile::ExtendedMODCommands(unsigned int, unsigned int)
0000000000022e00 000000000000048c T CSoundFile::ExtendedS3MCommands(unsigned int, unsigned int)
0000000000023290 0000000000000e20 T CSoundFile::ProcessEffects()
00000000000240b0 000000000000011c T CSoundFile::GetNoteFromPeriod(unsigned int) const
00000000000241d0 00000000000000c4 T CSoundFile::GetFreqFromPeriod(unsigned int, unsigned int, int) const
00000000000242a0 0000000000000090 T CSoundFile::CutOffToFrequency(unsigned int, int) const
0000000000024330 00000000000000ec T CSoundFile::SetupChannelFilter(_MODCHANNEL*, bool, int) const
0000000000024420 0000000000000528 T CSoundFile::InitializeDSP(bool)
0000000000024950 0000000000000554 T CSoundFile::ProcessStereoDSP(int)
0000000000024eb0 0000000000000060 T CSoundFile::SetReverbParameters(unsigned int, unsigned int)
0000000000024f10 000000000000006c T CSoundFile::SetXBassParameters(unsigned int, unsigned int)
0000000000024f80 0000000000000060 T CSoundFile::SetSurroundParameters(unsigned int, unsigned int)
0000000000024fe0 0000000000000088 T CSoundFile::SetWaveConfigEx(bool, bool, bool, bool, bool, bool, bool)
0000000000025070 0000000000000070 T Mono8BitMix(_MODCHANNEL*, int*, int*)
00000000000250e0 000000000000006c T Mono16BitMix(_MODCHANNEL*, int*, int*)
0000000000025150 0000000000000084 T Mono8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000000251e0 0000000000000084 T Mono16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000025270 00000000000000c0 T Mono8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000025330 00000000000000c4 T Mono16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000025400 0000000000000108 T Mono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000025510 0000000000000124 T Mono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000025640 0000000000000080 T Mono8BitRampMix(_MODCHANNEL*, int*, int*)
00000000000256c0 0000000000000084 T Mono16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000025750 0000000000000094 T Mono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000000257f0 000000000000009c T Mono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000025890 00000000000000d0 T Mono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000025960 00000000000000e0 T Mono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000025a40 0000000000000130 T Mono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000025b70 0000000000000140 T Mono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000025cb0 000000000000006c T FastMono8BitMix(_MODCHANNEL*, int*, int*)
0000000000025d20 0000000000000068 T FastMono16BitMix(_MODCHANNEL*, int*, int*)
0000000000025d90 0000000000000080 T FastMono8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000025e10 0000000000000080 T FastMono16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000025e90 000000000000007c T FastMono8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000025f10 0000000000000080 T FastMono16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000025f90 0000000000000090 T FastMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000026020 0000000000000098 T FastMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000000260c0 0000000000000080 T Stereo8BitMix(_MODCHANNEL*, int*, int*)
0000000000026140 000000000000007c T Stereo16BitMix(_MODCHANNEL*, int*, int*)
00000000000261c0 000000000000009c T Stereo8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000026260 00000000000000a8 T Stereo16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000026310 0000000000000110 T Stereo8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000026420 0000000000000108 T Stereo16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000026530 00000000000001bc T Stereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000000266f0 00000000000001b8 T Stereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000000268b0 0000000000000090 T Stereo8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000026940 0000000000000094 T Stereo16BitRampMix(_MODCHANNEL*, int*, int*)
00000000000269e0 00000000000000ac T Stereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000026a90 00000000000000c0 T Stereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000026b50 0000000000000130 T Stereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000026c80 000000000000012c T Stereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000026db0 00000000000001d8 T Stereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000026f90 00000000000001cc T Stereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000027160 000000000000009c T FilterMono8BitMix(_MODCHANNEL*, int*, int*)
0000000000027200 000000000000009c T FilterMono16BitMix(_MODCHANNEL*, int*, int*)
00000000000272a0 00000000000000b0 T FilterMono8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000027350 00000000000000b4 T FilterMono16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000027410 00000000000000ec T FilterMono8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000027500 00000000000000f4 T FilterMono16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000027600 0000000000000148 T FilterMono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000027750 000000000000015c T FilterMono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000000278b0 00000000000000b4 T FilterMono8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000027970 00000000000000b4 T FilterMono16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000027a30 00000000000000c8 T FilterMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000027b00 00000000000000c8 T FilterMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000027bd0 0000000000000104 T FilterMono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000027ce0 0000000000000114 T FilterMono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000027e00 0000000000000168 T FilterMono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000027f70 0000000000000178 T FilterMono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000000280f0 00000000000000d0 T FilterStereo8BitMix(_MODCHANNEL*, int*, int*)
00000000000281c0 00000000000000cc T FilterStereo16BitMix(_MODCHANNEL*, int*, int*)
0000000000028290 00000000000000ec T FilterStereo8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000028380 00000000000000fc T FilterStereo16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000028480 0000000000000178 T FilterStereo8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000028600 0000000000000174 T FilterStereo16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000028780 0000000000000210 T FilterStereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000028990 0000000000000214 T FilterStereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000028bb0 00000000000000e8 T FilterStereo8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000028ca0 00000000000000e4 T FilterStereo16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000028d90 0000000000000114 T FilterStereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000028eb0 0000000000000124 T FilterStereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000028fe0 0000000000000194 T FilterStereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000029180 000000000000018c T FilterStereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000029310 0000000000000224 T FilterStereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000029540 0000000000000224 T FilterStereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000029770 00000000000001d4 t CzCUBICSPLINE::CzCUBICSPLINE()
0000000000029770 00000000000001d4 T CzCUBICSPLINE::CzCUBICSPLINE()
0000000000029950 00000000000001c8 t CzWINDOWEDFIR::CzWINDOWEDFIR()
0000000000029950 00000000000001c8 T CzWINDOWEDFIR::CzWINDOWEDFIR()
0000000000029b20 0000000000000084 T X86_Convert32To8(void*, int*, unsigned int, int*, int*)
0000000000029bb0 000000000000007c T X86_Convert32To16(void*, int*, unsigned int, int*, int*)
0000000000029c30 000000000000008c T X86_Convert32To24(void*, int*, unsigned int, int*, int*)
0000000000029cc0 000000000000007c T X86_Convert32To32(void*, int*, unsigned int, int*, int*)
0000000000029d40 0000000000000004 t X86_InterleaveFrontRear(int*, int*, unsigned int)
0000000000029d50 000000000000003c t X86_MonoFromStereo(int*, unsigned int)
0000000000029d90 000000000000007c t X86_StereoFill(int*, unsigned int, int*, int*)
0000000000029e10 0000000000000078 t X86_EndChannelOfs(_MODCHANNEL*, int*, unsigned int)
0000000000029e90 00000000000006c4 T CSoundFile::CreateStereoMix(int)
000000000002a560 000000000000007c t MMCMPBITBUFFER::GetBits(unsigned int) [clone .part.0]
000000000002a5e0 0000000000000070 t _PPBITBUFFER::GetBits(unsigned int)
000000000002a650 00000000000004c0 t PP20_Unpack(unsigned char const**, unsigned int*)
000000000002ab10 000000000000079c t MMCMP_Unpack(unsigned char const**, unsigned int*)
000000000002b2b0 000000000000143c T CSoundFile::ReadXM(unsigned char const*, unsigned int)
000000000002c6f0 0000000000000550 T CSoundFile::ReadWav(unsigned char const*, unsigned int)
000000000002cc40 0000000000000074 t get_fci(char const*, int*)
000000000002ccc0 00000000000004cc T CSoundFile::ReadUMX(unsigned char const*, unsigned int)
000000000002d190 00000000000006d8 T CSoundFile::ReadUlt(unsigned char const*, unsigned int)
000000000002d870 0000000000000598 T CSoundFile::ReadSTM(unsigned char const*, unsigned int)
000000000002de10 0000000000000124 T CSoundFile::S3MConvert(_MODCOMMAND*, bool) const
000000000002df40 0000000000000898 T CSoundFile::ReadS3M(unsigned char const*, unsigned int)
000000000002e7e0 00000000000004c0 T CSoundFile::ReadPTM(unsigned char const*, unsigned int)
000000000002eca0 00000000000006a0 T CSoundFile::ReadOKT(unsigned char const*, unsigned int)
000000000002f340 000000000000056c T CSoundFile::ReadMTM(unsigned char const*, unsigned int)
000000000002f8b0 0000000000000190 T CSoundFile::ConvertModCommand(_MODCOMMAND*) const
000000000002fa40 0000000000000a38 T CSoundFile::ReadMod(unsigned char const*, unsigned int)
0000000000030480 0000000000000330 t MedConvert(_MODCOMMAND*, tagMMD0SONGHEADER const*)
00000000000307b0 0000000000000d84 T CSoundFile::ReadMed(unsigned char const*, unsigned int)
0000000000031540 0000000000000238 t ConvertMDLCommand(_MODCOMMAND*, unsigned int, unsigned int)
0000000000031780 0000000000000268 t UnpackMDLTrack(_MODCOMMAND*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int)
00000000000319f0 0000000000000f9c T CSoundFile::ReadMDL(unsigned char const*, unsigned int)
0000000000032990 0000000000000068 t MDLReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
0000000000032a00 0000000000000508 T CSoundFile::ITInstrToMPT(void const*, _INSTRUMENTHEADER*, unsigned int)
0000000000032f10 000000000000007c t ITReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
0000000000032f90 000000000000023c t ITUnpack8Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
00000000000331d0 0000000000000230 t ITUnpack16Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000033400 00000000000001d8 T CSoundFile::LoadMixPlugins(void const*, unsigned int)
00000000000335e0 000000000000108c T CSoundFile::ReadIT(unsigned char const*, unsigned int)
0000000000034670 000000000000063c T CSoundFile::ReadFAR(unsigned char const*, unsigned int)
0000000000034cb0 0000000000000534 T CSoundFile::ReadDSM(unsigned char const*, unsigned int)
00000000000351f0 0000000000000cd4 T CSoundFile::ReadDMF(unsigned char const*, unsigned int)
0000000000035ed0 00000000000001f4 t DMFNewNode(DMF_HTREE*)
00000000000360d0 00000000000001d0 t DMFUnpack(unsigned char*, unsigned char*, unsigned char*, unsigned int)
00000000000362a0 00000000000009f4 T CSoundFile::ReadDBM(unsigned char const*, unsigned int)
0000000000036ca0 000000000000090c T CSoundFile::ReadAMS2(unsigned char const*, unsigned int)
00000000000375b0 0000000000000764 T CSoundFile::ReadAMS(unsigned char const*, unsigned int)
0000000000037d20 00000000000001c4 t AMSUnpack(char const*, unsigned int, char*, unsigned int, char)
0000000000037ef0 0000000000000274 t AMF_Unpack(_MODCOMMAND*, unsigned char const*, unsigned int, unsigned int)
0000000000038170 00000000000008c0 T CSoundFile::ReadAMF(unsigned char const*, unsigned int)
0000000000038a30 00000000000005f4 T CSoundFile::Read669(unsigned char const*, unsigned int)
0000000000039030 00000000000000fc t ConvertMT2Command(CSoundFile*, _MODCOMMAND*, _MT2COMMAND const*)
0000000000039130 0000000000000d7c T CSoundFile::ReadMT2(unsigned char const*, unsigned int)
0000000000039eb0 0000000000000800 T CSoundFile::ReadPSM(unsigned char const*, unsigned int)
000000000003a6b0 00000000000000f4 t abc_brokenrithm(char const*, int*, int*, int*, int)
000000000003a7b0 0000000000000090 t abc_pattracktime(_ABCHANDLE*, unsigned int)
000000000003a840 00000000000000e8 t abc_globalslide(_ABCHANDLE*, unsigned int, int)
000000000003a930 000000000000006c t abc_isvalidchar(char)
000000000003a9a0 0000000000000074 t abc_skip_word(char*)
000000000003aa20 0000000000000170 t abc_parse_decorations(_ABCHANDLE*, _ABCTRACK*, char const*)
000000000003ab90 00000000000001c0 t abc_MIDI_gchord(char const*, _ABCHANDLE*)
000000000003ad50 00000000000000c8 t abc_beat_vol(_ABCHANDLE*, int, int)
000000000003ae20 0000000000000078 t abc_MIDI_beatstring(_ABCHANDLE*, char const*)
000000000003aea0 00000000000001cc t abc_substitute(_ABCHANDLE*, char*, char*)
000000000003b070 0000000000000070 t abc_message(char const*, char const*)
000000000003b0e0 00000000000002b0 t ABC_Key(char const*)
000000000003b390 000000000000017c t abc_addchordname(char const*, int, int const*)
000000000003b510 00000000000001c8 t abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int) [clone .constprop.0]
000000000003b6e0 0000000000000144 t abc_extractkeyvalue(char*, unsigned long, char*, unsigned long, char const*) [clone .constprop.0]
000000000003b830 0000000000000138 t abc_new_umacro(_ABCHANDLE*, char const*)
000000000003b970 0000000000000750 t ABC_ReadPatterns(_MODCOMMAND**, unsigned short*, _ABCHANDLE*, int, int)
000000000003c0c0 000000000000009c t ABC_CleanupMacros(_ABCHANDLE*)
000000000003c160 0000000000000138 t abc_fgetbytes(MMFILE*, char*, unsigned int) [clone .part.0]
000000000003c2a0 0000000000000308 t abc_gets(_ABCHANDLE*, MMFILE*)
000000000003c5b0 00000000000000f0 t abc_MIDI_beat(_ABCHANDLE*, char const*)
000000000003c6a0 0000000000000098 t abc_MIDI_getnumber(char const*)
000000000003c740 0000000000000098 t abc_MIDI_getprog(char const*)
000000000003c7e0 00000000000000c8 t abc_add_event(_ABCHANDLE*, _ABCTRACK*, _ABCEVENT*) [clone .isra.0]
000000000003c8b0 0000000000000080 t abc_add_partbreak(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000003c930 0000000000000090 t abc_add_tempo_event(_ABCHANDLE*, _ABCTRACK*, unsigned int, int) [clone .isra.0]
000000000003c9c0 0000000000000090 t abc_add_noteoff(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000003ca50 00000000000001cc t abc_add_dronenote(_ABCHANDLE*, _ABCTRACK*, unsigned int, int, int) [clone .isra.0]
000000000003cc20 0000000000000084 t abc_add_setjumploop(_ABCHANDLE*, _ABCTRACK*, unsigned int, ABCEVENT_JUMPTYPE) [clone .isra.0]
000000000003ccb0 00000000000000bc t abc_add_sync(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000003cd70 0000000000000080 t abc_add_tocoda(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000003cdf0 0000000000000988 t abc_transpose(char const*)
000000000003d780 0000000000000318 t abc_locate_track(_ABCHANDLE*, char const*, int)
000000000003daa0 00000000000004e0 t abc_add_gchord(_ABCHANDLE*, unsigned int, unsigned int)
000000000003df80 0000000000000208 t abc_add_drum(_ABCHANDLE*, unsigned int, unsigned int)
000000000003e190 0000000000000034 t abc_check_track(_ABCHANDLE*, _ABCTRACK*) [clone .part.0]
000000000003e1d0 000000000000071c t abc_add_noteon(_ABCHANDLE*, int, char const*, unsigned int, char*, int, ABCEVENT_X_EFFECT, int)
000000000003e8f0 00000000000001a8 t abc_getexpr(char const*, int*)
000000000003eaa0 00000000000000d4 t abc_M_field(char const*, int*, int*)
000000000003eb80 0000000000000124 t abc_notelen(char const*, int*, int*)
000000000003ecb0 00000000000002ec t abc_extract_tempo(char const*, int)
000000000003efa0 00000000000004dc t abc_set_parts(char**, char*)
000000000003f480 00000000000009dc t abc_song_to_parts(_ABCHANDLE*, char**, unsigned char (*) [2])
000000000003fe60 0000000000001264 t abc_MIDI_command(_ABCHANDLE*, char*, char)
00000000000410d0 00000000000001a8 T CSoundFile::TestABC(unsigned char const*, unsigned int)
0000000000041280 0000000000005a6c T CSoundFile::ReadABC(unsigned char const*, unsigned int)
0000000000046cf0 0000000000000070 t mid_message(char const*, char const*)
0000000000046d60 0000000000000610 t MID_ReadPatterns(_MODCOMMAND**, unsigned short*, _MIDHANDLE*, int, int)
0000000000047370 000000000000001c t mid_read_long(_MIDHANDLE*) [clone .isra.0]
0000000000047390 0000000000000084 t mid_sync_track(_MIDTRACK*, unsigned int)
0000000000047420 0000000000000114 t mid_add_event(_MIDHANDLE*, _MIDTRACK*, _MIDEVENT*) [clone .constprop.0]
0000000000047540 0000000000000258 t mid_locate_track(_MIDHANDLE*, int, int)
00000000000477a0 000000000000005c t mid_add_noteoff(_MIDHANDLE*, _MIDTRACK*)
0000000000047800 00000000000000a0 t mid_add_wheel(_MIDHANDLE*, _MIDTRACK*, int)
00000000000478a0 0000000000000064 T CSoundFile::TestMID(unsigned char const*, unsigned int)
0000000000047910 0000000000001db8 T CSoundFile::ReadMID(unsigned char const*, unsigned int)
00000000000496d0 00000000000000c8 t pat_sawtooth(int)
00000000000497a0 00000000000000ac t pat_setpat_attr(WaveHeader*, _MODINSTRUMENT*)
0000000000049850 000000000000008c t mmreadUBYTES(unsigned char*, long, MMFILE*)
00000000000498e0 00000000000000ec t pat_build_path(char*, int)
00000000000499d0 0000000000000330 t pat_setpat_inst(WaveHeader*, _INSTRUMENTHEADER*, int)
0000000000049d00 0000000000000078 t pat_square(int)
0000000000049d80 0000000000000018 t pat_sinus(int)
0000000000049da0 0000000000000178 t pat_read_waveheader(__sFILE*, WaveHeader*, int) [clone .constprop.0]
0000000000049f20 00000000000002b4 t pat_readpat(int, char*, int)
000000000004a1e0 00000000000000f4 t dec_pat_Decompress8Bit(short*, int, int) [clone .isra.0]
000000000004a2e0 00000000000000a8 t pat_readpat_attr(int, WaveHeader*, int) [clone .constprop.0]
000000000004a390 0000000000000294 t PATsample(CSoundFile*, _MODINSTRUMENT*, int, int)
000000000004a630 0000000000000140 t pat_get_waveheader(MMFILE*, WaveHeader*, int)
000000000004a770 0000000000000050 t pat_resetsmp
000000000004a7c0 0000000000000024 t pat_smptogm
000000000004a7f0 000000000000005c t pat_gmtosmp
000000000004a850 0000000000000024 t pat_smplooped
000000000004a880 0000000000000058 t pat_gm_name
000000000004a8e0 0000000000000024 t pat_gm_drumnr
000000000004a910 0000000000000088 t pat_gm_drumnote
000000000004a9a0 0000000000000600 t pat_init_patnames
000000000004afa0 0000000000000080 T CSoundFile::TestPAT(unsigned char const*, unsigned int)
000000000004b020 0000000000000008 t pat_modnote
000000000004b030 00000000000002fc t PAT_Load_Instruments
000000000004b330 0000000000000800 T CSoundFile::ReadPAT(unsigned char const*, unsigned int)
000000000004bb30 0000000000000190 t conv_s16_to_s32
000000000004bcc0 0000000000000280 t cap_fit
000000000004bf40 0000000000000184 t enc_chan_fit
000000000004c0d0 0000000000000020 T mpg123_rates
000000000004c0f0 0000000000000050 T mpg123_encsize
000000000004c140 0000000000000c30 T INT123_frame_output_format
000000000004cd70 000000000000007c T mpg123_fmt_none
000000000004cdf0 000000000000003c T mpg123_format_none
000000000004ce30 00000000000002c8 T mpg123_fmt_all
000000000004d100 000000000000033c T mpg123_fmt2
000000000004d440 0000000000000010 T mpg123_fmt
000000000004d450 000000000000003c T mpg123_format
000000000004d490 0000000000000010 T INT123_invalidate_format
000000000004d4a0 0000000000000018 T INT123_decoder_synth_bytes
000000000004d4c0 0000000000000018 T INT123_samples_to_bytes
000000000004d4e0 0000000000000018 T INT123_bytes_to_samples
000000000004d500 0000000000000044 T INT123_outblock_bytes
000000000004d550 0000000000000700 T swap_endian
000000000004dc50 0000000000001620 T INT123_postprocess_buffer
000000000004f270 00000000000000e4 t decode_the_frame
000000000004f360 0000000000000154 t frame_buffercheck.part.0.constprop.0
000000000004f4c0 0000000000000008 T mpg123_init
000000000004f4d0 0000000000000004 T mpg123_exit
000000000004f4e0 0000000000000090 T mpg123_parnew
000000000004f570 0000000000000010 T mpg123_new
000000000004f580 00000000000001e4 T INT123_decode_update
000000000004f770 00000000000001b8 t get_next_frame
000000000004f930 0000000000000100 t do_the_seek
000000000004fa30 0000000000000064 T mpg123_feed
000000000004faa0 000000000000019c T mpg123_decode
000000000004fc40 0000000000000018 T mpg123_read
000000000004fc60 000000000000008c T mpg123_getformat2
000000000004fcf0 0000000000000008 T mpg123_getformat
000000000004fd00 00000000000000d8 T mpg123_tell
000000000004fde0 00000000000001e0 T mpg123_scan
000000000004ffc0 00000000000001f4 T mpg123_seek
00000000000501c0 0000000000000064 T mpg123_close
0000000000050230 0000000000000058 T mpg123_open_handle
0000000000050290 000000000000004c T mpg123_replace_reader_handle
00000000000502e0 0000000000000028 T mpg123_delete
0000000000050310 0000000000000080 T mpg123_plain_strerror
0000000000050390 0000000000000018 T mpg123_errcode
00000000000503b0 0000000000000010 T mpg123_strerror
00000000000503c0 0000000000000014 T INT123_fi_init
00000000000503e0 0000000000000028 T INT123_fi_exit
0000000000050410 00000000000001a0 T INT123_fi_resize
00000000000505b0 0000000000000194 T INT123_fi_add
0000000000050750 0000000000000010 T INT123_fi_reset
0000000000050760 0000000000000008 T INT123_init_icy
0000000000050770 0000000000000020 T INT123_clear_icy
0000000000050790 0000000000000018 T INT123_reset_icy
00000000000507b0 00000000000001c4 T INT123_ntom_val
0000000000050980 000000000000015c T INT123_synth_ntom_set_step
0000000000050ae0 000000000000001c T INT123_ntom_set_ntom
0000000000050b00 000000000000002c T INT123_ntom_frame_outsamples
0000000000050b30 0000000000000170 T INT123_ntom_frmouts
0000000000050ca0 0000000000000130 T INT123_ntom_ins2outs
0000000000050dd0 000000000000012c T INT123_ntom_frameoff
0000000000050f00 000000000000000c T mpg123_init_string
0000000000050f10 0000000000000028 T mpg123_free_string
0000000000050f40 0000000000000094 T mpg123_resize_string
0000000000050fe0 000000000000002c T mpg123_grow_string
0000000000051010 000000000000006c T mpg123_move_string
0000000000051080 0000000000000050 T mpg123_same_string
00000000000510d0 0000000000000010 T INT123_safe_realloc
00000000000510e0 000000000000073c t decode_header
0000000000051820 0000000000000094 t forget_head_shift
00000000000518c0 00000000000000a4 t getbits.constprop.0
0000000000051970 0000000000000018 T INT123_frame_freq
0000000000051990 00000000000000bc T INT123_set_pointer
0000000000051a50 0000000000000024 T INT123_compute_bpf
0000000000051a80 0000000000001a54 T INT123_read_frame
00000000000534e0 00000000000000ec t frame_fuzzy_find.constprop.0
00000000000535d0 000000000000006c T mpg123_reset_eq
0000000000053640 00000000000000e0 T INT123_frame_outbuffer
0000000000053720 00000000000000a8 T INT123_frame_index_setup
00000000000537d0 000000000000015c T INT123_frame_buffers
0000000000053930 0000000000000084 T INT123_frame_buffers_reset
00000000000539c0 0000000000000068 T INT123_frame_fill_toc
0000000000053a30 00000000000000ac T INT123_frame_exit
0000000000053ae0 00000000000000cc T INT123_frame_index_find
0000000000053bb0 000000000000006c T INT123_frame_ins2outs
0000000000053c20 0000000000000080 T INT123_frame_outs
0000000000053ca0 0000000000000078 T INT123_frame_expect_outsamples
0000000000053d20 0000000000000080 T INT123_frame_offset
0000000000053da0 0000000000000060 T INT123_frame_gapless_init
0000000000053e00 0000000000000154 t frame_fixed_reset
0000000000053f60 00000000000001a4 T INT123_frame_init_par
0000000000054110 000000000000003c T INT123_frame_reset
0000000000054150 0000000000000058 T INT123_frame_gapless_realinit
00000000000541b0 00000000000000cc T INT123_frame_gapless_update
0000000000054280 0000000000000118 T INT123_frame_set_frameseek
00000000000543a0 0000000000000020 T INT123_frame_skip
00000000000543c0 0000000000000088 T INT123_frame_set_seek
0000000000054450 0000000000000150 T INT123_do_rva
00000000000545a0 0000000000000180 t next_text
0000000000054720 0000000000000250 t promote_framename
0000000000054970 00000000000006fc t convert_utf16bom
0000000000055070 0000000000000328 t convert_latin1
00000000000553a0 0000000000000064 t convert_utf8
0000000000055410 0000000000000364 t add_id3_text
0000000000055780 0000000000000044 T INT123_init_id3
00000000000557d0 00000000000002e8 T INT123_exit_id3
0000000000055ac0 0000000000000018 T INT123_reset_id3
0000000000055ae0 0000000000000200 T INT123_id3_to_utf8
0000000000055ce0 0000000000000134 t store_id3_text.part.0
0000000000055e20 0000000000000120 T store_id3v2
0000000000055f40 00000000000021d0 T INT123_parse_new_id3
0000000000058110 0000000000000050 t synth_stereo_wrap
0000000000058160 0000000000000008 T INT123_defdec
0000000000058170 0000000000000020 T INT123_decclass
0000000000058190 0000000000000368 T INT123_set_synth_functions
0000000000058500 0000000000000124 T INT123_dectype
0000000000058630 0000000000000114 T INT123_frame_cpu_opt
0000000000058750 0000000000000008 t nix_lseek
0000000000058760 00000000000000bc t plain_fullread
0000000000058820 0000000000000050 t generic_head_read
0000000000058870 0000000000000054 t generic_head_shift
00000000000588d0 000000000000002c t generic_read_frame_body
0000000000058900 000000000000003c t generic_tell
0000000000058940 000000000000004c t feed_skip_bytes
0000000000058990 0000000000000008 t feed_seek_frame
00000000000589a0 0000000000000014 t bad_init
00000000000589c0 0000000000000004 t bad_close
00000000000589d0 0000000000000014 t bad_fullread
00000000000589f0 0000000000000014 t bad_head_read
0000000000058a10 0000000000000014 t bad_skip_bytes
0000000000058a30 0000000000000014 t bad_read_frame_body
0000000000058a50 0000000000000014 t bad_back_bytes
0000000000058a70 0000000000000014 t bad_tell
0000000000058a90 0000000000000038 t plain_read
0000000000058ad0 0000000000000154 t bc_give
0000000000058c30 0000000000000024 t feed_read
0000000000058c60 000000000000013c t bc_add
0000000000058da0 0000000000000398 t icy_fullread
0000000000059140 000000000000020c t buffered_fullread
0000000000059350 00000000000000e4 t stream_seek_frame
0000000000059440 0000000000000004 t posix_lseek
0000000000059450 0000000000000004 t posix_read
0000000000059460 00000000000000d4 t buffered_forget
0000000000059540 0000000000000034 t io_seek
0000000000059580 0000000000000070 t stream_rewind
00000000000595f0 000000000000012c t stream_skip_bytes
0000000000059720 000000000000004c t stream_back_bytes
0000000000059770 00000000000002ec t default_init
0000000000059a60 0000000000000014 t bad_head_shift
0000000000059a80 0000000000000014 t bad_seek_frame
0000000000059aa0 0000000000000004 t bad_rewind
0000000000059ab0 00000000000002dc t bc_fill_pool.isra.0
0000000000059d90 000000000000004c t feed_init
0000000000059de0 0000000000000078 t bc_reset
0000000000059e60 0000000000000064 t stream_close
0000000000059ed0 0000000000000064 t feed_back_bytes
0000000000059f40 0000000000000008 T INT123_bc_poolsize
0000000000059f50 0000000000000024 T INT123_bc_prepare
0000000000059f80 00000000000000e4 T INT123_bc_cleanup
000000000005a070 0000000000000058 T INT123_feed_more
000000000005a0d0 0000000000000050 T INT123_open_bad
000000000005a120 000000000000009c T INT123_open_stream_handle
000000000005a1c0 00000000000002e4 T INT123_make_decode_tables
000000000005a4b0 0000000000000a84 T INT123_make_conv16to8_table
000000000005af40 00000000000000c0 t getbits
000000000005b000 0000000000002318 T INT123_do_layer1
000000000005d320 00000000000000c0 t getbits
000000000005d3e0 0000000000000120 T INT123_init_layer12_stuff
000000000005d500 0000000000000064 T INT123_init_layer12_table
000000000005d570 0000000000001b34 T INT123_do_layer2
000000000005f0b0 00000000000002bc t III_get_scale_factors_2
000000000005f370 00000000000003b8 t dct12
000000000005f730 00000000000000c0 t getbits
000000000005f7f0 00000000000017a4 t III_dequantize_sample
0000000000060fa0 00000000000013c4 t III_get_scale_factors_1.isra.0
0000000000062370 0000000000000028 T INT123_init_layer3_gainpow2
00000000000623a0 0000000000000478 T INT123_init_layer3_stuff
0000000000062820 0000000000000554 T INT123_dct36
0000000000062d80 00000000000035d8 T INT123_do_layer3
0000000000066360 00000000000003bc T INT123_synth_1to1_8bit
0000000000066720 00000000000000bc T INT123_synth_1to1_8bit_mono
00000000000667e0 000000000000008c T INT123_synth_1to1_8bit_m2s
0000000000066870 0000000000000140 T INT123_synth_1to1_8bit_wrap
00000000000669b0 000000000000011c T INT123_synth_1to1_8bit_wrap_mono
0000000000066ad0 0000000000000198 T INT123_synth_1to1_8bit_wrap_m2s
0000000000066c70 00000000000003bc T INT123_synth_2to1_8bit
0000000000067030 00000000000000d4 T INT123_synth_2to1_8bit_mono
0000000000067110 00000000000000bc T INT123_synth_2to1_8bit_m2s
00000000000671d0 0000000000000490 T INT123_synth_4to1_8bit
0000000000067660 0000000000000094 T INT123_synth_4to1_8bit_mono
0000000000067700 000000000000007c T INT123_synth_4to1_8bit_m2s
0000000000067780 00000000000008d0 T INT123_synth_ntom_8bit
0000000000068050 000000000000015c T INT123_synth_ntom_8bit_mono
00000000000681b0 0000000000000148 T INT123_synth_ntom_8bit_m2s
0000000000068300 0000000000000394 T INT123_synth_1to1
00000000000686a0 00000000000000bc T INT123_synth_1to1_mono
0000000000068760 000000000000008c T INT123_synth_1to1_m2s
00000000000687f0 0000000000000394 T INT123_synth_2to1
0000000000068b90 00000000000000d4 T INT123_synth_2to1_mono
0000000000068c70 00000000000000bc T INT123_synth_2to1_m2s
0000000000068d30 0000000000000874 T INT123_synth_4to1
00000000000695b0 0000000000000094 T INT123_synth_4to1_mono
0000000000069650 000000000000007c T INT123_synth_4to1_m2s
00000000000696d0 0000000000000be4 T INT123_synth_ntom
000000000006a2c0 0000000000000158 T INT123_synth_ntom_mono
000000000006a420 000000000000013c T INT123_synth_ntom_m2s
000000000006a560 00000000000003bc T INT123_synth_1to1_s32
000000000006a920 00000000000000bc T INT123_synth_1to1_s32_mono
000000000006a9e0 000000000000008c T INT123_synth_1to1_s32_m2s
000000000006aa70 00000000000003bc T INT123_synth_2to1_s32
000000000006ae30 00000000000000d4 T INT123_synth_2to1_s32_mono
000000000006af10 00000000000000bc T INT123_synth_2to1_s32_m2s
000000000006afd0 00000000000008d4 T INT123_synth_4to1_s32
000000000006b8b0 0000000000000094 T INT123_synth_4to1_s32_mono
000000000006b950 000000000000007c T INT123_synth_4to1_s32_m2s
000000000006b9d0 0000000000000c1c T INT123_synth_ntom_s32
000000000006c5f0 0000000000000158 T INT123_synth_ntom_s32_mono
000000000006c750 000000000000013c T INT123_synth_ntom_s32_m2s
000000000006c890 000000000000035c T INT123_synth_1to1_real
000000000006cbf0 00000000000000bc T INT123_synth_1to1_real_mono
000000000006ccb0 000000000000008c T INT123_synth_1to1_real_m2s
000000000006cd40 000000000000035c T INT123_synth_2to1_real
000000000006d0a0 00000000000000d4 T INT123_synth_2to1_real_mono
000000000006d180 00000000000000bc T INT123_synth_2to1_real_m2s
000000000006d240 000000000000064c T INT123_synth_4to1_real
000000000006d890 0000000000000094 T INT123_synth_4to1_real_mono
000000000006d930 000000000000007c T INT123_synth_4to1_real_m2s
000000000006d9b0 0000000000000598 T INT123_synth_ntom_real
000000000006df50 0000000000000158 T INT123_synth_ntom_real_mono
000000000006e0b0 000000000000013c T INT123_synth_ntom_real_m2s
000000000006e1f0 0000000000000004 T INT123_compat_close
000000000006e200 0000000000000610 T INT123_dct64
000000000006e810 00000000000000b8 T INT123_do_equalizer
000000000006e8e0 000000000000018c T sinf
000000000006ea80 00000000000001b0 T log
000000000006ec40 0000000000000098 T sin
000000000006ece0 0000000000000034 t with_errno
000000000006ed20 0000000000000018 t xflow
000000000006ed40 000000000000000c t __math_uflow
000000000006ed60 000000000000000c t __math_oflow
000000000006ed80 0000000000000020 t __math_divzero
000000000006eda0 0000000000000020 t __math_invalid
000000000006edc0 0000000000000014 t __math_check_uflow
000000000006ede0 0000000000000020 t __math_check_oflow
000000000006ee00 00000000000002ec T __ieee754_rem_pio2
000000000006f100 00000000000008a8 T __kernel_rem_pio2
000000000006f9c0 000000000000010c T scalbn
000000000006fae0 0000000000000334 T powf
000000000006fe20 000000000000009c T __kernel_sin
000000000006fec0 0000000000000090 T cos
000000000006ff60 0000000000000034 t with_errnof
000000000006ffa0 0000000000000018 t xflowf
000000000006ffc0 0000000000000008 t __math_uflowf
000000000006ffe0 000000000000000c t __math_may_uflowf
0000000000070000 0000000000000008 t __math_oflowf
0000000000070020 0000000000000020 t __math_divzerof
0000000000070040 0000000000000020 t __math_invalidf
0000000000070060 0000000000000008 T floor
0000000000070080 0000000000000170 T exp
0000000000070200 0000000000000130 T __kernel_cos
0000000000070340 0000000000000008 T fabs
0000000000070350 000000000000009c t op_granpos_add
00000000000703f0 0000000000000148 t op_get_next_page
0000000000070540 00000000000002e4 t op_fetch_headers_impl
0000000000070830 000000000000009c t op_fetch_headers
00000000000708d0 0000000000000054 t op_get_packet_duration
0000000000070930 00000000000000e8 t op_collect_audio_packets
0000000000070a20 00000000000000d8 t op_clear
0000000000070b00 0000000000000080 t op_seek_helper
0000000000070b80 00000000000000ac t op_decode
0000000000070c30 0000000000000078 t op_rescale64.part.0
0000000000070cb0 0000000000000084 t op_granpos_diff
0000000000070d40 0000000000000268 t op_find_initial_pcm_offset
0000000000070fb0 0000000000000278 t op_find_final_pcm_offset
0000000000071230 00000000000000d8 t op_update_gain.part.7
0000000000071310 000000000000011c t op_make_decode_ready.part.8
0000000000071430 0000000000000660 t op_fetch_and_process_page
0000000000071a90 0000000000000340 t op_read_native.part.9
0000000000071dd0 0000000000000a0c t op_open_seekable2
00000000000727e0 0000000000000074 t op_open2
0000000000072860 0000000000000268 T op_test_callbacks
0000000000072ad0 000000000000004c T op_open_callbacks
0000000000072b20 000000000000002c T op_free
0000000000072b50 0000000000000008 T op_seekable
0000000000072b60 0000000000000040 T op_head
0000000000072ba0 0000000000000cf8 T op_pcm_seek
00000000000738a0 0000000000000018 T op_read
00000000000738c0 0000000000000058 t op_strdup_with_len
0000000000073920 00000000000000d4 t op_tags_ensure_capacity
0000000000073a00 0000000000000280 t opus_tags_parse_impl
0000000000073c80 00000000000001b0 T opus_head_parse
0000000000073e30 000000000000000c T opus_tags_init
0000000000073e40 0000000000000078 T opus_tags_clear
0000000000073ec0 000000000000009c T opus_tags_parse
0000000000073f60 000000000000003c T opus_tagncompare
0000000000073fa0 0000000000000128 t opus_tags_get_gain.isra.0.constprop.1
00000000000740d0 0000000000000018 T opus_tags_get_album_gain
00000000000740f0 0000000000000018 T opus_tags_get_track_gain
0000000000074110 000000000000005c t op_strncasecmp
0000000000074170 00000000000000f4 t _os_update_crc
0000000000074270 0000000000000114 t _packetout
0000000000074390 000000000000000c T ogg_page_version
00000000000743a0 0000000000000010 T ogg_page_continued
00000000000743b0 0000000000000010 T ogg_page_bos
00000000000743c0 0000000000000010 T ogg_page_eos
00000000000743d0 000000000000000c T ogg_page_granulepos
00000000000743e0 000000000000000c T ogg_page_serialno
00000000000743f0 000000000000000c T ogg_page_pageno
0000000000074400 0000000000000040 T ogg_page_packets
0000000000074440 000000000000001c T ogg_stream_check
0000000000074460 0000000000000060 T ogg_stream_clear
00000000000744c0 00000000000000a4 T ogg_stream_init
0000000000074570 0000000000000090 t _os_body_expand
0000000000074600 00000000000000a4 t _os_lacing_expand
00000000000746b0 0000000000000084 T ogg_page_checksum_set
0000000000074740 0000000000000014 T ogg_sync_init
0000000000074760 0000000000000040 T ogg_sync_clear
00000000000747a0 000000000000000c T ogg_sync_check
00000000000747b0 00000000000000f0 T ogg_sync_buffer
00000000000748a0 000000000000004c T ogg_sync_wrote
00000000000748f0 0000000000000190 T ogg_sync_pageseek
0000000000074a80 000000000000039c T ogg_stream_pagein
0000000000074e20 0000000000000034 T ogg_sync_reset
0000000000074e60 000000000000004c T ogg_stream_reset
0000000000074eb0 0000000000000050 T ogg_stream_reset_serialno
0000000000074f00 0000000000000044 T ogg_stream_packetout
0000000000074f50 0000000000000044 T ogg_stream_packetpeek
0000000000074fa0 0000000000000014 T oggpack_readinit
0000000000074fc0 00000000000000f8 T oggpack_look
00000000000750c0 000000000000006c T oggpack_adv
0000000000075130 000000000000012c T oggpack_read
0000000000075260 0000000000000020 T oggpack_bytes
0000000000075280 0000000000000328 T opus_pcm_soft_clip
00000000000755b0 000000000000009c T opus_packet_get_samples_per_frame
0000000000075650 0000000000000438 t opus_packet_parse_impl
0000000000075a90 0000000000000084 t smooth_fade
0000000000075b20 0000000000000cd4 t opus_decode_frame
0000000000076800 000000000000006c T opus_decoder_get_size
0000000000076870 0000000000000124 T opus_decoder_init
00000000000769a0 000000000000020c T opus_decoder_ctl
0000000000076bb0 0000000000000044 T opus_packet_get_bandwidth
0000000000076c00 0000000000000010 T opus_packet_get_nb_channels
0000000000076c10 00000000000005e4 t opus_decode_native
0000000000077200 000000000000004c T opus_packet_get_nb_frames
0000000000077250 0000000000000060 T opus_packet_get_nb_samples
00000000000772b0 00000000000000f8 t opus_copy_channel_out_short
00000000000773b0 0000000000000074 T opus_multistream_decoder_get_size
0000000000077430 0000000000000160 T opus_multistream_decoder_init
0000000000077590 0000000000000130 T opus_multistream_decoder_create
00000000000776c0 0000000000000394 t opus_multistream_decoder_ctl_va_list
0000000000077a60 0000000000000078 T opus_multistream_decoder_ctl
0000000000077ae0 000000000000048c t opus_multistream_decode_native
0000000000077f70 0000000000000034 T opus_multistream_decode
0000000000077fb0 0000000000000004 T opus_multistream_decoder_destroy
0000000000077fc0 0000000000000038 t celt_fatal
0000000000078000 0000000000000088 t resampling_factor
0000000000078090 0000000000000234 t comb_filter
00000000000782d0 0000000000000068 t init_caps
0000000000078340 00000000000001c8 t deemphasis
0000000000078510 000000000000042c t celt_synthesis
0000000000078940 00000000000009a0 t celt_decode_lost
00000000000792e0 00000000000002ec t validate_celt_decoder
00000000000795d0 0000000000000060 t celt_decoder_get_size
0000000000079630 0000000000001088 t celt_decode_with_ec
000000000007a6c0 00000000000002f8 t opus_custom_decoder_ctl
000000000007a9c0 00000000000000f0 t celt_decoder_init
000000000007aab0 000000000000004c t ec_tell_frac
000000000007ab00 000000000000007c t ec_dec_normalize
000000000007ab80 0000000000000060 t ec_dec_init
000000000007abe0 000000000000002c t ec_decode
000000000007ac10 0000000000000034 t ec_decode_bin
000000000007ac50 0000000000000044 t ec_dec_update
000000000007aca0 0000000000000044 t ec_dec_bit_logp
000000000007acf0 0000000000000058 t ec_dec_icdf
000000000007ad50 0000000000000074 t ec_dec_bits
000000000007add0 0000000000000110 t ec_dec_uint
000000000007aee0 000000000000021c t clt_mdct_backward_c
000000000007b100 0000000000000050 t opus_custom_mode_create
000000000007b150 00000000000000e8 t find_best_pitch
000000000007b240 000000000000023c t pitch_downsample
000000000007b480 0000000000000254 t pitch_search
000000000007b6e0 0000000000000128 t _celt_lpc
000000000007b810 0000000000000270 t celt_fir_c
000000000007ba80 0000000000000368 t celt_iir
000000000007bdf0 0000000000000184 t _celt_autocorr
000000000007bf80 0000000000000218 t unquant_coarse_energy
000000000007c1a0 0000000000000120 t unquant_fine_energy
000000000007c2c0 0000000000000168 t unquant_energy_finalise
000000000007c430 0000000000000d04 t clt_compute_allocation
000000000007d140 00000000000000a4 t exp_rotation1
000000000007d1f0 000000000000017c t exp_rotation.part.0
000000000007d370 000000000000023c t op_pvq_search_c
000000000007d5b0 00000000000001e8 t alg_quant
000000000007d7a0 0000000000000180 t alg_unquant
000000000007d920 000000000000009c t renormalise_vector
000000000007d9c0 000000000000024c t stereo_itheta
000000000007dc10 0000000000000228 t celt_pitch_xcorr_float_neon
000000000007de40 00000000000000bc t celt_inner_prod_neon
000000000007df00 00000000000000f4 t dual_inner_prod_neon
000000000007e000 0000000000000010 t silk_Get_Decoder_Size
000000000007e010 0000000000000038 t silk_InitDecoder
000000000007e050 0000000000000acc t silk_Decode
000000000007eb20 0000000000000264 t silk_stereo_MS_to_LR
000000000007ed90 00000000000003a0 t silk_resampler_init
000000000007f130 00000000000001ac t silk_resampler
000000000007f2e0 00000000000006b8 t silk_resampler_private_down_FIR
000000000007f9a0 00000000000001b8 t silk_resampler_private_IIR_FIR
000000000007fb60 0000000000000174 t silk_resampler_private_up2_HQ
000000000007fce0 0000000000000004 t silk_resampler_private_up2_HQ_wrapper
000000000007fcf0 0000000000000130 t silk_stereo_decode_pred
000000000007fe20 0000000000000030 t silk_stereo_decode_mid_only
000000000007fe50 0000000000000064 t validate_layout
000000000007fec0 0000000000000070 t get_left_channel
000000000007ff30 0000000000000074 t get_right_channel
000000000007ffb0 0000000000000074 t get_mono_channel
0000000000080030 00000000000000bc t intensity_stereo.isra.0
00000000000800f0 000000000000014c t deinterleave_hadamard
0000000000080240 00000000000000a8 t special_hybrid_folding.isra.1
00000000000802f0 0000000000000108 t quant_band_n1.isra.2
0000000000080400 0000000000000018 t celt_lcg_rand
0000000000080420 000000000000006c t bitexact_log2tan
0000000000080490 00000000000008f0 t compute_theta
0000000000080d80 00000000000005b0 t quant_partition
0000000000081330 00000000000001e4 t denormalise_bands
0000000000081520 000000000000033c t anti_collapse
0000000000081860 000000000000007c t haar1
00000000000818e0 00000000000004fc t quant_band
0000000000081de0 000000000000056c t quant_band_stereo
0000000000082350 0000000000001024 t quant_all_bands
0000000000083380 000000000000013c t encode_pulses
00000000000834c0 00000000000002d0 t decode_pulses
0000000000083790 00000000000000a0 t ec_enc_carry_out.part.0
0000000000083830 00000000000000b0 t ec_encode
00000000000838e0 0000000000000098 t ec_enc_bit_logp
0000000000083980 00000000000000a0 t ec_enc_bits
0000000000083a20 0000000000000090 t ec_enc_uint
0000000000083ab0 0000000000000768 t opus_fft_impl
0000000000084220 0000000000000194 t ec_laplace_decode
00000000000843c0 0000000000000048 t isqrt32
0000000000084410 000000000000004c t silk_init_decoder
0000000000084460 0000000000000220 t silk_decode_frame
0000000000084680 0000000000000260 t silk_decode_parameters
00000000000848e0 00000000000003e0 t silk_decode_indices
0000000000084cc0 0000000000000284 t silk_decode_pulses
0000000000084f50 0000000000000284 t silk_decoder_set_fs
00000000000851e0 00000000000000f4 t silk_gains_dequant
00000000000852e0 0000000000000178 t silk_NLSF_decode
0000000000085460 0000000000000028 t silk_PLC_Reset
0000000000085490 0000000000000aa4 t silk_PLC
0000000000085f40 00000000000001f0 t silk_PLC_glue_frames
0000000000086130 0000000000000420 t silk_shell_decoder
0000000000086550 00000000000000a0 t silk_NLSF_unpack
00000000000865f0 0000000000000074 t silk_bwexpander
0000000000086670 000000000000012c t silk_decode_pitch
00000000000867a0 000000000000006c t silk_log2lin
0000000000086810 0000000000000174 t silk_LPC_analysis_filter
0000000000086990 000000000000036c t silk_NLSF2A
0000000000086d00 00000000000002e8 t silk_NLSF_stabilize
0000000000086ff0 0000000000000054 t silk_resampler_private_AR2
0000000000087050 0000000000000084 t silk_insertion_sort_increasing_all_values_int16
00000000000870e0 0000000000000128 t silk_sum_sqr_shift
0000000000087210 0000000000000220 t silk_LPC_fit
0000000000087430 0000000000000640 t silk_LPC_inverse_pred_gain_neon
0000000000087a70 000000000000004c t silk_CNG_Reset
0000000000087ac0 00000000000006b4 t silk_CNG
0000000000088180 0000000000000108 t silk_decode_signs
0000000000088290 0000000000000990 t silk_decode_core
0000000000088c20 0000000000000060 t silk_bwexpander_32
0000000000088c80 00000000000003b4 t silk_LPC_inverse_pred_gain_c
0000000000089040 000000000000000c T lrintf
0000000000089060 0000000000000050 T sqrt
00000000000890c0 0000000000000008 T __ieee754_sqrt
00000000000890d0 00000000000000cc T IMG_Init
00000000000891a0 0000000000000074 T IMG_Quit
0000000000089220 00000000000001b4 T IMG_LoadTyped_RW
00000000000893e0 0000000000000060 T IMG_Load
0000000000089440 00000000000000b4 t IMG_isICOCUR
0000000000089500 00000000000006d8 t LoadICOCUR_RW.constprop.0
0000000000089be0 00000000000000ac T IMG_isBMP
0000000000089c90 0000000000000008 T IMG_isICO
0000000000089ca0 0000000000000008 T IMG_isCUR
0000000000089cb0 0000000000000be8 T IMG_LoadBMP_RW
000000000008a8a0 0000000000000008 T IMG_LoadICO_RW
000000000008a8b0 0000000000000008 T IMG_LoadCUR_RW
000000000008a8c0 0000000000000078 t GetDataBlock
000000000008a940 00000000000000b0 t ReadColorMap
000000000008a9f0 0000000000000150 t GetCode.part.0
000000000008ab40 00000000000003d8 t LWZReadByte.part.1
000000000008af20 00000000000006a0 t ReadImage.isra.2
000000000008b5c0 00000000000000e4 T IMG_isGIF
000000000008b6b0 00000000000004d4 T IMG_LoadGIF_RW
000000000008bb90 0000000000000004 t init_source
000000000008bba0 000000000000005c t fill_input_buffer
000000000008bc00 000000000000007c t skip_input_data
000000000008bc80 0000000000000018 t my_error_exit
000000000008bca0 0000000000000004 t output_no_message
000000000008bcb0 0000000000000004 t term_source
000000000008bcc0 00000000000000c4 T IMG_InitJPG
000000000008bd90 0000000000000018 T IMG_QuitJPG
000000000008bdb0 00000000000001ac T IMG_isJPG
000000000008bf60 00000000000002e0 T IMG_LoadJPG_RW
000000000008c240 00000000000000e4 T IMG_isLBM
000000000008c330 0000000000000ad4 T IMG_LoadLBM_RW
000000000008ce10 00000000000000a8 T IMG_isPCX
000000000008cec0 0000000000000544 T IMG_LoadPCX_RW
000000000008d410 000000000000002c t png_read_data
000000000008d440 0000000000000160 T IMG_InitPNG
000000000008d5a0 0000000000000018 T IMG_QuitPNG
000000000008d5c0 00000000000000c0 T IMG_isPNG
000000000008d680 0000000000000568 T IMG_LoadPNG_RW
000000000008dbf0 00000000000000e8 t ReadNumber
000000000008dce0 00000000000000ac T IMG_isPNM
000000000008dd90 0000000000000424 T IMG_LoadPNM_RW
000000000008e1c0 000000000000007c t nsvg__xformMultiply
000000000008e240 0000000000000108 t nsvg__xformInverse
000000000008e350 0000000000000128 t nsvg__convertToPixels
000000000008e480 00000000000000d8 t nsvg__parseUnits
000000000008e560 0000000000000048 t nsvg__scaleGradient
000000000008e5b0 0000000000000020 t nsvg__cmpEdge
000000000008e5d0 0000000000000058 t nsvg__applyOpacity
000000000008e630 00000000000002f4 t nsvg__parseElement
000000000008e930 0000000000000050 t nsvg__strndup
000000000008e980 0000000000000108 t nsvg__content
000000000008ea90 0000000000000048 t nsvg__xformPremultiply
000000000008eae0 000000000000026c t nsvg__parseColor
000000000008ed50 0000000000000048 t nsvg__parseOpacity
000000000008eda0 000000000000004c t nsvg__parseCoordinateRaw
000000000008edf0 0000000000000040 t nsvg__actualLength
000000000008ee30 00000000000002b8 t nsvg__createGradient
000000000008f0f0 0000000000000068 t nsvg__normalize
000000000008f160 00000000000001d8 t nsvg__atof
000000000008f340 0000000000000084 t nsvg__addPoint
000000000008f3d0 00000000000000a0 t nsvg__lineTo
000000000008f470 000000000000005c t nsvg__cubicBezTo
000000000008f4d0 0000000000000034 t nsvg__moveTo
000000000008f510 00000000000000e8 t nsvg__addPathPoint
000000000008f600 00000000000001a0 t nsvg__flattenCubicBez
000000000008f7a0 0000000000000080 t nsvg__appendPathPoint
000000000008f820 00000000000000a4 t nsvg__vecang
000000000008f8d0 0000000000000048 t nsvg__deletePaths
000000000008f920 00000000000002f4 t nsvg__curveBounds
000000000008fc20 00000000000001fc t nsvg__addPath
000000000008fe20 00000000000003bc t nsvg__initPaint.part.9
00000000000901e0 00000000000000b4 t nsvg__endElement
00000000000902a0 00000000000001a0 t nsvg__prepareStroke.isra.12
0000000000090440 00000000000000e4 t nsvg__addEdge
0000000000090530 00000000000001bc t nsvg__roundCap.isra.23
00000000000906f0 00000000000001b4 t nsvg__getLocalBounds.isra.26
00000000000908b0 000000000000033c t nsvg__addShape
0000000000090bf0 00000000000000d8 t nsvg__fillScanline.constprop.30
0000000000090cd0 00000000000008d0 t nsvg__rasterizeSortedEdges
00000000000915a0 000000000000020c t nsvg__parseNumber.constprop.34
00000000000917b0 0000000000000168 t nsvg__parseTransformArgs.constprop.33
0000000000091920 0000000000000408 t nsvg__parseTransform
0000000000091d30 0000000000000988 t nsvg__parseAttr
00000000000926c0 00000000000001a4 t nsvg__parseNameValue
0000000000092870 0000000000000114 t nsvg__parseStyle
0000000000092990 0000000000000070 t nsvg__parseAttribs
0000000000092a00 000000000000015c t nsvg__parseGradientStop
0000000000092b60 0000000000000314 t nsvg__parseGradient
0000000000092e80 00000000000000b4 t nsvg__getNextPathItem
0000000000092f40 0000000000000134 t nsvg__parsePoly
0000000000093080 0000000000001c40 t nsvg__startElement
0000000000094cc0 00000000000007d8 t nsvg__expandStroke
00000000000954a0 0000000000000164 T nsvg__parseXML
0000000000095610 00000000000000b0 T nsvgDelete
00000000000956c0 00000000000005c0 T nsvgParse
0000000000095c80 0000000000000074 T nsvgDeleteRasterizer
0000000000095d00 0000000000000050 T nsvgCreateRasterizer
0000000000095d50 0000000000000aec T nsvgRasterize
0000000000096840 00000000000000b8 T IMG_isSVG
0000000000096900 0000000000000100 T IMG_LoadSVG_RW
0000000000096a00 00000000000006dc T IMG_LoadTGA_RW
00000000000970e0 0000000000000020 T IMG_InitTIF
0000000000097100 0000000000000004 T IMG_QuitTIF
0000000000097110 0000000000000008 T IMG_isTIF
0000000000097120 0000000000000008 T IMG_LoadTIF_RW
0000000000097130 0000000000000040 t free_xcf_header
0000000000097170 0000000000000050 t load_xcf_tile_none
00000000000971c0 0000000000000128 t xcf_read_property
00000000000972f0 00000000000000b4 t read_string
00000000000973b0 0000000000000204 t load_xcf_tile_rle
00000000000975c0 00000000000000ac T IMG_isXCF
0000000000097670 0000000000000d2c T IMG_LoadXCF_RW
00000000000983a0 00000000000000a8 t get_colorhash.isra.0
0000000000098450 00000000000001a4 t get_next_line.part.1
0000000000098600 0000000000000788 t load_xpm
0000000000098d90 00000000000000ac T IMG_isXPM
0000000000098e40 0000000000000014 T IMG_LoadXPM_RW
0000000000098e60 0000000000000088 t get_line.constprop.0
0000000000098ef0 000000000000010c t get_header
0000000000099000 0000000000000078 T IMG_isXV
0000000000099080 0000000000000148 T IMG_LoadXV_RW
00000000000991d0 0000000000000170 t webp_getinfo
0000000000099340 0000000000000040 T IMG_InitWEBP
0000000000099380 0000000000000018 T IMG_QuitWEBP
00000000000993a0 0000000000000008 T IMG_isWEBP
00000000000993b0 0000000000000234 T IMG_LoadWEBP_RW
00000000000995f0 00000000000000d8 T jpeg_CreateCompress
00000000000996d0 0000000000000004 T jpeg_destroy_compress
00000000000996e0 0000000000000094 T jpeg_suppress_tables
0000000000099780 0000000000000180 T jpeg_finish_compress
0000000000099900 00000000000000a4 T jpeg_start_compress
00000000000999b0 00000000000000f0 T jpeg_write_scanlines
0000000000099aa0 00000000000000dc T jinit_compress_master
0000000000099b80 0000000000000054 t start_pass_main
0000000000099be0 0000000000000134 t process_data_simple_main
0000000000099d20 00000000000000d0 T jinit_c_main_controller
0000000000099df0 0000000000000074 t write_marker_byte
0000000000099e70 00000000000000c8 t write_file_trailer
0000000000099f40 00000000000001a4 t write_marker_header
000000000009a0f0 00000000000004d0 t emit_sof
000000000009a5c0 00000000000003a4 t emit_dqt
000000000009a970 0000000000000188 t write_frame_header
000000000009ab00 0000000000000324 t emit_dht
000000000009ae30 0000000000000200 t write_tables_only
000000000009b030 0000000000000bd4 t write_scan_header
000000000009bc10 0000000000000ba0 t write_file_header
000000000009c7b0 0000000000000080 T jinit_marker_writer
000000000009c830 00000000000006dc t validate_script
000000000009cf10 0000000000000040 t pass_startup
000000000009cf50 00000000000000c4 t finish_pass_master
000000000009d020 0000000000000258 t per_scan_setup
000000000009d280 0000000000000144 t select_scan_parameters
000000000009d3d0 00000000000001f8 t prepare_for_pass
000000000009d5d0 000000000000039c T jinit_c_master_control
000000000009d970 000000000000005c T jpeg_abort
000000000009d9d0 0000000000000034 T jpeg_destroy
000000000009da10 0000000000000028 T jpeg_alloc_quant_table
000000000009da40 0000000000000028 T jpeg_alloc_huff_table
000000000009da70 00000000000000d0 t add_huff_table.part.0
000000000009db40 00000000000000fc T jpeg_add_quant_table
000000000009dc40 000000000000005c T jpeg_set_linear_quality
000000000009dca0 0000000000000040 T jpeg_quality_scaling
000000000009dce0 0000000000000034 T jpeg_set_quality
000000000009dd20 000000000000029c T jpeg_set_colorspace
000000000009dfc0 0000000000000068 T jpeg_default_colorspace
000000000009e030 0000000000000198 T jpeg_set_defaults
000000000009e1d0 000000000000006c t encode_mcu_AC_first_prepare
000000000009e240 000000000000009c t encode_mcu_AC_refine_prepare
000000000009e2e0 00000000000001fc t start_pass_phuff
000000000009e4e0 0000000000000144 t emit_bits.constprop.0
000000000009e630 0000000000000170 t emit_bits
000000000009e7a0 0000000000000244 t emit_eobrun
000000000009e9f0 0000000000000058 t finish_pass_phuff
000000000009ea50 0000000000000228 t finish_pass_gather_phuff
000000000009ec80 0000000000000134 t emit_restart
000000000009edc0 000000000000021c t encode_mcu_DC_refine
000000000009efe0 0000000000000478 t encode_mcu_AC_refine
000000000009f460 0000000000000338 t encode_mcu_AC_first
000000000009f7a0 00000000000001b8 t encode_mcu_DC_first
000000000009f960 0000000000000054 T jinit_phuff_encoder
000000000009f9c0 0000000000000050 t start_pass_prep
000000000009fa10 000000000000027c t pre_process_data
000000000009fc90 0000000000000284 t pre_process_context
000000000009ff20 0000000000000338 T jinit_c_prep_controller
00000000000a0260 0000000000000004 t start_pass_downsample
00000000000a0270 000000000000009c t sep_downsample
00000000000a0310 000000000000032c t int_downsample
00000000000a0640 00000000000000f0 t h2v1_downsample
00000000000a0730 0000000000000110 t h2v2_downsample
00000000000a0840 00000000000005cc t h2v2_smooth_downsample
00000000000a0e10 00000000000001e4 t fullsize_smooth_downsample
00000000000a1000 00000000000000a4 t fullsize_downsample
00000000000a10b0 0000000000000274 T jinit_downsampler
00000000000a1330 0000000000000118 T jpeg_CreateDecompress
00000000000a1450 0000000000000004 T jpeg_destroy_decompress
00000000000a1460 0000000000000284 T jpeg_consume_input
00000000000a16f0 0000000000000090 T jpeg_read_header
00000000000a1780 00000000000000ec T jpeg_finish_decompress
00000000000a1870 0000000000000158 t output_pass_setup
00000000000a19d0 000000000000010c T jpeg_start_decompress
00000000000a1ae0 00000000000000dc T jpeg_read_scanlines
00000000000a1bc0 0000000000000014 t finish_input_pass
00000000000a1be0 0000000000000058 t reset_input_controller
00000000000a1c40 000000000000048c t start_input_pass
00000000000a20d0 000000000000036c t consume_markers
00000000000a2440 0000000000000068 T jinit_input_controller
00000000000a24b0 00000000000003cc t get_sof
00000000000a2880 0000000000000250 t examine_app0
00000000000a2ad0 0000000000000128 t skip_variable
00000000000a2c00 0000000000000134 t next_marker
00000000000a2d40 0000000000000020 t reset_marker_reader
00000000000a2d60 00000000000003bc t get_dht
00000000000a3120 0000000000000c50 t read_markers
00000000000a3d70 00000000000000dc t examine_app14
00000000000a3e50 00000000000001c8 t get_interesting_appn
00000000000a4020 00000000000000bc t read_restart_marker
00000000000a40e0 000000000000015c T jpeg_resync_to_restart
00000000000a4240 00000000000000bc T jinit_marker_reader
00000000000a4300 00000000000001bc t prepare_for_output_pass
00000000000a44c0 000000000000003c t finish_output_pass
00000000000a4500 00000000000000f4 t use_merged_upsample.part.0
00000000000a4600 00000000000004f4 T jpeg_calc_output_dimensions
00000000000a4b00 00000000000003e0 T jinit_master_decompress
00000000000a4ee0 0000000000000014 t start_pass_merged_upsample
00000000000a4f00 0000000000000050 t merged_1v_upsample
00000000000a4f50 00000000000007bc t h2v1_merged_upsample
00000000000a5710 0000000000000c58 t h2v2_merged_upsample
00000000000a6370 000000000000017c t h2v1_merged_upsample_565
00000000000a64f0 00000000000001d8 t h2v1_merged_upsample_565D
00000000000a66d0 0000000000000254 t h2v2_merged_upsample_565
00000000000a6930 0000000000000318 t h2v2_merged_upsample_565D
00000000000a6c50 000000000000011c t merged_2v_upsample
00000000000a6d70 0000000000000244 T jinit_merged_upsampler
00000000000a6fc0 00000000000003e8 t start_pass_phuff_decoder
00000000000a73b0 0000000000000534 t decode_mcu_AC_refine
00000000000a78f0 0000000000000188 t decode_mcu_DC_refine
00000000000a7a80 0000000000000330 t decode_mcu_AC_first
00000000000a7db0 000000000000033c t decode_mcu_DC_first
00000000000a80f0 00000000000000b8 T jinit_phuff_decoder
00000000000a81b0 000000000000011c t start_pass_dpost
00000000000a82d0 000000000000008c t post_process_1pass
00000000000a8360 00000000000000f8 t post_process_prepass
00000000000a8460 00000000000000e8 t post_process_2pass
00000000000a8550 00000000000000d0 T jinit_d_post_controller
00000000000a8620 0000000000000014 t start_pass_upsample
00000000000a8640 000000000000014c t sep_upsample
00000000000a8790 0000000000000008 t fullsize_upsample
00000000000a87a0 0000000000000008 t noop_upsample
00000000000a87b0 00000000000001c8 t h2v1_upsample
00000000000a8980 00000000000003d4 t h2v1_fancy_upsample
00000000000a8d60 00000000000000ac t h1v2_fancy_upsample
00000000000a8e10 0000000000000144 t h2v2_fancy_upsample
00000000000a8f60 0000000000000118 t int_upsample
00000000000a9080 0000000000000214 t h2v2_upsample
00000000000a92a0 0000000000000334 T jinit_upsampler
00000000000a95e0 0000000000000070 t emit_message
00000000000a9650 0000000000000010 t reset_error_mgr
00000000000a9660 00000000000000cc t format_message
00000000000a9730 0000000000000044 t output_message
00000000000a9780 000000000000002c t error_exit
00000000000a97b0 0000000000000058 T jpeg_std_error
00000000000a9810 00000000000001d8 t create_colorindex
00000000000a99f0 0000000000000098 t color_quantize
00000000000a9a90 0000000000000078 t color_quantize3
00000000000a9b10 00000000000000e0 t quantize3_ord_dither
00000000000a9bf0 0000000000000004 t finish_pass_1_quant
00000000000a9c00 0000000000000018 t new_color_map_1_quant
00000000000a9c20 0000000000000680 t start_pass_1_quant
00000000000aa2a0 000000000000023c t quantize_fs_dither
00000000000aa4e0 0000000000000180 t quantize_ord_dither
00000000000aa660 0000000000000520 T jinit_1pass_quantizer
00000000000aab80 00000000000000a4 t prescan_quantize
00000000000aac30 00000000000009a8 t fill_inverse_cmap
00000000000ab5e0 000000000000011c t pass2_no_dither
00000000000ab700 0000000000000354 t pass2_fs_dither
00000000000aba60 0000000000000114 t init_error_limit
00000000000abb80 0000000000000004 t finish_pass2
00000000000abb90 0000000000000010 t new_color_map_2_quant
00000000000abba0 0000000000000160 t start_pass_2_quant
00000000000abd00 00000000000005f8 t update_box.isra.0
00000000000ac300 00000000000003e0 t finish_pass1
00000000000ac6e0 00000000000001b8 T jinit_2pass_quantizer
00000000000ac8a0 0000000000000010 T jdiv_round_up
00000000000ac8b0 0000000000000018 T jround_up
00000000000ac8d0 0000000000000060 T jcopy_sample_rows
00000000000ac930 0000000000000014 T jcopy_block_row
00000000000ac950 000000000000000c T jzero_far
00000000000ac960 00000000000001d0 t alloc_small
00000000000acb30 0000000000000098 t request_virt_barray
00000000000acbd0 0000000000000098 t request_virt_sarray
00000000000acc70 0000000000000158 t free_pool
00000000000acdd0 0000000000000048 t self_destruct
00000000000ace20 0000000000000158 t alloc_large
00000000000acf80 00000000000000e4 t alloc_barray
00000000000ad070 000000000000011c t alloc_sarray
00000000000ad190 0000000000000274 t realize_virt_arrays
00000000000ad410 00000000000003bc t access_virt_sarray
00000000000ad7d0 00000000000003c4 t access_virt_barray
00000000000adba0 0000000000000170 T jinit_memory_mgr
00000000000add10 0000000000000008 T jpeg_get_small
00000000000add20 0000000000000008 T jpeg_free_small
00000000000add30 0000000000000008 T jpeg_get_large
00000000000add40 0000000000000008 T jpeg_free_large
00000000000add50 0000000000000020 T jpeg_mem_available
00000000000add70 0000000000000018 T jpeg_open_backing_store
00000000000add90 0000000000000008 T jpeg_mem_init
00000000000adda0 0000000000000004 T jpeg_mem_term
00000000000addb0 0000000000000228 t start_pass
00000000000adfe0 000000000000046c t arith_encode
00000000000ae450 000000000000046c t arith_encode.constprop.0
00000000000ae8c0 000000000000046c t arith_encode.constprop.1
00000000000aed30 000000000000059c t finish_pass
00000000000af2d0 0000000000000198 t emit_restart
00000000000af470 000000000000047c t encode_mcu
00000000000af8f0 0000000000000288 t encode_mcu_AC_refine
00000000000afb80 00000000000000b4 t encode_mcu_DC_refine
00000000000afc40 00000000000002dc t encode_mcu_AC_first
00000000000aff20 000000000000025c t encode_mcu_DC_first
00000000000b0180 000000000000007c T jinit_arith_encoder
00000000000b0200 00000000000003ec t start_pass
00000000000b05f0 0000000000000108 t process_restart
00000000000b0700 0000000000000280 t arith_decode
00000000000b0980 00000000000003c0 t decode_mcu
00000000000b0d40 0000000000000214 t decode_mcu_AC_refine
00000000000b0f60 00000000000000d4 t decode_mcu_DC_refine
00000000000b1040 0000000000000278 t decode_mcu_AC_first
00000000000b12c0 0000000000000294 t decode_mcu_DC_first
00000000000b1560 00000000000000e8 T jinit_arith_decoder
00000000000b1650 000000000000016c t init_simd.part.0
00000000000b17c0 0000000000000044 T jsimd_can_rgb_ycc
00000000000b1810 0000000000000044 T jsimd_can_rgb_gray
00000000000b1860 0000000000000044 T jsimd_can_ycc_rgb
00000000000b18b0 0000000000000044 T jsimd_can_ycc_rgb565
00000000000b1900 00000000000000f4 T jsimd_rgb_ycc_convert
00000000000b1a00 00000000000000e4 T jsimd_rgb_gray_convert
00000000000b1af0 00000000000000f4 T jsimd_ycc_rgb_convert
00000000000b1bf0 0000000000000008 T jsimd_ycc_rgb565_convert
00000000000b1c00 0000000000000044 T jsimd_can_h2v2_downsample
00000000000b1c50 0000000000000044 T jsimd_can_h2v1_downsample
00000000000b1ca0 0000000000000020 T jsimd_h2v2_downsample
00000000000b1cc0 0000000000000020 T jsimd_h2v1_downsample
00000000000b1ce0 0000000000000044 T jsimd_can_h2v2_upsample
00000000000b1d30 0000000000000044 T jsimd_can_h2v1_upsample
00000000000b1d80 000000000000000c T jsimd_h2v2_upsample
00000000000b1d90 000000000000000c T jsimd_h2v1_upsample
00000000000b1da0 0000000000000044 T jsimd_can_h2v2_fancy_upsample
00000000000b1df0 0000000000000044 T jsimd_can_h2v1_fancy_upsample
00000000000b1e40 0000000000000044 T jsimd_can_h1v2_fancy_upsample
00000000000b1e90 000000000000000c T jsimd_h2v2_fancy_upsample
00000000000b1ea0 000000000000000c T jsimd_h2v1_fancy_upsample
00000000000b1eb0 000000000000000c T jsimd_h1v2_fancy_upsample
00000000000b1ec0 0000000000000044 T jsimd_can_h2v2_merged_upsample
00000000000b1f10 0000000000000044 T jsimd_can_h2v1_merged_upsample
00000000000b1f60 00000000000000e4 T jsimd_h2v2_merged_upsample
00000000000b2050 00000000000000e4 T jsimd_h2v1_merged_upsample
00000000000b2140 0000000000000044 T jsimd_can_convsamp
00000000000b2190 0000000000000008 T jsimd_can_convsamp_float
00000000000b21a0 0000000000000004 T jsimd_convsamp
00000000000b21b0 0000000000000004 T jsimd_convsamp_float
00000000000b21c0 0000000000000044 T jsimd_can_fdct_islow
00000000000b2210 0000000000000044 T jsimd_can_fdct_ifast
00000000000b2260 0000000000000008 T jsimd_can_fdct_float
00000000000b2270 0000000000000004 T jsimd_fdct_islow
00000000000b2280 0000000000000004 T jsimd_fdct_ifast
00000000000b2290 0000000000000004 T jsimd_fdct_float
00000000000b22a0 0000000000000044 T jsimd_can_quantize
00000000000b22f0 0000000000000008 T jsimd_can_quantize_float
00000000000b2300 0000000000000004 T jsimd_quantize
00000000000b2310 0000000000000004 T jsimd_quantize_float
00000000000b2320 0000000000000044 T jsimd_can_idct_2x2
00000000000b2370 0000000000000044 T jsimd_can_idct_4x4
00000000000b23c0 0000000000000014 T jsimd_idct_2x2
00000000000b23e0 0000000000000014 T jsimd_idct_4x4
00000000000b2400 0000000000000044 T jsimd_can_idct_islow
00000000000b2450 0000000000000044 T jsimd_can_idct_ifast
00000000000b24a0 0000000000000008 T jsimd_can_idct_float
00000000000b24b0 0000000000000014 T jsimd_idct_islow
00000000000b24d0 0000000000000014 T jsimd_idct_ifast
00000000000b24f0 0000000000000004 T jsimd_idct_float
00000000000b2500 000000000000004c T jsimd_can_huff_encode_one_block
00000000000b2550 0000000000000014 T jsimd_huff_encode_one_block
00000000000b2570 0000000000000044 T jsimd_can_encode_mcu_AC_first_prepare
00000000000b25c0 0000000000000004 T jsimd_encode_mcu_AC_first_prepare
00000000000b25d0 0000000000000044 T jsimd_can_encode_mcu_AC_refine_prepare
00000000000b2620 0000000000000004 T jsimd_encode_mcu_AC_refine_prepare
00000000000b2630 0000000000000130 t start_pass_coef
00000000000b2760 0000000000000298 t compress_output
00000000000b2a00 0000000000000294 t compress_first_pass
00000000000b2ca0 0000000000000510 t compress_data
00000000000b31b0 0000000000000134 T jinit_c_coef_controller
00000000000b32f0 00000000000000d0 t rgb_ycc_start
00000000000b33c0 0000000000000608 t rgb_ycc_convert
00000000000b39d0 00000000000003a8 t rgb_gray_convert
00000000000b3d80 000000000000148c t rgb_rgb_convert
00000000000b5210 0000000000000108 t cmyk_ycck_convert
00000000000b5320 00000000000005c0 t grayscale_convert
00000000000b58e0 0000000000000afc t null_convert
00000000000b63e0 0000000000000004 t null_method
00000000000b63f0 00000000000003ac T jinit_color_converter
00000000000b67a0 0000000000000338 t convsamp
00000000000b6ae0 000000000000014c t quantize
00000000000b6c30 00000000000000ac t forward_DCT
00000000000b6ce0 0000000000000438 t convsamp_float
00000000000b7120 0000000000000188 t quantize_float
00000000000b72b0 00000000000000ac t forward_DCT_float
00000000000b7360 0000000000000130 t compute_reciprocal
00000000000b7490 0000000000000388 t start_pass_fdctmgr
00000000000b7820 0000000000000244 T jinit_forward_dct
00000000000b7a70 0000000000000244 t encode_mcu_gather
00000000000b7cc0 00000000000001bc t flush_bits
00000000000b7e80 0000000000000088 t finish_pass_huff
00000000000b7f10 000000000000f1ec t encode_mcu_huff
00000000000c7100 00000000000002c8 T jpeg_make_c_derived_tbl
00000000000c73d0 00000000000001d0 t start_pass_huff
00000000000c75a0 00000000000003c8 T jpeg_gen_optimal_table
00000000000c7970 0000000000000100 t finish_pass_gather
00000000000c7a70 0000000000000058 T jinit_huff_encoder
00000000000c7ad0 0000000000000054 t start_input_pass
00000000000c7b30 0000000000000008 t dummy_consume_data
00000000000c7b40 00000000000002b4 t consume_data
00000000000c7e00 0000000000000278 t decompress_data
00000000000c8080 00000000000002f0 t start_output_pass
00000000000c8370 0000000000000360 t decompress_onepass
00000000000c86d0 0000000000001e74 t decompress_smooth_data
00000000000ca550 0000000000000198 T jinit_d_coef_controller
00000000000ca6f0 0000000000000118 t build_ycc_rgb_table
00000000000ca810 00000000000004e0 t ycc_rgb_convert
00000000000cacf0 0000000000000090 t rgb_gray_convert
00000000000cad80 0000000000000694 t null_convert
00000000000cb420 0000000000001384 t gray_rgb_convert
00000000000cc7b0 0000000000001744 t rgb_rgb_convert
00000000000cdf00 00000000000000e0 t ycck_cmyk_convert
00000000000cdfe0 0000000000000244 t ycc_rgb565_convert
00000000000ce230 00000000000002c0 t ycc_rgb565D_convert
00000000000ce4f0 000000000000068c t rgb_rgb565_convert
00000000000ceb80 00000000000001fc t rgb_rgb565D_convert
00000000000ced80 00000000000002d8 t gray_rgb565_convert
00000000000cf060 000000000000013c t gray_rgb565D_convert
00000000000cf1a0 0000000000000004 t start_pass_dcolor
00000000000cf1b0 0000000000000018 t grayscale_convert
00000000000cf1d0 00000000000003f0 T jinit_color_deconverter
00000000000cf5c0 00000000000006a4 t start_pass
00000000000cfc70 00000000000000c4 T jinit_inverse_dct
00000000000cfd40 00000000000000d0 t add_huff_table.part.0
00000000000cfe10 00000000000006d0 T jpeg_make_d_derived_tbl
00000000000d04e0 000000000000044c t start_pass_huff_decoder
00000000000d0930 0000000000000150 T jpeg_fill_bit_buffer
00000000000d0a80 000000000000016c T jpeg_huff_decode
00000000000d0bf0 000000000000128c t decode_mcu
00000000000d1e80 0000000000000130 T jinit_huff_decoder
00000000000d1fb0 00000000000000a8 t process_data_simple_main
00000000000d2060 0000000000000334 t process_data_context_main
00000000000d23a0 0000000000000028 t process_data_crank_post
00000000000d23d0 000000000000030c t start_pass_main
00000000000d26e0 00000000000001d0 T jinit_d_main_controller
00000000000d28b0 0000000000000438 T jpeg_fdct_float
00000000000d2cf0 00000000000002f0 T jpeg_fdct_ifast
00000000000d2fe0 0000000000000338 T jpeg_fdct_islow
00000000000d3320 000000000000033c T jpeg_idct_float
00000000000d3660 0000000000000408 T jpeg_idct_ifast
00000000000d3a70 0000000000000430 T jpeg_idct_islow
00000000000d3ea0 0000000000000a20 T jpeg_idct_7x7
00000000000d48c0 00000000000004a0 T jpeg_idct_6x6
00000000000d4d60 0000000000000624 T jpeg_idct_5x5
00000000000d5390 00000000000001f0 T jpeg_idct_3x3
00000000000d5580 0000000000000a44 T jpeg_idct_9x9
00000000000d5fd0 0000000000000aa4 T jpeg_idct_10x10
00000000000d6a80 00000000000004b8 T jpeg_idct_11x11
00000000000d6f40 0000000000000db8 T jpeg_idct_12x12
00000000000d7d00 00000000000005cc T jpeg_idct_13x13
00000000000d82d0 0000000000000fdc T jpeg_idct_14x14
00000000000d92b0 0000000000000558 T jpeg_idct_15x15
00000000000d9810 0000000000000620 T jpeg_idct_16x16
00000000000d9e30 00000000000002b0 T jpeg_idct_4x4
00000000000da0e0 0000000000000224 T jpeg_idct_2x2
00000000000da310 0000000000000030 T jpeg_idct_1x1
00000000000da340 00000000000001bc T jsimd_rgb_gray_convert_neon
00000000000da340 00000000000001bc t jsimd_rgb_gray_convert_neon.localalias
00000000000da500 0000000000000004 T jsimd_extrgb_gray_convert_neon
00000000000da510 00000000000001bc T jsimd_extrgbx_gray_convert_neon
00000000000da6d0 00000000000001bc T jsimd_extbgr_gray_convert_neon
00000000000da890 00000000000001bc T jsimd_extbgrx_gray_convert_neon
00000000000daa50 00000000000001bc T jsimd_extxbgr_gray_convert_neon
00000000000dac10 00000000000001bc T jsimd_extxrgb_gray_convert_neon
00000000000dadd0 000000000000052c T jsimd_encode_mcu_AC_first_prepare_neon
00000000000db300 00000000000006b4 T jsimd_encode_mcu_AC_refine_prepare_neon
00000000000db9c0 0000000000000090 T jsimd_h2v1_downsample_neon
00000000000dba50 00000000000000b4 T jsimd_h2v2_downsample_neon
00000000000dbb10 0000000000000418 T jsimd_h2v1_merged_upsample_neon
00000000000dbb10 0000000000000418 t jsimd_h2v1_merged_upsample_neon.localalias
00000000000dbf30 0000000000000678 T jsimd_h2v2_merged_upsample_neon
00000000000dbf30 0000000000000678 t jsimd_h2v2_merged_upsample_neon.localalias
00000000000dc5b0 0000000000000004 T jsimd_h2v1_extrgb_merged_upsample_neon
00000000000dc5c0 0000000000000004 T jsimd_h2v2_extrgb_merged_upsample_neon
00000000000dc5d0 00000000000004a0 T jsimd_h2v1_extrgbx_merged_upsample_neon
00000000000dca70 0000000000000730 T jsimd_h2v2_extrgbx_merged_upsample_neon
00000000000dd1a0 0000000000000418 T jsimd_h2v1_extbgr_merged_upsample_neon
00000000000dd5c0 0000000000000678 T jsimd_h2v2_extbgr_merged_upsample_neon
00000000000ddc40 00000000000004a0 T jsimd_h2v1_extbgrx_merged_upsample_neon
00000000000de0e0 0000000000000740 T jsimd_h2v2_extbgrx_merged_upsample_neon
00000000000de820 0000000000000494 T jsimd_h2v1_extxbgr_merged_upsample_neon
00000000000decc0 0000000000000750 T jsimd_h2v2_extxbgr_merged_upsample_neon
00000000000df410 0000000000000494 T jsimd_h2v1_extxrgb_merged_upsample_neon
00000000000df8b0 0000000000000750 T jsimd_h2v2_extxrgb_merged_upsample_neon
00000000000e0000 0000000000000154 T jsimd_h2v1_fancy_upsample_neon
00000000000e0160 00000000000002d8 T jsimd_h2v2_fancy_upsample_neon
00000000000e0440 00000000000000b8 T jsimd_h1v2_fancy_upsample_neon
00000000000e0500 000000000000005c T jsimd_h2v1_upsample_neon
00000000000e0560 0000000000000078 T jsimd_h2v2_upsample_neon
00000000000e05e0 00000000000001c8 T jsimd_fdct_ifast_neon
00000000000e07b0 0000000000000110 T jsimd_idct_2x2_neon
00000000000e08c0 00000000000003bc T jsimd_idct_4x4_neon
00000000000e0c80 0000000000000068 T jsimd_convsamp_neon
00000000000e0cf0 00000000000001e4 T jsimd_quantize_neon
00000000000e0ee0 0000000000000578 T jsimd_idct_ifast_neon
00000000000e1460 t jsimd_idct_islow_neon
00000000000e1b3c T jsimd_ycc_extrgb_convert_neon
00000000000e1da4 T jsimd_ycc_extbgr_convert_neon
00000000000e200c T jsimd_ycc_extrgbx_convert_neon
00000000000e2274 T jsimd_ycc_extbgrx_convert_neon
00000000000e24dc T jsimd_ycc_extxbgr_convert_neon
00000000000e2744 T jsimd_ycc_extxrgb_convert_neon
00000000000e29ac t jsimd_ycc_rgb565_convert_neon
00000000000e2c20 T jsimd_ycc_extrgb_convert_neon_slowst3
00000000000e2f40 T jsimd_ycc_extbgr_convert_neon_slowst3
00000000000e3260 T jsimd_extrgb_ycc_convert_neon
00000000000e3524 T jsimd_extbgr_ycc_convert_neon
00000000000e37e8 T jsimd_extrgbx_ycc_convert_neon
00000000000e3aac T jsimd_extbgrx_ycc_convert_neon
00000000000e3d70 T jsimd_extxbgr_ycc_convert_neon
00000000000e4034 T jsimd_extxrgb_ycc_convert_neon
00000000000e42f8 T jsimd_extrgb_ycc_convert_neon_slowld3
00000000000e4674 T jsimd_extbgr_ycc_convert_neon_slowld3
00000000000e49f0 t jsimd_fdct_islow_neon
00000000000e4d74 t jsimd_huff_encode_one_block_neon
00000000000e554c t jsimd_huff_encode_one_block_neon_slowtbl
00000000000e5ee0 0000000000000488 t ParseHeadersInternal
00000000000e6370 0000000000000070 t WebPParseHeaders
00000000000e63e0 00000000000001e8 t DecodeInto
00000000000e65d0 00000000000000b0 T WebPDecodeRGBInto
00000000000e6680 00000000000000b0 T WebPDecodeRGBAInto
00000000000e6730 0000000000000040 T WebPGetFeaturesInternal
00000000000e6770 00000000000001a0 t WebPIoInitFromOptions
00000000000e6910 00000000000000ec t WebPRescalerInit
00000000000e6a00 0000000000000060 t WebPRescalerGetScaledDimensions
00000000000e6a60 0000000000000020 t WebPRescaleNeededLines
00000000000e6a80 0000000000000104 t WebPRescalerImport
00000000000e6b90 000000000000006c t WebPRescalerExport
00000000000e6c00 0000000000000160 t CheckDecBuffer
00000000000e6d60 00000000000000c0 t WebPFlipBuffer
00000000000e6e20 0000000000000250 t WebPAllocateDecBuffer
00000000000e7070 000000000000003c T WebPInitDecBufferInternal
00000000000e70b0 000000000000004c T WebPFreeDecBuffer
00000000000e7100 0000000000000090 t Dither8x8
00000000000e7190 00000000000005b4 t ReconstructRow
00000000000e7750 00000000000006f8 t FinishRow
00000000000e7e50 0000000000000100 t VP8InitDithering
00000000000e7f50 000000000000015c t VP8ProcessRow
00000000000e80b0 0000000000000248 t VP8EnterCritical
00000000000e8300 0000000000000068 t VP8ExitCritical
00000000000e8370 0000000000000024 t VP8GetThreadMethod
00000000000e83a0 00000000000003b0 t VP8InitFrame
00000000000e8750 0000000000000084 t GetAlphaSourceRow
00000000000e87e0 00000000000000f8 t EmitAlphaRGB
00000000000e88e0 00000000000000f8 t EmitAlphaRGBA4444
00000000000e89e0 0000000000000078 t CustomPut
00000000000e8a60 0000000000000028 t CustomTeardown
00000000000e8a90 0000000000000160 t EmitYUV
00000000000e8bf0 00000000000001fc t EmitFancyRGB
00000000000e8df0 00000000000000e8 t EmitAlphaYUV
00000000000e8ee0 000000000000006c t EmitSampledRGB
00000000000e8f50 0000000000000594 t CustomSetup
00000000000e94f0 0000000000000178 t ExportAlpha
00000000000e9670 0000000000000164 t ExportAlphaRGBA4444
00000000000e97e0 00000000000000b0 t EmitRescaledAlphaRGB
00000000000e9890 00000000000001e0 t EmitRescaledRGB
00000000000e9a70 0000000000000174 t EmitRescaledAlphaYUV
00000000000e9bf0 0000000000000170 t EmitRescaledYUV
00000000000e9d60 0000000000000024 t WebPInitCustomIo
00000000000e9d90 0000000000000058 t VP8Clear.part.0
00000000000e9df0 000000000000072c t GetLargeValue
00000000000ea520 000000000000046c t GetCoeffsAlt
00000000000ea990 0000000000000398 t GetCoeffsFast
00000000000ead30 0000000000000038 t VP8InitIoInternal
00000000000ead70 00000000000000b0 t VP8New
00000000000eae20 000000000000002c t VP8Delete
00000000000eae50 0000000000000018 t VP8SetError
00000000000eae70 0000000000000040 T VP8CheckSignature
00000000000eaeb0 000000000000063c t VP8GetHeaders.part.0.constprop.0
00000000000eb4f0 00000000000000bc T VP8GetInfo
00000000000eb5b0 0000000000000038 t VP8GetHeaders
00000000000eb5f0 0000000000000480 t VP8DecodeMB
00000000000eba70 0000000000000018 t VP8InitScanline
00000000000eba90 0000000000000234 t VP8Decode
00000000000ebcd0 00000000000000d8 t ConvertToYUVA
00000000000ebdb0 00000000000000bc t ApplyInverseTransforms
00000000000ebe70 0000000000000400 t ProcessRows
00000000000ec270 000000000000014c t ExtractPalettedAlphaRows
00000000000ec3c0 0000000000000098 t ReadImageInfo.part.0
00000000000ec460 0000000000000164 t ExtractAlphaRows
00000000000ec5d0 00000000000000b8 t VP8LClear.part.0
00000000000ec690 0000000000000b04 t DecodeImageData
00000000000ed1a0 0000000000000490 t DecodeImageStream
00000000000ed630 0000000000000940 t ReadHuffmanCodes
00000000000edf70 0000000000000034 T VP8LCheckSignature
00000000000edfb0 00000000000000c8 T VP8LGetInfo
00000000000ee080 000000000000003c t VP8LNew
00000000000ee0c0 000000000000002c t VP8LDelete
00000000000ee0f0 00000000000001b8 t VP8LDecodeAlphaHeader
00000000000ee2b0 0000000000000608 t VP8LDecodeAlphaImageStream
00000000000ee8c0 00000000000000e4 t VP8LDecodeHeader
00000000000ee9b0 00000000000001fc t VP8LDecodeImage
00000000000eebb0 00000000000000ac T WebPMultARGBRow_C
00000000000eec60 000000000000006c T WebPMultRow_C
00000000000eecd0 0000000000000030 t HasAlpha8b_C
00000000000eed00 0000000000000040 t HasAlpha32b_C
00000000000eed40 000000000000004c t PackRGB_C
00000000000eed90 00000000000000b8 t ApplyAlphaMultiply_16b_C
00000000000eee50 0000000000000080 t WebPMultARGBRows
00000000000eeed0 0000000000000094 t WebPMultRows
00000000000eef70 00000000000000c8 t WebPInitAlphaProcessing
00000000000ef040 000000000000000c t armCPUInfo
00000000000ef050 000000000000004c t TransformUV_C
00000000000ef0a0 0000000000000094 t TransformDCUV_C
00000000000ef140 000000000000007c t HE4_C
00000000000ef1c0 00000000000000f4 t VR4_C
00000000000ef2c0 00000000000000f4 t VL4_C
00000000000ef3c0 00000000000000a4 t HU4_C
00000000000ef470 00000000000000f4 t HD4_C
00000000000ef570 000000000000005c t DitherCombine8x8_C
00000000000ef5d0 00000000000000dc t VP8DspInit
00000000000ef6b0 0000000000000004 t VP8InitClipTables
00000000000ef6c0 00000000000000a8 t GradientUnfilter_C
00000000000ef770 0000000000000088 t VP8FiltersInit
00000000000ef800 0000000000000008 t Predictor0_C
00000000000ef810 0000000000000004 t Predictor1_C
00000000000ef820 0000000000000008 t Predictor2_C
00000000000ef830 0000000000000008 t Predictor3_C
00000000000ef840 0000000000000008 t Predictor4_C
00000000000ef850 0000000000000030 t Predictor5_C
00000000000ef880 000000000000001c t Predictor6_C
00000000000ef8a0 000000000000001c t Predictor7_C
00000000000ef8c0 000000000000001c t Predictor8_C
00000000000ef8e0 000000000000001c t Predictor9_C
00000000000ef900 0000000000000048 t Predictor10_C
00000000000ef950 0000000000000098 t Predictor11_C
00000000000ef9f0 0000000000000098 t Predictor12_C
00000000000efa90 00000000000000b8 t Predictor13_C
00000000000efb50 0000000000000038 t PredictorAdd0_C
00000000000efb90 000000000000004c t PredictorAdd1_C
00000000000efbe0 0000000000000050 t PredictorAdd2_C
00000000000efc30 0000000000000050 t PredictorAdd3_C
00000000000efc80 0000000000000050 t PredictorAdd4_C
00000000000efcd0 0000000000000070 t PredictorAdd6_C
00000000000efd40 0000000000000068 t PredictorAdd7_C
00000000000efdb0 0000000000000068 t PredictorAdd8_C
00000000000efe20 0000000000000068 t PredictorAdd9_C
00000000000efe90 000000000000005c t MapARGB_C
00000000000efef0 0000000000000054 t MapAlpha_C
00000000000eff50 0000000000000040 T VP8LConvertBGRAToRGBA4444_C
00000000000eff90 0000000000000048 T VP8LConvertBGRAToRGB565_C
00000000000effe0 00000000000000c0 t ColorIndexInverseTransform_C.isra.0
00000000000f00a0 00000000000000a0 t PredictorAdd10_C
00000000000f0140 0000000000000088 t PredictorAdd5_C
00000000000f01d0 0000000000000100 t PredictorAdd11_C
00000000000f02d0 00000000000000f0 t PredictorAdd12_C
00000000000f03c0 000000000000010c t PredictorAdd13_C
00000000000f04d0 0000000000000044 t VP8LAddGreenToBlueAndRed_C
00000000000f0520 000000000000006c t VP8LTransformColorInverse_C
00000000000f0590 00000000000000c0 t VP8LColorIndexInverseTransformAlpha
00000000000f0650 00000000000004ec t VP8LInverseTransform
00000000000f0b40 0000000000000038 t VP8LConvertBGRAToRGB_C
00000000000f0b80 0000000000000040 t VP8LConvertBGRAToRGBA_C
00000000000f0bc0 0000000000000038 t VP8LConvertBGRAToBGR_C
00000000000f0c00 0000000000000240 t VP8LConvertFromBGRA
00000000000f0e40 0000000000000238 t VP8LDspInit
00000000000f1080 00000000000000c0 T WebPRescalerImportRowExpand_C
00000000000f1140 00000000000000cc T WebPRescalerImportRowShrink_C
00000000000f1210 0000000000000028 t WebPRescalerImportRow
00000000000f1240 00000000000000d8 t WebPRescalerExportRow
00000000000f1320 0000000000000088 t WebPRescalerDspInit
00000000000f13b0 000000000000013c T WebPYuv444ToRgb565_C
00000000000f14f0 00000000000000d8 T WebPYuv444ToBgr_C
00000000000f15d0 00000000000000d8 T WebPYuv444ToRgb_C
00000000000f16b0 00000000000000ec T WebPYuv444ToBgra_C
00000000000f17a0 00000000000000ec T WebPYuv444ToRgba_C
00000000000f1890 00000000000000ec T WebPYuv444ToArgb_C
00000000000f1980 0000000000000150 T WebPYuv444ToRgba4444_C
00000000000f1ad0 00000000000000b4 t WebPInitYUV444Converters
00000000000f1b90 0000000000000068 t WebPInitUpsamplers
00000000000f1c00 0000000000000050 t ConvertARGBToY_C
00000000000f1c50 0000000000000054 t ConvertRGB24ToY_C
00000000000f1cb0 0000000000000050 t ConvertBGR24ToY_C
00000000000f1d00 00000000000000a8 T WebPConvertRGBA32ToUV_C
00000000000f1db0 0000000000000198 t WebPConvertARGBToUV_C
00000000000f1f50 000000000000030c t YuvToRgb565Row
00000000000f2260 0000000000000300 t YuvToRgba4444Row
00000000000f2560 0000000000000298 t YuvToBgraRow
00000000000f2800 000000000000029c t YuvToArgbRow
00000000000f2aa0 00000000000002a0 t YuvToBgrRow
00000000000f2d40 00000000000002a0 t YuvToRgbRow
00000000000f2fe0 000000000000029c t YuvToRgbaRow
00000000000f3280 00000000000000dc t WebPSamplerProcessPlane
00000000000f3360 00000000000000b4 t WebPInitSamplers
00000000000f3420 00000000000000bc t WebPInitConvertARGBToYUV
00000000000f34e0 0000000000000074 t ExtractGreen_NEON
00000000000f3560 00000000000000d8 t ExtractAlpha_NEON
00000000000f3640 00000000000000e8 t DispatchAlpha_NEON
00000000000f3730 00000000000000b0 t DispatchAlphaToGreen_NEON
00000000000f37e0 000000000000019c t ApplyAlphaMultiply_NEON
00000000000f3980 0000000000000068 t WebPInitAlphaProcessingNEON
00000000000f39f0 0000000000000050 t DC4_NEON
00000000000f3a40 0000000000000018 t DC8uvNoTopLeft_NEON
00000000000f3a60 0000000000000020 t VE8uv_NEON
00000000000f3a80 0000000000000020 t HE8uv_NEON
00000000000f3aa0 0000000000000020 t VE16_NEON
00000000000f3ac0 0000000000000020 t HE16_NEON
00000000000f3ae0 0000000000000018 t DC16NoTopLeft_NEON
00000000000f3b00 000000000000009c t TM16_NEON
00000000000f3ba0 0000000000000028 t VE4_NEON
00000000000f3bd0 0000000000000040 t LD4_NEON
00000000000f3c10 0000000000000070 t RD4_NEON
00000000000f3c80 00000000000000f8 t Load4x8_NEON
00000000000f3d80 00000000000000ac t DoFilter4_NEON
00000000000f3e30 000000000000010c t DoFilter6_NEON
00000000000f3f40 00000000000001ac t VFilter8_NEON
00000000000f40f0 0000000000000134 t TransformWHT_NEON
00000000000f4230 0000000000000098 t SimpleVFilter16_NEON
00000000000f42d0 000000000000002c t SimpleVFilter16i_NEON
00000000000f4300 0000000000000078 t TM8uv_NEON
00000000000f4380 0000000000000064 t TM4_NEON
00000000000f43f0 0000000000000078 t DC8uv_NEON
00000000000f4470 00000000000000e0 t DC16TopLeft_NEON
00000000000f4550 0000000000000038 t DC8uvNoLeft_NEON
00000000000f4590 0000000000000040 t DC16NoLeft_NEON
00000000000f45d0 0000000000000060 t DC8uvNoTop_NEON
00000000000f4630 000000000000005c t TransformDC_NEON
00000000000f4690 0000000000000144 t Store2x16_NEON
00000000000f47e0 00000000000000e4 t TransformAC3_NEON
00000000000f48d0 000000000000011c t VFilter16i_NEON
00000000000f49f0 000000000000028c t TransformTwo_NEON
00000000000f4c80 0000000000000490 t HFilter16i_NEON
00000000000f5110 0000000000000550 t HFilter8_NEON
00000000000f5660 00000000000000b8 t DC16NoTop_NEON
00000000000f5720 0000000000000100 t VFilter16_NEON
00000000000f5820 000000000000021c t SimpleHFilter16_NEON
00000000000f5a40 000000000000004c t SimpleHFilter16i_NEON
00000000000f5a90 0000000000000410 t HFilter8i_NEON
00000000000f5ea0 0000000000000180 t VFilter8i_NEON
00000000000f6020 00000000000001a4 t HFilter16_NEON
00000000000f61d0 000000000000025c t VP8DspInitNEON
00000000000f6430 0000000000000080 t PredictLine_NEON
00000000000f64b0 00000000000000d0 t HorizontalUnfilter_NEON
00000000000f6580 0000000000000094 t VerticalUnfilter_NEON
00000000000f6620 000000000000016c t GradientFilter_NEON
00000000000f6790 0000000000000074 t VerticalFilter_NEON
00000000000f6810 0000000000000098 t HorizontalFilter_NEON
00000000000f68b0 0000000000000048 t VP8FiltersInitNEON
00000000000f6900 0000000000000108 t TransformColorInverse_NEON
00000000000f6a10 0000000000000068 t AddGreenToBlueAndRed_NEON
00000000000f6a80 000000000000005c t ConvertBGRAToRGB_NEON
00000000000f6ae0 000000000000005c t ConvertBGRAToBGR_NEON
00000000000f6b40 0000000000000050 t ConvertBGRAToRGBA_NEON
00000000000f6b90 000000000000006c t PredictorAdd0_NEON
00000000000f6c00 0000000000000070 t PredictorAdd2_NEON
00000000000f6c70 0000000000000070 t PredictorAdd3_NEON
00000000000f6ce0 0000000000000070 t PredictorAdd4_NEON
00000000000f6d50 0000000000000078 t PredictorAdd8_NEON
00000000000f6dd0 0000000000000078 t PredictorAdd9_NEON
00000000000f6e50 0000000000000084 t PredictorAdd1_NEON
00000000000f6ee0 00000000000000d4 t PredictorAdd5_NEON
00000000000f6fc0 00000000000000c0 t PredictorAdd6_NEON
00000000000f7080 00000000000000c0 t PredictorAdd7_NEON
00000000000f7140 00000000000000e0 t PredictorAdd10_NEON
00000000000f7220 0000000000000148 t PredictorAdd13_NEON
00000000000f7370 00000000000000f0 t PredictorAdd12_NEON
00000000000f7460 0000000000000118 t PredictorAdd11_NEON
00000000000f7580 0000000000000020 t Predictor5_NEON
00000000000f75a0 0000000000000018 t Predictor6_NEON
00000000000f75c0 0000000000000014 t Predictor7_NEON
00000000000f75e0 0000000000000034 t Predictor13_NEON
00000000000f7620 0000000000000148 t VP8LDspInitNEON
00000000000f7770 000000000000019c t RescalerExportRowShrink_NEON
00000000000f7910 00000000000001c8 t RescalerExportRowExpand_NEON
00000000000f7ae0 000000000000002c t WebPRescalerDspInitNEON
00000000000f7b10 0000000000000064 t Upsample16Pixels_NEON
00000000000f7b80 000000000000087c t UpsampleRgba4444LinePair_NEON
00000000000f8400 0000000000000878 t UpsampleRgb565LinePair_NEON
00000000000f8c80 000000000000078c t UpsampleBgraLinePair_NEON
00000000000f9410 000000000000075c t UpsampleBgrLinePair_NEON
00000000000f9b70 00000000000007a8 t UpsampleArgbLinePair_NEON
00000000000fa320 0000000000000754 t UpsampleRgbLinePair_NEON
00000000000faa80 0000000000000784 t UpsampleRgbaLinePair_NEON
00000000000fb210 000000000000005c t WebPInitUpsamplersNEON
00000000000fb270 0000000000000158 t ConvertARGBToUV_NEON
00000000000fb3d0 000000000000005c t ConvertRGBToY_NEON
00000000000fb430 00000000000000bc t ConvertARGBToY_NEON
00000000000fb4f0 00000000000000c4 t ConvertRGB24ToY_NEON
00000000000fb5c0 00000000000000c0 t ConvertBGR24ToY_NEON
00000000000fb680 00000000000000a8 t SharpYUVUpdateRGB_NEON
00000000000fb730 0000000000000184 t SharpYUVFilterRow_NEON
00000000000fb8c0 00000000000000fc t SharpYUVUpdateY_NEON
00000000000fb9c0 0000000000000198 t ConvertRGBA32ToUV_NEON
00000000000fbb60 0000000000000068 t WebPInitConvertARGBToYUVNEON
00000000000fbbd0 0000000000000040 t WebPInitSharpYUVNEON
00000000000fbc10 0000000000000074 t ShiftBytes
00000000000fbc90 0000000000000088 t VP8InitBitReader
00000000000fbd20 0000000000000068 t VP8LoadFinalBytes
00000000000fbd90 00000000000000dc t VP8GetValue
00000000000fbe70 0000000000000030 t VP8GetSignedValue
00000000000fbea0 0000000000000050 t VP8LInitBitReader
00000000000fbef0 0000000000000048 t VP8LDoFillBitWindow
00000000000fbf40 0000000000000064 t VP8LReadBits
00000000000fbfb0 0000000000000068 t VP8LColorCacheInit
00000000000fc020 0000000000000030 t VP8LColorCacheClear
00000000000fc050 000000000000001c t VP8LColorCacheCopy
00000000000fc070 0000000000000444 t BuildHuffmanTable
00000000000fc4c0 000000000000000c t VP8LHtreeGroupsNew
00000000000fc4d0 000000000000000c t VP8LHtreeGroupsFree
00000000000fc4e0 00000000000000c4 t VP8LBuildHuffmanTable
00000000000fc5b0 000000000000007c t VP8InitRandom
00000000000fc630 0000000000000044 t Execute
00000000000fc680 0000000000000010 t Init
00000000000fc690 0000000000000074 t Sync
00000000000fc710 000000000000017c t Reset
00000000000fc890 0000000000000080 t Launch
00000000000fc910 0000000000000098 t End
00000000000fc9b0 000000000000000c T WebPGetWorkerInterface
00000000000fc9c0 00000000000000bc t ThreadLoop
00000000000fca80 0000000000000024 T WebPSafeMalloc
00000000000fcab0 0000000000000020 T WebPSafeCalloc
00000000000fcad0 0000000000000004 T WebPSafeFree
00000000000fcae0 000000000000004c t WebPDeallocateAlphaMemory
00000000000fcb30 00000000000003f8 t VP8DecompressAlphaRows
00000000000fcf30 0000000000000278 t VP8ParseQuant
00000000000fd1b0 0000000000000010 t VP8ResetProba
00000000000fd1c0 0000000000000ef8 t VP8ParseIntraModeRow
00000000000fe0c0 0000000000000260 t VP8ParseProba
00000000000fe320 00000000000005c8 t WebPDequantizeLevels
00000000000fe8f0 0000000000000064 t RWread
00000000000fe960 00000000000001dc t TTF_initFontMetrics
00000000000feb40 0000000000000b88 t Load_Glyph
00000000000ff6d0 0000000000000084 t UCS2_to_UTF8_len
00000000000ff760 00000000000000c8 t UCS2_to_UTF8
00000000000ff830 0000000000000168 t AllocateAlignedPixels
00000000000ff9a0 00000000000000ac t Create_Surface_Solid
00000000000ffa50 0000000000000184 t Create_Surface_Shaded
00000000000ffbe0 0000000000000098 t Create_Surface_Blended
00000000000ffc80 00000000000000ac t Create_Surface_LCD.isra.0
00000000000ffd30 00000000000000b4 t clip_glyph.isra.0
00000000000ffdf0 0000000000000160 t Draw_Line.isra.0
00000000000fff50 000000000000006c t Flush_Cache
00000000000fffc0 00000000000006e0 t TTF_Size_Internal
00000000001006a0 0000000000000698 t Render_Line_64_Blended
0000000000100d40 00000000000006a4 t Render_Line_64_Blended_SP
00000000001013f0 00000000000033fc t Render_Line
00000000001047f0 000000000000039c t TTF_Render_Internal
0000000000104b90 000000000000005c T TTF_Init
0000000000104bf0 00000000000000e0 T TTF_SetFontSizeDPI
0000000000104cd0 000000000000007c T TTF_CloseFont
0000000000104d50 000000000000001c T TTF_SetFontKerning
0000000000104d70 00000000000002cc T TTF_OpenFontIndexDPIRW
0000000000105040 0000000000000064 T TTF_OpenFontIndexDPI
00000000001050b0 000000000000000c T TTF_OpenFontIndex
00000000001050c0 0000000000000008 T TTF_OpenFont
00000000001050d0 0000000000000014 T TTF_RenderText_Solid
00000000001050f0 0000000000000044 T TTF_Quit
0000000000105140 000000000000000c T SDL_ExitProcess
0000000000105150 0000000000000274 T SDL_QuitSubSystem
00000000001053d0 0000000000000218 T SDL_InitSubSystem
00000000001055f0 0000000000000004 T SDL_Init
0000000000105600 0000000000000090 T SDL_WasInit
0000000000105690 0000000000000058 T SDL_Quit
00000000001056f0 000000000000000c T SDL_GetPlatform
0000000000105700 0000000000000080 t debug_print
0000000000105780 00000000000003a4 t SDL_PromptAssertion
0000000000105b30 000000000000016c T SDL_ReportAssertion
0000000000105ca0 000000000000002c T SDL_ResetAssertionReport
0000000000105cd0 00000000000000e0 T SDL_AssertionsQuit
0000000000105db0 0000000000000154 T SDL_SetError
0000000000105f10 0000000000000030 T SDL_GetError
0000000000105f40 0000000000000018 T SDL_ClearError
0000000000105f60 0000000000000068 T SDL_Error
0000000000105fd0 0000000000000170 T SDL_SetHintWithPriority
0000000000106140 0000000000000008 T SDL_SetHint
0000000000106150 0000000000000080 T SDL_GetHint
00000000001061d0 0000000000000048 T SDL_GetStringBoolean
0000000000106220 0000000000000024 T SDL_GetHintBoolean
0000000000106250 00000000000000b0 T SDL_DelHintCallback
0000000000106300 0000000000000180 T SDL_AddHintCallback
0000000000106480 0000000000000070 T SDL_ClearHints
00000000001064f0 0000000000000040 t SDL_LogOutput
0000000000106530 0000000000000038 T SDL_LogInit
0000000000106570 0000000000000070 T SDL_LogGetPriority
00000000001065e0 0000000000000068 T SDL_LogResetPriorities
0000000000106650 0000000000000030 T SDL_LogQuit
0000000000106680 00000000000001e8 T SDL_LogMessageV
0000000000106870 0000000000000080 T SDL_Log
00000000001068f0 0000000000000078 T SDL_LogDebug
0000000000106970 0000000000000078 T SDL_LogInfo
00000000001069f0 0000000000000078 T SDL_LogWarn
0000000000106a70 0000000000000020 T SDL_AtomicTryLock
0000000000106a90 000000000000006c T SDL_AtomicLock
0000000000106b00 0000000000000008 T SDL_AtomicUnlock
0000000000106b10 0000000000000004 t SDL_AudioThreadInit_Default
0000000000106b20 0000000000000008 t SDL_AudioGetDeviceBuf_Default
0000000000106b30 0000000000000008 t SDL_AudioCaptureFromDevice_Default
0000000000106b40 0000000000000004 t SDL_AudioDeinitialize_Default
0000000000106b50 0000000000000008 t SDL_AudioOpenDevice_Default
0000000000106b60 00000000000001a0 t add_audio_device
0000000000106d00 000000000000000c t SDL_BufferQueueFillCallback
0000000000106d10 0000000000000060 t SDL_BufferQueueDrainCallback
0000000000106d70 0000000000000044 t SDL_AudioUnlockDevice_Default
0000000000106dc0 0000000000000044 t SDL_AudioLockDevice_Default
0000000000106e10 0000000000000280 t SDL_RunAudio
0000000000107090 00000000000000e4 t close_audio_device
0000000000107180 0000000000000004 t SDL_AudioCloseDevice_Default
0000000000107190 0000000000000004 t SDL_AudioFreeDeviceHandle_Default
00000000001071a0 0000000000000004 t SDL_AudioThreadDeinit_Default
00000000001071b0 0000000000000004 t SDL_AudioWaitDevice_Default
00000000001071c0 0000000000000004 t SDL_AudioPlayDevice_Default
00000000001071d0 0000000000000004 t SDL_AudioFlushCapture_Default
00000000001071e0 00000000000000bc T SDL_AddAudioDevice
00000000001072a0 0000000000000050 t SDL_AudioDetectDevices_Default
00000000001072f0 00000000000000d4 T SDL_OpenedAudioDeviceDisconnected
00000000001073d0 0000000000000244 t SDL_CaptureAudio
0000000000107620 000000000000000c T SDL_GetCurrentAudioDriver
0000000000107630 0000000000000094 T SDL_PauseAudioDevice
00000000001076d0 0000000000000038 T SDL_LockAudioDevice
0000000000107710 0000000000000038 T SDL_UnlockAudioDevice
0000000000107750 0000000000000040 T SDL_CloseAudioDevice
0000000000107790 0000000000000160 T SDL_AudioQuit
00000000001078f0 0000000000000390 T SDL_AudioInit
0000000000107c80 000000000000004c T SDL_NextAudioFormat
0000000000107cd0 00000000000000f0 T SDL_FirstAudioFormat
0000000000107dc0 0000000000000028 T SDL_SilenceValueForFormat
0000000000107df0 0000000000000044 T SDL_CalculateAudioSpec
0000000000107e40 0000000000000ce0 t open_audio_device
0000000000108b20 0000000000000008 T SDL_OpenAudioDevice
0000000000108b30 000000000000007c t SDL_ConvertMonoToStereo
0000000000108bb0 0000000000000088 t SDL_ConvertMonoTo21
0000000000108c40 0000000000000080 t SDL_ConvertMonoToQuad
0000000000108cc0 0000000000000084 t SDL_ConvertMonoTo41
0000000000108d50 0000000000000090 t SDL_ConvertMonoTo51
0000000000108de0 0000000000000094 t SDL_ConvertMonoTo61
0000000000108e80 0000000000000088 t SDL_ConvertMonoTo71
0000000000108f10 0000000000000078 t SDL_ConvertStereoToMono
0000000000108f90 000000000000009c t SDL_ConvertStereoTo21
0000000000109030 0000000000000094 t SDL_ConvertStereoToQuad
00000000001090d0 0000000000000098 t SDL_ConvertStereoTo41
0000000000109170 00000000000000a4 t SDL_ConvertStereoTo51
0000000000109220 00000000000000a8 t SDL_ConvertStereoTo61
00000000001092d0 000000000000009c t SDL_ConvertStereoTo71
0000000000109370 00000000000000a4 t SDL_Convert21ToMono
0000000000109420 00000000000000c4 t SDL_Convert21ToStereo
00000000001094f0 00000000000000e0 t SDL_Convert21ToQuad
00000000001095d0 00000000000000c8 t SDL_Convert21To41
00000000001096a0 00000000000000d0 t SDL_Convert21To51
0000000000109770 00000000000000d4 t SDL_Convert21To61
0000000000109850 00000000000000c8 t SDL_Convert21To71
0000000000109920 000000000000008c t SDL_ConvertQuadToMono
00000000001099b0 00000000000000c4 t SDL_ConvertQuadToStereo
0000000000109a80 00000000000000c8 t SDL_ConvertQuadTo21
0000000000109b50 00000000000000b4 t SDL_ConvertQuadTo41
0000000000109c10 00000000000000c0 t SDL_ConvertQuadTo51
0000000000109cd0 00000000000000f4 t SDL_ConvertQuadTo61
0000000000109dd0 00000000000000b8 t SDL_ConvertQuadTo71
0000000000109e90 00000000000000a8 t SDL_Convert41ToMono
0000000000109f40 00000000000000f0 t SDL_Convert41ToStereo
000000000010a030 00000000000000e0 t SDL_Convert41To21
000000000010a110 00000000000000dc t SDL_Convert41ToQuad
000000000010a1f0 00000000000000dc t SDL_Convert41To51
000000000010a2d0 0000000000000110 t SDL_Convert41To61
000000000010a3e0 00000000000000d4 t SDL_Convert41To71
000000000010a4c0 00000000000000ac t SDL_Convert51ToMono
000000000010a570 00000000000000f8 t SDL_Convert51ToStereo
000000000010a670 00000000000000f8 t SDL_Convert51To21
000000000010a770 00000000000000ec t SDL_Convert51ToQuad
000000000010a860 00000000000000e4 t SDL_Convert51To41
000000000010a950 0000000000000118 t SDL_Convert51To61
000000000010aa70 00000000000000d8 t SDL_Convert51To71
000000000010ab50 00000000000000d4 t SDL_Convert61ToMono
000000000010ac30 000000000000011c t SDL_Convert61ToStereo
000000000010ad50 0000000000000114 t SDL_Convert61To21
000000000010ae70 0000000000000120 t SDL_Convert61ToQuad
000000000010af90 0000000000000118 t SDL_Convert61To41
000000000010b0b0 0000000000000120 t SDL_Convert61To51
000000000010b1d0 0000000000000108 t SDL_Convert61To71
000000000010b2e0 00000000000000b8 t SDL_Convert71ToMono
000000000010b3a0 0000000000000118 t SDL_Convert71ToStereo
000000000010b4c0 0000000000000110 t SDL_Convert71To21
000000000010b5d0 000000000000010c t SDL_Convert71ToQuad
000000000010b6e0 00000000000000fc t SDL_Convert71To41
000000000010b7e0 00000000000000fc t SDL_Convert71To51
000000000010b8e0 00000000000000f8 t SDL_Convert71To61
000000000010b9e0 0000000000000014 t SDL_ResetAudioStreamResampler
000000000010ba00 000000000000022c t SDL_Convert_Byteswap
000000000010bc30 0000000000000008 t SDL_CleanupAudioStreamResampler
000000000010bc40 0000000000000634 t SDL_ResampleCVT_c8
000000000010c280 0000000000000620 t SDL_ResampleCVT_c6
000000000010c8a0 0000000000000638 t SDL_ResampleCVT_c4
000000000010cee0 0000000000000638 t SDL_ResampleCVT_c2
000000000010d520 0000000000000588 t SDL_ResampleCVT_c1
000000000010dab0 0000000000000698 t SDL_ResampleAudioStream
000000000010e150 000000000000004c T SDL_ConvertAudio
000000000010e1a0 0000000000000298 t SDL_AudioStreamPutInternal
000000000010e440 00000000000007d8 T SDL_BuildAudioCVT
000000000010ec20 00000000000003c0 T SDL_AudioStreamPut
000000000010efe0 0000000000000114 T SDL_AudioStreamFlush
000000000010f100 0000000000000078 T SDL_AudioStreamGet
000000000010f180 0000000000000024 T SDL_AudioStreamAvailable
000000000010f1b0 0000000000000060 T SDL_AudioStreamClear
000000000010f210 0000000000000054 T SDL_FreeAudioStream
000000000010f270 00000000000002a0 T SDL_NewAudioStream
000000000010f510 000000000000024c t SDL_Convert_F32_to_S32_NEON
000000000010f760 00000000000001ac t SDL_Convert_F32_to_U16_NEON
000000000010f910 0000000000000194 t SDL_Convert_F32_to_S16_NEON
000000000010fab0 00000000000001e0 t SDL_Convert_F32_to_U8_NEON
000000000010fc90 00000000000001c0 t SDL_Convert_F32_to_S8_NEON
000000000010fe50 00000000000001ac t SDL_Convert_S32_to_F32_NEON
0000000000110000 0000000000000160 t SDL_Convert_U16_to_F32_NEON
0000000000110160 0000000000000148 t SDL_Convert_S16_to_F32_NEON
00000000001102b0 000000000000017c t SDL_Convert_U8_to_F32_NEON
0000000000110430 000000000000015c t SDL_Convert_S8_to_F32_NEON
0000000000110590 0000000000000108 T SDL_ChooseAudioConverters
00000000001106a0 00000000000019ac T SDL_MixAudioFormat
0000000000112050 0000000000000128 t MS_ADPCM_CalculateSampleFrames
0000000000112180 0000000000000150 t IMA_ADPCM_CalculateSampleFrames
00000000001122d0 0000000000002784 T SDL_LoadWAV_RW
0000000000114a60 0000000000000064 T SDL_HasAltiVec
0000000000114ad0 0000000000000064 T SDL_HasMMX
0000000000114b40 0000000000000064 T SDL_Has3DNow
0000000000114bb0 0000000000000064 T SDL_HasSSE
0000000000114c20 0000000000000064 T SDL_HasSSE2
0000000000114c90 0000000000000064 T SDL_HasARMSIMD
0000000000114d00 0000000000000064 T SDL_HasNEON
0000000000114d70 000000000000006c T SDL_SIMDGetAlignment
0000000000114de0 0000000000000074 T SDL_SIMDAlloc
0000000000114e60 0000000000000010 T SDL_SIMDFree
0000000000114e70 0000000000000074 t SDL_EventLoggingChanged
0000000000114ef0 0000000000001230 t SDL_LogEvent
0000000000116120 0000000000000160 t SDL_AddEvent
0000000000116280 0000000000000038 t SDL_AutoUpdateSensorsChanged
00000000001162c0 0000000000000048 t SDL_AutoUpdateJoysticksChanged
0000000000116310 00000000000003c4 t SDL_PeepEventsInternal.constprop.0
00000000001166e0 0000000000000194 T SDL_StopEventLoop
0000000000116880 0000000000000404 T SDL_PeepEvents
0000000000116c90 0000000000000120 T SDL_FlushEvents
0000000000116db0 0000000000000008 T SDL_FlushEvent
0000000000116dc0 00000000000001b8 T SDL_PushEvent
0000000000116f80 0000000000000088 T SDL_AddEventWatch
0000000000117010 00000000000000d8 T SDL_DelEventWatch
00000000001170f0 0000000000000118 T SDL_FilterEvents
0000000000117210 0000000000000190 T SDL_EventState
00000000001173a0 00000000000000a0 T SDL_StartEventLoop
0000000000117440 000000000000002c t SDL_PollSentinelChanged
0000000000117470 00000000000000f8 t SDL_PumpEventsInternal.constprop.0
0000000000117570 00000000000004e4 T SDL_WaitEventTimeout
0000000000117a60 0000000000000008 T SDL_PollEvent
0000000000117a70 0000000000000054 T SDL_SendAppEvent
0000000000117ad0 0000000000000008 T SDL_SendKeymapChangedEvent
0000000000117ae0 00000000000000a8 T SDL_EventsInit
0000000000117b90 0000000000000074 T SDL_EventsQuit
0000000000117c10 0000000000000104 t dollarDifference
0000000000117d20 00000000000000bc t SDL_AddDollarGesture_one
0000000000117de0 0000000000000364 t dollarNormalize.isra.0
0000000000118150 0000000000000028 T SDL_GestureQuit
0000000000118180 000000000000008c T SDL_GestureAddTouch
0000000000118210 00000000000000e4 T SDL_GestureDelTouch
0000000000118300 00000000000006a0 T SDL_GestureProcessEvent
00000000001189a0 00000000000001dc T SDL_SetKeymap
0000000000118b80 000000000000002c T SDL_KeyboardInit
0000000000118bb0 000000000000000c T SDL_GetKeyboardFocus
0000000000118bc0 00000000000002b8 T SDL_SendKeyboardKey
0000000000118e80 0000000000000058 T SDL_ResetKeyboard
0000000000118ee0 00000000000000f4 T SDL_SetKeyboardFocus
0000000000118fe0 0000000000000198 T SDL_ReleaseAutoReleaseKeys
0000000000119180 00000000000000e8 T SDL_SendKeyboardText
0000000000119270 0000000000000004 T SDL_KeyboardQuit
0000000000119280 000000000000002c t SDL_MouseRelativeWarpMotionChanged
00000000001192b0 000000000000002c t SDL_TouchMouseEventsChanged
00000000001192e0 000000000000002c t SDL_MouseRelativeSystemScaleChanged
0000000000119310 000000000000004c t SDL_MouseTouchEventsChanged
0000000000119360 0000000000000058 t SDL_MouseRelativeSpeedScaleChanged
00000000001193c0 0000000000000058 t SDL_MouseNormalSpeedScaleChanged
0000000000119420 0000000000000048 t SDL_MouseDoubleClickRadiusChanged
0000000000119470 0000000000000048 t SDL_MouseDoubleClickTimeChanged
00000000001194c0 000000000000000c T SDL_GetMouse
00000000001194d0 0000000000000114 T SDL_MouseInit
00000000001195f0 0000000000000978 t SDL_PrivateSendMouseMotion
0000000000119f70 0000000000000018 T SDL_GetMouseFocus
0000000000119f90 0000000000000188 T SDL_GetMouseState
000000000011a120 00000000000000d0 T SDL_PerformWarpMouseInWindow
000000000011a1f0 0000000000000008 T SDL_WarpMouseInWindow
000000000011a200 0000000000000018 T SDL_GetRelativeMouseMode
000000000011a220 00000000000002a0 T SDL_UpdateMouseCapture
000000000011a4c0 000000000000004c t SDL_MouseAutoCaptureChanged
000000000011a510 0000000000000064 T SDL_CaptureMouse
000000000011a580 00000000000000d8 T SDL_SetCursor
000000000011a660 0000000000000074 T SDL_SetMouseFocus
000000000011a6e0 00000000000000f4 t SDL_UpdateMouseFocus.isra.0
000000000011a7e0 000000000000043c t SDL_PrivateSendMouseButton
000000000011ac20 0000000000000008 T SDL_SendMouseButton
000000000011ac30 0000000000000090 T SDL_SendMouseMotion
000000000011acc0 0000000000000190 T SDL_SetRelativeMouseMode
000000000011ae50 00000000000000a0 T SDL_FreeCursor
000000000011aef0 000000000000005c T SDL_ShowCursor
000000000011af50 0000000000000194 T SDL_MouseQuit
000000000011b0f0 0000000000000040 t SDL_HandleSIG
000000000011b130 0000000000000080 T SDL_QuitInit
000000000011b1b0 000000000000006c T SDL_QuitQuit
000000000011b220 0000000000000010 T SDL_SendQuit
000000000011b230 0000000000000014 T SDL_SendPendingSignalEvents
000000000011b250 0000000000000008 T SDL_TouchInit
000000000011b260 00000000000000b0 T SDL_GetTouch
000000000011b310 000000000000014c T SDL_AddTouch
000000000011b460 0000000000000458 T SDL_SendTouch
000000000011b460 0000000000000458 t SDL_SendTouch.localalias
000000000011b8c0 0000000000000244 T SDL_SendTouchMotion
000000000011bb10 0000000000000104 T SDL_DelTouch
000000000011bc20 0000000000000078 T SDL_TouchQuit
000000000011bca0 0000000000000060 t RemovePendingSizeChangedAndResizedEvents
000000000011bd00 000000000000003c t RemovePendingExposedEvents
000000000011bd40 000000000000003c t RemovePendingMoveEvents
000000000011bd80 00000000000003b4 T SDL_SendWindowEvent
000000000011c140 0000000000000010 t mem_size
000000000011c150 0000000000000020 t mem_writeconst
000000000011c170 0000000000000088 t mem_read
000000000011c200 00000000000000b0 t mem_seek
000000000011c2b0 0000000000000084 t stdio_seek
000000000011c340 0000000000000060 t stdio_read
000000000011c3a0 0000000000000060 t stdio_write
000000000011c400 0000000000000048 T SDL_AllocRW
000000000011c450 000000000000006c T SDL_RWFromFP
000000000011c4c0 0000000000000078 T SDL_RWFromFile
000000000011c540 00000000000000c8 T SDL_RWFromConstMem
000000000011c610 0000000000000004 T SDL_FreeRW
000000000011c620 0000000000000058 t stdio_close
000000000011c680 0000000000000024 t mem_close
000000000011c6b0 000000000000000c T SDL_RWsize
000000000011c6c0 000000000000000c T SDL_RWseek
000000000011c6d0 0000000000000064 t stdio_size
000000000011c740 0000000000000014 T SDL_RWtell
000000000011c760 000000000000000c T SDL_RWread
000000000011c770 000000000000000c T SDL_RWclose
000000000011c780 000000000000011c T SDL_LoadFile_RW
000000000011c8a0 0000000000000030 T SDL_LoadFile
000000000011c8d0 0000000000000028 T SDL_ReadLE16
000000000011c900 000000000000002c T SDL_ReadBE16
000000000011c930 0000000000000028 T SDL_ReadLE32
000000000011c960 000000000000002c T SDL_ReadBE32
000000000011c990 000000000000001c T SDL_HapticInit
000000000011c9b0 0000000000000068 T SDL_HapticDestroyEffect
000000000011ca20 0000000000000160 T SDL_HapticClose
000000000011cb80 0000000000000030 T SDL_HapticQuit
000000000011cbb0 0000000000000238 t SDL_PrivateMatchControllerMappingForGUID
000000000011cdf0 0000000000000114 t SDL_LoadVIDPIDListFromHint
000000000011cf10 0000000000000010 t SDL_GameControllerIgnoreDevicesExceptChanged
000000000011cf20 0000000000000010 t SDL_GameControllerIgnoreDevicesChanged
000000000011cf30 00000000000000e8 t SDL_PrivateAppendToMappingString.part.0.constprop.0
000000000011d020 00000000000000f4 t SDL_PrivateGameControllerButton.isra.0
000000000011d120 0000000000000090 T SDL_GameControllerGetAxisFromString
000000000011d1b0 0000000000000080 T SDL_GameControllerGetButtonFromString
000000000011d230 00000000000002cc t SDL_PrivateGameControllerParseElement
000000000011d500 0000000000000220 t SDL_PrivateLoadButtonMapping
000000000011d720 000000000000034c t SDL_PrivateAddMappingForGUID
000000000011da70 000000000000027c t SDL_PrivateGameControllerAddMapping
000000000011dcf0 00000000000003d0 t SDL_CreateMappingForHIDAPIController
000000000011e0c0 0000000000000074 t SDL_CreateMappingForRAWINPUTController
000000000011e140 0000000000000094 t SDL_CreateMappingForWGIController
000000000011e1e0 00000000000001f4 t SDL_PrivateGetControllerMappingForGUID
000000000011e3e0 00000000000003f4 t SDL_PrivateGetControllerMapping.part.0
000000000011e7e0 0000000000000038 T SDL_GameControllerAddMapping
000000000011e820 00000000000001e0 T SDL_GameControllerAddMappingsFromRW
000000000011ea00 0000000000000158 T SDL_GameControllerInitMappings
000000000011eb60 0000000000000078 T SDL_IsGameController
000000000011ebe0 000000000000008c T SDL_GameControllerInit
000000000011ec70 00000000000001fc T SDL_GameControllerGetAxis
000000000011ee70 0000000000000198 T SDL_GameControllerGetButton
000000000011f010 00000000000008ac t SDL_GameControllerEventWatcher
000000000011f8c0 00000000000000c8 T SDL_GameControllerClose
000000000011f990 000000000000003c T SDL_GameControllerQuit
000000000011f9d0 00000000000000e4 T SDL_GameControllerQuitMappings
000000000011fac0 00000000000000c0 T SDL_GameControllerHandleDelayedGuideButton
000000000011fb80 000000000000002c t SDL_JoystickAllowBackgroundEventsChanged
000000000011fbb0 0000000000000054 T SDL_LockJoysticks
000000000011fc10 0000000000000070 T SDL_UnlockJoysticks
000000000011fc80 0000000000000004 T SDL_AssertJoysticksLocked
000000000011fc90 000000000000004c T SDL_NumJoysticks
000000000011fce0 00000000000000b4 T SDL_JoystickNameForIndex
000000000011fda0 000000000000003c T SDL_PrivateJoystickValid
000000000011fde0 00000000000000bc T SDL_PrivateJoystickGetAutoGamepadMapping
000000000011fea0 00000000000000a4 T SDL_JoystickGetAxis
000000000011ff50 000000000000009c T SDL_JoystickGetHat
000000000011fff0 000000000000009c T SDL_JoystickGetButton
0000000000120090 0000000000000064 T SDL_JoystickInstanceID
0000000000120100 000000000000004c T SDL_JoystickFromInstanceID
0000000000120150 000000000000010c T SDL_JoystickRumble
0000000000120260 00000000000000fc T SDL_JoystickRumbleTriggers
0000000000120360 000000000000018c T SDL_JoystickClose
00000000001204f0 00000000000000bc T SDL_JoystickQuit
00000000001205b0 00000000000000ac T SDL_JoystickInit
0000000000120660 00000000000000d0 T SDL_PrivateJoystickHat
0000000000120730 0000000000000108 T SDL_PrivateJoystickButton
0000000000120840 0000000000000140 T SDL_JoystickUpdate
0000000000120980 00000000000000a4 T SDL_JoystickEventState
0000000000120a30 0000000000000090 T SDL_GetJoystickGUIDInfo
0000000000120ac0 00000000000000f4 T SDL_CreateJoystickGUID
0000000000120bc0 0000000000000020 T SDL_CreateJoystickGUIDForName
0000000000120be0 0000000000000008 T SDL_SetJoystickGUIDVersion
0000000000120bf0 0000000000000008 T SDL_SetJoystickGUIDCRC
0000000000120c00 0000000000000220 T SDL_GetJoystickGameControllerTypeFromVIDPID
0000000000120e20 000000000000004c T SDL_IsJoystickXboxOneElite
0000000000120e70 0000000000000110 T SDL_IsJoystickXboxSeriesX
0000000000120f80 000000000000001c T SDL_IsJoystickDualSenseEdge
0000000000120fa0 000000000000001c T SDL_IsJoystickNintendoSwitchJoyConPair
0000000000120fc0 0000000000000028 T SDL_IsJoystickSteamController
0000000000120ff0 0000000000000010 T SDL_IsJoystickXInput
0000000000121000 0000000000000010 T SDL_IsJoystickWGI
0000000000121010 0000000000000010 T SDL_IsJoystickHIDAPI
0000000000121020 0000000000000010 T SDL_IsJoystickRAWINPUT
0000000000121030 0000000000000010 T SDL_IsJoystickVirtual
0000000000121040 00000000000001b0 T SDL_PrivateJoystickAxis
0000000000121040 00000000000001b0 t SDL_PrivateJoystickAxis.localalias
00000000001211f0 0000000000000098 T SDL_GetJoystickGameControllerTypeFromGUID
0000000000121290 00000000000000c0 T SDL_JoystickGetDeviceGUID
0000000000121350 0000000000000078 T SDL_JoystickGetGUID
00000000001213d0 000000000000002c T SDL_JoystickGetVendor
0000000000121400 000000000000002c T SDL_JoystickGetProduct
0000000000121430 0000000000000004 T SDL_JoystickGetGUIDFromString
0000000000121440 0000000000000078 T SDL_PrivateJoystickBatteryLevel
00000000001214c0 000000000000038c T SDL_JoystickOpen
0000000000121850 00000000000001fc T GuessControllerType
0000000000121a50 0000000000000110 t QueueCmdSetClipRect
0000000000121b60 0000000000000128 t QueueCmdSetViewport
0000000000121c90 0000000000000204 t PrepQueueCmdDraw
0000000000121ea0 00000000000000ec T SDL_AllocateRenderVertices
0000000000121f90 0000000000000008 T SDL_GetNumRenderDrivers
0000000000121fa0 0000000000000080 T SDL_GetRenderDriverInfo
0000000000122020 000000000000000c T SDL_GetRenderer
0000000000122030 000000000000006c T SDL_GetRendererInfo
00000000001220a0 0000000000000078 T SDL_QueryTexture
0000000000122120 000000000000009c T SDL_GetRendererOutputSize
00000000001221c0 00000000000000c8 T SDL_SetTextureColorMod
0000000000122290 00000000000000ac T SDL_SetTextureAlphaMod
0000000000122340 00000000000000d8 T SDL_SetTextureBlendMode
0000000000122420 0000000000000284 T SDL_LockTexture
00000000001226b0 00000000000001d4 T SDL_UnlockTexture
0000000000122890 00000000000003e4 T SDL_UpdateTexture
0000000000122c80 0000000000000020 T SDL_RenderTargetSupported
0000000000122ca0 00000000000002bc T SDL_SetRenderTarget
0000000000122f60 0000000000000048 T SDL_GetRenderTarget
0000000000122fb0 0000000000000154 T SDL_RenderSetViewport
0000000000123110 0000000000000468 T SDL_CreateRenderer
0000000000123580 0000000000000054 T SDL_RenderSetScale
00000000001235e0 0000000000000310 t UpdateLogicalSize.constprop.0
00000000001238f0 0000000000000638 t SDL_RendererEventWatch
0000000000123f30 0000000000000064 T SDL_SetRenderDrawColor
0000000000123fa0 0000000000000140 T SDL_RenderClear
00000000001240e0 0000000000000388 T SDL_RenderCopyF
0000000000124470 0000000000000028 T SDL_RenderCopy
00000000001244a0 0000000000000138 T SDL_RenderPresent
00000000001245e0 0000000000000158 T SDL_DestroyTexture
0000000000124740 0000000000000858 T SDL_CreateTexture
0000000000124740 0000000000000858 t SDL_CreateTexture.localalias
0000000000124fa0 0000000000000630 T SDL_CreateTextureFromSurface
00000000001255d0 0000000000000100 T SDL_DestroyRenderer
00000000001256d0 0000000000000040 T SDL_GetBlendModeSrcColorFactor
0000000000125710 0000000000000040 T SDL_GetBlendModeDstColorFactor
0000000000125750 0000000000000030 T SDL_GetBlendModeColorOperation
0000000000125780 0000000000000030 T SDL_GetBlendModeSrcAlphaFactor
00000000001257b0 0000000000000034 T SDL_GetBlendModeDstAlphaFactor
00000000001257f0 0000000000000030 T SDL_GetBlendModeAlphaOperation
0000000000125820 0000000000000538 T SDL_SW_UpdateYUVTexture
0000000000125d60 00000000000000e0 T SDL_SW_LockYUVTexture
0000000000125e40 00000000000001fc T SDL_SW_CopyYUVToRGB
0000000000126040 0000000000000040 T SDL_SW_DestroyYUVTexture
0000000000126080 0000000000000210 T SDL_SW_CreateYUVTexture
0000000000126290 0000000000000020 t GLES2_WindowEvent
00000000001262b0 0000000000000008 t GLES2_QueueSetViewport
00000000001262c0 00000000000000a0 t GLES2_LockTexture
0000000000126360 0000000000000110 t GLES2_SetTextureScaleMode
0000000000126470 0000000000000008 t GLES2_RenderPresent
0000000000126480 000000000000001c t GLES2_GetOutputSize
00000000001264a0 0000000000000348 t GLES2_RenderReadPixels
00000000001267f0 00000000000000a4 t GLES2_SetRenderTarget
00000000001268a0 0000000000000d40 t GLES2_CreateTexture
00000000001275e0 0000000000000158 t GLES2_SupportsBlendMode
0000000000127740 00000000000004dc t GLES2_QueueGeometry
0000000000127c20 0000000000000110 t GLES2_QueueDrawPoints
0000000000127d30 0000000000000180 t GLES2_QueueDrawLines
0000000000127eb0 00000000000002ec t GLES2_CacheShader
00000000001281a0 00000000000008ac t SetDrawState
0000000000128a50 0000000000000b90 t GLES2_CreateRenderer
00000000001295e0 0000000000000084 t GLES2_SetVSync
0000000000129670 0000000000000184 t GLES2_TexSubImage2D.isra.0
0000000000129800 000000000000007c t GLES2_UnbindTexture
0000000000129880 00000000000000f0 t GLES2_DestroyTexture
0000000000129970 00000000000000fc t GLES2_BindTexture
0000000000129a70 0000000000000214 t GLES2_UpdateTextureNV
0000000000129c90 000000000000026c t GLES2_UpdateTextureYUV
0000000000129f00 00000000000001dc t GLES2_DestroyRenderer
000000000012a0e0 00000000000003c0 t GLES2_UpdateTexture
000000000012a4a0 0000000000000030 t GLES2_UnlockTexture
000000000012a4d0 000000000000076c t GLES2_RunCommandQueue
000000000012ac40 000000000000001c T GLES2_GetShaderPrologue
000000000012ac60 0000000000000064 T GLES2_GetShaderInclude
000000000012acd0 0000000000000088 T GLES2_GetTexCoordPrecisionEnumFromHint
000000000012ad60 0000000000000100 T GLES2_GetShader
000000000012ae60 000000000000001c t SW_WindowEvent
000000000012ae80 0000000000000040 t SW_LockTexture
000000000012aec0 0000000000000004 t SW_UnlockTexture
000000000012aed0 0000000000000004 t SW_SetTextureScaleMode
000000000012aee0 0000000000000028 t SW_SetRenderTarget
000000000012af10 0000000000000008 t SW_QueueSetViewport
000000000012af20 0000000000000008 t SW_DestroyTexture
000000000012af30 0000000000000014 t SW_RenderPresent
000000000012af50 0000000000000404 t SW_QueueGeometry
000000000012b360 000000000000021c t SW_QueueFillRects
000000000012b580 00000000000000f4 t SW_QueueDrawPoints
000000000012b680 00000000000000dc t SW_QueueCopyEx
000000000012b760 0000000000000094 t SW_QueueCopy
000000000012b800 00000000000000f0 t SW_UpdateTexture
000000000012b8f0 00000000000000c4 t SW_CreateTexture
000000000012b9c0 0000000000000028 t SW_DestroyRenderer
000000000012b9f0 00000000000000e4 t SetDrawState.part.0
000000000012bae0 0000000000000060 t SW_GetOutputSize
000000000012bb40 00000000000000a0 t PrepTextureForCopy.isra.0
000000000012bbe0 0000000000000110 t SW_RenderReadPixels
000000000012bcf0 0000000000001260 t SW_RunCommandQueue
000000000012cf50 00000000000001e0 T SW_CreateRendererForSurface
000000000012d130 00000000000000ac t SW_CreateRenderer
000000000012d1e0 00000000000000e0 t computeSourceIncrements90
000000000012d2c0 0000000000000290 T SDLgfx_rotozoomSurfaceSizeTrig
000000000012d550 0000000000000fb0 T SDLgfx_rotateSurface
000000000012e500 0000000000000010 T trianglepoint_2_fixedpoint
000000000012e510 00000000000015cc T SDL_SW_FillTriangle
000000000012fae0 0000000000002678 T SDL_SW_BlitTriangle
0000000000132160 000000000000000c T SDL_LockSensors
0000000000132170 000000000000000c T SDL_UnlockSensors
0000000000132180 0000000000000058 T SDL_SensorInit
00000000001321e0 0000000000000038 T SDL_NumSensors
0000000000132220 00000000000000c8 T SDL_SensorClose
00000000001322f0 000000000000006c T SDL_SensorQuit
0000000000132360 00000000000000bc T SDL_SensorUpdate
0000000000132420 0000000000000118 T SDL_crc16
0000000000132540 0000000000000018 T SDL_getenv
0000000000132560 0000000000000004 t real_free
0000000000132570 0000000000000004 t real_realloc
0000000000132580 0000000000000004 t real_calloc
0000000000132590 0000000000000004 t real_malloc
00000000001325a0 0000000000000044 T SDL_GetOriginalMemoryFunctions
00000000001325f0 000000000000004c T SDL_malloc
0000000000132640 000000000000005c T SDL_calloc
00000000001326a0 000000000000007c T SDL_realloc
0000000000132720 0000000000000030 T SDL_free
0000000000132750 0000000000000004 T SDL_qsort
0000000000132760 0000000000000004 T SDL_atan2
0000000000132770 0000000000000004 T SDL_atan2f
0000000000132780 0000000000000004 T SDL_acosf
0000000000132790 0000000000000008 T SDL_ceil
00000000001327a0 0000000000000008 T SDL_ceilf
00000000001327b0 0000000000000004 T SDL_cos
00000000001327c0 0000000000000004 T SDL_cosf
00000000001327d0 0000000000000008 T SDL_fabs
00000000001327e0 0000000000000008 T SDL_fabsf
00000000001327f0 0000000000000008 T SDL_floor
0000000000132800 0000000000000008 T SDL_floorf
0000000000132810 0000000000000008 T SDL_truncf
0000000000132820 0000000000000004 T SDL_fmodf
0000000000132830 0000000000000004 T SDL_pow
0000000000132840 0000000000000008 T SDL_round
0000000000132850 0000000000000004 T SDL_sin
0000000000132860 0000000000000004 T SDL_sinf
0000000000132870 0000000000000014 T SDL_sqrt
0000000000132890 0000000000000014 T SDL_sqrtf
00000000001328b0 0000000000000004 T SDL_tanf
00000000001328c0 000000000000000c T SDL_abs
00000000001328d0 0000000000000018 T SDL_isdigit
00000000001328f0 0000000000000018 T SDL_isspace
0000000000132910 0000000000000024 T SDL_toupper
0000000000132940 0000000000000004 T SDL_memcpy
0000000000132950 0000000000000004 T SDL_memset
0000000000132960 0000000000000004 T SDL_memmove
0000000000132970 0000000000000004 T SDL_memcmp
0000000000132980 0000000000000004 T SDL_strlen
0000000000132990 0000000000000004 T SDL_strlcpy
00000000001329a0 00000000000000f8 T SDL_utf8strlcpy
0000000000132aa0 0000000000000028 T SDL_utf8strlen
0000000000132ad0 0000000000000004 T SDL_strlcat
0000000000132ae0 000000000000004c T SDL_strdup
0000000000132b30 0000000000000004 T SDL_strchr
0000000000132b40 0000000000000004 T SDL_strrchr
0000000000132b50 0000000000000004 T SDL_strstr
0000000000132b60 0000000000000004 T SDL_itoa
0000000000132b70 0000000000000004 T SDL_atoi
0000000000132b80 0000000000000004 T SDL_atof
0000000000132b90 0000000000000004 T SDL_strtol
0000000000132ba0 0000000000000004 T SDL_strtoll
0000000000132bb0 0000000000000004 T SDL_strtoull
0000000000132bc0 0000000000000004 T SDL_strcmp
0000000000132bd0 0000000000000004 T SDL_strncmp
0000000000132be0 0000000000000004 T SDL_strcasecmp
0000000000132bf0 0000000000000004 T SDL_strncasecmp
0000000000132c00 0000000000000024 T SDL_vsscanf
0000000000132c30 000000000000006c T SDL_sscanf
0000000000132ca0 0000000000000034 T SDL_vsnprintf
0000000000132ce0 000000000000006c T SDL_snprintf
0000000000132d50 00000000000000fc T SDL_vasprintf
0000000000132e50 000000000000006c T SDL_asprintf
0000000000132ec0 0000000000000038 t SDL_FreeErrBuf
0000000000132f00 0000000000000024 T SDL_TLSCreate
0000000000132f30 0000000000000054 T SDL_TLSGet
0000000000132f90 0000000000000114 T SDL_TLSSet
00000000001330b0 0000000000000090 T SDL_TLSCleanup
0000000000133140 00000000000000c4 T SDL_Generic_GetTLSData
0000000000133210 00000000000000fc T SDL_Generic_SetTLSData
0000000000133310 0000000000000130 T SDL_GetErrBuf
0000000000133440 0000000000000098 T SDL_RunThread
00000000001334e0 00000000000000c8 T SDL_CreateThreadWithStackSize
00000000001335b0 0000000000000004 T SDL_CreateThreadInternal
00000000001335c0 0000000000000004 T SDL_SetThreadPriority
00000000001335d0 0000000000000048 T SDL_WaitThread
0000000000133620 00000000000000d8 T SDL_TimerQuit
0000000000133700 00000000000000b8 T SDL_TimerInit
00000000001337c0 0000000000000014 T SDL_GetTicks
00000000001337e0 000000000000020c t SDL_TimerThread
00000000001339f0 0000000000000378 t SDL_FillRect1
0000000000133d70 0000000000000138 t SDL_FillRect2
0000000000133eb0 000000000000026c t SDL_FillRect3
0000000000134120 0000000000000070 t SDL_FillRect4
0000000000134190 00000000000001fc T SDL_FillRects
0000000000134390 0000000000000054 T SDL_FillRect
00000000001343f0 00000000000004bc T SDL_GetPixelFormatName
00000000001348b0 00000000000001e0 T SDL_PixelFormatEnumToMasks
0000000000134a90 0000000000000580 T SDL_MasksToPixelFormatEnum
0000000000135010 00000000000001e8 T SDL_InitFormat
0000000000135200 0000000000000114 T SDL_AllocFormat
0000000000135320 00000000000000b4 T SDL_AllocPalette
00000000001353e0 0000000000000060 T SDL_FreePalette
0000000000135440 00000000000000d0 T SDL_FreeFormat
0000000000135510 00000000000000b4 T SDL_SetPixelFormatPalette
00000000001355d0 0000000000000098 T SDL_DitherColors
0000000000135670 0000000000000090 T SDL_FindColor
0000000000135700 00000000000000dc t Map1to1
00000000001357e0 000000000000005c t MapNto1.isra.0
0000000000135840 000000000000008c T SDL_DetectPalette
00000000001358d0 000000000000009c T SDL_MapRGB
0000000000135970 00000000000000b0 T SDL_MapRGBA
0000000000135a20 0000000000000104 T SDL_GetRGBA
0000000000135b30 0000000000000044 T SDL_AllocBlitMap
0000000000135b80 000000000000004c T SDL_InvalidateMap
0000000000135bd0 000000000000003c T SDL_InvalidateAllBlitMap
0000000000135c10 0000000000000600 T SDL_MapSurface
0000000000136210 000000000000002c T SDL_FreeBlitMap
0000000000136240 0000000000000134 T SDL_GetSpanEnclosingRect
0000000000136380 000000000000010c T SDL_IntersectRect
0000000000136490 0000000000000204 T SDL_EnclosePoints
00000000001366a0 0000000000000484 T SDL_IntersectRectAndLine
0000000000136b30 00000000000000d4 T SDL_HasIntersectionF
0000000000136c10 00000000000004c8 T SDL_SoftStretch
00000000001370e0 0000000000001fe8 T SDL_SoftStretchLinear
00000000001390d0 0000000000000054 T SDL_SetSurfacePalette
0000000000139130 0000000000000058 T SDL_SetSurfaceRLE
0000000000139190 00000000000000e4 T SDL_SetColorKey
0000000000139280 000000000000001c T SDL_HasColorKey
00000000001392a0 0000000000000044 T SDL_GetColorKey
00000000001392f0 0000000000000084 T SDL_SetSurfaceColorMod
0000000000139380 0000000000000044 T SDL_GetSurfaceColorMod
00000000001393d0 0000000000000064 T SDL_SetSurfaceAlphaMod
0000000000139440 0000000000000024 T SDL_GetSurfaceAlphaMod
0000000000139470 00000000000000f8 T SDL_SetSurfaceBlendMode
0000000000139570 000000000000008c T SDL_GetSurfaceBlendMode
0000000000139600 0000000000000054 T SDL_SetClipRect
0000000000139660 0000000000000018 T SDL_GetClipRect
0000000000139680 00000000000000bc T SDL_LowerBlit
0000000000139740 000000000000020c T SDL_UpperBlit
0000000000139950 0000000000000068 T SDL_LockSurface
00000000001399c0 0000000000000030 T SDL_UnlockSurface
00000000001399f0 000000000000039c T SDL_ConvertPixels
0000000000139d90 00000000000000d8 T SDL_FreeSurface
0000000000139e70 0000000000000294 T SDL_CreateRGBSurfaceWithFormat
000000000013a110 0000000000000084 T SDL_CreateRGBSurface
000000000013a1a0 00000000000001b8 T SDL_CreateRGBSurfaceFrom
000000000013a360 0000000000000164 T SDL_CreateRGBSurfaceWithFormatFrom
000000000013a4d0 00000000000003c4 T SDL_PrivateLowerBlitScaled
000000000013a8a0 00000000000003c4 T SDL_PrivateUpperBlitScaled
000000000013ac70 0000000000000708 T SDL_ConvertSurface
000000000013ac70 0000000000000708 t SDL_ConvertSurface.localalias
000000000013b380 0000000000000084 t cmpmodes
000000000013b410 0000000000000358 t SDL_GetClosestDisplayModeForDisplay
000000000013b770 000000000000000c T SDL_GetVideoDevice
000000000013b780 0000000000000108 T SDL_AddVideoDisplay
000000000013b890 000000000000004c T SDL_GetIndexOfDisplay
000000000013b8e0 0000000000000010 T SDL_IsVideoContextExternal
000000000013b8f0 00000000000000f8 T SDL_GetDisplayBounds
000000000013b8f0 00000000000000f8 t SDL_GetDisplayBounds.localalias
000000000013b9f0 0000000000000140 t GetRectDisplayIndex
000000000013bb30 0000000000000170 T SDL_AddDisplayMode
000000000013bca0 000000000000000c T SDL_SetCurrentDisplayMode
000000000013bcb0 0000000000000140 t SDL_SetDisplayModeForDisplay
000000000013bdf0 00000000000000c0 T SDL_ResetDisplayModes
000000000013beb0 000000000000007c T SDL_GetDesktopDisplayMode
000000000013bf30 000000000000015c T SDL_GetWindowDisplayIndex
000000000013c090 0000000000000038 T SDL_GetDisplayForWindow
000000000013c0d0 0000000000000144 T SDL_GetWindowDisplayMode
000000000013c220 0000000000000094 T SDL_ToggleDragAndDropSupport
000000000013c2c0 0000000000000020 T SDL_HasWindows
000000000013c2e0 000000000000005c T SDL_GetWindowID
000000000013c340 0000000000000034 T SDL_GetWindowFromID
000000000013c380 000000000000005c T SDL_GetWindowFlags
000000000013c3e0 00000000000000c4 T SDL_SetWindowTitle
000000000013c4b0 0000000000000158 T SDL_SetWindowData
000000000013c610 0000000000000060 t SDL_DestroyWindowTexture
000000000013c670 00000000000000c4 T SDL_GetWindowData
000000000013c740 0000000000000054 T SDL_GetWindowSize
000000000013c7a0 0000000000000080 T SDL_GetWindowSizeInPixels
000000000013c820 00000000000000ec t SDL_UpdateWindowTexture
000000000013c910 0000000000000434 t SDL_CreateWindowTexture
000000000013cd50 0000000000000094 T SDL_ShowWindow
000000000013cdf0 000000000000005c T SDL_RaiseWindow
000000000013ce50 000000000000005c T SDL_MaximizeWindow
000000000013ceb0 0000000000000060 T SDL_RestoreWindow
000000000013cf10 0000000000000064 T SDL_HasWindowSurface
000000000013cf80 0000000000000088 T SDL_UpdateWindowSurfaceRects
000000000013d010 000000000000008c T SDL_UpdateWindowSurface
000000000013d0a0 0000000000000090 T SDL_DestroyWindowSurface
000000000013d130 0000000000000218 T SDL_GetWindowSurface
000000000013d350 0000000000000134 T SDL_UpdateWindowGrab
000000000013d490 000000000000006c T SDL_SetWindowKeyboardGrab
000000000013d500 000000000000006c T SDL_SetWindowMouseGrab
000000000013d570 000000000000008c T SDL_SetWindowGrab
000000000013d600 0000000000000078 T SDL_GetWindowMouseRect
000000000013d680 0000000000000070 T SDL_OnWindowResized
000000000013d6f0 0000000000000354 t SDL_UpdateFullscreenMode
000000000013da50 00000000000000b0 T SDL_HideWindow
000000000013db00 00000000000000a8 T SDL_MinimizeWindow
000000000013dbb0 00000000000000d8 T SDL_SetWindowFullscreen
000000000013dc90 00000000000000f8 t SDL_FinishWindowCreation
000000000013dd90 0000000000000008 T SDL_OnWindowHidden
000000000013dda0 000000000000017c T SDL_SetWindowSize
000000000013df20 0000000000000058 T SDL_OnWindowMoved
000000000013df80 000000000000001c T SDL_OnWindowMinimized
000000000013dfa0 0000000000000020 T SDL_OnWindowRestored
000000000013dfc0 0000000000000004 T SDL_OnWindowShown
000000000013dfd0 0000000000000024 T SDL_OnWindowEnter
000000000013e000 0000000000000004 T SDL_OnWindowLeave
000000000013e010 0000000000000088 T SDL_OnWindowFocusGained
000000000013e0a0 00000000000000c8 T SDL_OnWindowFocusLost
000000000013e170 000000000000002c T SDL_GetFocusWindow
000000000013e1a0 000000000000002c T SDL_EnableScreenSaver
000000000013e1d0 0000000000000030 T SDL_DisableScreenSaver
000000000013e200 00000000000000d8 T SDL_GL_LoadLibrary
000000000013e2e0 0000000000000074 T SDL_GL_GetProcAddress
000000000013e360 0000000000000044 T SDL_GL_UnloadLibrary
000000000013e3b0 000000000000016c T SDL_GL_ExtensionSupported
000000000013e520 0000000000000098 T SDL_GL_ResetAttributes
000000000013e5c0 0000000000000180 T SDL_GL_SetAttribute
000000000013e5c0 0000000000000180 t SDL_GL_SetAttribute.localalias
000000000013e740 00000000000004b0 T SDL_GL_GetAttribute
000000000013e740 00000000000004b0 t SDL_GL_GetAttribute.localalias
000000000013ebf0 00000000000000e4 T SDL_GL_CreateContext
000000000013ece0 0000000000000034 T SDL_GL_GetCurrentWindow
000000000013ed20 0000000000000034 T SDL_GL_GetCurrentContext
000000000013ed60 000000000000016c T SDL_GL_MakeCurrent
000000000013eed0 000000000000005c T SDL_GL_GetDrawableSize
000000000013ef30 0000000000000080 T SDL_GL_SetSwapInterval
000000000013efb0 000000000000004c T SDL_GL_GetSwapInterval
000000000013f000 00000000000000b4 T SDL_GL_SwapWindowWithResult
000000000013f0c0 0000000000000068 T SDL_GL_DeleteContext
000000000013f130 0000000000000090 T SDL_StartTextInput
000000000013f1c0 0000000000000028 T SDL_IsTextInputActive
000000000013f1f0 0000000000000098 T SDL_StopTextInput
000000000013f290 0000000000000024 T SDL_HasScreenKeyboardSupport
000000000013f2c0 000000000000000c T SDL_GetMessageBoxCount
000000000013f2d0 000000000000018c T SDL_ShowMessageBox
000000000013f460 00000000000000b0 T SDL_Vulkan_LoadLibrary
000000000013f510 0000000000000044 T SDL_Vulkan_UnloadLibrary
000000000013f560 0000000000000310 T SDL_RecreateWindow
000000000013f870 000000000000024c T SDL_DestroyWindow
000000000013fac0 0000000000000448 T SDL_CreateWindow
000000000013ff10 0000000000000144 T SDL_VideoQuit
0000000000140060 0000000000000278 T SDL_VideoInit
00000000001402e0 00000000000001ac t SDL_ConvertPixels_SwapUVPlanes
0000000000140490 0000000000000338 t SDL_ConvertPixels_PackUVPlanes_to_NV
00000000001407d0 0000000000000340 t SDL_ConvertPixels_SplitNV_to_UVPlanes
0000000000140b10 00000000000001e4 t GetYUVPlanes.isra.0
0000000000140d00 000000000000000c T SDL_GetYUVConversionMode
0000000000140d10 0000000000000034 T SDL_GetYUVConversionModeForResolution
0000000000140d50 0000000000004250 t SDL_ConvertPixels_ARGB8888_to_YUV
0000000000144fa0 0000000000000178 T SDL_CalculateYUVSize
0000000000145120 00000000000008c0 T SDL_ConvertPixels_YUV_to_RGB
0000000000145120 00000000000008c0 t SDL_ConvertPixels_YUV_to_RGB.localalias
00000000001459e0 000000000000012c T SDL_ConvertPixels_RGB_to_YUV
0000000000145b10 00000000000025d4 T SDL_ConvertPixels_YUV_to_YUV
00000000001480f0 0000000000000530 T yuv420_rgb565_std
0000000000148620 00000000000004b0 T yuv420_rgb24_std
0000000000148ad0 0000000000000514 T yuv420_rgba_std
0000000000148ff0 0000000000000514 T yuv420_bgra_std
0000000000149510 00000000000004fc T yuv420_argb_std
0000000000149a10 00000000000004f4 T yuv420_abgr_std
0000000000149f10 000000000000024c T yuv422_rgb565_std
000000000014a160 000000000000021c T yuv422_rgb24_std
000000000014a380 0000000000000240 T yuv422_rgba_std
000000000014a5c0 0000000000000240 T yuv422_bgra_std
000000000014a800 0000000000000234 T yuv422_argb_std
000000000014aa40 0000000000000234 T yuv422_abgr_std
000000000014ac80 0000000000000530 T yuvnv12_rgb565_std
000000000014b1b0 00000000000004b0 T yuvnv12_rgb24_std
000000000014b660 0000000000000514 T yuvnv12_rgba_std
000000000014bb80 0000000000000514 T yuvnv12_bgra_std
000000000014c0a0 00000000000004fc T yuvnv12_argb_std
000000000014c5a0 00000000000004f4 T yuvnv12_abgr_std
000000000014caa0 0000000000000018 t RunThread
000000000014cac0 00000000000000b0 T SDL_SYS_CreateThread
000000000014cb70 000000000000001c T SDL_SYS_SetupThread
000000000014cb90 0000000000000004 T SDL_ThreadID
000000000014cba0 0000000000000050 T SDL_SYS_SetThreadPriority
000000000014cbf0 000000000000000c T SDL_SYS_WaitThread
000000000014cc00 0000000000000078 T SDL_CreateSemaphore
000000000014cc80 000000000000002c T SDL_DestroySemaphore
000000000014ccb0 0000000000000034 T SDL_SemTryWait
000000000014ccf0 0000000000000068 T SDL_SemWait
000000000014cd60 0000000000000134 T SDL_SemWaitTimeout
000000000014cea0 000000000000005c T SDL_SemPost
000000000014cf00 0000000000000090 T SDL_CreateMutex
000000000014cf90 000000000000002c T SDL_DestroyMutex
000000000014cfc0 0000000000000038 T SDL_LockMutex
000000000014d000 0000000000000038 T SDL_UnlockMutex
000000000014d040 00000000000000b0 T SDL_SYS_GetTLSData
000000000014d0f0 0000000000000044 T SDL_SYS_SetTLSData
000000000014d140 0000000000000008 T SWITCH_CreateWindowFrom
000000000014d150 0000000000000004 T SWITCH_SetWindowTitle
000000000014d160 0000000000000004 T SWITCH_SetWindowIcon
000000000014d170 00000000000001a8 t SWITCH_CreateDevice
000000000014d320 0000000000000034 t SWITCH_Destroy
000000000014d360 000000000000009c T SWITCH_VideoInit
000000000014d400 0000000000000040 T SWITCH_VideoQuit
000000000014d440 0000000000000060 T SWITCH_GetDisplayModes
000000000014d4a0 0000000000000090 T SWITCH_DestroyWindow
000000000014d530 00000000000000a0 T SWITCH_SetDisplayMode
000000000014d5d0 00000000000000b8 T SWITCH_SetWindowSize
000000000014d690 0000000000000128 T SWITCH_CreateWindow
000000000014d7c0 00000000000000c4 T SWITCH_PumpEvents
000000000014d890 0000000000000004 T SWITCH_RestoreWindow
000000000014d8a0 0000000000000004 T SWITCH_SetWindowPosition
000000000014d8b0 0000000000000004 T SWITCH_ShowWindow
000000000014d8c0 0000000000000004 T SWITCH_HideWindow
000000000014d8d0 0000000000000004 T SWITCH_RaiseWindow
000000000014d8e0 0000000000000004 T SWITCH_MaximizeWindow
000000000014d8f0 0000000000000004 T SWITCH_MinimizeWindow
000000000014d900 0000000000000004 t SWITCHAUDIO_WaitDevice
000000000014d910 000000000000000c t SWITCHAUDIO_GetDeviceBuf
000000000014d920 0000000000000054 t SWITCHAUDIO_Init
000000000014d980 0000000000000060 t SWITCHAUDIO_CloseDevice
000000000014d9e0 000000000000017c t SWITCHAUDIO_PlayDevice
000000000014db60 00000000000002ec t SWITCHAUDIO_OpenDevice
000000000014de50 0000000000000004 t SWITCHAUDIO_ThreadInit
000000000014de60 0000000000000008 t SWITCH_JoystickGetCount
000000000014de70 0000000000000004 t SWITCH_JoystickDetect
000000000014de80 000000000000000c t SWITCH_JoystickGetDeviceName
000000000014de90 0000000000000008 t SWITCH_JoystickGetDevicePath
000000000014dea0 0000000000000008 t SWITCH_JoystickGetDevicePlayerIndex
000000000014deb0 0000000000000004 t SWITCH_JoystickSetDevicePlayerIndex
000000000014dec0 0000000000000004 t SWITCH_JoystickGetDeviceInstanceID
000000000014ded0 0000000000000024 t SWITCH_JoystickOpen
000000000014df00 0000000000000008 t SWITCH_JoystickGetCapabilities
000000000014df10 0000000000000008 t SWITCH_JoystickSetLED
000000000014df20 0000000000000004 t SWITCH_JoystickClose
000000000014df30 0000000000000008 t SWITCH_JoystickGetGamepadMapping
000000000014df40 0000000000000184 t SWITCH_UpdateControllerSupport
000000000014e0d0 000000000000025c t SWITCH_JoystickUpdate
000000000014e330 0000000000000008 t SWITCH_JoystickSetSensorsEnabled
000000000014e340 0000000000000008 t SWITCH_JoystickSendEffect
000000000014e350 0000000000000008 t SWITCH_JoystickRumbleTriggers
000000000014e360 00000000000000c0 t SWITCH_JoystickRumble
000000000014e420 000000000000000c t SWITCH_JoystickGetDeviceGUID
000000000014e430 0000000000000158 t SWITCH_JoystickInit
000000000014e590 0000000000000004 t SWITCH_JoystickQuit
000000000014e5a0 000000000000000c T SDL_TicksQuit
000000000014e5b0 0000000000000008 T SDL_GetPerformanceCounter
000000000014e5c0 0000000000000038 T SDL_TicksInit
000000000014e600 0000000000000008 T SDL_GetPerformanceFrequency
000000000014e610 0000000000000054 T SDL_GetTicks64
000000000014e670 0000000000000010 T SDL_Delay
000000000014e680 0000000000000008 t VIRTUAL_JoystickInit
000000000014e690 0000000000000004 t VIRTUAL_JoystickDetect
000000000014e6a0 0000000000000008 t VIRTUAL_JoystickGetDevicePath
000000000014e6b0 0000000000000008 t VIRTUAL_JoystickGetDevicePlayerIndex
000000000014e6c0 0000000000000ae0 t VIRTUAL_JoystickGetGamepadMapping
000000000014f1a0 0000000000000050 t VIRTUAL_JoystickGetDeviceInstanceID
000000000014f1f0 0000000000000064 t VIRTUAL_JoystickSetDevicePlayerIndex
000000000014f260 000000000000004c t VIRTUAL_JoystickGetDeviceName
000000000014f2b0 0000000000000030 t VIRTUAL_JoystickClose
000000000014f2e0 0000000000000064 t VIRTUAL_JoystickGetCapabilities
000000000014f350 0000000000000034 t VIRTUAL_JoystickGetCount
000000000014f390 0000000000000008 t VIRTUAL_JoystickSetSensorsEnabled
000000000014f3a0 00000000000000c8 t VIRTUAL_FreeHWData
000000000014f470 0000000000000038 t VIRTUAL_JoystickQuit
000000000014f4b0 00000000000000d4 t VIRTUAL_JoystickUpdate
000000000014f590 0000000000000084 t VIRTUAL_JoystickOpen
000000000014f620 0000000000000084 t VIRTUAL_JoystickSetLED
000000000014f6b0 0000000000000058 t VIRTUAL_JoystickGetDeviceGUID
000000000014f710 000000000000007c t VIRTUAL_JoystickRumble
000000000014f790 000000000000007c t VIRTUAL_JoystickRumbleTriggers
000000000014f810 000000000000007c t VIRTUAL_JoystickSendEffect
000000000014f890 0000000000000008 T SDL_SYS_HapticInit
000000000014f8a0 0000000000000004 T SDL_SYS_HapticClose
000000000014f8b0 0000000000000004 T SDL_SYS_HapticQuit
000000000014f8c0 000000000000000c T SDL_SYS_HapticDestroyEffect
000000000014f8d0 0000000000000008 t SDL_DUMMY_SensorInit
000000000014f8e0 0000000000000004 t SDL_DUMMY_SensorDetect
000000000014f8f0 0000000000000008 t SDL_DUMMY_SensorGetDeviceName
000000000014f900 0000000000000008 t SDL_DUMMY_SensorGetDeviceType
000000000014f910 0000000000000008 t SDL_DUMMY_SensorGetDeviceNonPortableType
000000000014f920 0000000000000004 t SDL_DUMMY_SensorUpdate
000000000014f930 0000000000000008 t SDL_DUMMY_SensorOpen
000000000014f940 0000000000000004 t SDL_DUMMY_SensorClose
000000000014f950 0000000000000008 t SDL_DUMMY_SensorGetDeviceInstanceID
000000000014f960 0000000000000008 t SDL_DUMMY_SensorGetCount
000000000014f970 0000000000000004 t SDL_DUMMY_SensorQuit
000000000014f980 00000000000000bc T SDL_NewDataQueue
000000000014fa40 0000000000000064 T SDL_FreeDataQueue
000000000014fab0 00000000000000bc T SDL_ClearDataQueue
000000000014fb70 000000000000018c T SDL_WriteToDataQueue
000000000014fd00 00000000000000fc T SDL_ReadFromDataQueue
000000000014fe00 000000000000003c T SDL_CountDataQueue
000000000014fe40 0000000000000130 T SDL_GUIDFromString
000000000014ff70 0000000000000054 T SDL_ListAdd
000000000014ffd0 0000000000000034 T SDL_ListRemove
0000000000150010 0000000000000030 T SDL_powerof2
0000000000150040 0000000000000020 T SDL_AtomicCAS
0000000000150060 0000000000000018 T SDL_AtomicSet
0000000000150080 000000000000001c T SDL_AtomicAdd
00000000001500a0 0000000000000008 T SDL_AtomicGet
00000000001500b0 00000000000000b0 T SDL_SendDisplayEvent
0000000000150160 0000000000001548 t SDL_BlendFillRect_RGB555
00000000001516b0 0000000000001528 t SDL_BlendFillRect_RGB565
0000000000152be0 0000000000001030 t SDL_BlendFillRect_RGB888
0000000000153c10 000000000000120c t SDL_BlendFillRect_ARGB8888
0000000000154e20 0000000000003f00 t SDL_BlendFillRect_RGB
0000000000158d20 000000000000253c t SDL_BlendFillRect_RGBA
000000000015b260 00000000000001e8 T SDL_BlendFillRects
000000000015b450 0000000000002248 t SDL_BlendLine_RGB2
000000000015d6a0 0000000000001584 t SDL_BlendLine_RGB555
000000000015ec30 0000000000001574 t SDL_BlendLine_RGB565
00000000001601b0 00000000000021a8 t SDL_BlendLine_RGB4
0000000000162360 00000000000025bc t SDL_BlendLine_RGBA4
0000000000164920 00000000000023d0 t SDL_BlendLine_RGB888
0000000000166cf0 0000000000002b7c t SDL_BlendLine_ARGB8888
0000000000169870 000000000000025c T SDL_BlendLines
0000000000169ad0 0000000000000294 t SDL_BlendPoint_RGB555
0000000000169d70 0000000000000290 t SDL_BlendPoint_RGB565
000000000016a000 00000000000001fc t SDL_BlendPoint_RGB888
000000000016a200 0000000000000238 t SDL_BlendPoint_ARGB8888
000000000016a440 0000000000000758 t SDL_BlendPoint_RGB
000000000016aba0 00000000000004a8 t SDL_BlendPoint_RGBA
000000000016b050 0000000000000128 T SDL_BlendPoint
000000000016b180 0000000000000204 T SDL_BlendPoints
000000000016b390 000000000000056c t SDL_DrawLine4
000000000016b900 00000000000005ac t SDL_DrawLine2
000000000016beb0 0000000000000288 t SDL_DrawLine1
000000000016c140 00000000000001e4 T SDL_DrawLines
000000000016c330 00000000000000f0 T SDL_DrawPoint
000000000016c420 0000000000000118 T SDL_DrawPoints
000000000016c540 00000000000000c4 t copy_opaque_16
000000000016c610 00000000000000e0 t uncopy_opaque_16
000000000016c6f0 00000000000005f8 t copy_transl_565
000000000016ccf0 00000000000005f8 t copy_transl_555
000000000016d2f0 00000000000000e0 t uncopy_transl_16
000000000016d3d0 000000000000050c t copy_32
000000000016d8e0 00000000000000d4 t uncopy_32
000000000016d9c0 0000000000000008 t getpix_8
000000000016d9d0 0000000000000008 t getpix_16
000000000016d9e0 0000000000000010 t getpix_24
000000000016d9f0 0000000000000008 t getpix_32
000000000016da00 0000000000001720 t SDL_RLEAlphaBlit
000000000016f120 0000000000003c18 t SDL_RLEBlit
0000000000172d40 000000000000027c T SDL_UnRLESurface
0000000000172fc0 0000000000000f34 T SDL_RLESurface
0000000000173f00 0000000000000268 t SDL_SoftBlit
0000000000174170 00000000000003b0 T SDL_CalculateBlit
0000000000174520 0000000000000308 t BlitBto1
0000000000174830 00000000000001ac t BlitBto2
00000000001749e0 0000000000000184 t BlitBto3
0000000000174b70 00000000000001b4 t BlitBto4
0000000000174d30 0000000000000240 t BlitBto1Key
0000000000174f70 0000000000000164 t BlitBto2Key
00000000001750e0 0000000000000160 t BlitBto4Key
0000000000175240 0000000000000dc4 t BlitBtoNAlpha
0000000000176010 0000000000000e48 t BlitBtoNAlphaKey
0000000000176e60 00000000000000d0 t Blit4bto4
0000000000176f30 00000000000000ac t Blit4bto4Key
0000000000176fe0 00000000000001b8 t BlitBto3Key
00000000001771a0 00000000000000f4 T SDL_CalculateBlit0
00000000001772a0 00000000000001dc t Blit1to1
0000000000177480 00000000000001f4 t Blit1to2
0000000000177680 00000000000003cc t Blit1to3
0000000000177a50 0000000000000214 t Blit1to4
0000000000177c70 00000000000004cc t Blit1to1Key
0000000000178140 00000000000002f8 t Blit1to2Key
0000000000178440 0000000000000474 t Blit1to3Key
00000000001788c0 00000000000002c4 t Blit1to4Key
0000000000178b90 0000000000001b50 t Blit1toNAlpha
000000000017a6e0 0000000000003a4c t Blit1toNAlphaKey
000000000017e130 00000000000000b8 T SDL_CalculateBlit1
000000000017e1f0 0000000000000df8 t BlitNto1SurfaceAlpha
000000000017eff0 0000000000000fd0 t BlitNto1PixelAlpha
000000000017ffc0 0000000000001c98 t BlitNto1SurfaceAlphaKey
0000000000181c60 000000000000056c t BlitRGBtoRGBSurfaceAlpha
00000000001821d0 000000000000045c t BlitRGBtoRGBPixelAlpha
0000000000182630 00000000000004d8 t BlitRGBtoBGRPixelAlpha
0000000000182b10 0000000000000330 t Blit16to16SurfaceAlpha128
0000000000182e40 00000000000002ac t Blit565to565SurfaceAlpha
00000000001830f0 00000000000002ac t Blit555to555SurfaceAlpha
00000000001833a0 000000000000050c t BlitARGBto565PixelAlpha
00000000001838b0 000000000000050c t BlitARGBto555PixelAlpha
0000000000183dc0 00000000000021ac t BlitNtoNSurfaceAlpha
0000000000185f70 00000000000020ac t BlitNtoNSurfaceAlphaKey
0000000000188020 0000000000002644 t BlitNtoNPixelAlpha
000000000018a670 00000000000002f4 T SDL_CalculateBlitA
000000000018a970 00000000000006c8 t Blit_RGB888_index8
000000000018b040 00000000000006c8 t Blit_RGB101010_index8
000000000018b710 000000000000034c t Blit_RGB888_RGB555
000000000018ba60 000000000000034c t Blit_RGB888_RGB565
000000000018bdb0 00000000000003c8 t Blit_RGB565_32
000000000018c180 000000000000000c t Blit_RGB565_ARGB8888
000000000018c190 000000000000000c t Blit_RGB565_ABGR8888
000000000018c1a0 000000000000000c t Blit_RGB565_RGBA8888
000000000018c1b0 000000000000000c t Blit_RGB565_BGRA8888
000000000018c1c0 00000000000001f4 t Blit_RGB555_ARGB1555
000000000018c3c0 0000000000001f10 t BlitNto1
000000000018e2d0 00000000000003d8 t Blit4to4MaskAlpha
000000000018e6b0 0000000000000164 t get_permutation
000000000018e820 0000000000002c4c t BlitNtoN
0000000000191470 0000000000000b4c t BlitNtoNCopyAlpha
0000000000191fc0 0000000000002588 t BlitNto1Key
0000000000194550 00000000000002c4 t Blit2to2Key
0000000000194820 0000000000003d8c t BlitNtoNKey
00000000001985b0 0000000000003528 t BlitNtoNKeyCopyAlpha
000000000019bae0 0000000000000f38 t Blit2101010toN
000000000019ca20 0000000000001760 t BlitNto2101010
000000000019e180 000000000000073c t Blit_3or4_to_3or4__same_rgb
000000000019e8c0 0000000000000b38 t Blit_3or4_to_3or4__inversed_rgb
000000000019f400 000000000000034c T SDL_CalculateBlitN
000000000019f750 00000000000000c8 t SDL_Blit_RGB888_RGB888_Scale
000000000019f820 00000000000006a4 t SDL_Blit_RGB888_RGB888_Blend
000000000019fed0 0000000000000228 t SDL_Blit_RGB888_RGB888_Blend_Scale
00000000001a0100 000000000000042c t SDL_Blit_RGB888_RGB888_Modulate
00000000001a0530 0000000000000198 t SDL_Blit_RGB888_RGB888_Modulate_Scale
00000000001a06d0 00000000000007fc t SDL_Blit_RGB888_RGB888_Modulate_Blend
00000000001a0ed0 0000000000000514 t SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale
00000000001a13f0 00000000000000dc t SDL_Blit_RGB888_BGR888_Scale
00000000001a14d0 00000000000006e4 t SDL_Blit_RGB888_BGR888_Blend
00000000001a1bc0 0000000000000230 t SDL_Blit_RGB888_BGR888_Blend_Scale
00000000001a1df0 0000000000000464 t SDL_Blit_RGB888_BGR888_Modulate
00000000001a2260 00000000000001a0 t SDL_Blit_RGB888_BGR888_Modulate_Scale
00000000001a2400 00000000000007f8 t SDL_Blit_RGB888_BGR888_Modulate_Blend
00000000001a2c00 0000000000000520 t SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale
00000000001a3120 00000000000000cc t SDL_Blit_RGB888_ARGB8888_Scale
00000000001a31f0 00000000000006f4 t SDL_Blit_RGB888_ARGB8888_Blend
00000000001a38f0 0000000000000274 t SDL_Blit_RGB888_ARGB8888_Blend_Scale
00000000001a3b70 0000000000000474 t SDL_Blit_RGB888_ARGB8888_Modulate
00000000001a3ff0 00000000000001ac t SDL_Blit_RGB888_ARGB8888_Modulate_Scale
00000000001a41a0 00000000000008ac t SDL_Blit_RGB888_ARGB8888_Modulate_Blend
00000000001a4a50 0000000000000564 t SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale
00000000001a4fc0 0000000000000004 t SDL_Blit_BGR888_RGB888_Scale
00000000001a4fd0 00000000000006e4 t SDL_Blit_BGR888_RGB888_Blend
00000000001a56c0 0000000000000230 t SDL_Blit_BGR888_RGB888_Blend_Scale
00000000001a58f0 0000000000000464 t SDL_Blit_BGR888_RGB888_Modulate
00000000001a5d60 00000000000001a0 t SDL_Blit_BGR888_RGB888_Modulate_Scale
00000000001a5f00 0000000000000804 t SDL_Blit_BGR888_RGB888_Modulate_Blend
00000000001a6710 0000000000000514 t SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale
00000000001a6c30 00000000000006a4 t SDL_Blit_BGR888_BGR888_Blend
00000000001a72e0 0000000000000228 t SDL_Blit_BGR888_BGR888_Blend_Scale
00000000001a7510 000000000000042c t SDL_Blit_BGR888_BGR888_Modulate
00000000001a7940 0000000000000198 t SDL_Blit_BGR888_BGR888_Modulate_Scale
00000000001a7ae0 00000000000007f0 t SDL_Blit_BGR888_BGR888_Modulate_Blend
00000000001a82d0 0000000000000518 t SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale
00000000001a87f0 00000000000000e0 t SDL_Blit_BGR888_ARGB8888_Scale
00000000001a88d0 0000000000000734 t SDL_Blit_BGR888_ARGB8888_Blend
00000000001a9010 0000000000000278 t SDL_Blit_BGR888_ARGB8888_Blend_Scale
00000000001a9290 00000000000004a4 t SDL_Blit_BGR888_ARGB8888_Modulate
00000000001a9740 00000000000001bc t SDL_Blit_BGR888_ARGB8888_Modulate_Scale
00000000001a9900 00000000000008ac t SDL_Blit_BGR888_ARGB8888_Modulate_Blend
00000000001aa1b0 0000000000000564 t SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale
00000000001aa720 00000000000000cc t SDL_Blit_ARGB8888_RGB888_Scale
00000000001aa7f0 00000000000009e8 t SDL_Blit_ARGB8888_RGB888_Blend
00000000001ab1e0 0000000000000424 t SDL_Blit_ARGB8888_RGB888_Blend_Scale
00000000001ab610 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate
00000000001ab620 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate_Scale
00000000001ab630 000000000000096c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend
00000000001abfa0 00000000000005cc t SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale
00000000001ac570 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Scale
00000000001ac580 00000000000009e8 t SDL_Blit_ARGB8888_BGR888_Blend
00000000001acf70 0000000000000430 t SDL_Blit_ARGB8888_BGR888_Blend_Scale
00000000001ad3a0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate
00000000001ad3b0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate_Scale
00000000001ad3c0 000000000000096c t SDL_Blit_ARGB8888_BGR888_Modulate_Blend
00000000001add30 00000000000005c8 t SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale
00000000001ae300 0000000000000a58 t SDL_Blit_ARGB8888_ARGB8888_Blend
00000000001aed60 0000000000000414 t SDL_Blit_ARGB8888_ARGB8888_Blend_Scale
00000000001af180 00000000000006ec t SDL_Blit_ARGB8888_ARGB8888_Modulate
00000000001af870 00000000000002c0 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale
00000000001afb30 0000000000000a10 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend
00000000001b0540 0000000000000538 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale
00000000001b0a80 00000000000000cc t SDL_Blit_RGBA8888_RGB888_Scale
00000000001b0b50 00000000000009e0 t SDL_Blit_RGBA8888_RGB888_Blend
00000000001b1530 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Blend_Scale
00000000001b1960 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Modulate
00000000001b1d90 0000000000000190 t SDL_Blit_RGBA8888_RGB888_Modulate_Scale
00000000001b1f20 000000000000096c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend
00000000001b2890 00000000000005cc t SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale
00000000001b2e60 00000000000000dc t SDL_Blit_RGBA8888_BGR888_Scale
00000000001b2f40 00000000000009e0 t SDL_Blit_RGBA8888_BGR888_Blend
00000000001b3920 0000000000000430 t SDL_Blit_RGBA8888_BGR888_Blend_Scale
00000000001b3d50 000000000000046c t SDL_Blit_RGBA8888_BGR888_Modulate
00000000001b41c0 00000000000001a8 t SDL_Blit_RGBA8888_BGR888_Modulate_Scale
00000000001b4370 000000000000096c t SDL_Blit_RGBA8888_BGR888_Modulate_Blend
00000000001b4ce0 00000000000005c8 t SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale
00000000001b52b0 00000000000000cc t SDL_Blit_RGBA8888_ARGB8888_Scale
00000000001b5380 0000000000000a58 t SDL_Blit_RGBA8888_ARGB8888_Blend
00000000001b5de0 0000000000000414 t SDL_Blit_RGBA8888_ARGB8888_Blend_Scale
00000000001b6200 000000000000075c t SDL_Blit_RGBA8888_ARGB8888_Modulate
00000000001b6960 00000000000002d8 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale
00000000001b6c40 0000000000000a10 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend
00000000001b7650 0000000000000538 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale
00000000001b7b90 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Scale
00000000001b7ba0 00000000000009e8 t SDL_Blit_ABGR8888_RGB888_Blend
00000000001b8590 000000000000042c t SDL_Blit_ABGR8888_RGB888_Blend_Scale
00000000001b89c0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate
00000000001b89d0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate_Scale
00000000001b89e0 000000000000096c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend
00000000001b9350 00000000000005cc t SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale
00000000001b9920 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Scale
00000000001b9930 00000000000009e8 t SDL_Blit_ABGR8888_BGR888_Blend
00000000001ba320 0000000000000430 t SDL_Blit_ABGR8888_BGR888_Blend_Scale
00000000001ba750 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate
00000000001ba760 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate_Scale
00000000001ba770 000000000000096c t SDL_Blit_ABGR8888_BGR888_Modulate_Blend
00000000001bb0e0 00000000000005c8 t SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale
00000000001bb6b0 00000000000000dc t SDL_Blit_ABGR8888_ARGB8888_Scale
00000000001bb790 0000000000000a50 t SDL_Blit_ABGR8888_ARGB8888_Blend
00000000001bc1e0 0000000000000414 t SDL_Blit_ABGR8888_ARGB8888_Blend_Scale
00000000001bc600 000000000000079c t SDL_Blit_ABGR8888_ARGB8888_Modulate
00000000001bcda0 00000000000002e8 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale
00000000001bd090 0000000000000a10 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend
00000000001bdaa0 0000000000000538 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale
00000000001bdfe0 0000000000000004 t SDL_Blit_BGRA8888_RGB888_Scale
00000000001bdff0 00000000000009e0 t SDL_Blit_BGRA8888_RGB888_Blend
00000000001be9d0 000000000000042c t SDL_Blit_BGRA8888_RGB888_Blend_Scale
00000000001bee00 000000000000046c t SDL_Blit_BGRA8888_RGB888_Modulate
00000000001bf270 00000000000001a8 t SDL_Blit_BGRA8888_RGB888_Modulate_Scale
00000000001bf420 000000000000096c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend
00000000001bfd90 00000000000005cc t SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale
00000000001c0360 0000000000000004 t SDL_Blit_BGRA8888_BGR888_Scale
00000000001c0370 00000000000009e8 t SDL_Blit_BGRA8888_BGR888_Blend
00000000001c0d60 0000000000000430 t SDL_Blit_BGRA8888_BGR888_Blend_Scale
00000000001c1190 0000000000000424 t SDL_Blit_BGRA8888_BGR888_Modulate
00000000001c15c0 0000000000000190 t SDL_Blit_BGRA8888_BGR888_Modulate_Scale
00000000001c1750 000000000000096c t SDL_Blit_BGRA8888_BGR888_Modulate_Blend
00000000001c20c0 00000000000005c8 t SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale
00000000001c2690 00000000000000cc t SDL_Blit_BGRA8888_ARGB8888_Scale
00000000001c2760 0000000000000a50 t SDL_Blit_BGRA8888_ARGB8888_Blend
00000000001c31b0 0000000000000414 t SDL_Blit_BGRA8888_ARGB8888_Blend_Scale
00000000001c35d0 00000000000007bc t SDL_Blit_BGRA8888_ARGB8888_Modulate
00000000001c3d90 00000000000002ec t SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale
00000000001c4080 0000000000000a10 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend
00000000001c4a90 0000000000000538 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale
00000000001c4fd0 00000000000000c8 t SDL_Blit_ARGB8888_ARGB8888_Scale
00000000001c50a0 00000000000000c8 t SDL_Blit_BGR888_BGR888_Scale
00000000001c5170 0000000000000160 T SDL_BlitCopy
00000000001c52d0 0000000000001450 T SDL_Blit_Slow
00000000001c6720 0000000000000090 t SDL_EGL_GetVersion
00000000001c67b0 0000000000000134 T SDL_EGL_SetErrorEx
00000000001c68f0 0000000000000134 T SDL_EGL_HasExtension
00000000001c6a30 0000000000000548 t SDL_EGL_PrivateChooseConfig
00000000001c6f80 00000000000000b0 T SDL_EGL_GetProcAddress
00000000001c7030 0000000000000080 T SDL_EGL_UnloadLibrary
00000000001c70b0 0000000000000284 T SDL_EGL_LoadLibraryOnly
00000000001c7340 0000000000000168 T SDL_EGL_LoadLibrary
00000000001c74b0 000000000000008c T SDL_EGL_ChooseConfig
00000000001c7540 0000000000000104 T SDL_EGL_MakeCurrent
00000000001c7650 0000000000000094 T SDL_EGL_SetSwapInterval
00000000001c76f0 0000000000000030 T SDL_EGL_GetSwapInterval
00000000001c7720 0000000000000060 T SDL_EGL_SwapBuffers
00000000001c7780 0000000000000024 T SDL_EGL_DeleteContext
00000000001c77b0 00000000000003bc T SDL_EGL_CreateContext
00000000001c7b70 0000000000000160 T SDL_EGL_CreateSurface
00000000001c7cd0 0000000000000024 T SDL_EGL_DestroySurface
00000000001c7d00 0000000000000004 T SWITCH_InitKeyboard
00000000001c7d10 00000000000000c4 T SWITCH_PollKeyboard
00000000001c7de0 0000000000000004 T SWITCH_QuitKeyboard
00000000001c7df0 0000000000000008 t SWITCH_SetRelativeMouseMode
00000000001c7e00 0000000000000020 T SWITCH_InitMouse
00000000001c7e20 0000000000000154 T SWITCH_PollMouse
00000000001c7f80 0000000000000004 T SWITCH_QuitMouse
00000000001c7f90 0000000000000018 T SWITCH_GLES_DefaultProfileConfig
00000000001c7fb0 000000000000000c T SWITCH_GLES_LoadLibrary
00000000001c7fc0 000000000000000c T SWITCH_GLES_CreateContext
00000000001c7fd0 0000000000000010 T SWITCH_GLES_MakeCurrent
00000000001c7fe0 000000000000000c T SWITCH_GLES_SwapWindow
00000000001c7ff0 0000000000000004 t SWITCH_CancelCb
00000000001c8000 0000000000000030 t SWITCH_EnterCb
00000000001c8030 0000000000000004 T SWITCH_InitSwkb
00000000001c8040 000000000000004c T SWITCH_PollSwkb
00000000001c8090 0000000000000040 T SWITCH_QuitSwkb
00000000001c80d0 0000000000000008 T SWITCH_HasScreenKeyboardSupport
00000000001c80e0 000000000000000c T SWITCH_IsScreenKeyboardShown
00000000001c80f0 0000000000000100 T SWITCH_StartTextInput
00000000001c81f0 000000000000003c T SWITCH_StopTextInput
00000000001c8230 0000000000000064 T SWITCH_InitTouch
00000000001c82a0 0000000000000004 T SWITCH_QuitTouch
00000000001c82b0 0000000000000524 T SWITCH_PollTouch
00000000001c87e0 0000000000000028 T SDL_LoadFunction
00000000001c8810 0000000000000004 T SDL_UnloadObject
00000000001c8820 0000000000000038 T eglGetError
00000000001c8860 00000000000000bc t _eglSetFuncName
00000000001c8920 0000000000000034 T eglQueryAPI
00000000001c8960 00000000000000dc t _eglConvertAttribsToInt
00000000001c8a40 00000000000000f0 t _eglWaitClientCommon
00000000001c8b30 000000000000003c T eglGetCurrentDisplay
00000000001c8b70 0000000000000044 T eglGetCurrentContext
00000000001c8bc0 0000000000000008 t _eglFunctionCompare
00000000001c8bd0 0000000000000100 t _eglConvertIntsToAttribs
00000000001c8cd0 00000000000000d4 t _eglGetSyncAttribCommon
00000000001c8db0 00000000000000ec t _eglDestroySync
00000000001c8ea0 00000000000000fc t _eglDestroyImageCommon
00000000001c8fa0 0000000000000160 t _eglClientWaitSyncCommon
00000000001c9100 000000000000011c t _eglWaitSyncCommon
00000000001c9220 000000000000014c t _eglCreateImageCommon
00000000001c9370 00000000000000b8 T eglDestroyImage
00000000001c9430 00000000000000b8 t eglDestroyImageKHR
00000000001c94f0 00000000000000b8 T eglDestroySync
00000000001c95b0 00000000000000b8 t eglDestroySyncKHR
00000000001c9670 00000000000000cc T eglWaitSync
00000000001c9740 00000000000000cc t eglWaitSyncKHR
00000000001c9810 000000000000017c t _eglSwapBuffersWithDamageCommon
00000000001c9990 00000000000000d4 t eglSwapBuffersWithDamageKHR
00000000001c9a70 00000000000000d4 t eglSwapBuffersWithDamageEXT
00000000001c9b50 00000000000000f8 T eglClientWaitSync
00000000001c9c50 00000000000000f8 t eglClientWaitSyncKHR
00000000001c9d50 0000000000000194 t _eglCreatePixmapSurfaceCommon
00000000001c9ef0 0000000000000118 T eglGetSyncAttrib
00000000001ca010 0000000000000198 t _eglCreateWindowSurfaceCommon
00000000001ca1b0 0000000000000120 t eglGetSyncAttribKHR
00000000001ca2d0 00000000000001c8 t _eglCreateSync
00000000001ca4a0 0000000000000164 T eglQueryContext
00000000001ca610 0000000000000164 T eglSurfaceAttrib
00000000001ca780 0000000000000160 T eglBindTexImage
00000000001ca8e0 0000000000000160 T eglReleaseTexImage
00000000001caa40 0000000000000160 T eglCopyBuffers
00000000001caba0 0000000000000160 t eglSignalSyncKHR
00000000001cad00 0000000000000168 T eglDestroyContext
00000000001cae70 0000000000000168 T eglDestroySurface
00000000001cafe0 0000000000000190 t eglExportDRMImageMESA
00000000001cb170 0000000000000190 t eglExportDMABUFImageQueryMESA
00000000001cb300 0000000000000190 t eglExportDMABUFImageMESA
00000000001cb490 0000000000000190 t eglPostSubBufferNV
00000000001cb620 0000000000000178 t eglDupNativeFenceFDANDROID
00000000001cb7a0 0000000000000198 T eglQuerySurface
00000000001cb940 0000000000000198 t eglGetSyncValuesCHROMIUM
00000000001cbae0 000000000000018c t eglSwapBuffersRegionNOK
00000000001cbc70 00000000000001f0 T eglSwapBuffers
00000000001cbe60 00000000000001ac T eglSwapInterval
00000000001cc010 0000000000000278 t eglSetDamageRegionKHR
00000000001cc290 00000000000002ec T eglMakeCurrent
00000000001cc580 00000000000000c0 t eglQueryDevicesEXT
00000000001cc640 0000000000000074 T eglGetDisplay
00000000001cc6c0 00000000000000b0 T eglGetPlatformDisplay
00000000001cc770 0000000000000070 T eglWaitClient
00000000001cc7e0 0000000000000070 T eglWaitGL
00000000001cc850 00000000000000fc t eglQueryDeviceAttribEXT
00000000001cc950 00000000000000e8 T eglGetCurrentSurface
00000000001cca40 00000000000000cc T eglBindAPI
00000000001ccb10 00000000000000f4 t eglGetPlatformDisplayEXT
00000000001ccc10 00000000000000ec t eglQueryDeviceStringEXT
00000000001ccd00 0000000000000120 t eglQueryDebugKHR
00000000001cce20 00000000000000ec T eglGetProcAddress
00000000001ccf10 0000000000000140 t eglQueryDisplayAttribEXT
00000000001cd050 0000000000000164 t eglQueryDmaBufFormatsEXT
00000000001cd1c0 000000000000011c T eglCreateWindowSurface
00000000001cd2e0 000000000000011c t eglCreatePlatformWindowSurfaceEXT
00000000001cd400 000000000000011c T eglCreatePixmapSurface
00000000001cd520 000000000000011c t eglCreatePlatformPixmapSurfaceEXT
00000000001cd640 0000000000000184 t eglQueryDmaBufModifiersEXT
00000000001cd7d0 0000000000000138 t eglDebugMessageControlKHR
00000000001cd910 0000000000000118 t eglCreateImageKHR
00000000001cda30 0000000000000104 T eglCreateSync
00000000001cdb40 0000000000000104 t eglCreateSync64KHR
00000000001cdc50 000000000000013c T eglWaitNative
00000000001cdd90 000000000000018c t eglLabelObjectKHR
00000000001cdf20 0000000000000188 T eglCreatePlatformWindowSurface
00000000001ce0b0 0000000000000188 T eglCreatePlatformPixmapSurface
00000000001ce240 0000000000000170 t eglCreateSyncKHR
00000000001ce3b0 0000000000000128 T eglTerminate
00000000001ce4e0 0000000000000194 T eglCreateImage
00000000001ce680 0000000000000154 t eglGetDisplayDriverName
00000000001ce7e0 0000000000000154 t eglGetDisplayDriverConfig
00000000001ce940 00000000000000d0 T eglReleaseThread
00000000001cea10 000000000000015c T eglCreatePbufferFromClientBuffer
00000000001ceb70 0000000000000164 T eglGetConfigs
00000000001cece0 0000000000000150 t eglCreateDRMImageMESA
00000000001cee30 0000000000000160 t eglUnbindWaylandDisplayWL
00000000001cef90 0000000000000160 t eglBindWaylandDisplayWL
00000000001cf0f0 000000000000016c T eglChooseConfig
00000000001cf260 0000000000000188 T eglGetConfigAttrib
00000000001cf3f0 000000000000017c t eglQueryWaylandBufferWL
00000000001cf570 0000000000000178 t eglSetBlobCacheFuncsANDROID
00000000001cf6f0 00000000000001a8 t eglCreateWaylandBufferFromImageWL
00000000001cf8a0 000000000000019c T eglCreatePbufferSurface
00000000001cfa40 0000000000000288 T eglCreateContext
00000000001cfcd0 000000000000022c T eglQueryString
00000000001cff00 0000000000000bd4 T eglInitialize
00000000001d0ae0 0000000000000190 t _eglOffsetOfConfig
00000000001d0c70 0000000000000154 t _eglSortConfigs
00000000001d0dd0 000000000000000c t _eglFlattenConfig
00000000001d0de0 0000000000000048 t _eglInitConfig
00000000001d0e30 0000000000000050 t _eglLinkConfig
00000000001d0e80 000000000000001c t _eglLookupConfig
00000000001d0ea0 00000000000002dc t _eglValidateConfig
00000000001d1180 0000000000000234 t _eglMatchConfig
00000000001d13c0 0000000000000004 t _eglFallbackMatch
00000000001d13d0 00000000000001c8 t _eglParseConfigAttribList
00000000001d15a0 000000000000016c t _eglCompareConfigs
00000000001d1710 0000000000000008 t _eglFallbackCompare
00000000001d1720 000000000000010c t _eglFilterConfigArray
00000000001d1830 000000000000008c t _eglChooseConfig
00000000001d18c0 00000000000000b8 t _eglGetConfigAttrib
00000000001d1980 0000000000000040 t _eglGetConfigs
00000000001d19c0 000000000000066c t _eglInitContext
00000000001d2030 00000000000000ec t _eglQueryContext
00000000001d2120 00000000000003a8 t _eglBindContext
00000000001d24d0 0000000000000074 t _eglGetCurrentThread
00000000001d2550 0000000000000048 t _eglDestroyCurrentThread
00000000001d25a0 0000000000000034 t _eglIsCurrentThreadDummy
00000000001d25e0 0000000000000074 t _eglGetCurrentContext
00000000001d2660 0000000000000360 t _eglDebugReport
00000000001d29c0 00000000000000b4 t _eglError
00000000001d2a80 0000000000000040 T _eglFiniDevice
00000000001d2ac0 0000000000000074 t _eglCheckDeviceHandle
00000000001d2b40 0000000000000024 t _eglDeviceSupports
00000000001d2b70 0000000000000024 t _eglQueryDeviceAttribEXT
00000000001d2ba0 0000000000000038 t _eglQueryDeviceStringEXT
00000000001d2be0 00000000000000d8 t _eglQueryDevicesEXT
00000000001d2cc0 000000000000010c t _eglGetNativePlatform
00000000001d2dd0 0000000000000098 T _eglFiniDisplay
00000000001d2e70 00000000000001ec t _eglFindDisplay
00000000001d3060 00000000000001d0 t _eglReleaseDisplayResources
00000000001d3230 0000000000000038 t _eglCleanupDisplay
00000000001d3270 0000000000000074 t _eglCheckDisplayHandle
00000000001d32f0 0000000000000038 t _eglCheckResource
00000000001d3330 0000000000000038 t _eglInitResource
00000000001d3370 0000000000000010 t _eglGetResource
00000000001d3380 0000000000000014 t _eglPutResource
00000000001d33a0 000000000000002c t _eglLinkResource
00000000001d33d0 0000000000000074 t _eglUnlinkResource
00000000001d3450 0000000000000188 t _eglGetDeviceDisplay
00000000001d35e0 0000000000000074 t _eglGetDriver
00000000001d3660 00000000000000d0 t _eglMatchDriver
00000000001d3730 000000000000004c t _eglGetDriverProc
00000000001d3780 0000000000000028 T _eglUnloadDrivers
00000000001d37b0 000000000000000c t _eglPointerIsDereferencable
00000000001d37c0 00000000000001f0 t _eglLog
00000000001d39b0 00000000000004ec t _eglInitSurface
00000000001d3ea0 0000000000000314 t _eglQuerySurface
00000000001d41c0 0000000000000198 t _eglSurfaceAttrib
00000000001d4360 0000000000000008 t _eglSwapInterval
00000000001d4370 00000000000000f0 t _eglGetSyncAttrib
00000000001d4460 0000000000000008 t switch_st_framebuffer_flush_front
00000000001d4470 0000000000000008 t switch_st_framebuffer_flush_swapbuffers
00000000001d4480 0000000000000008 t switch_create_pixmap_surface
00000000001d4490 0000000000000008 t switch_create_pbuffer_surface
00000000001d44a0 0000000000000008 t switch_st_get_param
00000000001d44b0 0000000000000008 t switch_get_proc_address
00000000001d44c0 00000000000000e4 t switch_swap_buffers
00000000001d45b0 0000000000000020 t switch_swap_interval
00000000001d45d0 0000000000000190 t switch_create_context
00000000001d4760 000000000000005c t switch_terminate
00000000001d47c0 0000000000000048 t switch_destroy_context
00000000001d4810 00000000000001d0 t switch_st_framebuffer_validate
00000000001d49e0 0000000000000134 t switch_egl_surface_cleanup
00000000001d4b20 0000000000000224 t switch_create_window_surface
00000000001d4d50 0000000000000050 t switch_destroy_surface
00000000001d4da0 0000000000000124 t switch_make_current
00000000001d4ed0 0000000000000420 t switch_initialize
00000000001d52f0 0000000000000080 t _eglInitDriver
00000000001d5370 00000000000000a0 t st_framebuffer_update_attachments
00000000001d5410 0000000000000004 t st_framebuffer_iface_hash
00000000001d5420 000000000000000c t st_framebuffer_iface_equal
00000000001d5430 000000000000002c t st_api_get_current
00000000001d5460 0000000000000004 t st_api_destroy
00000000001d5470 00000000000000d4 t st_context_validate
00000000001d5550 0000000000000004 t st_context_destroy
00000000001d5560 0000000000000024 t st_context_share
00000000001d5590 0000000000000010 t st_context_copy
00000000001d55a0 0000000000000050 t st_manager_destroy
00000000001d55f0 00000000000000bc t get_version
00000000001d56b0 0000000000000090 t st_api_query_versions
00000000001d5740 0000000000000068 t st_api_destroy_drawable
00000000001d57b0 00000000000000dc t st_framebuffers_purge
00000000001d5890 0000000000000338 t st_context_teximage
00000000001d5bd0 0000000000000230 t st_framebuffer_add_renderbuffer
00000000001d5e00 0000000000000548 t st_visual_to_context_mode
00000000001d6350 00000000000002d4 t st_framebuffer_reuse_or_create.isra.0
00000000001d6630 000000000000034c t st_api_create_context
00000000001d6980 0000000000000228 t st_set_ws_renderbuffer_surface
00000000001d6bb0 00000000000002e4 t st_framebuffer_validate
00000000001d6ea0 000000000000017c t st_api_make_current
00000000001d7020 0000000000000014 t st_framebuffer_reference
00000000001d7040 000000000000009c t st_manager_flush_frontbuffer
00000000001d70e0 00000000000000fc t st_context_flush
00000000001d71e0 0000000000000120 t st_manager_validate_framebuffers
00000000001d7300 0000000000000074 t st_manager_flush_swapbuffers
00000000001d7380 00000000000000c8 t st_manager_add_color_renderbuffer
00000000001d7450 000000000000000c t st_gl_api_create
00000000001d7460 00000000000000d4 t st_texture_release_all_sampler_views.part.0
00000000001d7540 000000000000022c t st_texture_set_sampler_view
00000000001d7770 0000000000000058 t st_texture_get_current_sampler_view
00000000001d77d0 00000000000000c0 t st_texture_release_context_sampler_view
00000000001d7890 0000000000000010 t st_texture_release_all_sampler_views
00000000001d78a0 0000000000000058 t st_delete_texture_sampler_views
00000000001d7900 000000000000074c t st_get_texture_sampler_view_from_stobj
00000000001d8050 0000000000000118 t st_get_buffer_sampler_view_from_stobj
00000000001d8170 0000000000000018 t u_surface_default_template
00000000001d8190 00000000000000c4 t util_copy_box
00000000001d8260 00000000000002b8 t util_resource_copy_region
00000000001d8520 0000000000000060 t nouveau_drm_screen_unref
00000000001d8580 00000000000000f8 T nouveau_switch_screen_create
00000000001d8680 0000000000000008 T nouveau_switch_resource_get_syncpoint
00000000001d8690 00000000000001fc T nouveau_switch_resource_get_buffer
00000000001d8890 00000000000000e8 t nvc0_screen_get_shader_param
00000000001d8980 000000000000009c t nvc0_screen_get_paramf
00000000001d8a20 0000000000000054 t nvc0_screen_get_sample_pixel_grid
00000000001d8a80 0000000000000054 t nvc0_screen_fence_emit
00000000001d8ae0 000000000000000c t nvc0_screen_fence_update
00000000001d8af0 00000000000003d0 t nvc0_screen_get_param
00000000001d8ec0 00000000000001b4 t nvc0_screen_is_format_supported
00000000001d9080 00000000000001dc t nvc0_screen_get_compute_param
00000000001d9260 0000000000000028 t PUSH_SPACE.isra.0
00000000001d9290 0000000000000160 t nvc0_screen_destroy
00000000001d93f0 0000000000000120 t nvc0_graph_set_macro.isra.0
00000000001d9510 0000000000000174 t nvc0_screen_resize_text_area
00000000001d9690 00000000000002a8 t nvc0_screen_bind_cb_3d
00000000001d9940 000000000000205c t nvc0_screen_create
00000000001db9a0 000000000000007c t nvc0_screen_tic_alloc
00000000001dba20 000000000000007c t nvc0_screen_tsc_alloc
00000000001dbaa0 0000000000000004 t nvc0_flush_resource
00000000001dbab0 0000000000000330 t nvc0_clear_buffer_push_nve4
00000000001dbde0 000000000000037c t nvc0_clear_buffer_push_nvc0
00000000001dc160 0000000000000070 t nvc0_clear_buffer_push
00000000001dc1d0 0000000000000084 t gm200_evaluate_depth_buffer
00000000001dc260 0000000000000414 t nvc0_2d_texture_set
00000000001dc680 0000000000000718 t nvc0_clear_buffer
00000000001dcda0 0000000000000504 t nvc0_resource_copy_region
00000000001dd2b0 0000000000000500 t nvc0_clear_depth_stencil
00000000001dd7b0 00000000000005b0 t nvc0_clear_render_target
00000000001ddd60 0000000000002a68 t nvc0_blit
00000000001e07d0 0000000000000564 T nvc0_clear
00000000001e0d40 000000000000011c t nvc0_blitter_create
00000000001e0e60 0000000000000084 t nvc0_blitter_destroy
00000000001e0ef0 000000000000004c t nvc0_blitctx_create
00000000001e0f40 0000000000000008 t nvc0_blitctx_destroy
00000000001e0f50 0000000000000078 t nvc0_init_surface_functions
00000000001e0fd0 0000000000000034 t nve4_delete_image_handle
00000000001e1010 00000000000000bc t nve4_make_texture_handle_resident
00000000001e10d0 000000000000017c t gm107_make_image_handle_resident
00000000001e1250 00000000000000dc t nvc0_get_surface_dims
00000000001e1330 0000000000000064 t gm107_delete_image_handle
00000000001e13a0 0000000000000150 t nve4_delete_texture_handle
00000000001e14f0 0000000000000590 t gf100_create_texture_view
00000000001e1a80 000000000000060c t gm107_create_texture_view
00000000001e2090 0000000000000200 t nve4_create_texture_handle
00000000001e2290 0000000000000030 T nvc0_create_sampler_view
00000000001e22c0 00000000000000c8 t gm107_create_texture_view_from_image
00000000001e2390 0000000000000144 t gm107_create_image_handle
00000000001e24e0 0000000000000014 t nvc0_create_texture_view
00000000001e2500 0000000000000098 t nvc0_update_tic
00000000001e25a0 000000000000048c t nvc0_validate_tic
00000000001e2a30 00000000000003d0 T nvc0_validate_textures
00000000001e2e00 000000000000035c t nvc0_validate_tsc
00000000001e3160 00000000000001a8 t nve4_validate_tsc
00000000001e3310 00000000000000f4 T nvc0_validate_samplers
00000000001e3410 000000000000009c t nvc0_upload_tsc0
00000000001e34b0 0000000000000194 T nve4_set_tex_handles
00000000001e3650 00000000000000ac t nvc0_mark_image_range_valid
00000000001e3700 00000000000000fc t nve4_make_image_handle_resident
00000000001e3800 00000000000002fc t nve4_set_surface_info
00000000001e3b00 0000000000000194 t nve4_create_image_handle
00000000001e3ca0 00000000000005e0 t nvc0_validate_suf
00000000001e4280 00000000000004c8 T nvc0_validate_surfaces
00000000001e4750 0000000000000088 t nvc0_init_bindless_functions
00000000001e47e0 0000000000000200 t nvc0_m2mf_copy_linear
00000000001e49e0 0000000000000208 t nve4_p2mf_push_linear
00000000001e4bf0 000000000000023c t nvc0_m2mf_push_linear
00000000001e4e30 0000000000000190 t nve4_m2mf_copy_linear
00000000001e4fc0 000000000000050c t nvc0_m2mf_transfer_rect
00000000001e54d0 0000000000000374 t nve4_m2mf_transfer_rect
00000000001e5850 00000000000005d8 T nvc0_miptree_transfer_map
00000000001e5e30 0000000000000184 T nvc0_miptree_transfer_unmap
00000000001e5fc0 00000000000001a4 t nvc0_cb_bo_push
00000000001e6170 00000000000000e0 t nvc0_cb_push
00000000001e6250 000000000000007c t nvc0_init_transfer_functions
00000000001e62d0 0000000000000170 t nve4_upload_indirect_desc
00000000001e6440 00000000000000b0 t nve4_compute_validate_samplers
00000000001e64f0 000000000000024c t nve4_compute_validate_buffers
00000000001e6740 000000000000036c t nve4_compute_validate_constbufs
00000000001e6ab0 0000000000000218 t nve4_compute_set_tex_handles
00000000001e6cd0 000000000000049c t nve4_compute_validate_textures
00000000001e7170 00000000000005f8 t nve4_compute_validate_surfaces
00000000001e7770 00000000000006e0 t nve4_screen_compute_setup
00000000001e7e50 0000000000000c44 T nve4_launch_grid
00000000001e8aa0 00000000000000fc t env_var_as_boolean
00000000001e8ba0 00000000000002d0 t XXH32_finalize
00000000001e8e70 00000000000000f4 t hash_table_search
00000000001e8f70 0000000000000020 T _mesa_hash_pointer
00000000001e8f90 000000000000000c T _mesa_key_pointer_equal
00000000001e8fa0 0000000000000164 t _mesa_hash_table_rehash
00000000001e9110 0000000000000194 t hash_table_insert
00000000001e92b0 000000000000009c t _mesa_hash_table_create
00000000001e9350 00000000000000bc t _mesa_hash_table_destroy
00000000001e9410 0000000000000080 t _mesa_hash_table_clear
00000000001e9490 0000000000000008 t _mesa_hash_table_set_deleted_key
00000000001e94a0 0000000000000038 t _mesa_hash_table_search
00000000001e94e0 0000000000000004 t _mesa_hash_table_search_pre_hashed
00000000001e94f0 0000000000000040 t _mesa_hash_table_insert
00000000001e9530 0000000000000004 t _mesa_hash_table_insert_pre_hashed
00000000001e9540 0000000000000024 t _mesa_hash_table_remove
00000000001e9570 0000000000000054 t _mesa_hash_table_next_entry
00000000001e95d0 00000000000001e4 t _mesa_hash_data
00000000001e97c0 0000000000000034 t _mesa_hash_string
00000000001e9800 000000000000001c T _mesa_key_string_equal
00000000001e9820 0000000000000014 t _mesa_pointer_hash_table_create
00000000001e9840 000000000000005c t _mesa_hash_table_u64_create
00000000001e98a0 00000000000000d4 t _mesa_hash_table_u64_clear
00000000001e9980 000000000000003c t _mesa_hash_table_u64_destroy
00000000001e99c0 0000000000000058 t _mesa_hash_table_u64_insert
00000000001e9a20 0000000000000058 t _mesa_hash_table_u64_search
00000000001e9a80 0000000000000080 t _mesa_hash_table_u64_remove
00000000001e9b00 0000000000000084 t resize
00000000001e9b90 0000000000000038 t printf_length
00000000001e9bd0 00000000000001ec t unsafe_free
00000000001e9dc0 0000000000000058 t ralloc_context
00000000001e9e20 0000000000000058 t ralloc_size
00000000001e9e80 0000000000000038 t rzalloc_size
00000000001e9ec0 0000000000000018 t reralloc_size
00000000001e9ee0 0000000000000080 t ralloc_array_size
00000000001e9f60 0000000000000058 t rzalloc_array_size
00000000001e9fc0 000000000000002c t reralloc_array_size
00000000001e9ff0 0000000000000098 t ralloc_free
00000000001ea090 00000000000000a0 t ralloc_steal
00000000001ea130 0000000000000018 t ralloc_parent
00000000001ea150 0000000000000008 t ralloc_set_destructor
00000000001ea160 0000000000000070 t ralloc_strdup
00000000001ea1d0 0000000000000070 t ralloc_strndup
00000000001ea240 0000000000000098 t ralloc_strcat
00000000001ea2e0 00000000000000b8 t ralloc_asprintf
00000000001ea3a0 0000000000000074 t ralloc_vasprintf
00000000001ea420 0000000000000124 t ralloc_vasprintf_rewrite_tail
00000000001ea550 000000000000005c t ralloc_vasprintf_append
00000000001ea5b0 0000000000000064 t ralloc_asprintf_rewrite_tail
00000000001ea620 00000000000000a4 t ralloc_asprintf_append
00000000001ea6d0 00000000000000cc t linear_alloc_child
00000000001ea7a0 0000000000000080 t linear_alloc_parent
00000000001ea820 0000000000000038 t linear_zalloc_child
00000000001ea860 0000000000000078 t linear_strdup
00000000001ea8e0 00000000000000bc t linear_asprintf
00000000001ea9a0 0000000000000158 t linear_vasprintf_rewrite_tail
00000000001eab00 00000000000000ac t linear_asprintf_append
00000000001eabb0 00000000000000d4 t linear_strcat
00000000001eac90 000000000000008c t _debug_printf
00000000001ead20 0000000000000040 t _debug_vprintf
00000000001ead60 0000000000000070 t _pipe_debug_message
00000000001eadd0 0000000000000110 t debug_get_bool_option
00000000001eaee0 0000000000000228 t debug_get_flags_option
00000000001eb110 0000000000000060 t debug_dump_enum
00000000001eb170 0000000000000190 t util_copy_rect
00000000001eb300 000000000000007c t util_format_is_float
00000000001eb380 0000000000000038 t util_format_has_alpha
00000000001eb3c0 0000000000000050 t util_format_is_luminance
00000000001eb410 0000000000000060 t util_format_is_alpha
00000000001eb470 0000000000000068 t util_format_is_pure_integer
00000000001eb4e0 0000000000000074 t util_format_is_pure_sint
00000000001eb560 0000000000000074 t util_format_is_pure_uint
00000000001eb5e0 000000000000001c t util_format_is_snorm
00000000001eb600 0000000000000050 t util_format_is_luminance_alpha
00000000001eb650 0000000000000050 t util_format_is_intensity
00000000001eb6a0 0000000000000070 t util_format_read_4f
00000000001eb710 0000000000000070 t util_format_read_4ub
00000000001eb780 0000000000000070 t util_format_read_4ui
00000000001eb7f0 0000000000000070 t util_format_read_4i
00000000001eb860 0000000000000104 t util_format_apply_color_swizzle
00000000001eb970 0000000000000074 t util_format_none_unpack_rgba_float
00000000001eb9f0 0000000000000090 t util_format_none_pack_rgba_float
00000000001eba80 000000000000001c t util_format_none_fetch_rgba_float
00000000001ebaa0 000000000000007c t util_format_none_unpack_rgba_8unorm
00000000001ebb20 000000000000006c t util_format_none_pack_rgba_8unorm
00000000001ebb90 000000000000024c t util_format_b8g8r8a8_unorm_unpack_rgba_float
00000000001ebde0 0000000000000050 t util_format_b8g8r8a8_unorm_fetch_rgba_float
00000000001ebe30 0000000000000078 t util_format_b8g8r8a8_unorm_unpack_rgba_8unorm
00000000001ebeb0 0000000000000064 t util_format_b8g8r8a8_unorm_pack_rgba_8unorm
00000000001ebf20 00000000000001f4 t util_format_b8g8r8x8_unorm_unpack_rgba_float
00000000001ec120 0000000000000044 t util_format_b8g8r8x8_unorm_fetch_rgba_float
00000000001ec170 000000000000007c t util_format_b8g8r8x8_unorm_unpack_rgba_8unorm
00000000001ec1f0 0000000000000074 t util_format_b8g8r8x8_unorm_pack_rgba_8unorm
00000000001ec270 000000000000024c t util_format_a8r8g8b8_unorm_unpack_rgba_float
00000000001ec4c0 0000000000000050 t util_format_a8r8g8b8_unorm_fetch_rgba_float
00000000001ec510 0000000000000078 t util_format_a8r8g8b8_unorm_unpack_rgba_8unorm
00000000001ec590 000000000000007c t util_format_a8r8g8b8_unorm_pack_rgba_8unorm
00000000001ec610 0000000000000210 t util_format_x8r8g8b8_unorm_unpack_rgba_float
00000000001ec820 0000000000000048 t util_format_x8r8g8b8_unorm_fetch_rgba_float
00000000001ec870 0000000000000080 t util_format_x8r8g8b8_unorm_unpack_rgba_8unorm
00000000001ec8f0 0000000000000074 t util_format_x8r8g8b8_unorm_pack_rgba_8unorm
00000000001ec970 000000000000024c t util_format_a8b8g8r8_unorm_unpack_rgba_float
00000000001ecbc0 0000000000000050 t util_format_a8b8g8r8_unorm_fetch_rgba_float
00000000001ecc10 0000000000000078 t util_format_a8b8g8r8_unorm_unpack_rgba_8unorm
00000000001ecc90 0000000000000060 t util_format_a8b8g8r8_unorm_pack_rgba_8unorm
00000000001eccf0 0000000000000210 t util_format_x8b8g8r8_unorm_unpack_rgba_float
00000000001ecf00 0000000000000048 t util_format_x8b8g8r8_unorm_fetch_rgba_float
00000000001ecf50 0000000000000080 t util_format_x8b8g8r8_unorm_unpack_rgba_8unorm
00000000001ecfd0 0000000000000070 t util_format_x8b8g8r8_unorm_pack_rgba_8unorm
00000000001ed040 00000000000001f4 t util_format_r8g8b8x8_unorm_unpack_rgba_float
00000000001ed240 0000000000000044 t util_format_r8g8b8x8_unorm_fetch_rgba_float
00000000001ed290 000000000000007c t util_format_r8g8b8x8_unorm_unpack_rgba_8unorm
00000000001ed310 0000000000000070 t util_format_r8g8b8x8_unorm_pack_rgba_8unorm
00000000001ed380 0000000000000188 t util_format_r5g5b5a1_unorm_unpack_rgba_float
00000000001ed510 0000000000000380 t util_format_r5g5b5a1_unorm_pack_rgba_float
00000000001ed890 000000000000004c t util_format_r5g5b5a1_unorm_fetch_rgba_float
00000000001ed8e0 00000000000000d8 t util_format_r5g5b5a1_unorm_unpack_rgba_8unorm
00000000001ed9c0 0000000000000090 t util_format_r5g5b5a1_unorm_pack_rgba_8unorm
00000000001eda50 0000000000000174 t util_format_b5g5r5x1_unorm_unpack_rgba_float
00000000001edbd0 0000000000000108 t util_format_b5g5r5x1_unorm_pack_rgba_float
00000000001edce0 0000000000000044 t util_format_b5g5r5x1_unorm_fetch_rgba_float
00000000001edd30 00000000000000dc t util_format_b5g5r5x1_unorm_unpack_rgba_8unorm
00000000001ede10 000000000000007c t util_format_b5g5r5x1_unorm_pack_rgba_8unorm
00000000001ede90 0000000000000188 t util_format_b5g5r5a1_unorm_unpack_rgba_float
00000000001ee020 0000000000000494 t util_format_b5g5r5a1_unorm_pack_rgba_float
00000000001ee4c0 000000000000004c t util_format_b5g5r5a1_unorm_fetch_rgba_float
00000000001ee510 00000000000000d8 t util_format_b5g5r5a1_unorm_unpack_rgba_8unorm
00000000001ee5f0 000000000000008c t util_format_b5g5r5a1_unorm_pack_rgba_8unorm
00000000001ee680 0000000000000178 t util_format_x1b5g5r5_unorm_unpack_rgba_float
00000000001ee800 0000000000000108 t util_format_x1b5g5r5_unorm_pack_rgba_float
00000000001ee910 0000000000000048 t util_format_x1b5g5r5_unorm_fetch_rgba_float
00000000001ee960 00000000000000dc t util_format_x1b5g5r5_unorm_unpack_rgba_8unorm
00000000001eea40 0000000000000080 t util_format_x1b5g5r5_unorm_pack_rgba_8unorm
00000000001eeac0 0000000000000190 t util_format_a1r5g5b5_unorm_unpack_rgba_float
00000000001eec50 0000000000000490 t util_format_a1r5g5b5_unorm_pack_rgba_float
00000000001ef0e0 000000000000004c t util_format_a1r5g5b5_unorm_fetch_rgba_float
00000000001ef130 00000000000000d8 t util_format_a1r5g5b5_unorm_unpack_rgba_8unorm
00000000001ef210 000000000000008c t util_format_a1r5g5b5_unorm_pack_rgba_8unorm
00000000001ef2a0 0000000000000190 t util_format_a1b5g5r5_unorm_unpack_rgba_float
00000000001ef430 0000000000000490 t util_format_a1b5g5r5_unorm_pack_rgba_float
00000000001ef8c0 000000000000004c t util_format_a1b5g5r5_unorm_fetch_rgba_float
00000000001ef910 00000000000000d8 t util_format_a1b5g5r5_unorm_unpack_rgba_8unorm
00000000001ef9f0 000000000000008c t util_format_a1b5g5r5_unorm_pack_rgba_8unorm
00000000001efa80 0000000000000188 t util_format_r4g4b4a4_unorm_unpack_rgba_float
00000000001efc10 0000000000000380 t util_format_r4g4b4a4_unorm_pack_rgba_float
00000000001eff90 0000000000000044 t util_format_r4g4b4a4_unorm_fetch_rgba_float
00000000001effe0 0000000000000090 t util_format_r4g4b4a4_unorm_unpack_rgba_8unorm
00000000001f0070 000000000000008c t util_format_r4g4b4a4_unorm_pack_rgba_8unorm
00000000001f0100 0000000000000188 t util_format_b4g4r4a4_unorm_unpack_rgba_float
00000000001f0290 0000000000000494 t util_format_b4g4r4a4_unorm_pack_rgba_float
00000000001f0730 0000000000000044 t util_format_b4g4r4a4_unorm_fetch_rgba_float
00000000001f0780 0000000000000090 t util_format_b4g4r4a4_unorm_unpack_rgba_8unorm
00000000001f0810 0000000000000088 t util_format_b4g4r4a4_unorm_pack_rgba_8unorm
00000000001f08a0 0000000000000174 t util_format_b4g4r4x4_unorm_unpack_rgba_float
00000000001f0a20 0000000000000108 t util_format_b4g4r4x4_unorm_pack_rgba_float
00000000001f0b30 0000000000000044 t util_format_b4g4r4x4_unorm_fetch_rgba_float
00000000001f0b80 0000000000000090 t util_format_b4g4r4x4_unorm_unpack_rgba_8unorm
00000000001f0c10 0000000000000078 t util_format_b4g4r4x4_unorm_pack_rgba_8unorm
00000000001f0c90 0000000000000188 t util_format_a4r4g4b4_unorm_unpack_rgba_float
00000000001f0e20 000000000000049c t util_format_a4r4g4b4_unorm_pack_rgba_float
00000000001f12c0 0000000000000044 t util_format_a4r4g4b4_unorm_fetch_rgba_float
00000000001f1310 0000000000000090 t util_format_a4r4g4b4_unorm_unpack_rgba_8unorm
00000000001f13a0 000000000000008c t util_format_a4r4g4b4_unorm_pack_rgba_8unorm
00000000001f1430 0000000000000184 t util_format_a4b4g4r4_unorm_unpack_rgba_float
00000000001f15c0 000000000000049c t util_format_a4b4g4r4_unorm_pack_rgba_float
00000000001f1a60 0000000000000040 t util_format_a4b4g4r4_unorm_fetch_rgba_float
00000000001f1aa0 0000000000000090 t util_format_a4b4g4r4_unorm_unpack_rgba_8unorm
00000000001f1b30 000000000000008c t util_format_a4b4g4r4_unorm_pack_rgba_8unorm
00000000001f1bc0 0000000000000180 t util_format_r5g6b5_unorm_unpack_rgba_float
00000000001f1d40 0000000000000110 t util_format_r5g6b5_unorm_pack_rgba_float
00000000001f1e50 0000000000000054 t util_format_r5g6b5_unorm_fetch_rgba_float
00000000001f1eb0 00000000000000e4 t util_format_r5g6b5_unorm_unpack_rgba_8unorm
00000000001f1fa0 0000000000000080 t util_format_r5g6b5_unorm_pack_rgba_8unorm
00000000001f2020 0000000000000180 t util_format_b5g6r5_unorm_unpack_rgba_float
00000000001f21a0 0000000000000110 t util_format_b5g6r5_unorm_pack_rgba_float
00000000001f22b0 0000000000000054 t util_format_b5g6r5_unorm_fetch_rgba_float
00000000001f2310 00000000000000e4 t util_format_b5g6r5_unorm_unpack_rgba_8unorm
00000000001f2400 000000000000007c t util_format_b5g6r5_unorm_pack_rgba_8unorm
00000000001f2480 0000000000000094 t util_format_r10g10b10a2_unorm_unpack_rgba_float
00000000001f2520 0000000000000140 t util_format_r10g10b10a2_unorm_pack_rgba_float
00000000001f2660 0000000000000044 t util_format_r10g10b10a2_unorm_fetch_rgba_float
00000000001f26b0 0000000000000088 t util_format_r10g10b10a2_unorm_unpack_rgba_8unorm
00000000001f2740 00000000000000b8 t util_format_r10g10b10a2_unorm_pack_rgba_8unorm
00000000001f2800 0000000000000098 t util_format_r10g10b10x2_unorm_unpack_rgba_float
00000000001f28a0 0000000000000110 t util_format_r10g10b10x2_unorm_pack_rgba_float
00000000001f29b0 0000000000000044 t util_format_r10g10b10x2_unorm_fetch_rgba_float
00000000001f2a00 0000000000000080 t util_format_r10g10b10x2_unorm_unpack_rgba_8unorm
00000000001f2a80 00000000000000a8 t util_format_r10g10b10x2_unorm_pack_rgba_8unorm
00000000001f2b30 0000000000000094 t util_format_b10g10r10a2_unorm_unpack_rgba_float
00000000001f2bd0 0000000000000140 t util_format_b10g10r10a2_unorm_pack_rgba_float
00000000001f2d10 0000000000000044 t util_format_b10g10r10a2_unorm_fetch_rgba_float
00000000001f2d60 0000000000000088 t util_format_b10g10r10a2_unorm_unpack_rgba_8unorm
00000000001f2df0 00000000000000b8 t util_format_b10g10r10a2_unorm_pack_rgba_8unorm
00000000001f2eb0 0000000000000094 t util_format_a2r10g10b10_unorm_unpack_rgba_float
00000000001f2f50 0000000000000140 t util_format_a2r10g10b10_unorm_pack_rgba_float
00000000001f3090 0000000000000044 t util_format_a2r10g10b10_unorm_fetch_rgba_float
00000000001f30e0 0000000000000088 t util_format_a2r10g10b10_unorm_unpack_rgba_8unorm
00000000001f3170 00000000000000b8 t util_format_a2r10g10b10_unorm_pack_rgba_8unorm
00000000001f3230 0000000000000090 t util_format_a2b10g10r10_unorm_unpack_rgba_float
00000000001f32c0 0000000000000140 t util_format_a2b10g10r10_unorm_pack_rgba_float
00000000001f3400 0000000000000040 t util_format_a2b10g10r10_unorm_fetch_rgba_float
00000000001f3440 0000000000000088 t util_format_a2b10g10r10_unorm_unpack_rgba_8unorm
00000000001f34d0 00000000000000b8 t util_format_a2b10g10r10_unorm_pack_rgba_8unorm
00000000001f3590 00000000000000ac t util_format_r3g3b2_unorm_unpack_rgba_float
00000000001f3640 0000000000000108 t util_format_r3g3b2_unorm_pack_rgba_float
00000000001f3750 0000000000000054 t util_format_r3g3b2_unorm_fetch_rgba_float
00000000001f37b0 00000000000000c4 t util_format_r3g3b2_unorm_unpack_rgba_8unorm
00000000001f3880 0000000000000078 t util_format_r3g3b2_unorm_pack_rgba_8unorm
00000000001f3900 00000000000000ac t util_format_b2g3r3_unorm_unpack_rgba_float
00000000001f39b0 0000000000000108 t util_format_b2g3r3_unorm_pack_rgba_float
00000000001f3ac0 0000000000000054 t util_format_b2g3r3_unorm_fetch_rgba_float
00000000001f3b20 00000000000000c4 t util_format_b2g3r3_unorm_unpack_rgba_8unorm
00000000001f3bf0 000000000000007c t util_format_b2g3r3_unorm_pack_rgba_8unorm
00000000001f3c70 000000000000007c t util_format_l8_unorm_unpack_rgba_float
00000000001f3cf0 0000000000000028 t util_format_l8_unorm_fetch_rgba_float
00000000001f3d20 0000000000000074 t util_format_l8_unorm_unpack_rgba_8unorm
00000000001f3da0 000000000000005c t util_format_l8_unorm_pack_rgba_8unorm
00000000001f3e00 0000000000000080 t util_format_a8_unorm_unpack_rgba_float
00000000001f3e80 0000000000000028 t util_format_a8_unorm_fetch_rgba_float
00000000001f3eb0 000000000000006c t util_format_a8_unorm_unpack_rgba_8unorm
00000000001f3f20 0000000000000060 t util_format_a8_unorm_pack_rgba_8unorm
00000000001f3f80 000000000000007c t util_format_i8_unorm_unpack_rgba_float
00000000001f4000 0000000000000024 t util_format_i8_unorm_fetch_rgba_float
00000000001f4030 000000000000006c t util_format_i8_unorm_unpack_rgba_8unorm
00000000001f40a0 0000000000000090 t util_format_l4a4_unorm_unpack_rgba_float
00000000001f4130 00000000000000d4 t util_format_l4a4_unorm_pack_rgba_float
00000000001f4210 0000000000000038 t util_format_l4a4_unorm_fetch_rgba_float
00000000001f4250 000000000000007c t util_format_l4a4_unorm_unpack_rgba_8unorm
00000000001f42d0 000000000000006c t util_format_l4a4_unorm_pack_rgba_8unorm
00000000001f4340 00000000000001b4 t util_format_l8a8_unorm_unpack_rgba_float
00000000001f4500 0000000000000038 t util_format_l8a8_unorm_fetch_rgba_float
00000000001f4540 0000000000000070 t util_format_l8a8_unorm_unpack_rgba_8unorm
00000000001f45b0 0000000000000068 t util_format_l8a8_unorm_pack_rgba_8unorm
00000000001f4620 0000000000000120 t util_format_l16_unorm_unpack_rgba_float
00000000001f4740 00000000000000a0 t util_format_l16_unorm_pack_rgba_float
00000000001f47e0 0000000000000028 t util_format_l16_unorm_fetch_rgba_float
00000000001f4810 0000000000000078 t util_format_l16_unorm_unpack_rgba_8unorm
00000000001f4890 0000000000000060 t util_format_l16_unorm_pack_rgba_8unorm
00000000001f48f0 000000000000011c t util_format_a16_unorm_unpack_rgba_float
00000000001f4a10 00000000000000a0 t util_format_a16_unorm_pack_rgba_float
00000000001f4ab0 0000000000000028 t util_format_a16_unorm_fetch_rgba_float
00000000001f4ae0 0000000000000070 t util_format_a16_unorm_unpack_rgba_8unorm
00000000001f4b50 0000000000000064 t util_format_a16_unorm_pack_rgba_8unorm
00000000001f4bc0 0000000000000120 t util_format_i16_unorm_unpack_rgba_float
00000000001f4ce0 0000000000000024 t util_format_i16_unorm_fetch_rgba_float
00000000001f4d10 0000000000000070 t util_format_i16_unorm_unpack_rgba_8unorm
00000000001f4d80 0000000000000118 t util_format_l16a16_unorm_unpack_rgba_float
00000000001f4ea0 00000000000000d8 t util_format_l16a16_unorm_pack_rgba_float
00000000001f4f80 0000000000000038 t util_format_l16a16_unorm_fetch_rgba_float
00000000001f4fc0 0000000000000074 t util_format_l16a16_unorm_unpack_rgba_8unorm
00000000001f5040 0000000000000078 t util_format_l16a16_unorm_pack_rgba_8unorm
00000000001f50c0 0000000000000080 t util_format_a8_snorm_unpack_rgba_float
00000000001f5140 00000000000000b8 t util_format_a8_snorm_pack_rgba_float
00000000001f5200 0000000000000028 t util_format_a8_snorm_fetch_rgba_float
00000000001f5230 0000000000000094 t util_format_a8_snorm_unpack_rgba_8unorm
00000000001f52d0 0000000000000064 t util_format_a8_snorm_pack_rgba_8unorm
00000000001f5340 000000000000007c t util_format_l8_snorm_unpack_rgba_float
00000000001f53c0 00000000000000b8 t util_format_l8_snorm_pack_rgba_float
00000000001f5480 0000000000000028 t util_format_l8_snorm_fetch_rgba_float
00000000001f54b0 000000000000009c t util_format_l8_snorm_unpack_rgba_8unorm
00000000001f5550 0000000000000060 t util_format_l8_snorm_pack_rgba_8unorm
00000000001f55b0 00000000000001a8 t util_format_l8a8_snorm_unpack_rgba_float
00000000001f5760 0000000000000110 t util_format_l8a8_snorm_pack_rgba_float
00000000001f5870 0000000000000034 t util_format_l8a8_snorm_fetch_rgba_float
00000000001f58b0 00000000000000bc t util_format_l8a8_snorm_unpack_rgba_8unorm
00000000001f5970 0000000000000070 t util_format_l8a8_snorm_pack_rgba_8unorm
00000000001f59e0 000000000000007c t util_format_i8_snorm_unpack_rgba_float
00000000001f5a60 0000000000000024 t util_format_i8_snorm_fetch_rgba_float
00000000001f5a90 0000000000000094 t util_format_i8_snorm_unpack_rgba_8unorm
00000000001f5b30 0000000000000114 t util_format_a16_snorm_unpack_rgba_float
00000000001f5c50 00000000000000b8 t util_format_a16_snorm_pack_rgba_float
00000000001f5d10 0000000000000028 t util_format_a16_snorm_fetch_rgba_float
00000000001f5d40 0000000000000074 t util_format_a16_snorm_unpack_rgba_8unorm
00000000001f5dc0 0000000000000078 t util_format_a16_snorm_pack_rgba_8unorm
00000000001f5e40 00000000000000fc t util_format_l16_snorm_unpack_rgba_float
00000000001f5f40 00000000000000b8 t util_format_l16_snorm_pack_rgba_float
00000000001f6000 0000000000000028 t util_format_l16_snorm_fetch_rgba_float
00000000001f6030 000000000000007c t util_format_l16_snorm_unpack_rgba_8unorm
00000000001f60b0 0000000000000074 t util_format_l16_snorm_pack_rgba_8unorm
00000000001f6130 0000000000000114 t util_format_l16a16_snorm_unpack_rgba_float
00000000001f6250 0000000000000118 t util_format_l16a16_snorm_pack_rgba_float
00000000001f6370 0000000000000038 t util_format_l16a16_snorm_fetch_rgba_float
00000000001f63b0 0000000000000084 t util_format_l16a16_snorm_unpack_rgba_8unorm
00000000001f6440 0000000000000098 t util_format_l16a16_snorm_pack_rgba_8unorm
00000000001f64e0 00000000000000f4 t util_format_i16_snorm_unpack_rgba_float
00000000001f65e0 0000000000000024 t util_format_i16_snorm_fetch_rgba_float
00000000001f6610 0000000000000074 t util_format_i16_snorm_unpack_rgba_8unorm
00000000001f6690 00000000000000a8 t util_format_a16_float_unpack_rgba_float
00000000001f6740 0000000000000060 t util_format_a16_float_fetch_rgba_float
00000000001f67a0 00000000000000b0 t util_format_l16_float_unpack_rgba_float
00000000001f6850 0000000000000070 t util_format_l16_float_fetch_rgba_float
00000000001f68c0 00000000000000e0 t util_format_l16a16_float_unpack_rgba_float
00000000001f69a0 00000000000000a8 t util_format_l16a16_float_fetch_rgba_float
00000000001f6a50 00000000000000a4 t util_format_i16_float_unpack_rgba_float
00000000001f6b00 0000000000000060 t util_format_i16_float_fetch_rgba_float
00000000001f6b60 0000000000000068 t util_format_a32_float_unpack_rgba_float
00000000001f6bd0 0000000000000064 t util_format_a32_float_pack_rgba_float
00000000001f6c40 0000000000000014 t util_format_a32_float_fetch_rgba_float
00000000001f6c60 0000000000000074 t util_format_a32_float_pack_rgba_8unorm
00000000001f6ce0 0000000000000070 t util_format_l32_float_unpack_rgba_float
00000000001f6d50 000000000000005c t util_format_l32_float_pack_rgba_float
00000000001f6db0 0000000000000014 t util_format_l32_float_fetch_rgba_float
00000000001f6dd0 0000000000000074 t util_format_l32_float_pack_rgba_8unorm
00000000001f6e50 0000000000000064 t util_format_l32a32_float_unpack_rgba_float
00000000001f6ec0 000000000000006c t util_format_l32a32_float_pack_rgba_float
00000000001f6f30 0000000000000010 t util_format_l32a32_float_fetch_rgba_float
00000000001f6f40 0000000000000094 t util_format_l32a32_float_pack_rgba_8unorm
00000000001f6fe0 0000000000000064 t util_format_i32_float_unpack_rgba_float
00000000001f7050 0000000000000010 t util_format_i32_float_fetch_rgba_float
00000000001f7060 0000000000000078 t util_format_l8_srgb_unpack_rgba_float
00000000001f70e0 0000000000000020 t util_format_l8_srgb_fetch_rgba_float
00000000001f7100 0000000000000080 t util_format_l8_srgb_unpack_rgba_8unorm
00000000001f7180 0000000000000068 t util_format_l8_srgb_pack_rgba_8unorm
00000000001f71f0 000000000000007c t util_format_r8_srgb_unpack_rgba_float
00000000001f7270 0000000000000024 t util_format_r8_srgb_fetch_rgba_float
00000000001f72a0 0000000000000080 t util_format_r8_srgb_unpack_rgba_8unorm
00000000001f7320 0000000000000094 t util_format_l8a8_srgb_unpack_rgba_float
00000000001f73c0 000000000000003c t util_format_l8a8_srgb_fetch_rgba_float
00000000001f7400 0000000000000080 t util_format_l8a8_srgb_unpack_rgba_8unorm
00000000001f7480 0000000000000078 t util_format_l8a8_srgb_pack_rgba_8unorm
00000000001f7500 0000000000000088 t util_format_r8g8_srgb_unpack_rgba_float
00000000001f7590 000000000000002c t util_format_r8g8_srgb_fetch_rgba_float
00000000001f75c0 000000000000008c t util_format_r8g8_srgb_unpack_rgba_8unorm
00000000001f7650 000000000000007c t util_format_r8g8_srgb_pack_rgba_8unorm
00000000001f76d0 0000000000000088 t util_format_r8g8b8_srgb_unpack_rgba_float
00000000001f7760 0000000000000030 t util_format_r8g8b8_srgb_fetch_rgba_float
00000000001f7790 0000000000000090 t util_format_r8g8b8_srgb_unpack_rgba_8unorm
00000000001f7820 0000000000000084 t util_format_r8g8b8_srgb_pack_rgba_8unorm
00000000001f78b0 000000000000008c t util_format_b8g8r8_srgb_unpack_rgba_float
00000000001f7940 0000000000000030 t util_format_b8g8r8_srgb_fetch_rgba_float
00000000001f7970 0000000000000094 t util_format_b8g8r8_srgb_unpack_rgba_8unorm
00000000001f7a10 0000000000000088 t util_format_b8g8r8_srgb_pack_rgba_8unorm
00000000001f7aa0 00000000000000a4 t util_format_r8g8b8a8_srgb_unpack_rgba_float
00000000001f7b50 000000000000004c t util_format_r8g8b8a8_srgb_fetch_rgba_float
00000000001f7ba0 0000000000000090 t util_format_r8g8b8a8_srgb_unpack_rgba_8unorm
00000000001f7c30 0000000000000090 t util_format_r8g8b8a8_srgb_pack_rgba_8unorm
00000000001f7cc0 00000000000000a0 t util_format_a8b8g8r8_srgb_unpack_rgba_float
00000000001f7d60 0000000000000048 t util_format_a8b8g8r8_srgb_fetch_rgba_float
00000000001f7db0 000000000000008c t util_format_a8b8g8r8_srgb_unpack_rgba_8unorm
00000000001f7e40 0000000000000090 t util_format_a8b8g8r8_srgb_pack_rgba_8unorm
00000000001f7ed0 000000000000008c t util_format_x8b8g8r8_srgb_unpack_rgba_float
00000000001f7f60 0000000000000034 t util_format_x8b8g8r8_srgb_fetch_rgba_float
00000000001f7fa0 0000000000000094 t util_format_x8b8g8r8_srgb_unpack_rgba_8unorm
00000000001f8040 0000000000000084 t util_format_x8b8g8r8_srgb_pack_rgba_8unorm
00000000001f80d0 00000000000000a4 t util_format_b8g8r8a8_srgb_unpack_rgba_float
00000000001f8180 000000000000004c t util_format_b8g8r8a8_srgb_fetch_rgba_float
00000000001f81d0 0000000000000090 t util_format_b8g8r8a8_srgb_unpack_rgba_8unorm
00000000001f8260 0000000000000090 t util_format_b8g8r8a8_srgb_pack_rgba_8unorm
00000000001f82f0 000000000000008c t util_format_b8g8r8x8_srgb_unpack_rgba_float
00000000001f8380 0000000000000034 t util_format_b8g8r8x8_srgb_fetch_rgba_float
00000000001f83c0 0000000000000094 t util_format_b8g8r8x8_srgb_unpack_rgba_8unorm
00000000001f8460 0000000000000088 t util_format_b8g8r8x8_srgb_pack_rgba_8unorm
00000000001f84f0 00000000000000a0 t util_format_a8r8g8b8_srgb_unpack_rgba_float
00000000001f8590 0000000000000048 t util_format_a8r8g8b8_srgb_fetch_rgba_float
00000000001f85e0 000000000000008c t util_format_a8r8g8b8_srgb_unpack_rgba_8unorm
00000000001f8670 0000000000000090 t util_format_a8r8g8b8_srgb_pack_rgba_8unorm
00000000001f8700 000000000000008c t util_format_x8r8g8b8_srgb_unpack_rgba_float
00000000001f8790 0000000000000034 t util_format_x8r8g8b8_srgb_fetch_rgba_float
00000000001f87d0 0000000000000094 t util_format_x8r8g8b8_srgb_unpack_rgba_8unorm
00000000001f8870 0000000000000088 t util_format_x8r8g8b8_srgb_pack_rgba_8unorm
00000000001f8900 0000000000000204 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_float
00000000001f8b10 0000000000000050 t util_format_r8sg8sb8ux8u_norm_fetch_rgba_float
00000000001f8b60 00000000000000c8 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_8unorm
00000000001f8c30 0000000000000078 t util_format_r8sg8sb8ux8u_norm_pack_rgba_8unorm
00000000001f8cb0 0000000000000160 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_float
00000000001f8e10 00000000000001a0 t util_format_r10sg10sb10sa2u_norm_pack_rgba_float
00000000001f8fb0 0000000000000044 t util_format_r10sg10sb10sa2u_norm_fetch_rgba_float
00000000001f9000 00000000000000a0 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_8unorm
00000000001f90a0 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_pack_rgba_8unorm
00000000001f9160 0000000000000178 t util_format_r5sg5sb6u_norm_unpack_rgba_float
00000000001f92e0 0000000000000144 t util_format_r5sg5sb6u_norm_pack_rgba_float
00000000001f9430 0000000000000054 t util_format_r5sg5sb6u_norm_fetch_rgba_float
00000000001f9490 00000000000000b4 t util_format_r5sg5sb6u_norm_unpack_rgba_8unorm
00000000001f9550 0000000000000080 t util_format_r5sg5sb6u_norm_pack_rgba_8unorm
00000000001f95d0 000000000000024c t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_float
00000000001f9820 0000000000000050 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_fetch_rgba_float
00000000001f9870 0000000000000078 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_8unorm
00000000001f98f0 000000000000005c t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_8unorm
00000000001f9950 0000000000000074 t util_format_r64_float_unpack_rgba_float
00000000001f99d0 0000000000000060 t util_format_r64_float_pack_rgba_float
00000000001f9a30 000000000000001c t util_format_r64_float_fetch_rgba_float
00000000001f9a50 00000000000000cc t util_format_r64_float_unpack_rgba_8unorm
00000000001f9b20 0000000000000078 t util_format_r64_float_pack_rgba_8unorm
00000000001f9ba0 0000000000000074 t util_format_r64g64_float_unpack_rgba_float
00000000001f9c20 0000000000000060 t util_format_r64g64_float_pack_rgba_float
00000000001f9c80 0000000000000018 t util_format_r64g64_float_fetch_rgba_float
00000000001f9ca0 0000000000000118 t util_format_r64g64_float_unpack_rgba_8unorm
00000000001f9dc0 000000000000008c t util_format_r64g64_float_pack_rgba_8unorm
00000000001f9e50 0000000000000070 t util_format_r32_float_unpack_rgba_float
00000000001f9ec0 0000000000000018 t util_format_r32_float_fetch_rgba_float
00000000001f9ee0 0000000000000070 t util_format_r32g32_float_unpack_rgba_float
00000000001f9f50 000000000000005c t util_format_r32g32_float_pack_rgba_float
00000000001f9fb0 0000000000000014 t util_format_r32g32_float_fetch_rgba_float
00000000001f9fd0 0000000000000094 t util_format_r32g32_float_pack_rgba_8unorm
00000000001fa070 000000000000005c t util_format_r32g32b32a32_float_unpack_rgba_float
00000000001fa0d0 000000000000005c t util_format_r32g32b32a32_float_pack_rgba_float
00000000001fa130 000000000000000c t util_format_r32g32b32a32_float_fetch_rgba_float
00000000001fa140 00000000000000bc t util_format_r32g32b32a32_float_pack_rgba_8unorm
00000000001fa200 0000000000000084 t util_format_r32_unorm_unpack_rgba_float
00000000001fa290 0000000000000090 t util_format_r32_unorm_pack_rgba_float
00000000001fa320 0000000000000030 t util_format_r32_unorm_fetch_rgba_float
00000000001fa350 0000000000000078 t util_format_r32_unorm_unpack_rgba_8unorm
00000000001fa3d0 0000000000000068 t util_format_r32_unorm_pack_rgba_8unorm
00000000001fa440 0000000000000094 t util_format_r32g32_unorm_unpack_rgba_float
00000000001fa4e0 00000000000000c4 t util_format_r32g32_unorm_pack_rgba_float
00000000001fa5b0 000000000000003c t util_format_r32g32_unorm_fetch_rgba_float
00000000001fa5f0 000000000000007c t util_format_r32g32_unorm_unpack_rgba_8unorm
00000000001fa670 000000000000007c t util_format_r32g32_unorm_pack_rgba_8unorm
00000000001fa6f0 000000000000008c t util_format_r32g32b32a32_unorm_unpack_rgba_float
00000000001fa780 00000000000000b0 t util_format_r32g32b32a32_unorm_pack_rgba_float
00000000001fa830 0000000000000034 t util_format_r32g32b32a32_unorm_fetch_rgba_float
00000000001fa870 000000000000007c t util_format_r32g32b32a32_unorm_unpack_rgba_8unorm
00000000001fa8f0 0000000000000094 t util_format_r32g32b32a32_unorm_pack_rgba_8unorm
00000000001fa990 00000000000000ec t util_format_r32_uscaled_unpack_rgba_float
00000000001faa80 0000000000000088 t util_format_r32_uscaled_pack_rgba_float
00000000001fab10 000000000000001c t util_format_r32_uscaled_fetch_rgba_float
00000000001fab30 000000000000007c t util_format_r32_uscaled_unpack_rgba_8unorm
00000000001fabb0 000000000000006c t util_format_r32_uscaled_pack_rgba_8unorm
00000000001fac20 0000000000000074 t util_format_r32g32_uscaled_unpack_rgba_float
00000000001faca0 00000000000000b4 t util_format_r32g32_uscaled_pack_rgba_float
00000000001fad60 0000000000000018 t util_format_r32g32_uscaled_fetch_rgba_float
00000000001fad80 0000000000000084 t util_format_r32g32_uscaled_unpack_rgba_8unorm
00000000001fae10 0000000000000084 t util_format_r32g32_uscaled_pack_rgba_8unorm
00000000001faea0 0000000000000060 t util_format_r32g32b32a32_uscaled_unpack_rgba_float
00000000001faf00 0000000000000098 t util_format_r32g32b32a32_uscaled_pack_rgba_float
00000000001fafa0 0000000000000010 t util_format_r32g32b32a32_uscaled_fetch_rgba_float
00000000001fafb0 000000000000008c t util_format_r32g32b32a32_uscaled_unpack_rgba_8unorm
00000000001fb040 00000000000000a4 t util_format_r32g32b32a32_uscaled_pack_rgba_8unorm
00000000001fb0f0 0000000000000084 t util_format_r32_snorm_unpack_rgba_float
00000000001fb180 000000000000009c t util_format_r32_snorm_pack_rgba_float
00000000001fb220 0000000000000030 t util_format_r32_snorm_fetch_rgba_float
00000000001fb250 000000000000007c t util_format_r32_snorm_unpack_rgba_8unorm
00000000001fb2d0 0000000000000074 t util_format_r32_snorm_pack_rgba_8unorm
00000000001fb350 0000000000000094 t util_format_r32g32_snorm_unpack_rgba_float
00000000001fb3f0 00000000000000d4 t util_format_r32g32_snorm_pack_rgba_float
00000000001fb4d0 000000000000003c t util_format_r32g32_snorm_fetch_rgba_float
00000000001fb510 0000000000000088 t util_format_r32g32_snorm_unpack_rgba_8unorm
00000000001fb5a0 0000000000000094 t util_format_r32g32_snorm_pack_rgba_8unorm
00000000001fb640 0000000000000084 t util_format_r32g32b32a32_snorm_unpack_rgba_float
00000000001fb6d0 00000000000000c0 t util_format_r32g32b32a32_snorm_pack_rgba_float
00000000001fb790 0000000000000034 t util_format_r32g32b32a32_snorm_fetch_rgba_float
00000000001fb7d0 0000000000000094 t util_format_r32g32b32a32_snorm_unpack_rgba_8unorm
00000000001fb870 00000000000000c4 t util_format_r32g32b32a32_snorm_pack_rgba_8unorm
00000000001fb940 00000000000000ec t util_format_r32_sscaled_unpack_rgba_float
00000000001fba30 0000000000000088 t util_format_r32_sscaled_pack_rgba_float
00000000001fbac0 000000000000001c t util_format_r32_sscaled_fetch_rgba_float
00000000001fbae0 000000000000007c t util_format_r32_sscaled_unpack_rgba_8unorm
00000000001fbb60 0000000000000074 t util_format_r32g32_sscaled_unpack_rgba_float
00000000001fbbe0 00000000000000b4 t util_format_r32g32_sscaled_pack_rgba_float
00000000001fbca0 0000000000000018 t util_format_r32g32_sscaled_fetch_rgba_float
00000000001fbcc0 0000000000000088 t util_format_r32g32_sscaled_unpack_rgba_8unorm
00000000001fbd50 0000000000000084 t util_format_r32g32_sscaled_pack_rgba_8unorm
00000000001fbde0 0000000000000060 t util_format_r32g32b32a32_sscaled_unpack_rgba_float
00000000001fbe40 00000000000000a0 t util_format_r32g32b32a32_sscaled_pack_rgba_float
00000000001fbee0 0000000000000010 t util_format_r32g32b32a32_sscaled_fetch_rgba_float
00000000001fbef0 0000000000000094 t util_format_r32g32b32a32_sscaled_unpack_rgba_8unorm
00000000001fbf90 00000000000000a4 t util_format_r32g32b32a32_sscaled_pack_rgba_8unorm
00000000001fc040 00000000000000b0 t util_format_r16_float_unpack_rgba_float
00000000001fc0f0 0000000000000070 t util_format_r16_float_fetch_rgba_float
00000000001fc160 00000000000000ec t util_format_r16g16_float_unpack_rgba_float
00000000001fc250 00000000000000bc t util_format_r16g16_float_fetch_rgba_float
00000000001fc310 0000000000000148 t util_format_r16g16b16a16_float_unpack_rgba_float
00000000001fc460 0000000000000130 t util_format_r16g16b16a16_float_fetch_rgba_float
00000000001fc590 000000000000011c t util_format_r16_unorm_unpack_rgba_float
00000000001fc6b0 000000000000002c t util_format_r16_unorm_fetch_rgba_float
00000000001fc6e0 0000000000000078 t util_format_r16_unorm_unpack_rgba_8unorm
00000000001fc760 0000000000000094 t util_format_r16g16_unorm_unpack_rgba_float
00000000001fc800 00000000000000d8 t util_format_r16g16_unorm_pack_rgba_float
00000000001fc8e0 000000000000003c t util_format_r16g16_unorm_fetch_rgba_float
00000000001fc920 000000000000007c t util_format_r16g16_unorm_unpack_rgba_8unorm
00000000001fc9a0 0000000000000078 t util_format_r16g16_unorm_pack_rgba_8unorm
00000000001fca20 0000000000000094 t util_format_r16g16b16a16_unorm_unpack_rgba_float
00000000001fcac0 0000000000000154 t util_format_r16g16b16a16_unorm_pack_rgba_float
00000000001fcc20 0000000000000044 t util_format_r16g16b16a16_unorm_fetch_rgba_float
00000000001fcc70 000000000000007c t util_format_r16g16b16a16_unorm_unpack_rgba_8unorm
00000000001fccf0 000000000000008c t util_format_r16g16b16a16_unorm_pack_rgba_8unorm
00000000001fcd80 00000000000000f0 t util_format_r16_uscaled_unpack_rgba_float
00000000001fce70 0000000000000090 t util_format_r16_uscaled_pack_rgba_float
00000000001fcf00 000000000000001c t util_format_r16_uscaled_fetch_rgba_float
00000000001fcf20 000000000000007c t util_format_r16_uscaled_unpack_rgba_8unorm
00000000001fcfa0 000000000000006c t util_format_r16_uscaled_pack_rgba_8unorm
00000000001fd010 0000000000000104 t util_format_r16g16_uscaled_unpack_rgba_float
00000000001fd120 00000000000000bc t util_format_r16g16_uscaled_pack_rgba_float
00000000001fd1e0 0000000000000028 t util_format_r16g16_uscaled_fetch_rgba_float
00000000001fd210 0000000000000084 t util_format_r16g16_uscaled_unpack_rgba_8unorm
00000000001fd2a0 0000000000000088 t util_format_r16g16_uscaled_pack_rgba_8unorm
00000000001fd330 000000000000006c t util_format_r16g16b16a16_uscaled_unpack_rgba_float
00000000001fd3a0 000000000000009c t util_format_r16g16b16a16_uscaled_pack_rgba_float
00000000001fd440 0000000000000014 t util_format_r16g16b16a16_uscaled_fetch_rgba_float
00000000001fd460 000000000000008c t util_format_r16g16b16a16_uscaled_unpack_rgba_8unorm
00000000001fd4f0 00000000000000a4 t util_format_r16g16b16a16_uscaled_pack_rgba_8unorm
00000000001fd5a0 000000000000011c t util_format_r16_snorm_unpack_rgba_float
00000000001fd6c0 000000000000002c t util_format_r16_snorm_fetch_rgba_float
00000000001fd6f0 000000000000007c t util_format_r16_snorm_unpack_rgba_8unorm
00000000001fd770 0000000000000120 t util_format_r16g16_snorm_unpack_rgba_float
00000000001fd890 0000000000000118 t util_format_r16g16_snorm_pack_rgba_float
00000000001fd9b0 000000000000003c t util_format_r16g16_snorm_fetch_rgba_float
00000000001fd9f0 000000000000008c t util_format_r16g16_snorm_unpack_rgba_8unorm
00000000001fda80 0000000000000098 t util_format_r16g16_snorm_pack_rgba_8unorm
00000000001fdb20 0000000000000070 t util_format_r16g16b16a16_snorm_unpack_rgba_float
00000000001fdb90 00000000000001b4 t util_format_r16g16b16a16_snorm_pack_rgba_float
00000000001fdd50 0000000000000020 t util_format_r16g16b16a16_snorm_fetch_rgba_float
00000000001fdd70 000000000000009c t util_format_r16g16b16a16_snorm_unpack_rgba_8unorm
00000000001fde10 00000000000000d0 t util_format_r16g16b16a16_snorm_pack_rgba_8unorm
00000000001fdee0 00000000000000f0 t util_format_r16_sscaled_unpack_rgba_float
00000000001fdfd0 0000000000000098 t util_format_r16_sscaled_pack_rgba_float
00000000001fe070 000000000000001c t util_format_r16_sscaled_fetch_rgba_float
00000000001fe090 000000000000007c t util_format_r16_sscaled_unpack_rgba_8unorm
00000000001fe110 0000000000000108 t util_format_r16g16_sscaled_unpack_rgba_float
00000000001fe220 00000000000000c8 t util_format_r16g16_sscaled_pack_rgba_float
00000000001fe2f0 0000000000000028 t util_format_r16g16_sscaled_fetch_rgba_float
00000000001fe320 000000000000008c t util_format_r16g16_sscaled_unpack_rgba_8unorm
00000000001fe3b0 0000000000000088 t util_format_r16g16_sscaled_pack_rgba_8unorm
00000000001fe440 0000000000000064 t util_format_r16g16b16a16_sscaled_unpack_rgba_float
00000000001fe4b0 00000000000000ac t util_format_r16g16b16a16_sscaled_pack_rgba_float
00000000001fe560 0000000000000014 t util_format_r16g16b16a16_sscaled_fetch_rgba_float
00000000001fe580 000000000000009c t util_format_r16g16b16a16_sscaled_unpack_rgba_8unorm
00000000001fe620 00000000000000a4 t util_format_r16g16b16a16_sscaled_pack_rgba_8unorm
00000000001fe6d0 0000000000000080 t util_format_r8_unorm_unpack_rgba_float
00000000001fe750 000000000000002c t util_format_r8_unorm_fetch_rgba_float
00000000001fe780 0000000000000074 t util_format_r8_unorm_unpack_rgba_8unorm
00000000001fe800 00000000000001a0 t util_format_r8g8_unorm_unpack_rgba_float
00000000001fe9a0 000000000000003c t util_format_r8g8_unorm_fetch_rgba_float
00000000001fe9e0 0000000000000078 t util_format_r8g8_unorm_unpack_rgba_8unorm
00000000001fea60 000000000000005c t util_format_r8g8_unorm_pack_rgba_8unorm
00000000001feac0 0000000000000094 t util_format_r8g8b8_unorm_unpack_rgba_float
00000000001feb60 0000000000000040 t util_format_r8g8b8_unorm_fetch_rgba_float
00000000001feba0 0000000000000080 t util_format_r8g8b8_unorm_unpack_rgba_8unorm
00000000001fec20 0000000000000074 t util_format_r8g8b8_unorm_pack_rgba_8unorm
00000000001feca0 0000000000000098 t util_format_b8g8r8_unorm_unpack_rgba_float
00000000001fed40 0000000000000040 t util_format_b8g8r8_unorm_fetch_rgba_float
00000000001fed80 0000000000000080 t util_format_b8g8r8_unorm_unpack_rgba_8unorm
00000000001fee00 0000000000000070 t util_format_b8g8r8_unorm_pack_rgba_8unorm
00000000001fee70 0000000000000110 t util_format_r8g8_uscaled_unpack_rgba_float
00000000001fef80 00000000000000bc t util_format_r8g8_uscaled_pack_rgba_float
00000000001ff040 0000000000000028 t util_format_r8g8_uscaled_fetch_rgba_float
00000000001ff070 0000000000000084 t util_format_r8g8_uscaled_unpack_rgba_8unorm
00000000001ff100 000000000000007c t util_format_r8g8_uscaled_pack_rgba_8unorm
00000000001ff180 0000000000000080 t util_format_r8g8b8_uscaled_unpack_rgba_float
00000000001ff200 00000000000000e4 t util_format_r8g8b8_uscaled_pack_rgba_float
00000000001ff2f0 0000000000000028 t util_format_r8g8b8_uscaled_fetch_rgba_float
00000000001ff320 0000000000000094 t util_format_r8g8b8_uscaled_unpack_rgba_8unorm
00000000001ff3c0 0000000000000090 t util_format_r8g8b8_uscaled_pack_rgba_8unorm
00000000001ff450 0000000000000084 t util_format_b8g8r8_uscaled_unpack_rgba_float
00000000001ff4e0 00000000000000e4 t util_format_b8g8r8_uscaled_pack_rgba_float
00000000001ff5d0 0000000000000028 t util_format_b8g8r8_uscaled_fetch_rgba_float
00000000001ff600 0000000000000098 t util_format_b8g8r8_uscaled_unpack_rgba_8unorm
00000000001ff6a0 0000000000000094 t util_format_b8g8r8_uscaled_pack_rgba_8unorm
00000000001ff740 0000000000000144 t util_format_r8g8b8a8_uscaled_unpack_rgba_float
00000000001ff890 0000000000000618 t util_format_r8g8b8a8_uscaled_pack_rgba_float
00000000001ffeb0 0000000000000038 t util_format_r8g8b8a8_uscaled_fetch_rgba_float
00000000001ffef0 000000000000008c t util_format_r8g8b8a8_uscaled_unpack_rgba_8unorm
00000000001fff80 00000000000000a0 t util_format_r8g8b8a8_uscaled_pack_rgba_8unorm
0000000000200020 0000000000000144 t util_format_b8g8r8a8_uscaled_unpack_rgba_float
0000000000200170 0000000000000568 t util_format_b8g8r8a8_uscaled_pack_rgba_float
00000000002006e0 0000000000000038 t util_format_b8g8r8a8_uscaled_fetch_rgba_float
0000000000200720 000000000000008c t util_format_b8g8r8a8_uscaled_unpack_rgba_8unorm
00000000002007b0 00000000000000a4 t util_format_b8g8r8a8_uscaled_pack_rgba_8unorm
0000000000200860 000000000000012c t util_format_a8b8g8r8_uscaled_unpack_rgba_float
0000000000200990 0000000000000570 t util_format_a8b8g8r8_uscaled_pack_rgba_float
0000000000200f00 0000000000000034 t util_format_a8b8g8r8_uscaled_fetch_rgba_float
0000000000200f40 000000000000008c t util_format_a8b8g8r8_uscaled_unpack_rgba_8unorm
0000000000200fd0 00000000000000a4 t util_format_a8b8g8r8_uscaled_pack_rgba_8unorm
0000000000201080 0000000000000080 t util_format_r8_snorm_unpack_rgba_float
0000000000201100 000000000000002c t util_format_r8_snorm_fetch_rgba_float
0000000000201130 000000000000009c t util_format_r8_snorm_unpack_rgba_8unorm
00000000002011d0 0000000000000194 t util_format_r8g8_snorm_unpack_rgba_float
0000000000201370 0000000000000110 t util_format_r8g8_snorm_pack_rgba_float
0000000000201480 0000000000000038 t util_format_r8g8_snorm_fetch_rgba_float
00000000002014c0 00000000000000c4 t util_format_r8g8_snorm_unpack_rgba_8unorm
0000000000201590 0000000000000070 t util_format_r8g8_snorm_pack_rgba_8unorm
0000000000201600 0000000000000094 t util_format_r8g8b8_snorm_unpack_rgba_float
00000000002016a0 000000000000014c t util_format_r8g8b8_snorm_pack_rgba_float
00000000002017f0 0000000000000040 t util_format_r8g8b8_snorm_fetch_rgba_float
0000000000201830 00000000000000e4 t util_format_r8g8b8_snorm_unpack_rgba_8unorm
0000000000201920 000000000000007c t util_format_r8g8b8_snorm_pack_rgba_8unorm
00000000002019a0 0000000000000098 t util_format_b8g8r8_snorm_unpack_rgba_float
0000000000201a40 000000000000014c t util_format_b8g8r8_snorm_pack_rgba_float
0000000000201b90 0000000000000040 t util_format_b8g8r8_snorm_fetch_rgba_float
0000000000201bd0 00000000000000e8 t util_format_b8g8r8_snorm_unpack_rgba_8unorm
0000000000201cc0 0000000000000080 t util_format_b8g8r8_snorm_pack_rgba_8unorm
0000000000201d40 000000000000022c t util_format_r8g8b8a8_snorm_unpack_rgba_float
0000000000201f70 00000000000001b0 t util_format_r8g8b8a8_snorm_pack_rgba_float
0000000000202120 0000000000000050 t util_format_r8g8b8a8_snorm_fetch_rgba_float
0000000000202170 0000000000000104 t util_format_r8g8b8a8_snorm_unpack_rgba_8unorm
0000000000202280 0000000000000088 t util_format_r8g8b8a8_snorm_pack_rgba_8unorm
0000000000202310 000000000000022c t util_format_b8g8r8a8_snorm_unpack_rgba_float
0000000000202540 00000000000001b0 t util_format_b8g8r8a8_snorm_pack_rgba_float
00000000002026f0 0000000000000050 t util_format_b8g8r8a8_snorm_fetch_rgba_float
0000000000202740 0000000000000104 t util_format_b8g8r8a8_snorm_unpack_rgba_8unorm
0000000000202850 000000000000008c t util_format_b8g8r8a8_snorm_pack_rgba_8unorm
00000000002028e0 0000000000000074 t util_format_r8_sscaled_unpack_rgba_float
0000000000202960 0000000000000090 t util_format_r8_sscaled_pack_rgba_float
00000000002029f0 000000000000001c t util_format_r8_sscaled_fetch_rgba_float
0000000000202a10 000000000000007c t util_format_r8_sscaled_unpack_rgba_8unorm
0000000000202a90 0000000000000164 t util_format_r8g8_sscaled_unpack_rgba_float
0000000000202c00 00000000000000c0 t util_format_r8g8_sscaled_pack_rgba_float
0000000000202cc0 0000000000000024 t util_format_r8g8_sscaled_fetch_rgba_float
0000000000202cf0 000000000000008c t util_format_r8g8_sscaled_unpack_rgba_8unorm
0000000000202d80 0000000000000080 t util_format_r8g8_sscaled_pack_rgba_8unorm
0000000000202e00 0000000000000080 t util_format_r8g8b8_sscaled_unpack_rgba_float
0000000000202e80 00000000000000e4 t util_format_r8g8b8_sscaled_pack_rgba_float
0000000000202f70 0000000000000028 t util_format_r8g8b8_sscaled_fetch_rgba_float
0000000000202fa0 0000000000000094 t util_format_r8g8b8_sscaled_unpack_rgba_8unorm
0000000000203040 0000000000000090 t util_format_r8g8b8_sscaled_pack_rgba_8unorm
00000000002030d0 0000000000000084 t util_format_b8g8r8_sscaled_unpack_rgba_float
0000000000203160 00000000000000e4 t util_format_b8g8r8_sscaled_pack_rgba_float
0000000000203250 0000000000000028 t util_format_b8g8r8_sscaled_fetch_rgba_float
0000000000203280 0000000000000098 t util_format_b8g8r8_sscaled_unpack_rgba_8unorm
0000000000203320 0000000000000094 t util_format_b8g8r8_sscaled_pack_rgba_8unorm
00000000002033c0 00000000000001d4 t util_format_r8g8b8a8_sscaled_unpack_rgba_float
00000000002035a0 00000000000005c0 t util_format_r8g8b8a8_sscaled_pack_rgba_float
0000000000203b60 0000000000000034 t util_format_r8g8b8a8_sscaled_fetch_rgba_float
0000000000203ba0 000000000000009c t util_format_r8g8b8a8_sscaled_unpack_rgba_8unorm
0000000000203c40 00000000000000a0 t util_format_r8g8b8a8_sscaled_pack_rgba_8unorm
0000000000203ce0 00000000000001d4 t util_format_b8g8r8a8_sscaled_unpack_rgba_float
0000000000203ec0 00000000000005b8 t util_format_b8g8r8a8_sscaled_pack_rgba_float
0000000000204480 0000000000000034 t util_format_b8g8r8a8_sscaled_fetch_rgba_float
00000000002044c0 000000000000009c t util_format_b8g8r8a8_sscaled_unpack_rgba_8unorm
0000000000204560 00000000000000a4 t util_format_b8g8r8a8_sscaled_pack_rgba_8unorm
0000000000204610 00000000000001d4 t util_format_a8b8g8r8_sscaled_unpack_rgba_float
00000000002047f0 00000000000005c0 t util_format_a8b8g8r8_sscaled_pack_rgba_float
0000000000204db0 0000000000000034 t util_format_a8b8g8r8_sscaled_fetch_rgba_float
0000000000204df0 000000000000009c t util_format_a8b8g8r8_sscaled_unpack_rgba_8unorm
0000000000204e90 00000000000000a4 t util_format_a8b8g8r8_sscaled_pack_rgba_8unorm
0000000000204f40 0000000000000084 t util_format_r32_fixed_unpack_rgba_float
0000000000204fd0 00000000000000a4 t util_format_r32_fixed_pack_rgba_float
0000000000205080 000000000000002c t util_format_r32_fixed_fetch_rgba_float
00000000002050b0 00000000000000d8 t util_format_r32_fixed_unpack_rgba_8unorm
0000000000205190 0000000000000088 t util_format_r32_fixed_pack_rgba_8unorm
0000000000205220 0000000000000094 t util_format_r32g32_fixed_unpack_rgba_float
00000000002052c0 00000000000000dc t util_format_r32g32_fixed_pack_rgba_float
00000000002053a0 0000000000000038 t util_format_r32g32_fixed_fetch_rgba_float
00000000002053e0 0000000000000120 t util_format_r32g32_fixed_unpack_rgba_8unorm
0000000000205500 00000000000000ac t util_format_r32g32_fixed_pack_rgba_8unorm
00000000002055b0 0000000000000084 t util_format_r32g32b32a32_fixed_unpack_rgba_float
0000000000205640 00000000000000b0 t util_format_r32g32b32a32_fixed_pack_rgba_float
00000000002056f0 0000000000000034 t util_format_r32g32b32a32_fixed_fetch_rgba_float
0000000000205730 00000000000001a8 t util_format_r32g32b32a32_fixed_unpack_rgba_8unorm
00000000002058e0 00000000000000e4 t util_format_r32g32b32a32_fixed_pack_rgba_8unorm
00000000002059d0 0000000000000110 t util_format_r10g10b10x2_uscaled_unpack_rgba_float
0000000000205ae0 00000000000000e0 t util_format_r10g10b10x2_uscaled_pack_rgba_float
0000000000205bc0 000000000000002c t util_format_r10g10b10x2_uscaled_fetch_rgba_float
0000000000205bf0 000000000000008c t util_format_r10g10b10x2_uscaled_unpack_rgba_8unorm
0000000000205c80 0000000000000090 t util_format_r10g10b10x2_uscaled_pack_rgba_8unorm
0000000000205d10 0000000000000134 t util_format_r10g10b10x2_snorm_unpack_rgba_float
0000000000205e50 0000000000000168 t util_format_r10g10b10x2_snorm_pack_rgba_float
0000000000205fc0 0000000000000044 t util_format_r10g10b10x2_snorm_fetch_rgba_float
0000000000206010 0000000000000098 t util_format_r10g10b10x2_snorm_unpack_rgba_8unorm
00000000002060b0 00000000000000a8 t util_format_r10g10b10x2_snorm_pack_rgba_8unorm
0000000000206160 0000000000000094 t util_format_a4r4_unorm_unpack_rgba_float
0000000000206200 00000000000000d4 t util_format_a4r4_unorm_pack_rgba_float
00000000002062e0 000000000000003c t util_format_a4r4_unorm_fetch_rgba_float
0000000000206320 000000000000007c t util_format_a4r4_unorm_unpack_rgba_8unorm
00000000002063a0 0000000000000070 t util_format_a4r4_unorm_pack_rgba_8unorm
0000000000206410 0000000000000094 t util_format_r4a4_unorm_unpack_rgba_float
00000000002064b0 000000000000003c t util_format_r4a4_unorm_fetch_rgba_float
00000000002064f0 000000000000007c t util_format_r4a4_unorm_unpack_rgba_8unorm
0000000000206570 00000000000001a0 t util_format_r8a8_unorm_unpack_rgba_float
0000000000206710 000000000000003c t util_format_r8a8_unorm_fetch_rgba_float
0000000000206750 0000000000000070 t util_format_r8a8_unorm_unpack_rgba_8unorm
00000000002067c0 00000000000001a0 t util_format_a8r8_unorm_unpack_rgba_float
0000000000206960 000000000000003c t util_format_a8r8_unorm_fetch_rgba_float
00000000002069a0 0000000000000070 t util_format_a8r8_unorm_unpack_rgba_8unorm
0000000000206a10 000000000000006c t util_format_a8r8_unorm_pack_rgba_8unorm
0000000000206a80 0000000000000144 t util_format_r10g10b10a2_uscaled_unpack_rgba_float
0000000000206bd0 0000000000000260 t util_format_r10g10b10a2_uscaled_pack_rgba_float
0000000000206e30 0000000000000038 t util_format_r10g10b10a2_uscaled_fetch_rgba_float
0000000000206e70 000000000000008c t util_format_r10g10b10a2_uscaled_unpack_rgba_8unorm
0000000000206f00 00000000000000a0 t util_format_r10g10b10a2_uscaled_pack_rgba_8unorm
0000000000206fa0 0000000000000130 t util_format_r10g10b10a2_sscaled_unpack_rgba_float
00000000002070d0 0000000000000284 t util_format_r10g10b10a2_sscaled_pack_rgba_float
0000000000207360 0000000000000034 t util_format_r10g10b10a2_sscaled_fetch_rgba_float
00000000002073a0 000000000000009c t util_format_r10g10b10a2_sscaled_unpack_rgba_8unorm
0000000000207440 000000000000013c t util_format_r10g10b10a2_snorm_unpack_rgba_float
0000000000207580 00000000000001b4 t util_format_r10g10b10a2_snorm_pack_rgba_float
0000000000207740 000000000000004c t util_format_r10g10b10a2_snorm_fetch_rgba_float
0000000000207790 000000000000009c t util_format_r10g10b10a2_snorm_unpack_rgba_8unorm
0000000000207830 00000000000000b8 t util_format_r10g10b10a2_snorm_pack_rgba_8unorm
00000000002078f0 0000000000000144 t util_format_b10g10r10a2_uscaled_unpack_rgba_float
0000000000207a40 0000000000000260 t util_format_b10g10r10a2_uscaled_pack_rgba_float
0000000000207ca0 0000000000000038 t util_format_b10g10r10a2_uscaled_fetch_rgba_float
0000000000207ce0 000000000000008c t util_format_b10g10r10a2_uscaled_unpack_rgba_8unorm
0000000000207d70 00000000000000a4 t util_format_b10g10r10a2_uscaled_pack_rgba_8unorm
0000000000207e20 0000000000000130 t util_format_b10g10r10a2_sscaled_unpack_rgba_float
0000000000207f50 0000000000000284 t util_format_b10g10r10a2_sscaled_pack_rgba_float
00000000002081e0 0000000000000034 t util_format_b10g10r10a2_sscaled_fetch_rgba_float
0000000000208220 000000000000009c t util_format_b10g10r10a2_sscaled_unpack_rgba_8unorm
00000000002082c0 000000000000013c t util_format_b10g10r10a2_snorm_unpack_rgba_float
0000000000208400 00000000000001b4 t util_format_b10g10r10a2_snorm_pack_rgba_float
00000000002085c0 000000000000004c t util_format_b10g10r10a2_snorm_fetch_rgba_float
0000000000208610 000000000000009c t util_format_b10g10r10a2_snorm_unpack_rgba_8unorm
00000000002086b0 00000000000000b8 t util_format_b10g10r10a2_snorm_pack_rgba_8unorm
0000000000208770 000000000000006c t util_format_r8_uint_unpack_unsigned
00000000002087e0 000000000000006c t util_format_r8_uint_pack_unsigned
0000000000208850 0000000000000018 t util_format_r8_uint_fetch_unsigned
0000000000208870 0000000000000080 t util_format_r8_uint_pack_signed
00000000002088f0 0000000000000108 t util_format_r8g8_uint_unpack_unsigned
0000000000208a00 000000000000007c t util_format_r8g8_uint_pack_unsigned
0000000000208a80 000000000000001c t util_format_r8g8_uint_fetch_unsigned
0000000000208aa0 00000000000000a4 t util_format_r8g8_uint_pack_signed
0000000000208b50 0000000000000074 t util_format_r8g8b8_uint_unpack_unsigned
0000000000208bd0 000000000000008c t util_format_r8g8b8_uint_pack_unsigned
0000000000208c60 000000000000001c t util_format_r8g8b8_uint_fetch_unsigned
0000000000208c80 00000000000000c4 t util_format_r8g8b8_uint_pack_signed
0000000000208d50 0000000000000074 t util_format_r8g8b8a8_uint_unpack_unsigned
0000000000208dd0 00000000000000ac t util_format_r8g8b8a8_uint_pack_unsigned
0000000000208e80 0000000000000020 t util_format_r8g8b8a8_uint_fetch_unsigned
0000000000208ea0 00000000000000d0 t util_format_r8g8b8a8_uint_pack_signed
0000000000208f70 000000000000006c t util_format_r8_sint_unpack_signed
0000000000208fe0 0000000000000080 t util_format_r8_sint_pack_signed
0000000000209060 0000000000000018 t util_format_r8_sint_fetch_signed
0000000000209080 000000000000006c t util_format_r8_sint_pack_unsigned
00000000002090f0 0000000000000138 t util_format_r8g8_sint_unpack_signed
0000000000209230 00000000000000a0 t util_format_r8g8_sint_pack_signed
00000000002092d0 000000000000001c t util_format_r8g8_sint_fetch_signed
00000000002092f0 000000000000007c t util_format_r8g8_sint_pack_unsigned
0000000000209370 0000000000000074 t util_format_r8g8b8_sint_unpack_signed
00000000002093f0 00000000000000c4 t util_format_r8g8b8_sint_pack_signed
00000000002094c0 000000000000001c t util_format_r8g8b8_sint_fetch_signed
00000000002094e0 000000000000008c t util_format_r8g8b8_sint_pack_unsigned
0000000000209570 0000000000000074 t util_format_r8g8b8a8_sint_unpack_signed
00000000002095f0 00000000000000e8 t util_format_r8g8b8a8_sint_pack_signed
00000000002096e0 0000000000000020 t util_format_r8g8b8a8_sint_fetch_signed
0000000000209700 00000000000000ac t util_format_r8g8b8a8_sint_pack_unsigned
00000000002097b0 00000000000000f8 t util_format_r16_uint_unpack_unsigned
00000000002098b0 000000000000006c t util_format_r16_uint_pack_unsigned
0000000000209920 0000000000000018 t util_format_r16_uint_fetch_unsigned
0000000000209940 0000000000000080 t util_format_r16_uint_pack_signed
00000000002099c0 0000000000000074 t util_format_r16g16_uint_unpack_unsigned
0000000000209a40 000000000000008c t util_format_r16g16_uint_pack_unsigned
0000000000209ad0 000000000000001c t util_format_r16g16_uint_fetch_unsigned
0000000000209af0 0000000000000098 t util_format_r16g16_uint_pack_signed
0000000000209b90 0000000000000074 t util_format_r16g16b16a16_uint_unpack_unsigned
0000000000209c10 000000000000006c t util_format_r16g16b16a16_uint_pack_unsigned
0000000000209c80 0000000000000020 t util_format_r16g16b16a16_uint_fetch_unsigned
0000000000209ca0 0000000000000080 t util_format_r16g16b16a16_uint_pack_signed
0000000000209d20 00000000000000f8 t util_format_r16_sint_unpack_signed
0000000000209e20 0000000000000080 t util_format_r16_sint_pack_signed
0000000000209ea0 0000000000000018 t util_format_r16_sint_fetch_signed
0000000000209ec0 000000000000006c t util_format_r16_sint_pack_unsigned
0000000000209f30 0000000000000074 t util_format_r16g16_sint_unpack_signed
0000000000209fb0 00000000000000a8 t util_format_r16g16_sint_pack_signed
000000000020a060 000000000000001c t util_format_r16g16_sint_fetch_signed
000000000020a080 000000000000008c t util_format_r16g16_sint_pack_unsigned
000000000020a110 0000000000000074 t util_format_r16g16b16a16_sint_unpack_signed
000000000020a190 0000000000000090 t util_format_r16g16b16a16_sint_pack_signed
000000000020a220 0000000000000020 t util_format_r16g16b16a16_sint_fetch_signed
000000000020a240 000000000000006c t util_format_r16g16b16a16_sint_pack_unsigned
000000000020a2b0 000000000000006c t util_format_r32_uint_unpack_unsigned
000000000020a320 000000000000005c t util_format_r32_uint_pack_unsigned
000000000020a380 0000000000000018 t util_format_r32_uint_fetch_unsigned
000000000020a3a0 0000000000000060 t util_format_r32_uint_pack_signed
000000000020a400 000000000000006c t util_format_r32g32_uint_unpack_unsigned
000000000020a470 000000000000005c t util_format_r32g32_uint_pack_unsigned
000000000020a4d0 0000000000000014 t util_format_r32g32_uint_fetch_unsigned
000000000020a4f0 0000000000000068 t util_format_r32g32_uint_pack_signed
000000000020a560 000000000000005c t util_format_r32g32b32a32_uint_unpack_unsigned
000000000020a5c0 000000000000005c t util_format_r32g32b32a32_uint_pack_unsigned
000000000020a620 000000000000000c t util_format_r32g32b32a32_uint_fetch_unsigned
000000000020a630 0000000000000068 t util_format_r32g32b32a32_uint_pack_signed
000000000020a6a0 000000000000006c t util_format_r32_sint_unpack_signed
000000000020a710 000000000000005c t util_format_r32_sint_pack_signed
000000000020a770 0000000000000018 t util_format_r32_sint_fetch_signed
000000000020a790 000000000000006c t util_format_r32_sint_pack_unsigned
000000000020a800 000000000000006c t util_format_r32g32_sint_unpack_signed
000000000020a870 000000000000005c t util_format_r32g32_sint_pack_signed
000000000020a8d0 0000000000000014 t util_format_r32g32_sint_fetch_signed
000000000020a8f0 0000000000000068 t util_format_r32g32_sint_pack_unsigned
000000000020a960 000000000000005c t util_format_r32g32b32a32_sint_unpack_signed
000000000020a9c0 000000000000005c t util_format_r32g32b32a32_sint_pack_signed
000000000020aa20 000000000000000c t util_format_r32g32b32a32_sint_fetch_signed
000000000020aa30 0000000000000068 t util_format_r32g32b32a32_sint_pack_unsigned
000000000020aaa0 0000000000000064 t util_format_a8_uint_unpack_unsigned
000000000020ab10 0000000000000070 t util_format_a8_uint_pack_unsigned
000000000020ab80 0000000000000010 t util_format_a8_uint_fetch_unsigned
000000000020ab90 0000000000000080 t util_format_a8_uint_pack_signed
000000000020ac10 0000000000000064 t util_format_i8_uint_unpack_unsigned
000000000020ac80 0000000000000010 t util_format_i8_uint_fetch_unsigned
000000000020ac90 000000000000006c t util_format_l8_uint_unpack_unsigned
000000000020ad00 0000000000000014 t util_format_l8_uint_fetch_unsigned
000000000020ad20 0000000000000118 t util_format_l8a8_uint_unpack_unsigned
000000000020ae40 0000000000000134 t util_format_l8a8_uint_pack_unsigned
000000000020af80 0000000000000024 t util_format_l8a8_uint_fetch_unsigned
000000000020afb0 000000000000017c t util_format_l8a8_uint_pack_signed
000000000020b130 0000000000000064 t util_format_a8_sint_unpack_signed
000000000020b1a0 0000000000000080 t util_format_a8_sint_pack_signed
000000000020b220 0000000000000010 t util_format_a8_sint_fetch_signed
000000000020b230 0000000000000070 t util_format_a8_sint_pack_unsigned
000000000020b2a0 0000000000000064 t util_format_i8_sint_unpack_signed
000000000020b310 0000000000000010 t util_format_i8_sint_fetch_signed
000000000020b320 000000000000006c t util_format_l8_sint_unpack_signed
000000000020b390 0000000000000014 t util_format_l8_sint_fetch_signed
000000000020b3b0 0000000000000150 t util_format_l8a8_sint_unpack_signed
000000000020b500 0000000000000188 t util_format_l8a8_sint_pack_signed
000000000020b690 0000000000000018 t util_format_l8a8_sint_fetch_signed
000000000020b6b0 0000000000000134 t util_format_l8a8_sint_pack_unsigned
000000000020b7f0 00000000000000f8 t util_format_a16_uint_unpack_unsigned
000000000020b8f0 0000000000000070 t util_format_a16_uint_pack_unsigned
000000000020b960 0000000000000010 t util_format_a16_uint_fetch_unsigned
000000000020b970 0000000000000080 t util_format_a16_uint_pack_signed
000000000020b9f0 00000000000000e4 t util_format_i16_uint_unpack_unsigned
000000000020bae0 0000000000000010 t util_format_i16_uint_fetch_unsigned
000000000020baf0 0000000000000100 t util_format_l16_uint_unpack_unsigned
000000000020bbf0 0000000000000014 t util_format_l16_uint_fetch_unsigned
000000000020bc10 000000000000006c t util_format_l16a16_uint_unpack_unsigned
000000000020bc80 000000000000008c t util_format_l16a16_uint_pack_unsigned
000000000020bd10 0000000000000018 t util_format_l16a16_uint_fetch_unsigned
000000000020bd30 0000000000000098 t util_format_l16a16_uint_pack_signed
000000000020bdd0 00000000000000f0 t util_format_a16_sint_unpack_signed
000000000020bec0 0000000000000080 t util_format_a16_sint_pack_signed
000000000020bf40 0000000000000010 t util_format_a16_sint_fetch_signed
000000000020bf50 0000000000000070 t util_format_a16_sint_pack_unsigned
000000000020bfc0 00000000000000dc t util_format_i16_sint_unpack_signed
000000000020c0a0 0000000000000010 t util_format_i16_sint_fetch_signed
000000000020c0b0 0000000000000100 t util_format_l16_sint_unpack_signed
000000000020c1b0 0000000000000014 t util_format_l16_sint_fetch_signed
000000000020c1d0 000000000000006c t util_format_l16a16_sint_unpack_signed
000000000020c240 00000000000000a8 t util_format_l16a16_sint_pack_signed
000000000020c2f0 0000000000000018 t util_format_l16a16_sint_fetch_signed
000000000020c310 000000000000008c t util_format_l16a16_sint_pack_unsigned
000000000020c3a0 0000000000000064 t util_format_a32_uint_unpack_unsigned
000000000020c410 0000000000000064 t util_format_a32_uint_pack_unsigned
000000000020c480 0000000000000010 t util_format_a32_uint_fetch_unsigned
000000000020c490 0000000000000068 t util_format_a32_uint_pack_signed
000000000020c500 0000000000000064 t util_format_i32_uint_unpack_unsigned
000000000020c570 0000000000000010 t util_format_i32_uint_fetch_unsigned
000000000020c580 000000000000006c t util_format_l32_uint_unpack_unsigned
000000000020c5f0 0000000000000014 t util_format_l32_uint_fetch_unsigned
000000000020c610 0000000000000064 t util_format_l32a32_uint_unpack_unsigned
000000000020c680 000000000000006c t util_format_l32a32_uint_pack_unsigned
000000000020c6f0 0000000000000010 t util_format_l32a32_uint_fetch_unsigned
000000000020c700 0000000000000074 t util_format_l32a32_uint_pack_signed
000000000020c780 0000000000000064 t util_format_a32_sint_unpack_signed
000000000020c7f0 0000000000000064 t util_format_a32_sint_pack_signed
000000000020c860 0000000000000010 t util_format_a32_sint_fetch_signed
000000000020c870 000000000000006c t util_format_a32_sint_pack_unsigned
000000000020c8e0 0000000000000064 t util_format_i32_sint_unpack_signed
000000000020c950 0000000000000010 t util_format_i32_sint_fetch_signed
000000000020c960 000000000000006c t util_format_l32_sint_unpack_signed
000000000020c9d0 0000000000000014 t util_format_l32_sint_fetch_signed
000000000020c9f0 0000000000000064 t util_format_l32a32_sint_unpack_signed
000000000020ca60 000000000000006c t util_format_l32a32_sint_pack_signed
000000000020cad0 0000000000000010 t util_format_l32a32_sint_fetch_signed
000000000020cae0 0000000000000084 t util_format_l32a32_sint_pack_unsigned
000000000020cb70 0000000000000078 t util_format_b8g8r8_uint_unpack_unsigned
000000000020cbf0 0000000000000090 t util_format_b8g8r8_uint_pack_unsigned
000000000020cc80 000000000000001c t util_format_b8g8r8_uint_fetch_unsigned
000000000020cca0 00000000000000c4 t util_format_b8g8r8_uint_pack_signed
000000000020cd70 0000000000000074 t util_format_b8g8r8a8_uint_unpack_unsigned
000000000020cdf0 00000000000000a8 t util_format_b8g8r8a8_uint_pack_unsigned
000000000020cea0 0000000000000020 t util_format_b8g8r8a8_uint_fetch_unsigned
000000000020cec0 00000000000000d0 t util_format_b8g8r8a8_uint_pack_signed
000000000020cf90 0000000000000078 t util_format_b8g8r8_sint_unpack_signed
000000000020d010 00000000000000c4 t util_format_b8g8r8_sint_pack_signed
000000000020d0e0 000000000000001c t util_format_b8g8r8_sint_fetch_signed
000000000020d100 0000000000000090 t util_format_b8g8r8_sint_pack_unsigned
000000000020d190 0000000000000074 t util_format_b8g8r8a8_sint_unpack_signed
000000000020d210 00000000000000e8 t util_format_b8g8r8a8_sint_pack_signed
000000000020d300 0000000000000020 t util_format_b8g8r8a8_sint_fetch_signed
000000000020d320 00000000000000a8 t util_format_b8g8r8a8_sint_pack_unsigned
000000000020d3d0 0000000000000074 t util_format_a8r8g8b8_uint_unpack_unsigned
000000000020d450 00000000000000a8 t util_format_a8r8g8b8_uint_pack_unsigned
000000000020d500 0000000000000020 t util_format_a8r8g8b8_uint_fetch_unsigned
000000000020d520 00000000000000d0 t util_format_a8r8g8b8_uint_pack_signed
000000000020d5f0 0000000000000074 t util_format_a8b8g8r8_uint_unpack_unsigned
000000000020d670 00000000000000a8 t util_format_a8b8g8r8_uint_pack_unsigned
000000000020d720 0000000000000020 t util_format_a8b8g8r8_uint_fetch_unsigned
000000000020d740 00000000000000d0 t util_format_a8b8g8r8_uint_pack_signed
000000000020d810 0000000000000074 t util_format_a2r10g10b10_uint_unpack_unsigned
000000000020d890 00000000000000a8 t util_format_a2r10g10b10_uint_pack_unsigned
000000000020d940 0000000000000020 t util_format_a2r10g10b10_uint_fetch_unsigned
000000000020d960 00000000000000d0 t util_format_a2r10g10b10_uint_pack_signed
000000000020da30 0000000000000074 t util_format_a2b10g10r10_uint_unpack_unsigned
000000000020dab0 00000000000000a8 t util_format_a2b10g10r10_uint_pack_unsigned
000000000020db60 0000000000000020 t util_format_a2b10g10r10_uint_fetch_unsigned
000000000020db80 00000000000000d0 t util_format_a2b10g10r10_uint_pack_signed
000000000020dc50 0000000000000074 t util_format_b10g10r10a2_uint_unpack_unsigned
000000000020dcd0 00000000000000a8 t util_format_b10g10r10a2_uint_pack_unsigned
000000000020dd80 0000000000000020 t util_format_b10g10r10a2_uint_fetch_unsigned
000000000020dda0 00000000000000d0 t util_format_b10g10r10a2_uint_pack_signed
000000000020de70 0000000000000074 t util_format_b10g10r10a2_sint_unpack_signed
000000000020def0 00000000000000e8 t util_format_b10g10r10a2_sint_pack_signed
000000000020dfe0 0000000000000020 t util_format_b10g10r10a2_sint_fetch_signed
000000000020e000 00000000000000a4 t util_format_b10g10r10a2_sint_pack_unsigned
000000000020e0b0 0000000000000124 t util_format_r5g6b5_uint_unpack_unsigned
000000000020e1e0 000000000000009c t util_format_r5g6b5_uint_pack_unsigned
000000000020e280 0000000000000020 t util_format_r5g6b5_uint_fetch_unsigned
000000000020e2a0 00000000000000c8 t util_format_r5g6b5_uint_pack_signed
000000000020e370 0000000000000124 t util_format_b5g6r5_uint_unpack_unsigned
000000000020e4a0 0000000000000098 t util_format_b5g6r5_uint_pack_unsigned
000000000020e540 0000000000000020 t util_format_b5g6r5_uint_fetch_unsigned
000000000020e560 00000000000000c8 t util_format_b5g6r5_uint_pack_signed
000000000020e630 0000000000000078 t util_format_r3g3b2_uint_unpack_unsigned
000000000020e6b0 000000000000009c t util_format_r3g3b2_uint_pack_unsigned
000000000020e750 0000000000000020 t util_format_r3g3b2_uint_fetch_unsigned
000000000020e770 00000000000000c8 t util_format_r3g3b2_uint_pack_signed
000000000020e840 0000000000000078 t util_format_b2g3r3_uint_unpack_unsigned
000000000020e8c0 0000000000000098 t util_format_b2g3r3_uint_pack_unsigned
000000000020e960 0000000000000020 t util_format_b2g3r3_uint_fetch_unsigned
000000000020e980 00000000000000c8 t util_format_b2g3r3_uint_pack_signed
000000000020ea50 0000000000000138 t util_format_r4g4b4a4_uint_unpack_unsigned
000000000020eb90 00000000000001b0 t util_format_r4g4b4a4_uint_pack_unsigned
000000000020ed40 0000000000000034 t util_format_r4g4b4a4_uint_fetch_unsigned
000000000020ed80 000000000000022c t util_format_r4g4b4a4_uint_pack_signed
000000000020efb0 0000000000000138 t util_format_b4g4r4a4_uint_unpack_unsigned
000000000020f0f0 00000000000001ac t util_format_b4g4r4a4_uint_pack_unsigned
000000000020f2a0 0000000000000034 t util_format_b4g4r4a4_uint_fetch_unsigned
000000000020f2e0 000000000000022c t util_format_b4g4r4a4_uint_pack_signed
000000000020f510 0000000000000138 t util_format_a4r4g4b4_uint_unpack_unsigned
000000000020f650 00000000000001ac t util_format_a4r4g4b4_uint_pack_unsigned
000000000020f800 0000000000000034 t util_format_a4r4g4b4_uint_fetch_unsigned
000000000020f840 000000000000022c t util_format_a4r4g4b4_uint_pack_signed
000000000020fa70 0000000000000134 t util_format_a4b4g4r4_uint_unpack_unsigned
000000000020fbb0 00000000000001ac t util_format_a4b4g4r4_uint_pack_unsigned
000000000020fd60 0000000000000030 t util_format_a4b4g4r4_uint_fetch_unsigned
000000000020fd90 000000000000022c t util_format_a4b4g4r4_uint_pack_signed
000000000020ffc0 000000000000013c t util_format_a1r5g5b5_uint_unpack_unsigned
0000000000210100 00000000000001b0 t util_format_a1r5g5b5_uint_pack_unsigned
00000000002102b0 0000000000000030 t util_format_a1r5g5b5_uint_fetch_unsigned
00000000002102e0 0000000000000200 t util_format_a1r5g5b5_uint_pack_signed
00000000002104e0 0000000000000138 t util_format_r5g5b5a1_uint_unpack_unsigned
0000000000210620 00000000000001ac t util_format_r5g5b5a1_uint_pack_unsigned
00000000002107d0 0000000000000034 t util_format_r5g5b5a1_uint_fetch_unsigned
0000000000210810 0000000000000208 t util_format_r5g5b5a1_uint_pack_signed
0000000000210a20 0000000000000138 t util_format_b5g5r5a1_uint_unpack_unsigned
0000000000210b60 00000000000001a8 t util_format_b5g5r5a1_uint_pack_unsigned
0000000000210d10 0000000000000034 t util_format_b5g5r5a1_uint_fetch_unsigned
0000000000210d50 0000000000000208 t util_format_b5g5r5a1_uint_pack_signed
0000000000210f60 00000000000001ec t util_format_r8g8b8x8_snorm_unpack_rgba_float
0000000000211150 0000000000000160 t util_format_r8g8b8x8_snorm_pack_rgba_float
00000000002112b0 0000000000000044 t util_format_r8g8b8x8_snorm_fetch_rgba_float
0000000000211300 00000000000000e8 t util_format_r8g8b8x8_snorm_unpack_rgba_8unorm
00000000002113f0 0000000000000078 t util_format_r8g8b8x8_snorm_pack_rgba_8unorm
0000000000211470 000000000000008c t util_format_r8g8b8x8_srgb_unpack_rgba_float
0000000000211500 0000000000000034 t util_format_r8g8b8x8_srgb_fetch_rgba_float
0000000000211540 0000000000000094 t util_format_r8g8b8x8_srgb_unpack_rgba_8unorm
00000000002115e0 0000000000000084 t util_format_r8g8b8x8_srgb_pack_rgba_8unorm
0000000000211670 0000000000000078 t util_format_r8g8b8x8_uint_unpack_unsigned
00000000002116f0 000000000000009c t util_format_r8g8b8x8_uint_pack_unsigned
0000000000211790 0000000000000020 t util_format_r8g8b8x8_uint_fetch_unsigned
00000000002117b0 00000000000000b4 t util_format_r8g8b8x8_uint_pack_signed
0000000000211870 0000000000000078 t util_format_r8g8b8x8_sint_unpack_signed
00000000002118f0 00000000000000c8 t util_format_r8g8b8x8_sint_pack_signed
00000000002119c0 0000000000000020 t util_format_r8g8b8x8_sint_fetch_signed
00000000002119e0 000000000000009c t util_format_r8g8b8x8_sint_pack_unsigned
0000000000211a80 0000000000000098 t util_format_b10g10r10x2_unorm_unpack_rgba_float
0000000000211b20 0000000000000110 t util_format_b10g10r10x2_unorm_pack_rgba_float
0000000000211c30 0000000000000044 t util_format_b10g10r10x2_unorm_fetch_rgba_float
0000000000211c80 0000000000000080 t util_format_b10g10r10x2_unorm_unpack_rgba_8unorm
0000000000211d00 00000000000000ac t util_format_b10g10r10x2_unorm_pack_rgba_8unorm
0000000000211db0 000000000000009c t util_format_r16g16b16x16_unorm_unpack_rgba_float
0000000000211e50 000000000000011c t util_format_r16g16b16x16_unorm_pack_rgba_float
0000000000211f70 0000000000000048 t util_format_r16g16b16x16_unorm_fetch_rgba_float
0000000000211fc0 0000000000000080 t util_format_r16g16b16x16_unorm_unpack_rgba_8unorm
0000000000212040 0000000000000080 t util_format_r16g16b16x16_unorm_pack_rgba_8unorm
00000000002120c0 000000000000009c t util_format_r16g16b16x16_snorm_unpack_rgba_float
0000000000212160 0000000000000164 t util_format_r16g16b16x16_snorm_pack_rgba_float
00000000002122d0 0000000000000048 t util_format_r16g16b16x16_snorm_fetch_rgba_float
0000000000212320 0000000000000098 t util_format_r16g16b16x16_snorm_unpack_rgba_8unorm
00000000002123c0 00000000000000ac t util_format_r16g16b16x16_snorm_pack_rgba_8unorm
0000000000212470 000000000000011c t util_format_r16g16b16x16_float_unpack_rgba_float
0000000000212590 00000000000000f8 t util_format_r16g16b16x16_float_fetch_rgba_float
0000000000212690 0000000000000078 t util_format_r16g16b16x16_uint_unpack_unsigned
0000000000212710 0000000000000090 t util_format_r16g16b16x16_uint_pack_unsigned
00000000002127a0 0000000000000020 t util_format_r16g16b16x16_uint_fetch_unsigned
00000000002127c0 00000000000000c4 t util_format_r16g16b16x16_uint_pack_signed
0000000000212890 0000000000000078 t util_format_r16g16b16x16_sint_unpack_signed
0000000000212910 00000000000000c4 t util_format_r16g16b16x16_sint_pack_signed
00000000002129e0 0000000000000020 t util_format_r16g16b16x16_sint_fetch_signed
0000000000212a00 0000000000000090 t util_format_r16g16b16x16_sint_pack_unsigned
0000000000212a90 000000000000007c t util_format_r32g32b32x32_float_unpack_rgba_float
0000000000212b10 000000000000006c t util_format_r32g32b32x32_float_pack_rgba_float
0000000000212b80 0000000000000024 t util_format_r32g32b32x32_float_fetch_rgba_float
0000000000212bb0 00000000000000a8 t util_format_r32g32b32x32_float_pack_rgba_8unorm
0000000000212c60 0000000000000070 t util_format_r32g32b32x32_uint_unpack_unsigned
0000000000212cd0 000000000000006c t util_format_r32g32b32x32_uint_pack_unsigned
0000000000212d40 0000000000000018 t util_format_r32g32b32x32_uint_fetch_unsigned
0000000000212d60 0000000000000078 t util_format_r32g32b32x32_uint_pack_signed
0000000000212de0 0000000000000070 t util_format_r32g32b32x32_sint_unpack_signed
0000000000212e50 000000000000006c t util_format_r32g32b32x32_sint_pack_signed
0000000000212ec0 0000000000000018 t util_format_r32g32b32x32_sint_fetch_signed
0000000000212ee0 0000000000000084 t util_format_r32g32b32x32_sint_pack_unsigned
0000000000212f70 000000000000019c t util_format_r8a8_snorm_unpack_rgba_float
0000000000213110 0000000000000038 t util_format_r8a8_snorm_fetch_rgba_float
0000000000213150 00000000000000bc t util_format_r8a8_snorm_unpack_rgba_8unorm
0000000000213210 0000000000000094 t util_format_r16a16_unorm_unpack_rgba_float
00000000002132b0 000000000000003c t util_format_r16a16_unorm_fetch_rgba_float
00000000002132f0 0000000000000074 t util_format_r16a16_unorm_unpack_rgba_8unorm
0000000000213370 0000000000000118 t util_format_r16a16_snorm_unpack_rgba_float
0000000000213490 000000000000003c t util_format_r16a16_snorm_fetch_rgba_float
00000000002134d0 0000000000000084 t util_format_r16a16_snorm_unpack_rgba_8unorm
0000000000213560 00000000000000e0 t util_format_r16a16_float_unpack_rgba_float
0000000000213640 00000000000000a8 t util_format_r16a16_float_fetch_rgba_float
00000000002136f0 0000000000000070 t util_format_r32a32_float_unpack_rgba_float
0000000000213760 000000000000006c t util_format_r32a32_float_pack_rgba_float
00000000002137d0 000000000000001c t util_format_r32a32_float_fetch_rgba_float
00000000002137f0 0000000000000094 t util_format_r32a32_float_pack_rgba_8unorm
0000000000213890 0000000000000110 t util_format_r8a8_uint_unpack_unsigned
00000000002139a0 000000000000001c t util_format_r8a8_uint_fetch_unsigned
00000000002139c0 0000000000000140 t util_format_r8a8_sint_unpack_signed
0000000000213b00 000000000000001c t util_format_r8a8_sint_fetch_signed
0000000000213b20 000000000000006c t util_format_r16a16_uint_unpack_unsigned
0000000000213b90 000000000000001c t util_format_r16a16_uint_fetch_unsigned
0000000000213bb0 000000000000006c t util_format_r16a16_sint_unpack_signed
0000000000213c20 000000000000001c t util_format_r16a16_sint_fetch_signed
0000000000213c40 0000000000000068 t util_format_r32a32_uint_unpack_unsigned
0000000000213cb0 000000000000006c t util_format_r32a32_uint_pack_unsigned
0000000000213d20 0000000000000018 t util_format_r32a32_uint_fetch_unsigned
0000000000213d40 0000000000000074 t util_format_r32a32_uint_pack_signed
0000000000213dc0 0000000000000068 t util_format_r32a32_sint_unpack_signed
0000000000213e30 000000000000006c t util_format_r32a32_sint_pack_signed
0000000000213ea0 0000000000000018 t util_format_r32a32_sint_fetch_signed
0000000000213ec0 0000000000000084 t util_format_r32a32_sint_pack_unsigned
0000000000213f50 0000000000000074 t util_format_r10g10b10a2_uint_unpack_unsigned
0000000000213fd0 00000000000000ac t util_format_r10g10b10a2_uint_pack_unsigned
0000000000214080 0000000000000020 t util_format_r10g10b10a2_uint_fetch_unsigned
00000000002140a0 00000000000000d0 t util_format_r10g10b10a2_uint_pack_signed
0000000000214170 0000000000000074 t util_format_r10g10b10a2_sint_unpack_signed
00000000002141f0 00000000000000e8 t util_format_r10g10b10a2_sint_pack_signed
00000000002142e0 0000000000000020 t util_format_r10g10b10a2_sint_fetch_signed
0000000000214300 00000000000000a8 t util_format_r10g10b10a2_sint_pack_unsigned
00000000002143b0 00000000000000a4 t util_format_b5g6r5_srgb_unpack_rgba_float
0000000000214460 000000000000004c t util_format_b5g6r5_srgb_fetch_rgba_float
00000000002144b0 00000000000000ac t util_format_b5g6r5_srgb_unpack_rgba_8unorm
0000000000214560 0000000000000090 t util_format_b5g6r5_srgb_pack_rgba_8unorm
00000000002145f0 00000000000001a0 t util_format_g8r8_unorm_unpack_rgba_float
0000000000214790 000000000000003c t util_format_g8r8_unorm_fetch_rgba_float
00000000002147d0 0000000000000078 t util_format_g8r8_unorm_unpack_rgba_8unorm
0000000000214850 0000000000000060 t util_format_g8r8_unorm_pack_rgba_8unorm
00000000002148b0 0000000000000194 t util_format_g8r8_snorm_unpack_rgba_float
0000000000214a50 0000000000000110 t util_format_g8r8_snorm_pack_rgba_float
0000000000214b60 0000000000000038 t util_format_g8r8_snorm_fetch_rgba_float
0000000000214ba0 00000000000000c4 t util_format_g8r8_snorm_unpack_rgba_8unorm
0000000000214c70 000000000000006c t util_format_g8r8_snorm_pack_rgba_8unorm
0000000000214ce0 0000000000000138 t util_format_g8r8_sint_unpack_signed
0000000000214e20 00000000000000a0 t util_format_g8r8_sint_pack_signed
0000000000214ec0 000000000000001c t util_format_g8r8_sint_fetch_signed
0000000000214ee0 000000000000007c t util_format_g8r8_sint_pack_unsigned
0000000000214f60 0000000000000094 t util_format_g16r16_unorm_unpack_rgba_float
0000000000215000 00000000000000d8 t util_format_g16r16_unorm_pack_rgba_float
00000000002150e0 000000000000003c t util_format_g16r16_unorm_fetch_rgba_float
0000000000215120 000000000000007c t util_format_g16r16_unorm_unpack_rgba_8unorm
00000000002151a0 0000000000000078 t util_format_g16r16_unorm_pack_rgba_8unorm
0000000000215220 0000000000000120 t util_format_g16r16_snorm_unpack_rgba_float
0000000000215340 0000000000000118 t util_format_g16r16_snorm_pack_rgba_float
0000000000215460 000000000000003c t util_format_g16r16_snorm_fetch_rgba_float
00000000002154a0 000000000000008c t util_format_g16r16_snorm_unpack_rgba_8unorm
0000000000215530 0000000000000098 t util_format_g16r16_snorm_pack_rgba_8unorm
00000000002155d0 000000000000022c t util_format_a8b8g8r8_snorm_unpack_rgba_float
0000000000215800 00000000000001b0 t util_format_a8b8g8r8_snorm_pack_rgba_float
00000000002159b0 0000000000000050 t util_format_a8b8g8r8_snorm_fetch_rgba_float
0000000000215a00 0000000000000104 t util_format_a8b8g8r8_snorm_unpack_rgba_8unorm
0000000000215b10 000000000000008c t util_format_a8b8g8r8_snorm_pack_rgba_8unorm
0000000000215ba0 0000000000000074 t util_format_a8b8g8r8_sint_unpack_signed
0000000000215c20 00000000000000e8 t util_format_a8b8g8r8_sint_pack_signed
0000000000215d10 0000000000000020 t util_format_a8b8g8r8_sint_fetch_signed
0000000000215d30 00000000000000a8 t util_format_a8b8g8r8_sint_pack_unsigned
0000000000215de0 0000000000000134 t util_format_x8b8g8r8_snorm_unpack_rgba_float
0000000000215f20 0000000000000160 t util_format_x8b8g8r8_snorm_pack_rgba_float
0000000000216080 0000000000000048 t util_format_x8b8g8r8_snorm_fetch_rgba_float
00000000002160d0 00000000000000e8 t util_format_x8b8g8r8_snorm_unpack_rgba_8unorm
00000000002161c0 000000000000007c t util_format_x8b8g8r8_snorm_pack_rgba_8unorm
0000000000216240 0000000000000078 t util_format_x8b8g8r8_sint_unpack_signed
00000000002162c0 00000000000000c8 t util_format_x8b8g8r8_sint_pack_signed
0000000000216390 0000000000000020 t util_format_x8b8g8r8_sint_fetch_signed
00000000002163b0 000000000000009c t util_format_x8b8g8r8_sint_pack_unsigned
0000000000216450 0000000000000030 t util_format_r64g64b64_float_fetch_rgba_float
0000000000216480 0000000000000088 t util_format_r64g64b64_float_pack_rgba_float
0000000000216510 0000000000000094 t util_format_r64g64b64_float_unpack_rgba_float
00000000002165b0 00000000000000c4 t util_format_r64g64b64_float_pack_rgba_8unorm
0000000000216680 0000000000000180 t util_format_r64g64b64_float_unpack_rgba_8unorm
0000000000216800 000000000000001c t util_format_r64g64b64a64_float_fetch_rgba_float
0000000000216820 000000000000006c t util_format_r64g64b64a64_float_pack_rgba_float
0000000000216890 0000000000000074 t util_format_r64g64b64a64_float_unpack_rgba_float
0000000000216910 00000000000000cc t util_format_r64g64b64a64_float_pack_rgba_8unorm
00000000002169e0 00000000000001b8 t util_format_r64g64b64a64_float_unpack_rgba_8unorm
0000000000216ba0 0000000000000028 t util_format_r32g32b32_float_fetch_rgba_float
0000000000216bd0 0000000000000080 t util_format_r32g32b32_float_pack_rgba_float
0000000000216c50 000000000000008c t util_format_r32g32b32_float_unpack_rgba_float
0000000000216ce0 00000000000000b8 t util_format_r32g32b32_float_pack_rgba_8unorm
0000000000216da0 0000000000000044 t util_format_r32g32b32_unorm_fetch_rgba_float
0000000000216df0 0000000000000104 t util_format_r32g32b32_unorm_pack_rgba_float
0000000000216f00 00000000000000b4 t util_format_r32g32b32_unorm_unpack_rgba_float
0000000000216fc0 00000000000000a0 t util_format_r32g32b32_unorm_pack_rgba_8unorm
0000000000217060 000000000000009c t util_format_r32g32b32_unorm_unpack_rgba_8unorm
0000000000217100 0000000000000028 t util_format_r32g32b32_uscaled_fetch_rgba_float
0000000000217130 00000000000000ec t util_format_r32g32b32_uscaled_pack_rgba_float
0000000000217220 0000000000000090 t util_format_r32g32b32_uscaled_unpack_rgba_float
00000000002172b0 00000000000000ac t util_format_r32g32b32_uscaled_pack_rgba_8unorm
0000000000217360 00000000000000a8 t util_format_r32g32b32_uscaled_unpack_rgba_8unorm
0000000000217410 0000000000000044 t util_format_r32g32b32_snorm_fetch_rgba_float
0000000000217460 0000000000000118 t util_format_r32g32b32_snorm_pack_rgba_float
0000000000217580 00000000000000ac t util_format_r32g32b32_snorm_unpack_rgba_float
0000000000217630 00000000000000c4 t util_format_r32g32b32_snorm_pack_rgba_8unorm
0000000000217700 00000000000000ac t util_format_r32g32b32_snorm_unpack_rgba_8unorm
00000000002177b0 0000000000000028 t util_format_r32g32b32_sscaled_fetch_rgba_float
00000000002177e0 00000000000000ec t util_format_r32g32b32_sscaled_pack_rgba_float
00000000002178d0 0000000000000090 t util_format_r32g32b32_sscaled_unpack_rgba_float
0000000000217960 00000000000000ac t util_format_r32g32b32_sscaled_pack_rgba_8unorm
0000000000217a10 00000000000000ac t util_format_r32g32b32_sscaled_unpack_rgba_8unorm
0000000000217ac0 0000000000000110 t util_format_r16g16b16_float_fetch_rgba_float
0000000000217bd0 0000000000000134 t util_format_r16g16b16_float_unpack_rgba_float
0000000000217d10 0000000000000054 t util_format_r16g16b16_unorm_fetch_rgba_float
0000000000217d70 0000000000000118 t util_format_r16g16b16_unorm_pack_rgba_float
0000000000217e90 00000000000000c0 t util_format_r16g16b16_unorm_unpack_rgba_float
0000000000217f50 0000000000000098 t util_format_r16g16b16_unorm_pack_rgba_8unorm
0000000000217ff0 000000000000009c t util_format_r16g16b16_unorm_unpack_rgba_8unorm
0000000000218090 000000000000003c t util_format_r16g16b16_uscaled_fetch_rgba_float
00000000002180d0 00000000000000f8 t util_format_r16g16b16_uscaled_pack_rgba_float
00000000002181d0 00000000000000a4 t util_format_r16g16b16_uscaled_unpack_rgba_float
0000000000218280 00000000000000ac t util_format_r16g16b16_uscaled_pack_rgba_8unorm
0000000000218330 00000000000000a8 t util_format_r16g16b16_uscaled_unpack_rgba_8unorm
00000000002183e0 0000000000000054 t util_format_r16g16b16_snorm_fetch_rgba_float
0000000000218440 0000000000000160 t util_format_r16g16b16_snorm_pack_rgba_float
00000000002185a0 00000000000000c0 t util_format_r16g16b16_snorm_unpack_rgba_float
0000000000218660 00000000000000c4 t util_format_r16g16b16_snorm_pack_rgba_8unorm
0000000000218730 00000000000000b4 t util_format_r16g16b16_snorm_unpack_rgba_8unorm
00000000002187f0 000000000000003c t util_format_r16g16b16_sscaled_fetch_rgba_float
0000000000218830 0000000000000100 t util_format_r16g16b16_sscaled_pack_rgba_float
0000000000218930 00000000000000a4 t util_format_r16g16b16_sscaled_unpack_rgba_float
00000000002189e0 00000000000000ac t util_format_r16g16b16_sscaled_pack_rgba_8unorm
0000000000218a90 00000000000000b4 t util_format_r16g16b16_sscaled_unpack_rgba_8unorm
0000000000218b50 0000000000000044 t util_format_r32g32b32_fixed_fetch_rgba_float
0000000000218ba0 0000000000000120 t util_format_r32g32b32_fixed_pack_rgba_float
0000000000218cc0 00000000000000ac t util_format_r32g32b32_fixed_unpack_rgba_float
0000000000218d70 00000000000000e0 t util_format_r32g32b32_fixed_pack_rgba_8unorm
0000000000218e50 000000000000017c t util_format_r32g32b32_fixed_unpack_rgba_8unorm
0000000000218fd0 000000000000002c t util_format_r16g16b16_uint_fetch_unsigned
0000000000219000 00000000000000d8 t util_format_r16g16b16_uint_pack_signed
00000000002190e0 00000000000000a4 t util_format_r16g16b16_uint_pack_unsigned
0000000000219190 0000000000000094 t util_format_r16g16b16_uint_unpack_unsigned
0000000000219230 000000000000002c t util_format_r16g16b16_sint_fetch_signed
0000000000219260 00000000000000d8 t util_format_r16g16b16_sint_pack_signed
0000000000219340 0000000000000094 t util_format_r16g16b16_sint_unpack_signed
00000000002193e0 00000000000000a4 t util_format_r16g16b16_sint_pack_unsigned
0000000000219490 0000000000000020 t util_format_r32g32b32_uint_fetch_unsigned
00000000002194b0 0000000000000088 t util_format_r32g32b32_uint_pack_signed
0000000000219540 0000000000000074 t util_format_r32g32b32_uint_pack_unsigned
00000000002195c0 0000000000000088 t util_format_r32g32b32_uint_unpack_unsigned
0000000000219650 0000000000000020 t util_format_r32g32b32_sint_fetch_signed
0000000000219670 0000000000000074 t util_format_r32g32b32_sint_pack_signed
00000000002196f0 0000000000000088 t util_format_r32g32b32_sint_unpack_signed
0000000000219780 0000000000000090 t util_format_r32g32b32_sint_pack_unsigned
0000000000219810 000000000000001c t util_format_r8_uscaled_fetch_rgba_float
0000000000219830 0000000000000030 t util_format_a1b5g5r5_uint_fetch_unsigned
0000000000219860 000000000000006c t util_format_r32_sscaled_pack_rgba_8unorm
00000000002198d0 000000000000006c t util_format_r16_sscaled_pack_rgba_8unorm
0000000000219940 0000000000000094 t util_format_l8_unorm_pack_rgba_float
00000000002199e0 0000000000000094 t util_format_a8_unorm_pack_rgba_float
0000000000219a80 00000000000000a8 t util_format_a32_float_unpack_rgba_8unorm
0000000000219b30 00000000000000ac t util_format_l32_float_unpack_rgba_8unorm
0000000000219be0 00000000000000a4 t util_format_i32_float_unpack_rgba_8unorm
0000000000219c90 00000000000000ac t util_format_r32_float_unpack_rgba_8unorm
0000000000219d40 0000000000000068 t util_format_r8_srgb_pack_rgba_8unorm
0000000000219db0 00000000000000d8 t util_format_r32a32_float_unpack_rgba_8unorm
0000000000219e90 00000000000000d8 t util_format_l32a32_float_unpack_rgba_8unorm
0000000000219f70 00000000000000e0 t util_format_r32g32_float_unpack_rgba_8unorm
000000000021a050 00000000000000c4 t util_format_g8r8_unorm_pack_rgba_float
000000000021a120 0000000000000314 t util_format_l8a8_unorm_pack_rgba_float
000000000021a440 00000000000000c4 t util_format_r8g8_unorm_pack_rgba_float
000000000021a510 0000000000000324 t util_format_a8r8_unorm_pack_rgba_float
000000000021a840 00000000000000e4 t util_format_a16_float_unpack_rgba_8unorm
000000000021a930 00000000000000ec t util_format_l16_float_unpack_rgba_8unorm
000000000021aa20 00000000000000e4 t util_format_i16_float_unpack_rgba_8unorm
000000000021ab10 00000000000000ec t util_format_r16_float_unpack_rgba_8unorm
000000000021ac00 000000000000010c t util_format_r32g32b32x32_float_unpack_rgba_8unorm
000000000021ad10 000000000000005c t util_format_i8_unorm_pack_rgba_8unorm
000000000021ad70 000000000000005c t util_format_r8_unorm_pack_rgba_8unorm
000000000021add0 00000000000000f0 t util_format_r8g8b8_unorm_pack_rgba_float
000000000021aec0 00000000000000f0 t util_format_b8g8r8_unorm_pack_rgba_float
000000000021afb0 00000000000000f8 t util_format_b8g8r8x8_unorm_pack_rgba_float
000000000021b0b0 00000000000000f8 t util_format_r8g8b8x8_unorm_pack_rgba_float
000000000021b1b0 0000000000000118 t util_format_r32g32b32_float_unpack_rgba_8unorm
000000000021b2d0 00000000000000f4 t util_format_x8r8g8b8_unorm_pack_rgba_float
000000000021b3d0 00000000000000f4 t util_format_x8b8g8r8_unorm_pack_rgba_float
000000000021b4d0 0000000000000130 t util_format_r32g32b32a32_float_unpack_rgba_8unorm
000000000021b600 0000000000000068 t util_format_r8a8_unorm_pack_rgba_8unorm
000000000021b670 0000000000000140 t util_format_l16a16_float_unpack_rgba_8unorm
000000000021b7b0 0000000000000148 t util_format_r16g16_float_unpack_rgba_8unorm
000000000021b900 0000000000000140 t util_format_r16a16_float_unpack_rgba_8unorm
000000000021ba40 00000000000005dc t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_float
000000000021c020 00000000000005e4 t util_format_b8g8r8a8_unorm_pack_rgba_float
000000000021c610 00000000000005ec t util_format_a8r8g8b8_unorm_pack_rgba_float
000000000021cc00 00000000000005ec t util_format_a8b8g8r8_unorm_pack_rgba_float
000000000021d1f0 0000000000000148 t util_format_r8sg8sb8ux8u_norm_pack_rgba_float
000000000021d340 0000000000000050 t util_format_r8g8b8a8_unorm_fetch_rgba_float
000000000021d390 000000000000019c t util_format_r16g16b16x16_float_unpack_rgba_8unorm
000000000021d530 000000000000006c t util_format_r8_uscaled_pack_rgba_8unorm
000000000021d5a0 000000000000006c t util_format_r8_sscaled_pack_rgba_8unorm
000000000021d610 0000000000000060 t util_format_i16_unorm_pack_rgba_8unorm
000000000021d670 0000000000000060 t util_format_r16_unorm_pack_rgba_8unorm
000000000021d6d0 0000000000000060 t util_format_i8_snorm_pack_rgba_8unorm
000000000021d730 0000000000000060 t util_format_r8_snorm_pack_rgba_8unorm
000000000021d790 00000000000001b4 t util_format_r16g16b16_float_unpack_rgba_8unorm
000000000021d950 00000000000001ec t util_format_r16g16b16a16_float_unpack_rgba_8unorm
000000000021db40 000000000000007c t util_format_r8_uscaled_unpack_rgba_8unorm
000000000021dbc0 000000000000006c t util_format_r4a4_unorm_pack_rgba_8unorm
000000000021dc30 0000000000000078 t util_format_r16a16_unorm_pack_rgba_8unorm
000000000021dcb0 0000000000000070 t util_format_r8a8_snorm_pack_rgba_8unorm
000000000021dd20 0000000000000074 t util_format_i16_snorm_pack_rgba_8unorm
000000000021dda0 0000000000000074 t util_format_r16_snorm_pack_rgba_8unorm
000000000021de20 000000000000005c t util_format_i32_float_pack_rgba_float
000000000021de80 000000000000005c t util_format_r32_float_pack_rgba_float
000000000021dee0 0000000000000074 t util_format_i32_float_pack_rgba_8unorm
000000000021df60 0000000000000074 t util_format_r32_float_pack_rgba_8unorm
000000000021dfe0 000000000000005c t util_format_i32_uint_pack_unsigned
000000000021e040 000000000000005c t util_format_l32_uint_pack_unsigned
000000000021e0a0 000000000000005c t util_format_i32_sint_pack_signed
000000000021e100 000000000000005c t util_format_l32_sint_pack_signed
000000000021e160 0000000000000074 t util_format_r8_uscaled_unpack_rgba_float
000000000021e1e0 0000000000000078 t util_format_r8g8b8a8_unorm_unpack_rgba_8unorm
000000000021e260 000000000000006c t util_format_i8_sint_pack_unsigned
000000000021e2d0 000000000000006c t util_format_l8_sint_pack_unsigned
000000000021e340 000000000000006c t util_format_i16_sint_pack_unsigned
000000000021e3b0 000000000000006c t util_format_l16_sint_pack_unsigned
000000000021e420 0000000000000060 t util_format_i32_uint_pack_signed
000000000021e480 0000000000000060 t util_format_l32_uint_pack_signed
000000000021e4e0 000000000000006c t util_format_i32_sint_pack_unsigned
000000000021e550 000000000000006c t util_format_l32_sint_pack_unsigned
000000000021e5c0 0000000000000090 t util_format_r8_uscaled_pack_rgba_float
000000000021e650 0000000000000098 t util_format_r16a16_snorm_pack_rgba_8unorm
000000000021e6f0 0000000000000134 t util_format_r8a8_uint_pack_unsigned
000000000021e830 000000000000006c t util_format_i8_uint_pack_unsigned
000000000021e8a0 000000000000006c t util_format_l8_uint_pack_unsigned
000000000021e910 000000000000006c t util_format_i16_uint_pack_unsigned
000000000021e980 000000000000006c t util_format_l16_uint_pack_unsigned
000000000021e9f0 000000000000005c t util_format_r8g8b8a8_unorm_pack_rgba_8unorm
000000000021ea50 0000000000000134 t util_format_r8a8_sint_pack_unsigned
000000000021eb90 000000000000008c t util_format_r16a16_uint_pack_unsigned
000000000021ec20 000000000000008c t util_format_r16a16_sint_pack_unsigned
000000000021ecb0 000000000000013c t util_format_a1b5g5r5_uint_unpack_unsigned
000000000021edf0 0000000000000080 t util_format_i8_uint_pack_signed
000000000021ee70 0000000000000080 t util_format_l8_uint_pack_signed
000000000021eef0 0000000000000080 t util_format_i8_sint_pack_signed
000000000021ef70 0000000000000080 t util_format_l8_sint_pack_signed
000000000021eff0 0000000000000080 t util_format_i16_uint_pack_signed
000000000021f070 0000000000000080 t util_format_l16_uint_pack_signed
000000000021f0f0 0000000000000080 t util_format_i16_sint_pack_signed
000000000021f170 0000000000000080 t util_format_l16_sint_pack_signed
000000000021f1f0 00000000000000a0 t util_format_r10g10b10a2_sscaled_pack_rgba_8unorm
000000000021f290 00000000000000a4 t util_format_b10g10r10a2_sscaled_pack_rgba_8unorm
000000000021f340 000000000000017c t util_format_r8a8_uint_pack_signed
000000000021f4c0 0000000000000098 t util_format_r16a16_uint_pack_signed
000000000021f560 0000000000000094 t util_format_i8_unorm_pack_rgba_float
000000000021f600 0000000000000094 t util_format_r8_unorm_pack_rgba_float
000000000021f6a0 0000000000000188 t util_format_r8a8_sint_pack_signed
000000000021f830 00000000000000a8 t util_format_r16a16_sint_pack_signed
000000000021f8e0 00000000000000a0 t util_format_i16_unorm_pack_rgba_float
000000000021f980 00000000000000a0 t util_format_r16_unorm_pack_rgba_float
000000000021fa20 0000000000000314 t util_format_r8a8_unorm_pack_rgba_float
000000000021fd40 000000000000024c t util_format_r8g8b8a8_unorm_unpack_rgba_float
000000000021ff90 00000000000000b8 t util_format_a16_float_pack_rgba_float
0000000000220050 00000000000000cc t util_format_a16_float_pack_rgba_8unorm
0000000000220120 00000000000000b8 t util_format_l16_float_pack_rgba_float
00000000002201e0 00000000000000cc t util_format_l16_float_pack_rgba_8unorm
00000000002202b0 00000000000000b8 t util_format_i16_float_pack_rgba_float
0000000000220370 00000000000000b8 t util_format_r16_float_pack_rgba_float
0000000000220430 00000000000000cc t util_format_i16_float_pack_rgba_8unorm
0000000000220500 00000000000000cc t util_format_r16_float_pack_rgba_8unorm
00000000002205d0 00000000000001b0 t util_format_a1b5g5r5_uint_pack_unsigned
0000000000220780 00000000000000b8 t util_format_i8_snorm_pack_rgba_float
0000000000220840 00000000000000b8 t util_format_r8_snorm_pack_rgba_float
0000000000220900 00000000000000b8 t util_format_i16_snorm_pack_rgba_float
00000000002209c0 00000000000000b8 t util_format_r16_snorm_pack_rgba_float
0000000000220a80 00000000000000d8 t util_format_r16a16_unorm_pack_rgba_float
0000000000220b60 00000000000000c4 t util_format_l8_srgb_pack_rgba_float
0000000000220c30 00000000000000c4 t util_format_r8_srgb_pack_rgba_float
0000000000220d00 00000000000000d4 t util_format_r4a4_unorm_pack_rgba_float
0000000000220de0 0000000000000104 t util_format_l16a16_float_pack_rgba_float
0000000000220ef0 0000000000000104 t util_format_r16g16_float_pack_rgba_float
0000000000221000 0000000000000104 t util_format_r16a16_float_pack_rgba_float
0000000000221110 0000000000000524 t util_format_l8a8_srgb_pack_rgba_float
0000000000221640 000000000000012c t util_format_l16a16_float_pack_rgba_8unorm
0000000000221770 000000000000012c t util_format_r16g16_float_pack_rgba_8unorm
00000000002218a0 000000000000012c t util_format_r16a16_float_pack_rgba_8unorm
00000000002219d0 000000000000011c t util_format_r8g8_srgb_pack_rgba_float
0000000000221af0 000000000000014c t util_format_r16g16b16x16_float_pack_rgba_float
0000000000221c40 0000000000000160 t util_format_r16g16b16_float_pack_rgba_float
0000000000221da0 0000000000000178 t util_format_r16g16b16x16_float_pack_rgba_8unorm
0000000000221f20 0000000000000190 t util_format_r16g16b16_float_pack_rgba_8unorm
00000000002220b0 00000000000001cc t util_format_r16g16b16a16_float_pack_rgba_8unorm
0000000000222280 0000000000000200 t util_format_a1b5g5r5_uint_pack_signed
0000000000222480 00000000000001a8 t util_format_b8g8r8a8_srgb_pack_rgba_float
0000000000222630 0000000000000194 t util_format_r16g16b16a16_float_pack_rgba_float
00000000002227d0 0000000000000178 t util_format_r8g8b8_srgb_pack_rgba_float
0000000000222950 0000000000000178 t util_format_b8g8r8_srgb_pack_rgba_float
0000000000222ad0 000000000000016c t util_format_b8g8r8x8_srgb_pack_rgba_float
0000000000222c40 000000000000016c t util_format_r8g8b8x8_srgb_pack_rgba_float
0000000000222db0 0000000000000170 t util_format_x8b8g8r8_srgb_pack_rgba_float
0000000000222f20 0000000000000170 t util_format_x8r8g8b8_srgb_pack_rgba_float
0000000000223090 0000000000000110 t util_format_r8a8_snorm_pack_rgba_float
00000000002231a0 0000000000000118 t util_format_r16a16_snorm_pack_rgba_float
00000000002232c0 0000000000000174 t util_format_b5g6r5_srgb_pack_rgba_float
0000000000223440 00000000000001ac t util_format_a8b8g8r8_srgb_pack_rgba_float
00000000002235f0 00000000000001ac t util_format_a8r8g8b8_srgb_pack_rgba_float
00000000002237a0 00000000000001a8 t util_format_r8g8b8a8_srgb_pack_rgba_float
0000000000223950 00000000000005dc t util_format_r8g8b8a8_unorm_pack_rgba_float
0000000000223f30 00000000000011d4 t util_format_description
0000000000225110 0000000000000074 t _eglGrowArray
0000000000225190 000000000000006c t _eglCreateArray
0000000000225200 0000000000000068 t _eglDestroyArray
0000000000225270 000000000000005c t _eglAppendArray
00000000002252d0 0000000000000044 t _eglFindArray
0000000000225320 00000000000000dc t _eglFilterArray
0000000000225400 00000000000000a0 t _eglFlattenArray
00000000002254a0 0000000000000014 t one_time_fini
00000000002254c0 0000000000000034 t generic_nop
0000000000225500 000000000000012c t check_compatible
0000000000225630 00000000000000ac t _mesa_initialize
00000000002256e0 00000000000003a0 t _mesa_init_constants
0000000000225a80 000000000000007c t _mesa_alloc_dispatch_table
0000000000225b00 000000000000002c t _mesa_initialize_dispatch_tables
0000000000225b30 0000000000000658 t _mesa_initialize_context
0000000000226190 0000000000000310 t _mesa_copy_context
00000000002264a0 0000000000000504 t _mesa_make_current
00000000002269b0 00000000000003cc t _mesa_free_context_data
0000000000226d80 000000000000002c t _mesa_destroy_context
0000000000226db0 00000000000000a4 t _mesa_share_state
0000000000226e60 0000000000000004 t _mesa_get_current_context
0000000000226e70 0000000000000078 T _mesa_Finish
0000000000226ef0 0000000000000078 T _mesa_Flush
0000000000226f70 0000000000000004 t _mesa_get_cpu_features
0000000000226f80 00000000000000a0 t _mesa_print_info
0000000000227020 0000000000000024 t _mesa_init_debug
0000000000227050 00000000000001d8 t validate_params
0000000000227230 0000000000000110 t _mesa_lock_debug_state
0000000000227340 00000000000000a4 t validate_length
00000000002273f0 0000000000000104 t debug_message_store
0000000000227500 00000000000000a4 t debug_clear_group
00000000002275b0 0000000000000240 t debug_make_group_writable.isra.0
00000000002277f0 000000000000022c t log_msg_locked_and_unlock
0000000000227a20 0000000000000058 t _mesa_debug_get_id
0000000000227a80 00000000000000c0 t _mesa_debug_is_message_enabled
0000000000227b40 0000000000000088 t _mesa_set_debug_state_int
0000000000227bd0 00000000000000e0 t _mesa_get_debug_state_int
0000000000227cb0 0000000000000070 t _mesa_get_debug_state_ptr
0000000000227d20 0000000000000054 t _mesa_log_msg
0000000000227d80 000000000000021c T _mesa_DebugMessageInsert
0000000000227fa0 0000000000000288 T _mesa_GetDebugMessageLog
0000000000228230 0000000000000598 T _mesa_DebugMessageControl
00000000002287d0 0000000000000060 T _mesa_DebugMessageCallback
0000000000228830 00000000000001dc T _mesa_PushDebugGroup
0000000000228a10 000000000000013c T _mesa_PopDebugGroup
0000000000228b50 0000000000000010 t _mesa_init_debug_output
0000000000228b60 000000000000010c t _mesa_free_errors_data
0000000000228c70 000000000000008c T _mesa_StringMarkerGREMEDY
0000000000228d00 0000000000000050 t _mesa_ClearDepth
0000000000228d50 0000000000000054 t _mesa_ClearDepthf
0000000000228db0 00000000000000c0 T _mesa_DepthFunc_no_error
0000000000228e70 00000000000000dc t _mesa_DepthFunc
0000000000228f50 00000000000000bc t _mesa_DepthMask
0000000000229010 00000000000000f8 t _mesa_DepthBoundsEXT
0000000000229110 0000000000000024 t _mesa_init_depth
0000000000229140 0000000000000038 t check_atlas_for_deleted_list
0000000000229180 000000000000015c t dlist_alloc
00000000002292e0 00000000000000b8 t save_SetFragmentShaderConstantATI
00000000002293a0 0000000000000084 t save_BindFragmentShaderATI
0000000000229430 000000000000002c t save_MultiDrawElementsIndirect
0000000000229460 000000000000002c t save_MultiDrawArraysIndirect
0000000000229490 000000000000002c t save_DrawElementsIndirect
00000000002294c0 000000000000002c t save_DrawArraysIndirect
00000000002294f0 000000000000002c t save_DrawElementsInstancedBaseVertexBaseInstance
0000000000229520 000000000000002c t save_DrawElementsInstancedBaseInstance
0000000000229550 000000000000002c t save_DrawArraysInstancedBaseInstance
0000000000229580 000000000000002c t save_DrawElementsInstancedBaseVertexARB
00000000002295b0 000000000000002c t save_DrawElementsInstancedARB
00000000002295e0 000000000000002c t save_DrawArraysInstancedARB
0000000000229610 000000000000002c t save_DispatchComputeIndirect
0000000000229640 000000000000002c t save_NewList
0000000000229670 0000000000000230 t save_MultiTexCoordP4uiv
00000000002298a0 000000000000022c t save_MultiTexCoordP4ui
0000000000229ad0 0000000000000218 t save_MultiTexCoordP3uiv
0000000000229cf0 0000000000000214 t save_MultiTexCoordP3ui
0000000000229f10 00000000000001b8 t save_MultiTexCoordP2uiv
000000000022a0d0 00000000000001b4 t save_MultiTexCoordP2ui
000000000022a290 0000000000000198 t save_MultiTexCoordP1uiv
000000000022a430 0000000000000194 t save_MultiTexCoordP1ui
000000000022a5d0 000000000000021c t save_TexCoordP4uiv
000000000022a7f0 0000000000000218 t save_TexCoordP4ui
000000000022aa10 0000000000000204 t save_TexCoordP3uiv
000000000022ac20 0000000000000200 t save_TexCoordP3ui
000000000022ae20 00000000000001a4 t save_TexCoordP2uiv
000000000022afd0 00000000000001a0 t save_TexCoordP2ui
000000000022b170 000000000000013c t save_TexCoordP1uiv
000000000022b2b0 0000000000000138 t save_TexCoordP1ui
000000000022b3f0 0000000000000218 t save_VertexP4uiv
000000000022b610 0000000000000214 t save_VertexP4ui
000000000022b830 0000000000000200 t save_VertexP3uiv
000000000022ba30 00000000000001fc t save_VertexP3ui
000000000022bc30 00000000000001a0 t save_VertexP2uiv
000000000022bdd0 000000000000019c t save_VertexP2ui
000000000022bf70 00000000000000e0 t save_Indexfv
000000000022c050 00000000000000d8 t save_Indexf
000000000022c130 00000000000000e0 t save_EdgeFlag
000000000022c210 0000000000000214 t save_VertexAttribI4uiv
000000000022c430 0000000000000204 t save_VertexAttribI3uiv
000000000022c640 00000000000001fc t save_VertexAttribI2uiv
000000000022c840 0000000000000220 t save_VertexAttribI4ui
000000000022ca60 0000000000000210 t save_VertexAttribI3ui
000000000022cc70 00000000000001fc t save_VertexAttribI2ui
000000000022ce70 00000000000001d8 t save_VertexAttribI1ui
000000000022d050 0000000000000240 t save_VertexAttribI4iv
000000000022d290 0000000000000220 t save_VertexAttribI3iv
000000000022d4b0 000000000000020c t save_VertexAttribI2iv
000000000022d6c0 0000000000000220 t save_VertexAttribI4i
000000000022d8e0 0000000000000210 t save_VertexAttribI3i
000000000022daf0 00000000000001fc t save_VertexAttribI2i
000000000022dcf0 00000000000001d8 t save_VertexAttribI1i
000000000022ded0 00000000000001cc t save_VertexAttrib4fvNV
000000000022e0a0 000000000000018c t save_VertexAttrib4fNV
000000000022e230 00000000000001a8 t save_VertexAttrib3fvNV
000000000022e3e0 0000000000000180 t save_VertexAttrib3fNV
000000000022e560 000000000000017c t save_VertexAttrib2fvNV
000000000022e6e0 0000000000000160 t save_VertexAttrib2fNV
000000000022e840 0000000000000154 t save_VertexAttrib1fvNV
000000000022e9a0 0000000000000150 t save_VertexAttrib1fNV
000000000022eaf0 0000000000000288 t save_VertexAttrib4fvARB
000000000022ed80 0000000000000248 t save_VertexAttrib4fARB
000000000022efd0 0000000000000240 t save_VertexAttrib3fvARB
000000000022f210 0000000000000240 t save_VertexAttrib3fARB
000000000022f450 00000000000001f8 t save_VertexAttrib2fvARB
000000000022f650 00000000000001f0 t save_VertexAttrib2fARB
000000000022f840 00000000000001d8 t save_VertexAttrib1fvARB
000000000022fa20 00000000000001d0 t save_VertexAttrib1fARB
000000000022fbf0 0000000000000118 t save_Vertex4fv
000000000022fd10 0000000000000104 t save_Vertex4f
000000000022fe20 0000000000000110 t save_Vertex3fv
000000000022ff30 0000000000000100 t save_Vertex3f
0000000000230030 00000000000000e8 t save_Vertex2fv
0000000000230120 00000000000000dc t save_Vertex2f
0000000000230200 000000000000011c t save_TexCoord4fv
0000000000230320 0000000000000108 t save_TexCoord4f
0000000000230430 0000000000000114 t save_TexCoord3fv
0000000000230550 0000000000000104 t save_TexCoord3f
0000000000230660 00000000000000ec t save_TexCoord2fv
0000000000230750 00000000000000e0 t save_TexCoord2f
0000000000230830 00000000000000e0 t save_TexCoord1fv
0000000000230910 00000000000000d8 t save_TexCoord1f
00000000002309f0 0000000000000114 t save_SecondaryColor3fvEXT
0000000000230b10 0000000000000104 t save_SecondaryColor3fEXT
0000000000230c20 0000000000000114 t save_Normal3fv
0000000000230d40 0000000000000104 t save_Normal3f
0000000000230e50 000000000000012c t save_MultiTexCoord4fv
0000000000230f80 000000000000011c t save_MultiTexCoord4f
00000000002310a0 0000000000000124 t save_MultiTexCoord3fv
00000000002311d0 0000000000000118 t save_MultiTexCoord3f
00000000002312f0 00000000000000fc t save_MultiTexCoord2fv
00000000002313f0 00000000000000f4 t save_MultiTexCoord2f
00000000002314f0 00000000000000f0 t save_MultiTexCoord1fv
00000000002315e0 00000000000000ec t save_MultiTexCoord1f
00000000002316d0 00000000000000e0 t save_FogCoordfvEXT
00000000002317b0 00000000000000d8 t save_FogCoordfEXT
0000000000231890 000000000000011c t save_Color4fv
00000000002319b0 0000000000000108 t save_Color4f
0000000000231ac0 0000000000000114 t save_Color3fv
0000000000231be0 0000000000000104 t save_Color3f
0000000000231cf0 000000000000009c t save_EvalPoint2
0000000000231d90 0000000000000088 t save_EvalPoint1
0000000000231e20 000000000000009c t save_EvalCoord2f
0000000000231ec0 0000000000000008 t save_EvalCoord2fv
0000000000231ed0 0000000000000094 t save_EvalCoord1f
0000000000231f70 0000000000000008 t save_EvalCoord1fv
0000000000231f80 0000000000000080 t save_End
0000000000232000 00000000000001cc t save_VertexAttribL1ui64vARB
00000000002321d0 00000000000001d8 t save_VertexAttribL1ui64ARB
00000000002323b0 0000000000000204 t save_VertexAttribL2dv
00000000002325c0 00000000000001fc t save_VertexAttribL1dv
00000000002327c0 00000000000001ec t save_VertexAttribL2d
00000000002329b0 00000000000001d4 t save_VertexAttribL1d
0000000000232b90 0000000000000268 t save_VertexAttribL4dv
0000000000232e00 0000000000000258 t save_VertexAttribL3dv
0000000000233060 000000000000024c t save_VertexAttribL4d
00000000002332b0 000000000000024c t save_VertexAttribL3d
0000000000233500 00000000000001d4 t unpack_image
00000000002336e0 0000000000000064 t execute_list
0000000000233750 0000000000004c3c t execute_list.part.0
0000000000238390 00000000000001ac t r11g11b10f_to_float3
0000000000238540 00000000000002e4 t save_SecondaryColorP3ui
0000000000238830 00000000000002e4 t save_ColorP3ui
0000000000238b20 00000000000002e4 t save_NormalP3ui
0000000000238e10 00000000000002e8 t save_SecondaryColorP3uiv
0000000000239100 00000000000002e8 t save_ColorP3uiv
00000000002393f0 00000000000002e8 t save_NormalP3uiv
00000000002396e0 00000000000003a0 t save_ColorP4ui
0000000000239a80 00000000000003a4 t save_ColorP4uiv
0000000000239e30 0000000000000140 t save_CallLists
0000000000239f70 00000000000009b4 t save_VertexAttribP4ui
000000000023a930 0000000000000a44 t save_VertexAttribP4uiv
000000000023b380 00000000000004bc t save_VertexAttribP1ui
000000000023b840 0000000000000548 t save_VertexAttribP1uiv
000000000023bd90 00000000000007a4 t save_VertexAttribP2ui
000000000023c540 0000000000000758 t save_VertexAttribP2uiv
000000000023cca0 00000000000008c8 t save_VertexAttribP3uiv
000000000023d570 000000000000093c t save_VertexAttribP3ui
000000000023deb0 000000000000003c t _mesa_delete_bitmap_atlas
000000000023def0 000000000000000c t _mesa_lookup_list
000000000023df00 0000000000000288 t _mesa_delete_list
000000000023e190 00000000000000ac t destroy_list
000000000023e240 0000000000000024 t _mesa_dlist_alloc_aligned
000000000023e270 0000000000000050 t _mesa_dlist_alloc_opcode
000000000023e2c0 00000000000000a4 t _mesa_compile_error
000000000023e370 0000000000000128 t save_NamedProgramLocalParameter4fEXT
000000000023e4a0 000000000000000c t save_NamedProgramLocalParameter4fvEXT
000000000023e4b0 000000000000001c t save_NamedProgramLocalParameter4dvEXT
000000000023e4d0 0000000000000014 t save_NamedProgramLocalParameter4dEXT
000000000023e4f0 0000000000000160 t save_NamedProgramStringEXT
000000000023e650 00000000000001d4 t save_CompressedMultiTexSubImage3DEXT
000000000023e830 00000000000001bc t save_CompressedMultiTexSubImage2DEXT
000000000023e9f0 00000000000001ac t save_CompressedMultiTexSubImage1DEXT
000000000023eba0 0000000000000244 t save_CompressedMultiTexImage3DEXT
000000000023edf0 0000000000000214 t save_CompressedMultiTexImage2DEXT
000000000023f010 0000000000000214 t save_CompressedMultiTexImage1DEXT
000000000023f230 00000000000001d4 t save_CompressedTextureSubImage3DEXT
000000000023f410 00000000000001bc t save_CompressedTextureSubImage2DEXT
000000000023f5d0 00000000000001ac t save_CompressedTextureSubImage1DEXT
000000000023f780 0000000000000244 t save_CompressedTextureImage3DEXT
000000000023f9d0 0000000000000214 t save_CompressedTextureImage2DEXT
000000000023fbf0 0000000000000214 t save_CompressedTextureImage1DEXT
000000000023fe10 0000000000000144 t save_MultiTexEnvfvEXT
000000000023ff60 00000000000000c8 t save_MultiTexEnvivEXT
0000000000240030 0000000000000028 t save_MultiTexEnviEXT
0000000000240060 0000000000000024 t save_MultiTexEnvfEXT
0000000000240090 0000000000000154 t save_CopyMultiTexSubImage3DEXT
00000000002401f0 0000000000000148 t save_CopyMultiTexSubImage2DEXT
0000000000240340 0000000000000128 t save_CopyMultiTexSubImage1DEXT
0000000000240470 0000000000000148 t save_CopyMultiTexImage2DEXT
00000000002405c0 000000000000013c t save_CopyMultiTexImage1DEXT
0000000000240700 00000000000001bc t save_MultiTexSubImage3DEXT
00000000002408c0 00000000000001a8 t save_MultiTexSubImage2DEXT
0000000000240a70 000000000000018c t save_MultiTexSubImage1DEXT
0000000000240c00 0000000000000218 t save_MultiTexImage3DEXT
0000000000240e20 000000000000020c t save_MultiTexImage2DEXT
0000000000241030 0000000000000204 t save_MultiTexImage1DEXT
0000000000241240 000000000000011c t save_MultiTexParameterfvEXT
0000000000241360 0000000000000024 t save_MultiTexParameterfEXT
0000000000241390 000000000000011c t save_MultiTexParameterIuivEXT
00000000002414b0 000000000000011c t save_MultiTexParameterIivEXT
00000000002415d0 000000000000011c t save_MultiTexParameterivEXT
00000000002416f0 0000000000000020 t save_MultiTexParameteriEXT
0000000000241710 00000000000000e8 t save_BindMultiTextureEXT
0000000000241800 0000000000000154 t save_CopyTextureSubImage3DEXT
0000000000241960 0000000000000148 t save_CopyTextureSubImage2DEXT
0000000000241ab0 0000000000000128 t save_CopyTextureSubImage1DEXT
0000000000241be0 0000000000000148 t save_CopyTextureImage2DEXT
0000000000241d30 000000000000013c t save_CopyTextureImage1DEXT
0000000000241e70 00000000000001bc t save_TextureSubImage3DEXT
0000000000242030 00000000000001a8 t save_TextureSubImage2DEXT
00000000002421e0 000000000000018c t save_TextureSubImage1DEXT
0000000000242370 0000000000000218 t save_TextureImage3DEXT
0000000000242590 000000000000020c t save_TextureImage2DEXT
00000000002427a0 0000000000000204 t save_TextureImage1DEXT
00000000002429b0 000000000000011c t save_TextureParameterIuivEXT
0000000000242ad0 000000000000011c t save_TextureParameterIivEXT
0000000000242bf0 000000000000011c t save_TextureParameterfvEXT
0000000000242d10 0000000000000024 t save_TextureParameterfEXT
0000000000242d40 000000000000011c t save_TextureParameterivEXT
0000000000242e60 0000000000000020 t save_TextureParameteriEXT
0000000000242e80 00000000000000c4 t save_MatrixPopEXT
0000000000242f50 00000000000000c4 t save_MatrixPushEXT
0000000000243020 000000000000013c t save_MatrixFrustumEXT
0000000000243160 000000000000013c t save_MatrixOrthoEXT
00000000002432a0 00000000000000c4 t save_MatrixLoadIdentityEXT
0000000000243370 00000000000000fc t save_MatrixTranslatefEXT
0000000000243470 0000000000000010 t save_MatrixTranslatedEXT
0000000000243480 00000000000000fc t save_MatrixScalefEXT
0000000000243580 0000000000000010 t save_MatrixScaledEXT
0000000000243590 0000000000000104 t save_MatrixRotatefEXT
00000000002436a0 0000000000000014 t save_MatrixRotatedEXT
00000000002436c0 00000000000000fc t save_MatrixMultfEXT
00000000002437c0 0000000000000034 t save_MatrixMultTransposedEXT
0000000000243800 0000000000000034 t save_MatrixMultTransposefEXT
0000000000243840 000000000000003c t save_MatrixMultdEXT
0000000000243880 00000000000000fc t save_MatrixLoadfEXT
0000000000243980 0000000000000034 t save_MatrixLoadTransposedEXT
00000000002439c0 0000000000000034 t save_MatrixLoadTransposefEXT
0000000000243a00 000000000000003c t save_MatrixLoaddEXT
0000000000243a40 00000000000000dc t save_ConservativeRasterParameteriNV
0000000000243b20 00000000000000dc t save_ConservativeRasterParameterfNV
0000000000243c00 00000000000000dc t save_SubpixelPrecisionBiasNV
0000000000243ce0 0000000000000138 t save_WindowRectanglesEXT
0000000000243e20 00000000000000f0 t save_PolygonOffsetClampEXT
0000000000243f10 0000000000000158 t save_ProgramUniformMatrix4x3dv
0000000000244070 0000000000000158 t save_ProgramUniformMatrix3x4dv
00000000002441d0 0000000000000150 t save_ProgramUniformMatrix4x2dv
0000000000244320 0000000000000150 t save_ProgramUniformMatrix2x4dv
0000000000244470 0000000000000158 t save_ProgramUniformMatrix3x2dv
00000000002445d0 0000000000000158 t save_ProgramUniformMatrix2x3dv
0000000000244730 0000000000000150 t save_ProgramUniformMatrix4dv
0000000000244880 0000000000000158 t save_ProgramUniformMatrix3dv
00000000002449e0 0000000000000150 t save_ProgramUniformMatrix2dv
0000000000244b30 0000000000000158 t save_ProgramUniformMatrix4x3fv
0000000000244c90 0000000000000158 t save_ProgramUniformMatrix3x4fv
0000000000244df0 0000000000000150 t save_ProgramUniformMatrix4x2fv
0000000000244f40 0000000000000150 t save_ProgramUniformMatrix2x4fv
0000000000245090 0000000000000158 t save_ProgramUniformMatrix3x2fv
00000000002451f0 0000000000000158 t save_ProgramUniformMatrix2x3fv
0000000000245350 0000000000000150 t save_ProgramUniformMatrix4fv
00000000002454a0 0000000000000158 t save_ProgramUniformMatrix3fv
0000000000245600 0000000000000150 t save_ProgramUniformMatrix2fv
0000000000245750 0000000000000138 t save_ProgramUniform4uiv
0000000000245890 000000000000013c t save_ProgramUniform3uiv
00000000002459d0 0000000000000138 t save_ProgramUniform2uiv
0000000000245b10 0000000000000138 t save_ProgramUniform1uiv
0000000000245c50 000000000000011c t save_ProgramUniform4ui
0000000000245d70 0000000000000108 t save_ProgramUniform3ui
0000000000245e80 00000000000000fc t save_ProgramUniform2ui
0000000000245f80 00000000000000e8 t save_ProgramUniform1ui
0000000000246070 0000000000000138 t save_ProgramUniform4iv
00000000002461b0 000000000000013c t save_ProgramUniform3iv
00000000002462f0 0000000000000138 t save_ProgramUniform2iv
0000000000246430 0000000000000138 t save_ProgramUniform1iv
0000000000246570 000000000000011c t save_ProgramUniform4i
0000000000246690 0000000000000108 t save_ProgramUniform3i
00000000002467a0 00000000000000fc t save_ProgramUniform2i
00000000002468a0 00000000000000e8 t save_ProgramUniform1i
0000000000246990 0000000000000138 t save_ProgramUniform4dv
0000000000246ad0 000000000000013c t save_ProgramUniform3dv
0000000000246c10 0000000000000138 t save_ProgramUniform2dv
0000000000246d50 0000000000000138 t save_ProgramUniform1dv
0000000000246e90 0000000000000120 t save_ProgramUniform4d
0000000000246fb0 0000000000000128 t save_ProgramUniform3d
00000000002470e0 0000000000000100 t save_ProgramUniform2d
00000000002471e0 00000000000000f4 t save_ProgramUniform1d
00000000002472e0 0000000000000138 t save_ProgramUniform4fv
0000000000247420 000000000000013c t save_ProgramUniform3fv
0000000000247560 0000000000000138 t save_ProgramUniform2fv
00000000002476a0 0000000000000138 t save_ProgramUniform1fv
00000000002477e0 000000000000011c t save_ProgramUniform4f
0000000000247900 0000000000000114 t save_ProgramUniform3f
0000000000247a20 00000000000000fc t save_ProgramUniform2f
0000000000247b20 00000000000000f4 t save_ProgramUniform1f
0000000000247c20 00000000000000e8 t save_UseProgramStages
0000000000247d10 0000000000000138 t save_UniformSubroutinesuiv
0000000000247e50 00000000000000e8 t save_UniformBlockBinding
0000000000247f40 00000000000000e8 t save_WaitSync
0000000000248030 00000000000000b4 t save_EndConditionalRender
00000000002480f0 00000000000000dc t save_BeginConditionalRender
00000000002481d0 00000000000000e8 t save_BlendEquationSeparatei
00000000002482c0 00000000000000dc t save_BlendEquationi
00000000002483a0 0000000000000108 t save_BlendFuncSeparatei
00000000002484b0 00000000000000e8 t save_BlendFunci
00000000002485a0 0000000000000128 t save_SamplerParameterIuiv
00000000002486d0 0000000000000128 t save_SamplerParameterIiv
0000000000248800 0000000000000128 t save_SamplerParameterfv
0000000000248930 0000000000000024 t save_SamplerParameterf
0000000000248960 0000000000000128 t save_SamplerParameteriv
0000000000248a90 0000000000000020 t save_SamplerParameteri
0000000000248ab0 00000000000000dc t save_BindSampler
0000000000248b90 00000000000000b4 t save_TextureBarrierNV
0000000000248c50 00000000000000dc t save_VertexAttribDivisor
0000000000248d30 00000000000000dc t save_EndQueryIndexed
0000000000248e10 00000000000000e8 t save_BeginQueryIndexed
0000000000248f00 00000000000000fc t save_DrawTransformFeedbackStreamInstanced
0000000000249000 00000000000000e8 t save_DrawTransformFeedbackInstanced
00000000002490f0 00000000000000e8 t save_DrawTransformFeedbackStream
00000000002491e0 00000000000000dc t save_DrawTransformFeedback
00000000002492c0 00000000000000b4 t save_ResumeTransformFeedback
0000000000249380 00000000000000b4 t save_PauseTransformFeedback
0000000000249440 00000000000000dc t save_BindTransformFeedback
0000000000249520 00000000000000b4 t save_EndTransformFeedback
00000000002495e0 00000000000000c4 t save_BeginTransformFeedback
00000000002496b0 0000000000000138 t save_ProgramUniform4ui64vARB
00000000002497f0 0000000000000138 t save_ProgramUniform3ui64vARB
0000000000249930 0000000000000138 t save_ProgramUniform2ui64vARB
0000000000249a70 0000000000000138 t save_ProgramUniform1ui64vARB
0000000000249bb0 0000000000000120 t save_ProgramUniform4ui64ARB
0000000000249cd0 000000000000010c t save_ProgramUniform3ui64ARB
0000000000249de0 0000000000000100 t save_ProgramUniform2ui64ARB
0000000000249ee0 00000000000000e8 t save_ProgramUniform1ui64ARB
0000000000249fd0 0000000000000138 t save_ProgramUniform4i64vARB
000000000024a110 0000000000000138 t save_ProgramUniform3i64vARB
000000000024a250 0000000000000138 t save_ProgramUniform2i64vARB
000000000024a390 0000000000000138 t save_ProgramUniform1i64vARB
000000000024a4d0 0000000000000120 t save_ProgramUniform4i64ARB
000000000024a5f0 000000000000010c t save_ProgramUniform3i64ARB
000000000024a700 0000000000000100 t save_ProgramUniform2i64ARB
000000000024a800 00000000000000e8 t save_ProgramUniform1i64ARB
000000000024a8f0 000000000000012c t save_Uniform4ui64vARB
000000000024aa20 0000000000000130 t save_Uniform3ui64vARB
000000000024ab50 000000000000012c t save_Uniform2ui64vARB
000000000024ac80 000000000000012c t save_Uniform1ui64vARB
000000000024adb0 0000000000000104 t save_Uniform4ui64ARB
000000000024aec0 0000000000000100 t save_Uniform3ui64ARB
000000000024afc0 00000000000000e4 t save_Uniform2ui64ARB
000000000024b0b0 00000000000000dc t save_Uniform1ui64ARB
000000000024b190 000000000000012c t save_Uniform4i64vARB
000000000024b2c0 0000000000000130 t save_Uniform3i64vARB
000000000024b3f0 000000000000012c t save_Uniform2i64vARB
000000000024b520 000000000000012c t save_Uniform1i64vARB
000000000024b650 0000000000000108 t save_Uniform4i64ARB
000000000024b760 0000000000000100 t save_Uniform3i64ARB
000000000024b860 00000000000000e8 t save_Uniform2i64ARB
000000000024b950 00000000000000e0 t save_Uniform1i64ARB
000000000024ba30 0000000000000138 t save_UniformMatrix4x3dv
000000000024bb70 0000000000000138 t save_UniformMatrix3x4dv
000000000024bcb0 0000000000000134 t save_UniformMatrix4x2dv
000000000024bdf0 0000000000000134 t save_UniformMatrix2x4dv
000000000024bf30 0000000000000138 t save_UniformMatrix3x2dv
000000000024c070 0000000000000138 t save_UniformMatrix2x3dv
000000000024c1b0 0000000000000134 t save_UniformMatrix4dv
000000000024c2f0 0000000000000138 t save_UniformMatrix3dv
000000000024c430 0000000000000134 t save_UniformMatrix2dv
000000000024c570 000000000000012c t save_Uniform4dv
000000000024c6a0 0000000000000130 t save_Uniform3dv
000000000024c7d0 000000000000012c t save_Uniform2dv
000000000024c900 000000000000012c t save_Uniform1dv
000000000024ca30 0000000000000104 t save_Uniform4d
000000000024cb40 0000000000000110 t save_Uniform3d
000000000024cc50 00000000000000e4 t save_Uniform2d
000000000024cd40 00000000000000dc t save_Uniform1d
000000000024ce20 000000000000012c t save_Uniform4uiv
000000000024cf50 0000000000000130 t save_Uniform3uiv
000000000024d080 000000000000012c t save_Uniform2uiv
000000000024d1b0 000000000000012c t save_Uniform1uiv
000000000024d2e0 0000000000000108 t save_Uniform4ui
000000000024d3f0 00000000000000fc t save_Uniform3ui
000000000024d4f0 00000000000000e8 t save_Uniform2ui
000000000024d5e0 00000000000000dc t save_Uniform1ui
000000000024d6c0 0000000000000100 t save_ClearBufferfi
000000000024d7c0 0000000000000128 t save_ClearBufferfv
000000000024d8f0 0000000000000128 t save_ClearBufferuiv
000000000024da20 0000000000000128 t save_ClearBufferiv
000000000024db50 00000000000000dc t save_ClampColorARB
000000000024dc30 00000000000000dc t save_ClipControl
000000000024dd10 0000000000000104 t save_TexParameterIuiv
000000000024de20 0000000000000104 t save_TexParameterIiv
000000000024df30 00000000000000fc t save_ClearColorIui
000000000024e030 00000000000000fc t save_ClearColorIi
000000000024e130 00000000000000a4 t save_ProvokingVertexEXT
000000000024e1e0 0000000000000140 t save_ProgramLocalParameters4fvEXT
000000000024e320 0000000000000140 t save_ProgramEnvParameters4fvEXT
000000000024e460 00000000000000dc t save_BlendEquationSeparateEXT
000000000024e540 0000000000000138 t save_UniformMatrix4x3fv
000000000024e680 0000000000000138 t save_UniformMatrix3x4fv
000000000024e7c0 0000000000000134 t save_UniformMatrix4x2fv
000000000024e900 0000000000000134 t save_UniformMatrix2x4fv
000000000024ea40 0000000000000138 t save_UniformMatrix3x2fv
000000000024eb80 0000000000000138 t save_UniformMatrix2x3fv
000000000024ecc0 0000000000000134 t save_UniformMatrix4fvARB
000000000024ee00 0000000000000138 t save_UniformMatrix3fvARB
000000000024ef40 0000000000000134 t save_UniformMatrix2fvARB
000000000024f080 000000000000012c t save_Uniform4ivARB
000000000024f1b0 0000000000000130 t save_Uniform3ivARB
000000000024f2e0 000000000000012c t save_Uniform2ivARB
000000000024f410 000000000000012c t save_Uniform1ivARB
000000000024f540 0000000000000108 t save_Uniform4iARB
000000000024f650 00000000000000fc t save_Uniform3iARB
000000000024f750 00000000000000e8 t save_Uniform2iARB
000000000024f840 00000000000000dc t save_Uniform1iARB
000000000024f920 000000000000012c t save_Uniform4fvARB
000000000024fa50 0000000000000130 t save_Uniform3fvARB
000000000024fb80 000000000000012c t save_Uniform2fvARB
000000000024fcb0 000000000000012c t save_Uniform1fvARB
000000000024fde0 0000000000000104 t save_Uniform4fARB
000000000024fef0 00000000000000fc t save_Uniform3fARB
000000000024fff0 00000000000000e4 t save_Uniform2fARB
00000000002500e0 00000000000000dc t save_Uniform1fARB
00000000002501c0 00000000000000c4 t save_UseProgram
0000000000250290 0000000000000154 t save_BlitFramebufferEXT
00000000002503f0 0000000000000110 t save_DrawBuffersARB
0000000000250500 00000000000000dc t save_QueryCounter
00000000002505e0 00000000000000c4 t save_EndQueryARB
00000000002506b0 00000000000000dc t save_BeginQueryARB
0000000000250790 0000000000000104 t save_ProgramLocalParameter4fvARB
00000000002508a0 000000000000011c t save_ProgramLocalParameter4fARB
00000000002509c0 00000000000000f4 t save_ProgramLocalParameter4dvARB
0000000000250ac0 000000000000012c t save_ProgramLocalParameter4dARB
0000000000250bf0 000000000000011c t save_ProgramEnvParameter4fARB
0000000000250d10 000000000000000c t save_ProgramEnvParameter4fvARB
0000000000250d20 000000000000001c t save_ProgramEnvParameter4dvARB
0000000000250d40 0000000000000014 t save_ProgramEnvParameter4dARB
0000000000250d60 00000000000000dc t save_BindProgramARB
0000000000250e40 0000000000000154 t save_ProgramStringARB
0000000000250fa0 00000000000001a4 t save_CompressedTexSubImage1DARB
0000000000251150 00000000000001ac t save_CompressedTexSubImage2DARB
0000000000251300 00000000000001cc t save_CompressedTexSubImage3DARB
00000000002514d0 000000000000022c t save_CompressedTexImage1DARB
0000000000251700 0000000000000234 t save_CompressedTexImage2DARB
0000000000251940 0000000000000234 t save_CompressedTexImage3DARB
0000000000251b80 00000000000000dc t save_SampleCoverageARB
0000000000251c60 00000000000000b0 t save_ActiveTextureARB
0000000000251d10 00000000000000e0 t save_DepthBoundsEXT
0000000000251df0 00000000000000c4 t save_ActiveStencilFaceEXT
0000000000251ec0 00000000000000f8 t save_WindowPos4fMESA
0000000000251fc0 0000000000000024 t save_WindowPos4svMESA
0000000000251ff0 0000000000000024 t save_WindowPos4sMESA
0000000000252020 000000000000001c t save_WindowPos4ivMESA
0000000000252040 0000000000000014 t save_WindowPos4iMESA
0000000000252060 000000000000000c t save_WindowPos4fvMESA
0000000000252070 000000000000001c t save_WindowPos4dvMESA
0000000000252090 0000000000000014 t save_WindowPos4dMESA
00000000002520b0 0000000000000020 t save_WindowPos3svMESA
00000000002520d0 0000000000000020 t save_WindowPos3sMESA
00000000002520f0 000000000000001c t save_WindowPos3ivMESA
0000000000252110 0000000000000014 t save_WindowPos3iMESA
0000000000252130 0000000000000010 t save_WindowPos3fvMESA
0000000000252140 0000000000000008 t save_WindowPos3fMESA
0000000000252150 000000000000001c t save_WindowPos3dvMESA
0000000000252170 0000000000000014 t save_WindowPos3dMESA
0000000000252190 000000000000001c t save_WindowPos2svMESA
00000000002521b0 000000000000001c t save_WindowPos2sMESA
00000000002521d0 0000000000000018 t save_WindowPos2ivMESA
00000000002521f0 0000000000000014 t save_WindowPos2iMESA
0000000000252210 0000000000000010 t save_WindowPos2fvMESA
0000000000252220 000000000000000c t save_WindowPos2fMESA
0000000000252230 0000000000000018 t save_WindowPos2dvMESA
0000000000252250 0000000000000014 t save_WindowPos2dMESA
0000000000252270 00000000000000fc t save_BlendFuncSeparateEXT
0000000000252370 000000000000000c t save_BlendFunc
0000000000252380 00000000000000e8 t save_DispatchCompute
0000000000252470 00000000000000ec t save_DepthRangeIndexed
0000000000252560 000000000000012c t save_DepthRangeArrayv
0000000000252690 00000000000000fc t save_ScissorIndexedv
0000000000252790 0000000000000108 t save_ScissorIndexed
00000000002528a0 000000000000012c t save_ScissorArrayv
00000000002529d0 00000000000000fc t save_ViewportIndexedfv
0000000000252ad0 0000000000000104 t save_ViewportIndexedf
0000000000252be0 000000000000012c t save_ViewportArrayv
0000000000252d10 0000000000000140 t save_PatchParameterfv
0000000000252e50 00000000000000dc t save_PatchParameteri
0000000000252f30 00000000000000f4 t save_PointParameterfvEXT
0000000000253030 0000000000000028 t save_PointParameterivNV
0000000000253060 0000000000000024 t save_PointParameteriNV
0000000000253090 0000000000000020 t save_PointParameterfEXT
00000000002530b0 00000000000000b0 t save_BlendEquation
0000000000253160 00000000000000e4 t save_BlendColor
0000000000253250 0000000000000150 t save_StencilFuncSeparateATI
00000000002533a0 00000000000000fc t save_StencilOpSeparate
00000000002534a0 00000000000000dc t save_StencilMaskSeparate
0000000000253580 00000000000000fc t save_StencilFuncSeparate
0000000000253680 00000000000001a4 t save_TexSubImage3D
0000000000253830 00000000000001d8 t save_TexImage3D
0000000000253a10 0000000000000134 t save_CopyTexSubImage3D
0000000000253b50 0000000000000188 t save_TexSubImage2D
0000000000253ce0 0000000000000168 t save_TexSubImage1D
0000000000253e50 0000000000000104 t save_PrioritizeTextures
0000000000253f60 0000000000000128 t save_CopyTexSubImage2D
0000000000254090 0000000000000108 t save_CopyTexSubImage1D
00000000002541a0 0000000000000128 t save_CopyTexImage2D
00000000002542d0 0000000000000114 t save_CopyTexImage1D
00000000002543f0 00000000000000c8 t save_BindTexture
00000000002544c0 00000000000000e8 t save_Viewport
00000000002545b0 00000000000000dc t save_Translatef
0000000000254690 0000000000000010 t save_Translated
00000000002546a0 00000000000000f0 t save_TexParameterfv
0000000000254790 000000000000002c t save_TexParameteriv
00000000002547c0 0000000000000028 t save_TexParameteri
00000000002547f0 0000000000000024 t save_TexParameterf
0000000000254820 00000000000001cc t save_TexImage2D
00000000002549f0 00000000000001c0 t save_TexImage1D
0000000000254bb0 00000000000000f0 t save_TexGenfv
0000000000254ca0 0000000000000024 t save_TexGeniv
0000000000254cd0 0000000000000024 t save_TexGenf
0000000000254d00 0000000000000028 t save_TexGendv
0000000000254d30 0000000000000028 t save_TexGend
0000000000254d60 0000000000000028 t save_TexGeni
0000000000254d90 0000000000000114 t save_TexEnvfv
0000000000254eb0 00000000000000c8 t save_TexEnviv
0000000000254f80 0000000000000028 t save_TexEnvi
0000000000254fb0 0000000000000024 t save_TexEnvf
0000000000254fe0 00000000000000d4 t save_StencilOp
00000000002550c0 00000000000000b0 t save_StencilMask
0000000000255170 00000000000000d4 t save_StencilFunc
0000000000255250 00000000000000e4 t save_ShadeModel
0000000000255340 00000000000000e8 t save_Scissor
0000000000255430 00000000000000dc t save_Scalef
0000000000255510 0000000000000010 t save_Scaled
0000000000255520 00000000000000e4 t save_Rotatef
0000000000255610 0000000000000014 t save_Rotated
0000000000255630 00000000000000e4 t save_Rectf
0000000000255720 00000000000000b0 t save_ReadBuffer
00000000002557d0 00000000000000e4 t save_RasterPos4f
00000000002558c0 0000000000000024 t save_RasterPos4sv
00000000002558f0 0000000000000024 t save_RasterPos4s
0000000000255920 000000000000001c t save_RasterPos4iv
0000000000255940 0000000000000014 t save_RasterPos4i
0000000000255960 000000000000000c t save_RasterPos4fv
0000000000255970 000000000000001c t save_RasterPos4dv
0000000000255990 0000000000000014 t save_RasterPos4d
00000000002559b0 0000000000000020 t save_RasterPos3sv
00000000002559d0 0000000000000020 t save_RasterPos3s
00000000002559f0 000000000000001c t save_RasterPos3iv
0000000000255a10 0000000000000014 t save_RasterPos3i
0000000000255a30 0000000000000010 t save_RasterPos3fv
0000000000255a40 0000000000000008 t save_RasterPos3f
0000000000255a50 000000000000001c t save_RasterPos3dv
0000000000255a70 0000000000000014 t save_RasterPos3d
0000000000255a90 000000000000001c t save_RasterPos2sv
0000000000255ab0 000000000000001c t save_RasterPos2s
0000000000255ad0 0000000000000018 t save_RasterPos2iv
0000000000255af0 0000000000000014 t save_RasterPos2i
0000000000255b10 0000000000000010 t save_RasterPos2fv
0000000000255b20 000000000000000c t save_RasterPos2f
0000000000255b30 0000000000000018 t save_RasterPos2dv
0000000000255b50 0000000000000014 t save_RasterPos2d
0000000000255b70 00000000000000b0 t save_PushName
0000000000255c20 00000000000000a0 t save_PushMatrix
0000000000255cc0 00000000000000b0 t save_PushAttrib
0000000000255d70 00000000000000a0 t save_PopName
0000000000255e10 00000000000000a0 t save_PopMatrix
0000000000255eb0 00000000000000a0 t save_PopAttrib
0000000000255f50 0000000000000104 t save_PolygonStipple
0000000000256060 00000000000000c4 t save_PolygonOffset
0000000000256130 00000000000000c8 t save_PolygonMode
0000000000256200 00000000000000bc t save_PointSize
00000000002562c0 00000000000000c4 t save_PixelZoom
0000000000256390 00000000000000c8 t save_PixelTransferf
0000000000256460 0000000000000008 t save_PixelTransferi
0000000000256470 0000000000000118 t save_PixelMapfv
0000000000256590 0000000000000170 t save_PixelMapusv
0000000000256700 0000000000000184 t save_PixelMapuiv
0000000000256890 00000000000000bc t save_PassThrough
0000000000256950 000000000000011c t save_Ortho
0000000000256a70 00000000000000c8 t save_MultMatrixf
0000000000256b40 0000000000000028 t save_MultTransposeMatrixfARB
0000000000256b70 0000000000000028 t save_MultTransposeMatrixdARB
0000000000256ba0 000000000000003c t save_MultMatrixd
0000000000256be0 00000000000000b0 t save_MatrixMode
0000000000256c90 000000000000010c t save_MapGrid2f
0000000000256da0 0000000000000014 t save_MapGrid2d
0000000000256dc0 00000000000000d0 t save_MapGrid1f
0000000000256e90 000000000000000c t save_MapGrid1d
0000000000256ea0 0000000000000198 t save_Map2f
0000000000257040 00000000000001a8 t save_Map2d
00000000002571f0 000000000000013c t save_Map1f
0000000000257330 0000000000000144 t save_Map1d
0000000000257480 00000000000000b0 t save_LogicOp
0000000000257530 00000000000000b0 t save_LoadName
00000000002575e0 00000000000000c8 t save_LoadMatrixf
00000000002576b0 0000000000000028 t save_LoadTransposeMatrixfARB
00000000002576e0 0000000000000028 t save_LoadTransposeMatrixdARB
0000000000257710 000000000000003c t save_LoadMatrixd
0000000000257750 00000000000000a0 t save_LoadIdentity
00000000002577f0 00000000000000b0 t save_ListBase
00000000002578a0 00000000000000bc t save_LineWidth
0000000000257960 00000000000000cc t save_LineStipple
0000000000257a30 0000000000000114 t save_Lightfv
0000000000257b50 00000000000000e8 t save_Lightiv
0000000000257c40 0000000000000020 t save_Lighti
0000000000257c60 0000000000000024 t save_Lightf
0000000000257c90 00000000000000e8 t save_LightModelfv
0000000000257d80 00000000000000f8 t save_LightModeliv
0000000000257e80 0000000000000020 t save_LightModeli
0000000000257ea0 0000000000000024 t save_LightModelf
0000000000257ed0 00000000000000a0 t save_InitNames
0000000000257f70 00000000000000b0 t save_IndexMask
0000000000258020 00000000000000c8 t save_Hint
00000000002580f0 000000000000011c t save_Frustum
0000000000258210 00000000000000b0 t save_FrontFace
00000000002582c0 00000000000000e8 t save_Fogfv
00000000002583b0 00000000000000f8 t save_Fogiv
00000000002584b0 0000000000000020 t save_Fogi
00000000002584d0 0000000000000024 t save_Fogf
0000000000258500 00000000000000f4 t save_EvalMesh2
0000000000258600 00000000000000d4 t save_EvalMesh1
00000000002586e0 00000000000000dc t save_EnableIndexed
00000000002587c0 00000000000000b0 t save_Enable
0000000000258870 0000000000000144 t save_DrawPixels
00000000002589c0 00000000000000b0 t save_DrawBuffer
0000000000258a70 00000000000000dc t save_DisableIndexed
0000000000258b50 00000000000000b0 t save_Disable
0000000000258c00 00000000000000cc t save_DepthRange
0000000000258cd0 00000000000000b0 t save_DepthMask
0000000000258d80 00000000000000b0 t save_DepthFunc
0000000000258e30 00000000000000b0 t save_CullFace
0000000000258ee0 00000000000000f4 t save_CopyPixels
0000000000258fe0 00000000000000c8 t save_ColorMaterial
00000000002590b0 00000000000000b8 t save_ColorMaskIndexed
0000000000259170 00000000000000f0 t save_ColorMask
0000000000259260 00000000000000d8 t save_ClipPlane
0000000000259340 00000000000000b0 t save_ClearStencil
00000000002593f0 00000000000000bc t save_ClearIndex
00000000002594b0 00000000000000c0 t save_ClearDepth
0000000000259570 00000000000000e4 t save_ClearColor
0000000000259660 00000000000000e4 t save_ClearAccum
0000000000259750 00000000000000b0 t save_Clear
0000000000259800 0000000000000164 t save_Bitmap
0000000000259970 00000000000000c8 t save_AlphaFunc
0000000000259a40 00000000000000c8 t save_Accum
0000000000259b10 000000000000028c t save_Materialfv
0000000000259da0 00000000000000b4 t save_PrimitiveRestartNV
0000000000259e60 0000000000000094 t save_Begin
0000000000259f00 0000000000000090 T _mesa_IsList
0000000000259f90 000000000000012c T _mesa_DeleteLists
000000000025a0c0 00000000000001d0 T _mesa_GenLists
000000000025a290 00000000000001d0 T _mesa_NewList
000000000025a460 000000000000019c T _mesa_EndList
000000000025a600 00000000000000d0 t _mesa_CallList
000000000025a6d0 00000000000000bc t save_CallList
000000000025a790 00000000000006b8 T _mesa_CallLists
000000000025ae50 0000000000000080 T _mesa_ListBase
000000000025aed0 0000000000002250 t _mesa_initialize_save_table
000000000025d120 0000000000000010 t _mesa_install_dlist_vtxfmt
000000000025d130 0000000000000604 t _mesa_init_display_list
000000000025d740 0000000000000028 t _mesa_free_display_list_data
000000000025d770 0000000000000098 t need_xfb_remaining_prims_check
000000000025d810 00000000000000c4 t valid_draw_indirect_parameters
000000000025d8e0 00000000000000d4 t count_tessellated_primitives.constprop.0
000000000025d9c0 000000000000032c t _mesa_valid_to_render
000000000025dcf0 0000000000000174 t check_valid_to_render
000000000025de70 00000000000000dc t _mesa_is_valid_prim_mode
000000000025df50 0000000000000404 t _mesa_valid_prim_mode
000000000025e360 00000000000001dc t valid_draw_indirect
000000000025e540 00000000000000dc t validate_draw_arrays.constprop.0
000000000025e620 0000000000000138 t validate_DrawElements_common.isra.0
000000000025e760 000000000000000c t _mesa_validate_DrawElements
000000000025e770 0000000000000138 t _mesa_validate_MultiDrawElements
000000000025e8b0 0000000000000040 t _mesa_validate_DrawRangeElements
000000000025e8f0 0000000000000014 t _mesa_validate_DrawArrays
000000000025e910 0000000000000078 t _mesa_validate_DrawArraysInstanced
000000000025e990 000000000000014c t _mesa_validate_MultiDrawArrays
000000000025eae0 0000000000000058 t _mesa_validate_DrawElementsInstanced
000000000025eb40 00000000000000f0 t _mesa_validate_DrawTransformFeedback
000000000025ec30 000000000000005c t _mesa_valid_draw_indirect_multi
000000000025ec90 0000000000000010 t _mesa_validate_DrawArraysIndirect
000000000025eca0 00000000000000b0 t _mesa_validate_DrawElementsIndirect
000000000025ed50 0000000000000080 t _mesa_validate_MultiDrawArraysIndirect
000000000025edd0 0000000000000110 t _mesa_validate_MultiDrawElementsIndirect
000000000025eee0 00000000000000b8 t _mesa_validate_MultiDrawArraysIndirectCount
000000000025efa0 000000000000012c t _mesa_validate_MultiDrawElementsIndirectCount
000000000025f0d0 0000000000000144 t output_if_debug
000000000025f220 0000000000000084 t flush_delayed_errors
000000000025f2b0 000000000000000c t _mesa_get_log_file
000000000025f2c0 00000000000000c0 t _mesa_warning
000000000025f380 00000000000000fc t _mesa_problem
000000000025f480 00000000000000a0 t _mesa_gl_vdebugf
000000000025f520 000000000000005c t _mesa_gl_debugf
000000000025f580 00000000000002d4 t _mesa_error
000000000025f860 0000000000000030 t _mesa_error_no_memory
000000000025f890 0000000000000004 t _mesa_debug
000000000025f8a0 00000000000000ac t _mesa_log
000000000025f950 0000000000000060 t _mesa_shader_debug
000000000025f9b0 00000000000000b0 t get_1d_map
000000000025fa60 00000000000000ac t get_2d_map
000000000025fb10 0000000000000024 t _mesa_evaluator_components
000000000025fb40 00000000000000c8 t _mesa_copy_map_points1f
000000000025fc10 00000000000000fc t _mesa_copy_map_points1d
000000000025fd10 00000000000001d8 t map1
000000000025fef0 000000000000015c t _mesa_copy_map_points2f
0000000000260050 00000000000001ac t _mesa_copy_map_points2d
0000000000260200 000000000000026c t map2
0000000000260470 0000000000000008 T _mesa_Map1f
0000000000260480 0000000000000010 T _mesa_Map1d
0000000000260490 0000000000000008 T _mesa_Map2f
00000000002604a0 0000000000000018 T _mesa_Map2d
00000000002604c0 00000000000001fc t _mesa_GetnMapdvARB
00000000002606c0 000000000000000c T _mesa_GetMapdv
00000000002606d0 00000000000001b0 t _mesa_GetnMapfvARB
0000000000260880 000000000000000c T _mesa_GetMapfv
0000000000260890 00000000000001bc t _mesa_GetnMapivARB
0000000000260a50 000000000000000c T _mesa_GetMapiv
0000000000260a60 000000000000009c t _mesa_MapGrid1f
0000000000260b00 000000000000000c T _mesa_MapGrid1d
0000000000260b10 00000000000000e8 t _mesa_MapGrid2f
0000000000260c00 0000000000000014 T _mesa_MapGrid2d
0000000000260c20 0000000000000024 t _mesa_install_eval_vtxfmt
0000000000260c50 0000000000000414 t _mesa_init_eval
0000000000261070 00000000000000a8 t _mesa_free_eval_data
0000000000261120 0000000000000038 t free_unknown_extensions_strings
0000000000261160 0000000000000008 t extension_name_compare
0000000000261170 0000000000000044 t extension_compare
00000000002611c0 000000000000006c t _mesa_override_extensions
0000000000261230 0000000000000250 t _mesa_one_time_init_extension_overrides
0000000000261480 0000000000000034 t _mesa_init_extensions
00000000002614c0 0000000000000224 t _mesa_make_extension_string
00000000002616f0 00000000000000a4 t _mesa_get_extension_count
00000000002617a0 00000000000000b8 t _mesa_get_enabled_extension
0000000000261860 0000000000000004 t delete_dummy_renderbuffer
0000000000261870 0000000000000004 t delete_dummy_framebuffer
0000000000261880 0000000000000080 t get_framebuffer_target
0000000000261900 00000000000000f4 t get_attachment
0000000000261a00 000000000000007c t driver_RenderTexture_is_safe
0000000000261a80 0000000000000090 t validate_framebuffer_parameter_extensions
0000000000261b10 0000000000000250 t framebuffer_parameteri
0000000000261d60 0000000000000114 t check_layer
0000000000261e80 00000000000000c0 t remove_attachment
0000000000261f40 0000000000000198 t create_framebuffers
00000000002620e0 00000000000000e0 t check_texture_target
00000000002621c0 0000000000000218 t sample_locations
00000000002623e0 0000000000000044 t invalidate_rb
0000000000262430 0000000000000070 t check_end_texture_render
00000000002624a0 00000000000001cc t discard_framebuffer.part.0
0000000000262670 0000000000000170 t create_render_buffers
00000000002627e0 00000000000002d4 t get_framebuffer_parameteriv
0000000000262ac0 00000000000000e4 t check_layered_texture_target.constprop.0
0000000000262bb0 00000000000001c0 t invalidate_framebuffer_storage.isra.0
0000000000262d70 0000000000000178 t get_render_buffer_parameteriv
0000000000262ef0 00000000000000fc t lookup_named_framebuffer_ext_dsa
0000000000262ff0 00000000000007e0 t get_framebuffer_attachment_parameter
00000000002637d0 00000000000001e0 t framebuffer_renderbuffer_error
00000000002639b0 0000000000000184 t bind_renderbuffer
0000000000263b40 0000000000000078 t _mesa_init_fbobjects
0000000000263bc0 000000000000000c t _mesa_get_incomplete_framebuffer
0000000000263bd0 0000000000000018 t _mesa_lookup_renderbuffer
0000000000263bf0 0000000000000018 t _mesa_lookup_framebuffer
0000000000263c10 000000000000013c t _mesa_lookup_framebuffer_dsa
0000000000263d50 0000000000000078 t _mesa_lookup_framebuffer_err
0000000000263dd0 0000000000000118 t _mesa_update_texture_renderbuffer
0000000000263ef0 0000000000000110 T _mesa_FramebufferRenderbuffer_sw
0000000000264000 0000000000000068 t _mesa_has_depthstencil_combined
0000000000264070 00000000000000a0 t _mesa_is_legal_color_format
0000000000264110 0000000000000230 t test_attachment_completeness
0000000000264340 0000000000000b50 t _mesa_test_framebuffer_completeness
0000000000264e90 0000000000000080 T _mesa_IsRenderbuffer
0000000000264f10 0000000000000004 T _mesa_BindRenderbuffer
0000000000264f20 0000000000000004 T _mesa_BindRenderbufferEXT
0000000000264f30 00000000000000b8 t _mesa_FramebufferParameteri
0000000000264ff0 0000000000000004 T _mesa_FramebufferParameteriMESA
0000000000265000 00000000000000b8 t _mesa_GetFramebufferParameteriv
00000000002650c0 0000000000000004 T _mesa_GetFramebufferParameterivMESA
00000000002650d0 000000000000008c t _mesa_detach_renderbuffer
0000000000265160 000000000000022c T _mesa_DeleteRenderbuffers
0000000000265390 0000000000000030 T _mesa_GenRenderbuffers_no_error
00000000002653c0 0000000000000050 T _mesa_GenRenderbuffers
0000000000265410 0000000000000030 T _mesa_CreateRenderbuffers_no_error
0000000000265440 0000000000000050 T _mesa_CreateRenderbuffers
0000000000265490 0000000000000e34 t _mesa_base_fbo_format
00000000002662d0 0000000000000158 t _mesa_renderbuffer_storage
0000000000266430 00000000000001a0 t renderbuffer_storage
00000000002665d0 00000000000000ec T _mesa_EGLImageTargetRenderbufferStorageOES
00000000002666c0 0000000000000094 T _mesa_RenderbufferStorage
0000000000266760 0000000000000084 T _mesa_RenderbufferStorageMultisample
00000000002667f0 0000000000000098 T _mesa_RenderbufferStorageMultisampleAdvancedAMD
0000000000266890 00000000000000b0 T _mesa_NamedRenderbufferStorage
0000000000266940 0000000000000128 T _mesa_NamedRenderbufferStorageEXT
0000000000266a70 00000000000000a8 T _mesa_NamedRenderbufferStorageMultisample
0000000000266b20 0000000000000118 T _mesa_NamedRenderbufferStorageMultisampleEXT
0000000000266c40 00000000000000b8 T _mesa_NamedRenderbufferStorageMultisampleAdvancedAMD
0000000000266d00 0000000000000078 T _mesa_GetRenderbufferParameteriv
0000000000266d80 000000000000009c T _mesa_GetNamedRenderbufferParameteriv
0000000000266e20 0000000000000110 T _mesa_GetNamedRenderbufferParameterivEXT
0000000000266f30 0000000000000078 T _mesa_IsFramebuffer
0000000000266fb0 00000000000001c8 t _mesa_bind_framebuffers
0000000000267180 00000000000001b0 t bind_framebuffer
0000000000267330 0000000000000004 t _mesa_BindFramebuffer
0000000000267340 0000000000000004 T _mesa_BindFramebufferEXT
0000000000267350 000000000000015c T _mesa_DeleteFramebuffers
00000000002674b0 0000000000000008 T _mesa_GenFramebuffers
00000000002674c0 0000000000000008 T _mesa_CreateFramebuffers
00000000002674d0 0000000000000118 T _mesa_CheckFramebufferStatus_no_error
00000000002675f0 0000000000000138 T _mesa_CheckFramebufferStatus
0000000000267730 000000000000015c t _mesa_CheckNamedFramebufferStatus
0000000000267890 000000000000011c T _mesa_CheckNamedFramebufferStatusEXT
00000000002679b0 000000000000013c t _mesa_get_and_validate_attachment
0000000000267af0 00000000000002f4 t _mesa_framebuffer_texture
0000000000267df0 00000000000000c4 t framebuffer_texture_with_dims_no_error
0000000000267ec0 0000000000000464 t framebuffer_texture_with_dims
0000000000268330 0000000000000008 T _mesa_FramebufferTexture1D_no_error
0000000000268340 0000000000000050 T _mesa_FramebufferTexture1D
0000000000268390 0000000000000008 T _mesa_FramebufferTexture2D_no_error
00000000002683a0 0000000000000050 T _mesa_FramebufferTexture2D
00000000002683f0 0000000000000050 T _mesa_FramebufferTexture2DMultisampleEXT
0000000000268440 0000000000000004 T _mesa_FramebufferTexture3D_no_error
0000000000268450 0000000000000050 T _mesa_FramebufferTexture3D
00000000002684a0 0000000000000100 T _mesa_FramebufferTextureLayer_no_error
00000000002685a0 000000000000022c T _mesa_FramebufferTextureLayer
00000000002687d0 0000000000000118 T _mesa_NamedFramebufferTextureLayer_no_error
00000000002688f0 000000000000025c T _mesa_NamedFramebufferTextureLayer
0000000000268b50 0000000000000110 T _mesa_FramebufferTexture_no_error
0000000000268c60 0000000000000254 T _mesa_FramebufferTexture
0000000000268ec0 0000000000000114 T _mesa_NamedFramebufferTexture_no_error
0000000000268fe0 0000000000000278 T _mesa_NamedFramebufferTexture
0000000000269260 0000000000000054 T _mesa_NamedFramebufferTexture1DEXT
00000000002692c0 0000000000000054 T _mesa_NamedFramebufferTexture2DEXT
0000000000269320 0000000000000054 T _mesa_NamedFramebufferTexture3DEXT
0000000000269380 00000000000000bc T _mesa_FramebufferRenderbuffer_no_error
0000000000269440 00000000000000d8 T _mesa_FramebufferRenderbuffer
0000000000269520 00000000000000cc T _mesa_NamedFramebufferRenderbuffer_no_error
00000000002695f0 000000000000009c T _mesa_NamedFramebufferRenderbuffer
0000000000269690 0000000000000084 T _mesa_NamedFramebufferRenderbufferEXT
0000000000269720 00000000000000d8 T _mesa_GetFramebufferAttachmentParameteriv
0000000000269800 00000000000000b4 T _mesa_GetNamedFramebufferAttachmentParameteriv
00000000002698c0 000000000000008c T _mesa_GetNamedFramebufferAttachmentParameterivEXT
0000000000269950 00000000000000dc T _mesa_NamedFramebufferParameteri
0000000000269a30 000000000000007c T _mesa_NamedFramebufferParameteriEXT
0000000000269ab0 00000000000000c8 T _mesa_GetFramebufferParameterivEXT
0000000000269b80 00000000000000d4 T _mesa_GetNamedFramebufferParameteriv
0000000000269c60 000000000000007c T _mesa_GetNamedFramebufferParameterivEXT
0000000000269ce0 0000000000000004 T _mesa_InvalidateSubFramebuffer_no_error
0000000000269cf0 000000000000008c T _mesa_InvalidateSubFramebuffer
0000000000269d80 00000000000000bc T _mesa_InvalidateNamedFramebufferSubData
0000000000269e40 00000000000000b0 T _mesa_InvalidateFramebuffer_no_error
0000000000269ef0 00000000000000d4 T _mesa_InvalidateFramebuffer
0000000000269fd0 00000000000000b4 T _mesa_InvalidateNamedFramebufferData
000000000026a090 000000000000012c T _mesa_DiscardFramebufferEXT
000000000026a1c0 00000000000000dc T _mesa_FramebufferSampleLocationsfvARB
000000000026a2a0 00000000000000b8 T _mesa_NamedFramebufferSampleLocationsfvARB
000000000026a360 00000000000000d0 T _mesa_FramebufferSampleLocationsfvARB_no_error
000000000026a430 0000000000000078 T _mesa_NamedFramebufferSampleLocationsfvARB_no_error
000000000026a4b0 0000000000000058 T _mesa_EvaluateDepthValuesARB
000000000026a510 0000000000000118 t write_hit_record
000000000026a630 0000000000000158 T _mesa_FeedbackBuffer
000000000026a790 00000000000000ac T _mesa_PassThrough
000000000026a840 0000000000000194 t _mesa_feedback_vertex
000000000026a9e0 00000000000000d4 T _mesa_SelectBuffer
000000000026aac0 000000000000003c t _mesa_update_hitflag
000000000026ab00 000000000000009c T _mesa_InitNames
000000000026aba0 00000000000000f0 T _mesa_LoadName
000000000026ac90 00000000000000fc T _mesa_PushName
000000000026ad90 00000000000000cc T _mesa_PopName
000000000026ae60 00000000000001dc T _mesa_RenderMode
000000000026b040 0000000000000034 t _mesa_init_feedback
000000000026b080 000000000000057c t _mesa_Fogfv
000000000026b600 0000000000000024 t _mesa_Fogf
000000000026b630 0000000000000028 t _mesa_Fogi
000000000026b660 00000000000000b0 T _mesa_Fogiv
000000000026b710 0000000000000048 t _mesa_init_fog
000000000026b760 000000000000000c t array_formats_equal
000000000026b770 0000000000000010 t format_array_format_table_destroy
000000000026b780 00000000000000ac t format_array_format_table_init
000000000026b830 0000000000000038 t _mesa_get_format_name
000000000026b870 0000000000000054 t _mesa_get_format_bytes
000000000026b8d0 0000000000000214 t _mesa_get_format_bits
000000000026baf0 0000000000000098 t _mesa_get_format_max_bits
000000000026bb90 0000000000000040 t _mesa_get_format_layout
000000000026bbd0 0000000000000040 t _mesa_get_format_datatype
000000000026bc10 0000000000000138 t _mesa_get_format_base_format
000000000026bd50 000000000000004c t _mesa_get_format_block_size
000000000026bda0 0000000000000054 t _mesa_get_format_block_size_3d
000000000026be00 0000000000000040 t _mesa_format_to_array_format
000000000026be40 0000000000000064 t _mesa_format_from_array_format
000000000026beb0 000000000000005c t _mesa_is_format_compressed
000000000026bf10 000000000000004c t _mesa_is_format_packed_depth_stencil
000000000026bf60 0000000000000074 t _mesa_is_format_integer_color
000000000026bfe0 0000000000000058 t _mesa_is_format_unsigned
000000000026c040 000000000000006c t _mesa_is_format_signed
000000000026c0b0 0000000000000050 t _mesa_is_format_integer
000000000026c100 0000000000000040 t _mesa_is_format_srgb
000000000026c140 0000000000000010 t _mesa_is_format_etc2
000000000026c150 0000000000000010 t _mesa_is_format_astc_2d
000000000026c160 00000000000000c4 t _mesa_get_uncompressed_format
000000000026c230 000000000000009c t _mesa_format_num_components
000000000026c2d0 0000000000000094 t _mesa_format_has_color_component
000000000026c370 000000000000009c t _mesa_format_image_size
000000000026c410 00000000000000b4 t _mesa_format_image_size64
000000000026c4d0 0000000000000070 t _mesa_format_row_stride
000000000026c540 00000000000004cc t _mesa_uncompressed_format_to_type_and_comps
000000000026ca10 0000000000000150 t _mesa_format_matches_format_and_type
000000000026cb60 0000000000000164 t renderbuffer_exists
000000000026ccd0 00000000000001d0 t update_framebuffer
000000000026cea0 0000000000000070 T _mesa_new_framebuffer
000000000026cf10 0000000000000174 t _mesa_initialize_window_framebuffer
000000000026d090 0000000000000074 t _mesa_free_framebuffer_data
000000000026d110 0000000000000034 T _mesa_destroy_framebuffer
000000000026d150 0000000000000084 t _mesa_reference_framebuffer_
000000000026d1e0 0000000000000158 t _mesa_resize_framebuffer
000000000026d340 0000000000000070 t _mesa_update_draw_buffer_bounds
000000000026d3b0 0000000000000244 t _mesa_update_framebuffer_visual
000000000026d600 000000000000005c t _mesa_update_framebuffer
000000000026d660 0000000000000014 t _mesa_source_buffer_exists
000000000026d680 0000000000000014 t _mesa_dest_buffer_exists
000000000026d6a0 000000000000017c t _mesa_get_color_read_format
000000000026d820 0000000000000088 t _mesa_get_color_read_type
000000000026d8b0 0000000000000084 t _mesa_get_read_renderbuffer_for_format
000000000026d940 0000000000000044 t _mesa_is_multisample_enabled
000000000026d990 000000000000002c t _mesa_is_alpha_test_enabled
000000000026d9c0 0000000000000344 t _mesa_GetString
000000000026dd10 0000000000000184 T _mesa_GetStringi
000000000026dea0 00000000000001e8 t _get_vao_pointerv
000000000026e090 0000000000000060 T _mesa_GetPointerv
000000000026e0f0 0000000000000064 T _mesa_GetPointerIndexedvEXT
000000000026e160 0000000000000078 T _mesa_GetError
000000000026e1e0 00000000000001a8 t get_map_idx
000000000026e390 0000000000000078 t _mesa_compute_component_mapping
000000000026e410 00000000000000a4 t _mesa_type_is_packed
000000000026e4c0 00000000000000bc t _mesa_sizeof_type
000000000026e580 0000000000000180 t _mesa_sizeof_packed_type
000000000026e700 0000000000000148 t _mesa_components_in_format
000000000026e850 00000000000002d8 t _mesa_bytes_per_pixel
000000000026eb30 00000000000000e0 t _mesa_bytes_per_vertex_attrib
000000000026ec10 0000000000000110 t _mesa_is_enum_format_unsized
000000000026ed20 0000000000000104 t _mesa_is_enum_format_unorm
000000000026ee30 0000000000000030 t _mesa_is_enum_format_snorm
000000000026ee60 000000000000005c t _mesa_is_enum_format_unsigned_int
000000000026eec0 0000000000000048 t _mesa_is_enum_format_signed_int
000000000026ef10 000000000000006c t _mesa_is_astc_format
000000000026ef80 0000000000000014 t _mesa_is_etc2_format
000000000026efa0 000000000000006c t _mesa_is_enum_format_integer
000000000026f010 0000000000000070 t _mesa_is_type_unsigned
000000000026f080 0000000000000294 t _mesa_is_color_format
000000000026f320 0000000000000044 t _mesa_is_depth_format
000000000026f370 0000000000000010 t _mesa_is_stencil_format
000000000026f380 0000000000000010 t _mesa_is_ycbcr_format
000000000026f390 0000000000000030 t _mesa_is_depthstencil_format
000000000026f3c0 0000000000000098 t _mesa_is_depth_or_stencil_format
000000000026f460 00000000000003d8 t _mesa_is_compressed_format
000000000026f840 0000000000000084 t _mesa_is_srgb_format
000000000026f8d0 00000000000000c0 t _mesa_unpack_format_to_base_format
000000000026f990 00000000000000cc t _mesa_base_format_to_integer_format
000000000026fa60 0000000000000254 t _mesa_base_format_has_channel
000000000026fcc0 00000000000000e0 t _mesa_generic_compressed_format_to_uncompressed_format
000000000026fda0 00000000000001bc t _mesa_get_nongeneric_internalformat
000000000026ff60 0000000000000020 t _mesa_get_linear_internalformat
000000000026ff80 000000000000101c t _mesa_error_check_format_and_type
0000000000270fa0 0000000000000204 t _mesa_es_error_check_format_and_type
00000000002711b0 0000000000000f5c t _mesa_base_tex_format
0000000000272110 00000000000013bc t _mesa_gles_error_check_format_and_type
00000000002734d0 0000000000000088 t _mesa_swap_bytes_in_type_enum
0000000000273560 00000000000011f8 t _mesa_format_from_format_and_type
0000000000274760 0000000000000214 t _mesa_is_es3_color_renderable
0000000000274980 00000000000001b0 t _mesa_is_es3_texture_filterable
0000000000274b30 000000000000000c t uint_key_compare
0000000000274b40 0000000000000004 t uint_key_hash
0000000000274b50 0000000000000088 t hash_walk_unlocked
0000000000274be0 0000000000000080 t _mesa_NewHashTable
0000000000274c60 0000000000000058 t _mesa_DeleteHashTable
0000000000274cc0 0000000000000080 t _mesa_HashLookup
0000000000274d40 0000000000000034 t _mesa_HashLookupLocked
0000000000274d80 0000000000000070 t _mesa_HashInsertLocked
0000000000274df0 000000000000009c t _mesa_HashInsert
0000000000274e90 0000000000000040 t _mesa_HashRemoveLocked
0000000000274ed0 0000000000000064 t _mesa_HashRemove
0000000000274f40 00000000000000a0 t _mesa_HashDeleteAll
0000000000274fe0 0000000000000038 t _mesa_HashWalk
0000000000275020 0000000000000004 t _mesa_HashWalkLocked
0000000000275030 000000000000012c t _mesa_HashFindFreeKeyBlock
0000000000275160 00000000000003f0 t _mesa_Hint
0000000000275550 0000000000000040 T _mesa_MaxShaderCompilerThreadsKHR
0000000000275590 0000000000000018 t _mesa_init_hint
00000000002755b0 000000000000006c t _mesa_swap2
0000000000275620 0000000000000068 t _mesa_swap4
0000000000275690 000000000000012c t _mesa_image_offset
00000000002757c0 000000000000004c t _mesa_image_address
0000000000275810 0000000000000040 t _mesa_image_address2d
0000000000275850 00000000000000bc t _mesa_image_row_stride
0000000000275910 00000000000000c4 t _mesa_image_image_stride
00000000002759e0 00000000000001f4 t _mesa_expand_bitmap
0000000000275be0 000000000000016c t _mesa_clip_drawpixels
0000000000275d50 00000000000000e8 t _mesa_clip_readpixels
0000000000275e40 00000000000000d4 t _mesa_clip_copytexsubimage
0000000000275f20 00000000000006f8 t _mesa_clip_blit
0000000000276620 0000000000000148 t _mesa_swap_bytes_2d_image
0000000000276770 00000000000000b0 t update_modelview_scale
0000000000276820 0000000000000460 t _mesa_update_material.part.0
0000000000276c80 0000000000000598 t compute_light_positions.part.0
0000000000277220 00000000000000d0 t _mesa_ShadeModel
00000000002772f0 000000000000009c t _mesa_ProvokingVertex
0000000000277390 0000000000000898 t _mesa_light
0000000000277c30 00000000000002a4 t _mesa_Lightfv
0000000000277ee0 0000000000000024 t _mesa_Lightf
0000000000277f10 00000000000000e8 t _mesa_Lightiv
0000000000278000 0000000000000020 T _mesa_Lighti
0000000000278020 0000000000000290 t _mesa_GetLightfv
00000000002782b0 00000000000002d4 T _mesa_GetLightiv
0000000000278590 00000000000002d4 t _mesa_LightModelfv
0000000000278870 00000000000000a4 t _mesa_LightModeliv
0000000000278920 0000000000000020 T _mesa_LightModeli
0000000000278940 0000000000000024 t _mesa_LightModelf
0000000000278970 0000000000000100 t _mesa_material_bitmask
0000000000278a70 000000000000005c t _mesa_update_color_material
0000000000278ad0 0000000000000158 t _mesa_ColorMaterial
0000000000278c30 00000000000001c8 t _mesa_GetMaterialfv
0000000000278e00 0000000000000260 T _mesa_GetMaterialiv
0000000000279060 00000000000000bc t _mesa_update_lighting
0000000000279120 000000000000011c t _mesa_update_tnl_spaces
0000000000279240 0000000000000178 t _mesa_init_lighting
00000000002793c0 00000000000000a0 T _mesa_LineWidth_no_error
0000000000279460 00000000000000e4 t _mesa_LineWidth
0000000000279550 00000000000000d0 t _mesa_LineStipple
0000000000279620 000000000000001c t _mesa_init_line
0000000000279640 0000000000000124 t get_named_matrix_stack
0000000000279770 000000000000018c t push_matrix
0000000000279900 00000000000000f0 t matrix_load.isra.0
00000000002799f0 0000000000000100 t _mesa_Frustum
0000000000279af0 0000000000000224 T _mesa_MatrixFrustumEXT
0000000000279d20 00000000000000f0 t _mesa_Ortho
0000000000279e10 0000000000000214 T _mesa_MatrixOrthoEXT
000000000027a030 000000000000016c t _mesa_MatrixMode
000000000027a1a0 0000000000000038 T _mesa_PushMatrix
000000000027a1e0 00000000000001b4 T _mesa_MatrixPushEXT
000000000027a3a0 00000000000000d8 T _mesa_PopMatrix
000000000027a480 00000000000001e8 T _mesa_MatrixPopEXT
000000000027a670 0000000000000064 T _mesa_LoadIdentity
000000000027a6e0 0000000000000170 T _mesa_MatrixLoadIdentityEXT
000000000027a850 00000000000000f4 t _mesa_LoadMatrixf
000000000027a950 0000000000000130 T _mesa_MatrixLoadfEXT
000000000027aa80 000000000000007c t _mesa_MultMatrixf
000000000027ab00 0000000000000184 t _mesa_MatrixMultfEXT
000000000027ac90 00000000000000b8 t _mesa_Rotatef
000000000027ad50 00000000000001cc T _mesa_MatrixRotatefEXT
000000000027af20 0000000000000090 t _mesa_Scalef
000000000027afb0 00000000000001a0 t _mesa_MatrixScalefEXT
000000000027b150 0000000000000090 t _mesa_Translatef
000000000027b1e0 00000000000001a0 t _mesa_MatrixTranslatefEXT
000000000027b380 0000000000000058 T _mesa_LoadMatrixd
000000000027b3e0 000000000000006c T _mesa_MatrixLoaddEXT
000000000027b450 0000000000000044 T _mesa_MultMatrixd
000000000027b4a0 0000000000000044 T _mesa_MatrixMultdEXT
000000000027b4f0 00000000000000b0 T _mesa_Rotated
000000000027b5a0 00000000000001bc T _mesa_MatrixRotatedEXT
000000000027b760 0000000000000090 T _mesa_Scaled
000000000027b7f0 0000000000000010 T _mesa_MatrixScaledEXT
000000000027b800 0000000000000090 T _mesa_Translated
000000000027b890 0000000000000010 T _mesa_MatrixTranslatedEXT
000000000027b8a0 000000000000004c T _mesa_LoadTransposeMatrixf
000000000027b8f0 0000000000000060 T _mesa_MatrixLoadTransposefEXT
000000000027b950 000000000000004c T _mesa_LoadTransposeMatrixd
000000000027b9a0 0000000000000060 T _mesa_MatrixLoadTransposedEXT
000000000027ba00 0000000000000030 T _mesa_MultTransposeMatrixf
000000000027ba30 000000000000003c T _mesa_MatrixMultTransposefEXT
000000000027ba70 0000000000000030 T _mesa_MultTransposeMatrixd
000000000027baa0 000000000000003c T _mesa_MatrixMultTransposedEXT
000000000027bae0 00000000000000d0 t _mesa_update_modelview_project
000000000027bbb0 0000000000000144 t _mesa_init_matrix
000000000027bd00 0000000000000170 t _mesa_free_matrix_data
000000000027be70 000000000000004c t _mesa_init_transform
000000000027bec0 00000000000000dc t _mesa_SampleCoverage
000000000027bfa0 000000000000003c t _mesa_init_multisample
000000000027bfe0 0000000000000118 T _mesa_GetMultisamplefv
000000000027c100 000000000000008c T _mesa_SampleMaski_no_error
000000000027c190 00000000000000c8 T _mesa_SampleMaski
000000000027c260 000000000000009c T _mesa_MinSampleShading_no_error
000000000027c300 000000000000010c T _mesa_MinSampleShading
000000000027c410 0000000000000218 t _mesa_check_sample_count
000000000027c630 00000000000000a4 t _mesa_AlphaToCoverageDitherControlNV
000000000027c6e0 0000000000000060 t flip_bytes
000000000027c740 00000000000005ec t extract_uint_indexes.isra.0
000000000027cd30 00000000000000e4 t convert_integer_luminance64
000000000027ce20 0000000000000204 t _mesa_pack_bitmap
000000000027d030 0000000000000080 t _mesa_pack_polygon_stipple
000000000027d0b0 000000000000035c t _mesa_unpack_stencil_span
000000000027d410 0000000000000390 t _mesa_pack_stencil_span
000000000027d7a0 0000000000000a80 t _mesa_unpack_depth_span
000000000027e220 0000000000000550 t _mesa_pack_depth_span
000000000027e770 00000000000001e8 t _mesa_pack_depth_stencil_span
000000000027e960 0000000000000384 t _mesa_unpack_image
000000000027ecf0 0000000000000070 t _mesa_unpack_polygon_stipple
000000000027ed60 0000000000000130 t _mesa_pack_luminance_from_rgba_float
000000000027ee90 00000000000002ec t _mesa_pack_luminance_from_rgba_integer
000000000027f180 0000000000000188 t _mesa_unpack_color_index_to_rgba_float
000000000027f310 000000000000016c t _mesa_unpack_color_index_to_rgba_ubyte
000000000027f480 0000000000000168 t _mesa_validate_pbo_access
000000000027f5f0 0000000000000054 t _mesa_map_pbo_source
000000000027f650 00000000000000f0 t _mesa_validate_pbo_source
000000000027f740 0000000000000080 t _mesa_validate_pbo_source_compressed
000000000027f7c0 0000000000000128 t _mesa_map_validate_pbo_source
000000000027f8f0 0000000000000020 t _mesa_unmap_pbo_source
000000000027f910 0000000000000054 t _mesa_map_pbo_dest
000000000027f970 0000000000000128 t _mesa_map_validate_pbo_dest
000000000027faa0 0000000000000020 t _mesa_unmap_pbo_dest
000000000027fac0 00000000000000e8 t _mesa_validate_pbo_teximage
000000000027fbb0 00000000000000ac t _mesa_validate_pbo_compressed_teximage
000000000027fc60 0000000000000020 t _mesa_unmap_teximage_pbo
000000000027fc80 0000000000000044 t free_performance_monitor
000000000027fcd0 0000000000000034 t _mesa_init_performance_monitors
000000000027fd10 0000000000000034 t _mesa_free_performance_monitors
000000000027fd50 00000000000000a0 T _mesa_GetPerfMonitorGroupsAMD
000000000027fdf0 00000000000000dc T _mesa_GetPerfMonitorCountersAMD
000000000027fed0 0000000000000100 T _mesa_GetPerfMonitorGroupStringAMD
000000000027ffd0 0000000000000138 T _mesa_GetPerfMonitorCounterStringAMD
0000000000280110 0000000000000170 T _mesa_GetPerfMonitorCounterInfoAMD
0000000000280280 0000000000000204 T _mesa_GenPerfMonitorsAMD
0000000000280490 0000000000000110 T _mesa_DeletePerfMonitorsAMD
00000000002805a0 00000000000001ec T _mesa_SelectPerfMonitorCountersAMD
0000000000280790 00000000000000a0 T _mesa_BeginPerfMonitorAMD
0000000000280830 0000000000000090 T _mesa_EndPerfMonitorAMD
00000000002808c0 0000000000000284 T _mesa_GetPerfMonitorCounterDataAMD
0000000000280b50 0000000000000020 t free_performance_query
0000000000280b70 0000000000000024 t _mesa_init_performance_queries
0000000000280ba0 0000000000000034 t _mesa_free_performance_queries
0000000000280be0 0000000000000084 T _mesa_GetFirstPerfQueryIdINTEL
0000000000280c70 0000000000000098 T _mesa_GetNextPerfQueryIdINTEL
0000000000280d10 0000000000000104 T _mesa_GetPerfQueryIdByNameINTEL
0000000000280e20 000000000000012c T _mesa_GetPerfQueryInfoINTEL
0000000000280f50 00000000000001e8 T _mesa_GetPerfCounterInfoINTEL
0000000000281140 0000000000000128 T _mesa_CreatePerfQueryINTEL
0000000000281270 00000000000000dc T _mesa_BeginPerfQueryINTEL
0000000000281350 0000000000000094 t _mesa_EndPerfQueryINTEL
00000000002813f0 00000000000000f0 T _mesa_DeletePerfQueryINTEL
00000000002814e0 00000000000001b4 T _mesa_GetPerfQueryDataINTEL
00000000002816a0 0000000000000128 t create_program_pipelines
00000000002817d0 0000000000000170 t use_program_stages
0000000000281940 0000000000000090 t _mesa_delete_pipeline_object
00000000002819d0 0000000000000008 t delete_pipelineobj_cb
00000000002819e0 00000000000000d0 t _mesa_init_pipeline
0000000000281ab0 0000000000000068 t _mesa_free_pipeline_data
0000000000281b20 0000000000000018 t _mesa_lookup_pipeline_object
0000000000281b40 0000000000000070 t _mesa_reference_pipeline_object_
0000000000281bb0 00000000000000a8 T _mesa_UseProgramStages_no_error
0000000000281c60 0000000000000280 T _mesa_UseProgramStages
0000000000281ee0 0000000000000094 T _mesa_ActiveShaderProgram_no_error
0000000000281f80 000000000000010c T _mesa_ActiveShaderProgram
0000000000282090 0000000000000190 t _mesa_bind_pipeline
0000000000282220 000000000000006c t _mesa_BindProgramPipeline_no_error
0000000000282290 00000000000000b0 t _mesa_BindProgramPipeline
0000000000282340 00000000000000f8 T _mesa_DeleteProgramPipelines
0000000000282440 0000000000000030 T _mesa_GenProgramPipelines_no_error
0000000000282470 0000000000000050 T _mesa_GenProgramPipelines
00000000002824c0 0000000000000030 T _mesa_CreateProgramPipelines_no_error
00000000002824f0 0000000000000050 T _mesa_CreateProgramPipelines
0000000000282540 0000000000000050 T _mesa_IsProgramPipeline
0000000000282590 00000000000002c0 T _mesa_GetProgramPipelineiv
0000000000282850 000000000000025c t _mesa_validate_program_pipeline
0000000000282ab0 0000000000000060 T _mesa_ValidateProgramPipeline
0000000000282b10 00000000000000ac T _mesa_GetProgramPipelineInfoLog
0000000000282bc0 00000000000000bc t get_pixelmap
0000000000282c80 0000000000000114 t store_pixelmap
0000000000282da0 0000000000000110 t validate_pbo_access.constprop.0
0000000000282eb0 0000000000000080 T _mesa_PixelZoom
0000000000282f30 0000000000000154 T _mesa_PixelMapfv
0000000000283090 0000000000000280 T _mesa_PixelMapuiv
0000000000283310 000000000000026c T _mesa_PixelMapusv
0000000000283580 0000000000000170 t _mesa_GetnPixelMapfvARB
00000000002836f0 000000000000000c T _mesa_GetPixelMapfv
0000000000283700 00000000000001cc t _mesa_GetnPixelMapuivARB
00000000002838d0 000000000000000c T _mesa_GetPixelMapuiv
00000000002838e0 0000000000000378 t _mesa_GetnPixelMapusvARB
0000000000283c60 000000000000000c T _mesa_GetPixelMapusv
0000000000283c70 00000000000004bc t _mesa_PixelTransferf
0000000000284130 0000000000000008 T _mesa_PixelTransferi
0000000000284140 00000000000000a4 t _mesa_update_pixel
00000000002841f0 00000000000000b0 t _mesa_init_pixel
00000000002842a0 00000000000004f0 t _mesa_PixelStorei
0000000000284790 0000000000000008 T _mesa_PixelStoref
00000000002847a0 000000000000020c t _mesa_PixelStorei_no_error
00000000002849b0 0000000000000008 T _mesa_PixelStoref_no_error
00000000002849c0 00000000000000e8 t _mesa_init_pixelstore
0000000000284ab0 00000000000000f4 t _mesa_compressed_pixel_storage_error_check
0000000000284bb0 0000000000000130 t _mesa_scale_and_bias_rgba
0000000000284ce0 0000000000000148 t _mesa_map_rgba
0000000000284e30 0000000000000094 t _mesa_map_ci_to_rgba
0000000000284ed0 000000000000004c t _mesa_scale_and_bias_depth
0000000000284f20 000000000000006c t _mesa_scale_and_bias_depth_uint
0000000000284f90 00000000000000c4 t _mesa_apply_rgba_transfer_ops
0000000000285060 0000000000000178 t _mesa_shift_and_offset_ci
00000000002851e0 0000000000000240 t _mesa_apply_stencil_transfer_ops
0000000000285420 00000000000000a4 T _mesa_PointSize_no_error
00000000002854d0 00000000000000c4 t _mesa_PointSize
00000000002855a0 0000000000000434 t _mesa_PointParameterfv
00000000002859e0 0000000000000024 t _mesa_PointParameteri
0000000000285a10 000000000000003c T _mesa_PointParameteriv
0000000000285a50 0000000000000020 t _mesa_PointParameterf
0000000000285a70 0000000000000064 t _mesa_init_point
0000000000285ae0 00000000000000a8 T _mesa_CullFace_no_error
0000000000285b90 00000000000000d0 t _mesa_CullFace
0000000000285c60 00000000000000a8 T _mesa_FrontFace_no_error
0000000000285d10 00000000000000c8 t _mesa_FrontFace
0000000000285de0 0000000000000198 T _mesa_PolygonMode_no_error
0000000000285f80 0000000000000200 t _mesa_PolygonMode
0000000000286180 000000000000010c T _mesa_PolygonStipple
0000000000286290 00000000000000a0 t _mesa_GetnPolygonStippleARB
0000000000286330 000000000000000c T _mesa_GetPolygonStipple
0000000000286340 00000000000000cc t _mesa_polygon_offset_clamp
0000000000286410 00000000000000cc t _mesa_PolygonOffset
00000000002864e0 0000000000000104 T _mesa_PolygonOffsetClampEXT
00000000002865f0 0000000000000068 t _mesa_init_polygon
0000000000286660 00000000000005b4 t get_query_binding_point
0000000000286c20 0000000000000014 t delete_queryobj_cb
0000000000286c40 0000000000000020 t _mesa_delete_query
0000000000286c60 0000000000000124 t create_queries
0000000000286d90 0000000000000360 t get_query_object
00000000002870f0 0000000000000030 T _mesa_GenQueries
0000000000287120 00000000000000d0 T _mesa_CreateQueries
00000000002871f0 000000000000011c T _mesa_DeleteQueries
0000000000287310 000000000000006c T _mesa_IsQuery
0000000000287380 0000000000000258 t _mesa_BeginQueryIndexed
00000000002875e0 000000000000015c t _mesa_EndQueryIndexed
0000000000287740 000000000000000c T _mesa_BeginQuery
0000000000287750 0000000000000008 T _mesa_EndQuery
0000000000287760 000000000000015c T _mesa_QueryCounter
00000000002878c0 0000000000000484 t _mesa_GetQueryIndexediv
0000000000287d50 0000000000000010 T _mesa_GetQueryiv
0000000000287d60 0000000000000044 T _mesa_GetQueryObjectiv
0000000000287db0 0000000000000044 T _mesa_GetQueryObjectuiv
0000000000287e00 0000000000000044 T _mesa_GetQueryObjecti64v
0000000000287e50 0000000000000044 T _mesa_GetQueryObjectui64v
0000000000287ea0 0000000000000088 T _mesa_GetQueryBufferObjectiv
0000000000287f30 0000000000000088 T _mesa_GetQueryBufferObjectuiv
0000000000287fc0 0000000000000088 T _mesa_GetQueryBufferObjecti64v
0000000000288050 0000000000000088 T _mesa_GetQueryBufferObjectui64v
00000000002880e0 0000000000000048 t _mesa_init_queryobj
0000000000288130 0000000000000034 t _mesa_free_queryobj_data
0000000000288170 0000000000000314 t window_pos3f
0000000000288490 00000000000000b0 t rasterpos
0000000000288540 0000000000000014 T _mesa_RasterPos2d
0000000000288560 000000000000000c T _mesa_RasterPos2f
0000000000288570 0000000000000014 T _mesa_RasterPos2i
0000000000288590 000000000000001c T _mesa_RasterPos2s
00000000002885b0 0000000000000014 T _mesa_RasterPos3d
00000000002885d0 0000000000000008 T _mesa_RasterPos3f
00000000002885e0 0000000000000014 T _mesa_RasterPos3i
0000000000288600 0000000000000020 T _mesa_RasterPos3s
0000000000288620 0000000000000014 T _mesa_RasterPos4d
0000000000288640 0000000000000004 T _mesa_RasterPos4f
0000000000288650 0000000000000014 T _mesa_RasterPos4i
0000000000288670 0000000000000024 T _mesa_RasterPos4s
00000000002886a0 0000000000000018 T _mesa_RasterPos2dv
00000000002886c0 0000000000000010 T _mesa_RasterPos2fv
00000000002886d0 0000000000000018 T _mesa_RasterPos2iv
00000000002886f0 000000000000001c T _mesa_RasterPos2sv
0000000000288710 000000000000001c T _mesa_RasterPos3dv
0000000000288730 0000000000000010 T _mesa_RasterPos3fv
0000000000288740 000000000000001c T _mesa_RasterPos3iv
0000000000288760 0000000000000020 T _mesa_RasterPos3sv
0000000000288780 000000000000001c T _mesa_RasterPos4dv
00000000002887a0 000000000000000c T _mesa_RasterPos4fv
00000000002887b0 000000000000001c T _mesa_RasterPos4iv
00000000002887d0 0000000000000024 T _mesa_RasterPos4sv
0000000000288800 0000000000000044 T _mesa_WindowPos2d
0000000000288850 000000000000003c T _mesa_WindowPos2f
0000000000288890 0000000000000044 T _mesa_WindowPos2i
00000000002888e0 000000000000004c T _mesa_WindowPos2s
0000000000288930 0000000000000044 T _mesa_WindowPos3d
0000000000288980 0000000000000038 T _mesa_WindowPos3f
00000000002889c0 0000000000000044 T _mesa_WindowPos3i
0000000000288a10 0000000000000050 T _mesa_WindowPos3s
0000000000288a60 000000000000004c T _mesa_WindowPos4dMESA
0000000000288ab0 0000000000000040 T _mesa_WindowPos4fMESA
0000000000288af0 0000000000000048 T _mesa_WindowPos4iMESA
0000000000288b40 0000000000000054 T _mesa_WindowPos4sMESA
0000000000288ba0 000000000000004c T _mesa_WindowPos2dv
0000000000288bf0 0000000000000044 T _mesa_WindowPos2fv
0000000000288c40 000000000000004c T _mesa_WindowPos2iv
0000000000288c90 0000000000000050 T _mesa_WindowPos2sv
0000000000288ce0 0000000000000050 T _mesa_WindowPos3dv
0000000000288d30 0000000000000044 T _mesa_WindowPos3fv
0000000000288d80 0000000000000050 T _mesa_WindowPos3iv
0000000000288dd0 0000000000000054 T _mesa_WindowPos3sv
0000000000288e30 0000000000000058 T _mesa_WindowPos4dvMESA
0000000000288e90 0000000000000048 T _mesa_WindowPos4fvMESA
0000000000288ee0 0000000000000058 T _mesa_WindowPos4ivMESA
0000000000288f40 0000000000000060 T _mesa_WindowPos4svMESA
0000000000288fa0 0000000000000068 t _mesa_init_rastpos
0000000000289010 0000000000000144 t _mesa_get_readpixels_transfer_ops
0000000000289160 000000000000016c t _mesa_readpixels_needs_slow_path
00000000002892d0 0000000000000fc4 t _mesa_readpixels
000000000028a2a0 0000000000000108 t _mesa_ReadnPixelsARB_no_error
000000000028a3b0 0000000000000750 t _mesa_ReadnPixelsARB
000000000028ab00 000000000000000c T _mesa_ReadPixels_no_error
000000000028ab10 000000000000000c T _mesa_ReadPixels
000000000028ab20 0000000000000124 t _mesa_init_remap_table
000000000028ac50 0000000000000030 t _mesa_delete_renderbuffer
000000000028ac80 0000000000000080 t _mesa_init_renderbuffer
000000000028ad00 0000000000000094 t _mesa_reference_renderbuffer_
000000000028ada0 0000000000000078 t _mesa_attach_and_own_rb
000000000028ae20 0000000000000040 t _mesa_attach_and_reference_rb
000000000028ae60 00000000000000bc t set_scissor_no_notify
000000000028af20 0000000000000130 t scissor_array
000000000028b050 0000000000000130 T _mesa_Scissor_no_error
000000000028b180 000000000000015c T _mesa_Scissor
000000000028b2e0 00000000000000e4 t _mesa_set_scissor
000000000028b3d0 0000000000000030 T _mesa_ScissorArrayv_no_error
000000000028b400 00000000000000a4 T _mesa_ScissorArrayv
000000000028b4b0 00000000000000ec T _mesa_ScissorIndexed_no_error
000000000028b5a0 00000000000000bc T _mesa_ScissorIndexed
000000000028b660 00000000000000f0 T _mesa_ScissorIndexedv_no_error
000000000028b750 00000000000000bc T _mesa_ScissorIndexedv
000000000028b810 000000000000016c t _mesa_WindowRectanglesEXT
000000000028b980 00000000000000d4 t _mesa_init_scissor
000000000028ba60 00000000000000bc t get_attached_shaders
000000000028bb20 000000000000006c t create_shader_program
000000000028bb90 000000000000013c t detach_shader_no_error
000000000028bcd0 0000000000000170 t detach_shader_error
000000000028be40 0000000000000170 t get_shaderiv
000000000028bfb0 0000000000000038 t destroy_shader_include
000000000028bff0 0000000000000228 t validate_and_tokenise_sh_incl
000000000028c220 0000000000000270 t lookup_shader_include
000000000028c490 0000000000000088 t attach_shader
000000000028c520 0000000000000100 t attach_shader_err
000000000028c620 000000000000007c t copy_string
000000000028c6a0 00000000000001fc t _mesa_compile_shader.part.0
000000000028c8a0 00000000000000cc t create_shader
000000000028c970 0000000000000c3c t get_programiv
000000000028d5b0 0000000000000144 t _mesa_get_shader_flags
000000000028d700 0000000000000048 t _mesa_get_shader_capture_path
000000000028d750 00000000000000b0 t _mesa_init_shader_state
000000000028d800 00000000000000d0 t _mesa_free_shader_state
000000000028d8d0 000000000000005c t _mesa_copy_string
000000000028d930 0000000000000198 t _mesa_validate_shader_target
000000000028dad0 0000000000000054 t _mesa_active_program
000000000028db30 0000000000000060 T _mesa_AttachObjectARB_no_error
000000000028db90 0000000000000034 T _mesa_AttachObjectARB
000000000028dbd0 0000000000000060 T _mesa_AttachShader_no_error
000000000028dc30 0000000000000034 T _mesa_AttachShader
000000000028dc70 0000000000000078 T _mesa_CompileShader
000000000028dcf0 0000000000000024 T _mesa_CreateShader_no_error
000000000028dd20 000000000000007c T _mesa_CreateShader
000000000028dda0 0000000000000024 T _mesa_CreateShaderObjectARB_no_error
000000000028ddd0 000000000000007c T _mesa_CreateShaderObjectARB
000000000028de50 0000000000000020 T _mesa_CreateProgram
000000000028de70 0000000000000020 T _mesa_CreateProgramObjectARB
000000000028de90 00000000000000fc T _mesa_DeleteObjectARB
000000000028df90 00000000000000c4 T _mesa_DeleteProgram
000000000028e060 00000000000000c4 T _mesa_DeleteShader
000000000028e130 000000000000002c T _mesa_DetachObjectARB_no_error
000000000028e160 000000000000002c T _mesa_DetachObjectARB
000000000028e190 000000000000002c T _mesa_DetachShader_no_error
000000000028e1c0 000000000000002c T _mesa_DetachShader
000000000028e1f0 0000000000000038 T _mesa_GetAttachedObjectsARB
000000000028e230 0000000000000038 T _mesa_GetAttachedShaders
000000000028e270 00000000000001a0 T _mesa_GetInfoLogARB
000000000028e410 00000000000000e8 T _mesa_GetObjectParameterivARB
000000000028e500 0000000000000108 T _mesa_GetObjectParameterfvARB
000000000028e610 0000000000000030 T _mesa_GetProgramiv
000000000028e640 0000000000000030 T _mesa_GetShaderiv
000000000028e670 00000000000000d0 T _mesa_GetProgramInfoLog
000000000028e740 00000000000000cc T _mesa_GetShaderInfoLog
000000000028e810 00000000000000cc T _mesa_GetShaderSource
000000000028e8e0 0000000000000060 T _mesa_GetHandleARB
000000000028e940 0000000000000030 T _mesa_IsProgram
000000000028e970 0000000000000030 T _mesa_IsShader
000000000028e9a0 000000000000020c T _mesa_ShaderSource_no_error
000000000028ebb0 000000000000023c t _mesa_ShaderSource
000000000028edf0 00000000000000cc T _mesa_ValidateProgram
000000000028eec0 0000000000000104 T _mesa_GetShaderPrecisionFormat
000000000028efd0 0000000000000044 T _mesa_ReleaseShaderCompiler
000000000028f020 0000000000000184 T _mesa_ShaderBinary
000000000028f1b0 000000000000011c T _mesa_GetProgramBinary
000000000028f2d0 0000000000000100 T _mesa_ProgramBinary
000000000028f3d0 0000000000000070 T _mesa_ProgramParameteri_no_error
000000000028f440 00000000000000f0 T _mesa_ProgramParameteri
000000000028f530 0000000000000088 t _mesa_copy_linked_program_data
000000000028f5c0 0000000000000060 T _mesa_PatchParameteri_no_error
000000000028f620 00000000000000fc T _mesa_PatchParameteri
000000000028f720 0000000000000144 T _mesa_PatchParameterfv
000000000028f870 00000000000000f4 T _mesa_GetSubroutineUniformLocation
000000000028f970 000000000000011c T _mesa_GetSubroutineIndex
000000000028fa90 0000000000000270 T _mesa_GetActiveSubroutineUniformiv
000000000028fd00 0000000000000138 T _mesa_GetActiveSubroutineUniformName
000000000028fe40 0000000000000138 T _mesa_GetActiveSubroutineName
000000000028ff80 000000000000025c T _mesa_UniformSubroutinesuiv
00000000002901e0 0000000000000108 T _mesa_GetUniformSubroutineuiv
00000000002902f0 0000000000000284 T _mesa_GetProgramStageiv
0000000000290580 000000000000004c t _mesa_init_shader_includes
00000000002905d0 000000000000000c t _mesa_get_shader_include_cursor
00000000002905e0 000000000000000c t _mesa_set_shader_include_cursor
00000000002905f0 0000000000000034 t _mesa_destroy_shader_includes
0000000000290630 000000000000001c t _mesa_lookup_shader_include
0000000000290650 0000000000000200 T _mesa_NamedStringARB
0000000000290850 00000000000000cc T _mesa_DeleteNamedStringARB
0000000000290920 00000000000001d0 T _mesa_CompileShaderIncludeARB
0000000000290af0 00000000000000d4 T _mesa_IsNamedStringARB
0000000000290bd0 0000000000000100 T _mesa_GetNamedStringARB
0000000000290cd0 000000000000013c T _mesa_GetNamedStringivARB
0000000000290e10 00000000000000d4 t _mesa_shader_write_subroutine_indices
0000000000290ef0 000000000000017c t _mesa_program_init_subroutine_defaults
0000000000291070 0000000000000128 t _mesa_use_program
00000000002911a0 0000000000000358 t link_program_error.part.0
0000000000291500 0000000000000228 T _mesa_CreateShaderProgramv
0000000000291730 0000000000000084 T _mesa_LinkProgram
00000000002917c0 0000000000000374 T _mesa_LinkProgram_no_error
0000000000291b40 00000000000000a8 t update_programs_in_pipeline
0000000000291bf0 0000000000000088 t _mesa_use_shader_program
0000000000291c80 0000000000000128 T _mesa_UseProgram_no_error
0000000000291db0 000000000000028c T _mesa_UseProgram
0000000000292040 0000000000000244 t _mesa_get_shader_image_format
0000000000292290 00000000000000c0 t set_image_binding
0000000000292350 000000000000004c t _mesa_get_image_format_class
00000000002923a0 000000000000017c t _mesa_is_shader_image_format_supported
0000000000292520 0000000000000048 t _mesa_default_image_unit
0000000000292570 0000000000000088 t _mesa_init_image_units
0000000000292600 000000000000004c t _mesa_free_image_textures
0000000000292650 00000000000001f0 t _mesa_is_image_unit_valid
0000000000292840 00000000000000ec T _mesa_BindImageTexture_no_error
0000000000292930 0000000000000220 T _mesa_BindImageTexture
0000000000292b50 000000000000017c T _mesa_BindImageTextureEXT
0000000000292cd0 00000000000001b0 T _mesa_BindImageTextures_no_error
0000000000292e80 0000000000000320 T _mesa_BindImageTextures
00000000002931a0 00000000000000b8 t _mesa_reference_shader
0000000000293260 0000000000000050 t _mesa_new_shader
00000000002932b0 0000000000000044 t _mesa_delete_shader
0000000000293300 0000000000000048 t _mesa_delete_linked_shader
0000000000293350 0000000000000048 t _mesa_lookup_shader
00000000002933a0 0000000000000094 t _mesa_lookup_shader_err
0000000000293440 00000000000000a8 t _mesa_reference_shader_program_data
00000000002934f0 0000000000000048 t _mesa_create_shader_program_data
0000000000293540 00000000000000c8 t _mesa_new_shader_program
0000000000293610 00000000000000d0 t _mesa_clear_shader_program_data
00000000002936e0 00000000000000e0 t _mesa_free_shader_program_data
00000000002937c0 00000000000000d0 t _mesa_reference_shader_program_
0000000000293890 0000000000000024 t _mesa_delete_shader_program
00000000002938c0 0000000000000048 t _mesa_lookup_shader_program
0000000000293910 0000000000000094 t _mesa_lookup_shader_program_err
00000000002939b0 000000000000012c t program_resource_location(gl_program_resource*, unsigned int)
0000000000293ae0 000000000000006c t compute_resource_key(unsigned int, char const*)
0000000000293b50 000000000000008c T _mesa_BindAttribLocation_no_error
0000000000293be0 0000000000000128 T _mesa_BindAttribLocation
0000000000293d10 0000000000000068 t _mesa_count_active_attribs
0000000000293d80 00000000000000e8 t _mesa_longest_attribute_name_length
0000000000293e70 00000000000000d8 T _mesa_BindFragDataLocation_no_error
0000000000293f50 00000000000001ac t _mesa_BindFragDataLocationIndexed
0000000000294100 000000000000000c T _mesa_BindFragDataLocation
0000000000294110 00000000000000dc T _mesa_BindFragDataLocationIndexed_no_error
00000000002941f0 00000000000000a4 t _mesa_program_resource_name
00000000002942a0 00000000000000b0 t _mesa_program_resource_array_size
0000000000294350 0000000000000338 t _mesa_program_resource_find_name
0000000000294690 00000000000000a0 T _mesa_GetAttribLocation
0000000000294730 00000000000000dc T _mesa_GetFragDataLocation
0000000000294810 00000000000000f4 T _mesa_GetFragDataIndex
0000000000294910 0000000000000118 t _mesa_program_resource_find_active_variable
0000000000294a30 0000000000000094 t _mesa_program_resource_index
0000000000294ad0 0000000000000134 t _mesa_program_resource_find_index
0000000000294c10 00000000000000f4 t _mesa_program_resource_name_len
0000000000294d10 0000000000000154 t _mesa_get_program_resource_name
0000000000294e70 0000000000000030 t _mesa_program_resource_location
0000000000294ea0 0000000000000050 t _mesa_program_resource_location_index
0000000000294ef0 0000000000000afc t _mesa_program_resource_prop
00000000002959f0 000000000000017c T _mesa_GetActiveAttrib
0000000000295b70 0000000000000138 t _mesa_get_program_resourceiv
0000000000295cb0 00000000000003d8 t _mesa_validate_pipeline_io
0000000000296090 00000000000000a4 t _mesa_create_program_resource_hash
0000000000296140 0000000000000014 t delete_texture_cb
0000000000296160 000000000000002c t delete_program_cb
0000000000296190 000000000000001c t delete_framebuffer_cb
00000000002961b0 000000000000001c t delete_renderbuffer_cb
00000000002961d0 0000000000000014 t delete_memory_object_cb
00000000002961f0 0000000000000014 t delete_semaphore_object_cb
0000000000296210 0000000000000008 t delete_fragshader_cb
0000000000296220 0000000000000028 t delete_sampler_object_cb
0000000000296250 0000000000000038 t delete_bufferobj_cb
0000000000296290 0000000000000048 t delete_shader_cb
00000000002962e0 000000000000001c t free_shader_program_data_cb
0000000000296300 0000000000000008 t delete_bitmap_atlas_cb
0000000000296310 0000000000000008 t delete_displaylist_cb
0000000000296320 000000000000017c t _mesa_alloc_shared_state
00000000002964a0 0000000000000354 t _mesa_reference_shared_state
0000000000296800 000000000000001c t _mesa_get_spirv_extension_count
0000000000296820 00000000000000ac t _mesa_spirv_extensions_to_string
00000000002968d0 0000000000000044 t _mesa_get_enabled_spirv_extension
0000000000296920 0000000000000074 t _mesa_fill_supported_spirv_extensions
00000000002969a0 00000000000003a4 t update_program
0000000000296d50 0000000000000120 t _mesa_update_allow_draw_out_of_order
0000000000296e70 000000000000034c t _mesa_update_state_locked
00000000002971c0 000000000000002c t _mesa_update_state
00000000002971f0 000000000000002c t _mesa_set_vp_override
0000000000297220 00000000000000b0 t _mesa_update_vertex_processing_mode
00000000002972d0 0000000000000164 t _mesa_set_draw_vao
0000000000297440 00000000000001fc t stencil_func
0000000000297640 00000000000001ec t stencil_op
0000000000297830 0000000000000190 t stencil_op_separate
00000000002979c0 000000000000002c t _mesa_ClearStencil
00000000002979f0 0000000000000184 T _mesa_StencilFuncSeparateATI
0000000000297b80 0000000000000030 T _mesa_StencilFunc_no_error
0000000000297bb0 0000000000000050 T _mesa_StencilFunc
0000000000297c00 0000000000000168 T _mesa_StencilMask
0000000000297d70 0000000000000030 T _mesa_StencilOp_no_error
0000000000297da0 0000000000000114 T _mesa_StencilOp
0000000000297ec0 0000000000000078 t _mesa_ActiveStencilFaceEXT
0000000000297f40 0000000000000034 T _mesa_StencilOpSeparate_no_error
0000000000297f80 000000000000013c t _mesa_StencilOpSeparate
00000000002980c0 00000000000000dc T _mesa_StencilFuncSeparate_no_error
00000000002981a0 0000000000000120 t _mesa_StencilFuncSeparate
00000000002982c0 00000000000000a8 T _mesa_StencilMaskSeparate_no_error
0000000000298370 00000000000000cc t _mesa_StencilMaskSeparate
0000000000298440 0000000000000044 t _mesa_init_stencil
0000000000298490 00000000000000a4 t fence_sync
0000000000298540 0000000000000004 t _mesa_init_sync
0000000000298550 0000000000000004 t _mesa_free_sync_data
0000000000298560 0000000000000090 t _mesa_get_and_ref_sync
00000000002985f0 0000000000000088 t _mesa_unref_sync_object
0000000000298680 0000000000000098 t client_wait_sync
0000000000298720 00000000000000b0 T _mesa_IsSync
00000000002987d0 0000000000000098 T _mesa_DeleteSync_no_error
0000000000298870 00000000000000a8 T _mesa_DeleteSync
0000000000298920 000000000000002c T _mesa_FenceSync_no_error
0000000000298950 00000000000000a0 T _mesa_FenceSync
00000000002989f0 0000000000000090 T _mesa_ClientWaitSync_no_error
0000000000298a80 0000000000000124 T _mesa_ClientWaitSync
0000000000298bb0 00000000000000a8 T _mesa_WaitSync_no_error
0000000000298c60 0000000000000110 T _mesa_WaitSync
0000000000298d70 000000000000019c T _mesa_GetSynciv
0000000000298f10 000000000000031c t _mesa_gl_compressed_format_base_format
0000000000299230 0000000000000680 t _mesa_get_compressed_formats
00000000002998b0 0000000000000458 t _mesa_glenum_to_compressed_format
0000000000299d10 00000000000002e4 t _mesa_compressed_format_to_glenum
000000000029a000 00000000000000a4 t _mesa_get_compressed_fetch_func
000000000029a0b0 00000000000000ec t _mesa_decompress_image
000000000029a1a0 00000000000008fc t texstore_bptc_rgb_float.isra.0
000000000029aaa0 00000000000006e4 t fetch_rgb_float_from_block
000000000029b190 000000000000006c t fetch_bptc_rgb_signed_float
000000000029b200 000000000000006c t fetch_bptc_rgb_unsigned_float
000000000029b270 0000000000000980 t fetch_rgba_unorm_from_block
000000000029bbf0 00000000000000bc t fetch_bptc_rgba_unorm
000000000029bcb0 00000000000000c0 t fetch_bptc_srgb_alpha_unorm
000000000029bd70 0000000000000054 t _mesa_get_bptc_fetch_func
000000000029bdd0 0000000000000a1c T _mesa_texstore_bptc_rgba_unorm
000000000029c7f0 0000000000000038 T _mesa_texstore_bptc_rgb_signed_float
000000000029c830 0000000000000034 T _mesa_texstore_bptc_rgb_unsigned_float
000000000029c870 0000000000000128 t etc1_parse_block
000000000029c9a0 0000000000000130 t etc1_fetch_texel
000000000029cad0 0000000000000680 t etc2_rgb8_parse_block
000000000029d150 00000000000000b8 t fetch_etc1_rgb8
000000000029d210 00000000000002dc t etc2_rgb8_fetch_texel
000000000029d4f0 00000000000000cc t fetch_etc2_srgb8_punchthrough_alpha1
000000000029d5c0 00000000000000c8 t fetch_etc2_rgb8_punchthrough_alpha1
000000000029d690 00000000000000bc t fetch_etc2_srgb8
000000000029d750 00000000000000c0 t fetch_etc2_rgb8
000000000029d810 00000000000000bc t etc2_signed_r11_fetch_texel.isra.0
000000000029d8d0 00000000000000a0 t etc2_r11_fetch_texel.isra.0
000000000029d970 0000000000000088 t etc2_rgba8_fetch_texel
000000000029da00 00000000000000ec t fetch_etc2_signed_r11_eac
000000000029daf0 0000000000000120 t fetch_etc2_rgba8_eac
000000000029dc10 0000000000000124 t fetch_etc2_srgb8_alpha8_eac
000000000029dd40 0000000000000158 t fetch_etc2_r11_eac
000000000029dea0 0000000000000140 t fetch_etc2_rg11_eac
000000000029dfe0 0000000000000154 t fetch_etc2_signed_rg11_eac
000000000029e140 0000000000000008 T _mesa_texstore_etc1_rgb8
000000000029e150 000000000000013c t _mesa_etc1_unpack_rgba8888
000000000029e290 0000000000000008 T _mesa_texstore_etc2_rgb8
000000000029e2a0 0000000000000008 T _mesa_texstore_etc2_srgb8
000000000029e2b0 0000000000000008 T _mesa_texstore_etc2_rgba8_eac
000000000029e2c0 0000000000000008 T _mesa_texstore_etc2_srgb8_alpha8_eac
000000000029e2d0 0000000000000008 T _mesa_texstore_etc2_r11_eac
000000000029e2e0 0000000000000008 T _mesa_texstore_etc2_signed_r11_eac
000000000029e2f0 0000000000000008 T _mesa_texstore_etc2_rg11_eac
000000000029e300 0000000000000008 T _mesa_texstore_etc2_signed_rg11_eac
000000000029e310 0000000000000008 T _mesa_texstore_etc2_rgb8_punchthrough_alpha1
000000000029e320 0000000000000008 T _mesa_texstore_etc2_srgb8_punchthrough_alpha1
000000000029e330 0000000000000f68 t _mesa_unpack_etc2_format
000000000029f2a0 00000000000000b0 t _mesa_get_etc_fetch_func
000000000029f350 0000000000000100 t fxt1_decode_1HI
000000000029f450 0000000000000078 t fxt1_decode_1CHROMA
000000000029f4d0 0000000000000228 t fxt1_decode_1MIXED
000000000029f700 0000000000000214 t fxt1_decode_1ALPHA
000000000029f920 0000000000000074 t fxt1_decode_1
000000000029f9a0 0000000000000054 t fetch_rgb_fxt1
000000000029fa00 000000000000005c t fetch_rgba_fxt1
000000000029fa60 0000000000000080 t fxt1_variance.constprop.0
000000000029fae0 0000000000001048 t fxt1_encode
00000000002a0b30 0000000000000178 T _mesa_texstore_rgb_fxt1
00000000002a0cb0 0000000000000150 T _mesa_texstore_rgba_fxt1
00000000002a0e00 0000000000000028 t _mesa_get_fxt_fetch_func
00000000002a0e30 00000000000000b8 t fetch_signed_la_latc2
00000000002a0ef0 00000000000000bc t fetch_signed_rg_rgtc2
00000000002a0fb0 0000000000000060 t fetch_signed_l_latc1
00000000002a1010 0000000000000068 t fetch_signed_red_rgtc1
00000000002a1080 0000000000000088 t fetch_la_latc2
00000000002a1110 000000000000008c t fetch_rg_rgtc2
00000000002a11a0 0000000000000050 t fetch_l_latc1
00000000002a11f0 0000000000000054 t fetch_red_rgtc1
00000000002a1250 000000000000024c T _mesa_texstore_red_rgtc1
00000000002a14a0 000000000000029c T _mesa_texstore_signed_red_rgtc1
00000000002a1740 0000000000000330 T _mesa_texstore_rg_rgtc2
00000000002a1a70 0000000000000388 T _mesa_texstore_signed_rg_rgtc2
00000000002a1e00 00000000000000a8 t _mesa_get_compressed_rgtc_func
00000000002a1eb0 00000000000001fc t dxt135_decode_imageblock
00000000002a20b0 0000000000000088 t fetch_2d_texel_rgba_dxt3
00000000002a2140 0000000000000144 t fetch_2d_texel_rgba_dxt5
00000000002a2290 00000000000000e4 t writedxt5encodedalphablock
00000000002a2380 0000000000000060 t fetch_rgba_dxt3
00000000002a23e0 0000000000000060 t fetch_rgba_dxt5
00000000002a2440 00000000000000a4 t fetch_srgb_dxt1
00000000002a24f0 00000000000000a4 t fetch_srgba_dxt1
00000000002a25a0 0000000000000064 t fetch_srgba_dxt3
00000000002a2610 0000000000000064 t fetch_srgba_dxt5
00000000002a2680 0000000000000c24 t encodedxtcolorblockfaster
00000000002a32b0 00000000000000a0 t fetch_rgb_dxt1
00000000002a3350 00000000000000a0 t fetch_rgba_dxt1
00000000002a33f0 0000000000001328 t tx_compress_dxtn
00000000002a4720 000000000000015c T _mesa_texstore_rgb_dxt1
00000000002a4880 000000000000015c T _mesa_texstore_rgba_dxt1
00000000002a49e0 000000000000015c T _mesa_texstore_rgba_dxt3
00000000002a4b40 000000000000015c T _mesa_texstore_rgba_dxt5
00000000002a4ca0 00000000000000a4 t _mesa_get_dxt_fetch_func
00000000002a4d50 0000000000000078 t adjust_for_oes_float_texture
00000000002a4dd0 00000000000000d0 t strip_texture_border
00000000002a4ea0 0000000000000114 t copytexsubimage_by_slice
00000000002a4fc0 0000000000000174 t get_proxy_tex_image
00000000002a5140 0000000000000098 t error_check_subtexture_negative_dimensions
00000000002a51e0 00000000000000c4 t check_texture_buffer_range
00000000002a52b0 00000000000000a4 t get_tex_images_for_clear
00000000002a5360 0000000000000158 t proxy_target
00000000002a54c0 0000000000000114 t check_rtt_cb
00000000002a55e0 00000000000000b0 t texture_format_error_check_gles
00000000002a5690 00000000000000f8 t texture_formats_agree
00000000002a5790 00000000000002f4 t error_check_subtexture_dimensions
00000000002a5a90 000000000000018c t lookup_texture_ext_dsa
00000000002a5c20 00000000000000fc t formats_differ_in_component_sizes
00000000002a5d20 0000000000000244 t check_clear_tex_image
00000000002a5f70 0000000000000130 t compressed_texture_sub_image
00000000002a60a0 00000000000001bc t texture_sub_image
00000000002a6260 00000000000001b0 t texturesubimage_no_error.constprop.0
00000000002a6410 00000000000001f4 t copy_texture_sub_image
00000000002a6610 00000000000001b0 t legal_texsubimage_target
00000000002a67c0 0000000000000210 t legal_teximage_target
00000000002a69d0 000000000000002c t _mesa_delete_texture_image
00000000002a6a00 0000000000000038 t _mesa_is_proxy_texture
00000000002a6a40 000000000000003c t _mesa_is_array_texture
00000000002a6a80 0000000000000018 t _mesa_is_cube_map_texture
00000000002a6aa0 0000000000000028 t _mesa_select_tex_image
00000000002a6ad0 00000000000000a0 t _mesa_get_tex_image
00000000002a6b70 000000000000029c t egl_image_target_texture
00000000002a6e10 0000000000000064 t egl_image_target_texture_storage
00000000002a6e80 00000000000002b0 t _mesa_max_texture_levels
00000000002a7130 00000000000007b4 t compressed_tex_sub_image
00000000002a78f0 000000000000014c t _mesa_get_texture_dimensions
00000000002a7a40 0000000000000088 t _mesa_tex_target_is_layered
00000000002a7ad0 0000000000000090 t _mesa_get_texture_layers
00000000002a7b60 00000000000000e4 t _mesa_get_tex_max_num_levels
00000000002a7c50 0000000000000274 t _mesa_init_teximage_fields_ms
00000000002a7ed0 0000000000000028 t _mesa_init_teximage_fields
00000000002a7f00 0000000000000050 t _mesa_clear_texture_image
00000000002a7f50 000000000000044c t _mesa_legal_texture_dimensions
00000000002a83a0 00000000000006d8 t texture_image_multisample
00000000002a8a80 000000000000011c t _mesa_test_proxy_teximage
00000000002a8ba0 0000000000000074 t _mesa_format_no_online_compression
00000000002a8c20 00000000000003d0 t texsubimage_error_check
00000000002a8ff0 0000000000000170 t texsubimage_err
00000000002a9160 00000000000002a8 t texturesubimage_error
00000000002a9410 00000000000003cc t copy_texture_sub_image_err
00000000002a97e0 000000000000020c t _mesa_target_can_be_compressed
00000000002a99f0 0000000000000230 t compressed_texture_error_check
00000000002a9c20 000000000000063c t copytexture_error_check
00000000002aa260 0000000000000178 t _mesa_legal_texture_base_format_for_target
00000000002aa3e0 00000000000004f0 t texture_error_check
00000000002aa8d0 000000000000003c t _mesa_update_fbo_texture
00000000002aa910 0000000000000074 t _mesa_choose_texture_format
00000000002aa990 00000000000006b8 t teximage_err
00000000002ab050 0000000000000474 t teximage_no_error
00000000002ab4d0 000000000000059c t copyteximage_err
00000000002aba70 00000000000004bc t copyteximage_no_error
00000000002abf30 0000000000000064 T _mesa_TexImage1D
00000000002abfa0 0000000000000568 T _mesa_TextureImage1DEXT
00000000002ac510 0000000000000568 T _mesa_MultiTexImage1DEXT
00000000002aca80 000000000000006c t _mesa_TexImage2D
00000000002acaf0 00000000000005d0 T _mesa_TextureImage2DEXT
00000000002ad0c0 00000000000005d0 T _mesa_MultiTexImage2DEXT
00000000002ad690 000000000000006c T _mesa_TexImage3D
00000000002ad700 00000000000005c8 T _mesa_TextureImage3DEXT
00000000002adcd0 00000000000005c8 T _mesa_MultiTexImage3DEXT
00000000002ae2a0 0000000000000064 T _mesa_TexImage1D_no_error
00000000002ae310 000000000000006c T _mesa_TexImage2D_no_error
00000000002ae380 000000000000006c T _mesa_TexImage3D_no_error
00000000002ae3f0 0000000000000090 T _mesa_EGLImageTargetTexture2DOES
00000000002ae480 0000000000000094 T _mesa_EGLImageTargetTexStorageEXT
00000000002ae520 00000000000000e4 T _mesa_EGLImageTargetTextureStorageEXT
00000000002ae610 00000000000000d0 T _mesa_TexSubImage1D_no_error
00000000002ae6e0 000000000000006c T _mesa_TexSubImage1D
00000000002ae750 00000000000000e4 T _mesa_TexSubImage2D_no_error
00000000002ae840 0000000000000070 T _mesa_TexSubImage2D
00000000002ae8b0 00000000000000e8 T _mesa_TexSubImage3D_no_error
00000000002ae9a0 0000000000000074 T _mesa_TexSubImage3D
00000000002aea20 0000000000000064 T _mesa_TextureSubImage1D_no_error
00000000002aea90 0000000000000074 T _mesa_TextureSubImage1DEXT
00000000002aeb10 00000000000000e4 T _mesa_MultiTexSubImage1DEXT
00000000002aec00 0000000000000074 T _mesa_TextureSubImage1D
00000000002aec80 0000000000000068 T _mesa_TextureSubImage2D_no_error
00000000002aecf0 0000000000000080 T _mesa_TextureSubImage2DEXT
00000000002aed70 00000000000000f4 T _mesa_MultiTexSubImage2DEXT
00000000002aee70 0000000000000078 T _mesa_TextureSubImage2D
00000000002aeef0 000000000000006c T _mesa_TextureSubImage3D_no_error
00000000002aef60 0000000000000084 T _mesa_TextureSubImage3DEXT
00000000002aeff0 00000000000000f8 T _mesa_MultiTexSubImage3DEXT
00000000002af0f0 000000000000007c T _mesa_TextureSubImage3D
00000000002af170 0000000000000058 T _mesa_CopyTexImage1D
00000000002af1d0 0000000000000584 T _mesa_CopyTextureImage1DEXT
00000000002af760 0000000000000584 T _mesa_CopyMultiTexImage1DEXT
00000000002afcf0 0000000000000054 T _mesa_CopyTexImage2D
00000000002afd50 00000000000005ac T _mesa_CopyTextureImage2DEXT
00000000002b0300 00000000000005ac T _mesa_CopyMultiTexImage2DEXT
00000000002b08b0 0000000000000058 T _mesa_CopyTexImage1D_no_error
00000000002b0910 0000000000000054 T _mesa_CopyTexImage2D_no_error
00000000002b0970 00000000000000ec T _mesa_CopyTexSubImage1D
00000000002b0a60 0000000000000150 T _mesa_CopyTexSubImage2D
00000000002b0bb0 0000000000000120 T _mesa_CopyTexSubImage3D
00000000002b0cd0 0000000000000108 T _mesa_CopyTextureSubImage1D
00000000002b0de0 0000000000000110 T _mesa_CopyTextureSubImage1DEXT
00000000002b0ef0 00000000000000bc T _mesa_CopyMultiTexSubImage1DEXT
00000000002b0fb0 0000000000000128 T _mesa_CopyTextureSubImage2D
00000000002b10e0 0000000000000130 T _mesa_CopyTextureSubImage2DEXT
00000000002b1210 00000000000000c4 T _mesa_CopyMultiTexSubImage2DEXT
00000000002b12e0 0000000000000180 T _mesa_CopyTextureSubImage3D
00000000002b1460 0000000000000188 T _mesa_CopyTextureSubImage3DEXT
00000000002b15f0 0000000000000118 T _mesa_CopyMultiTexSubImage3DEXT
00000000002b1710 00000000000000fc T _mesa_CopyTexSubImage1D_no_error
00000000002b1810 0000000000000100 T _mesa_CopyTexSubImage2D_no_error
00000000002b1910 0000000000000104 T _mesa_CopyTexSubImage3D_no_error
00000000002b1a20 0000000000000104 T _mesa_CopyTextureSubImage1D_no_error
00000000002b1b30 0000000000000114 T _mesa_CopyTextureSubImage2D_no_error
00000000002b1c50 00000000000001e4 T _mesa_CopyTextureSubImage3D_no_error
00000000002b1e40 00000000000002f4 T _mesa_ClearTexSubImage
00000000002b2140 00000000000001b8 T _mesa_ClearTexImage
00000000002b2300 0000000000000064 T _mesa_CompressedTexImage1D
00000000002b2370 00000000000004c8 T _mesa_CompressedTextureImage1DEXT
00000000002b2840 00000000000004c8 T _mesa_CompressedMultiTexImage1DEXT
00000000002b2d10 0000000000000068 T _mesa_CompressedTexImage2D
00000000002b2d80 0000000000000570 T _mesa_CompressedTextureImage2DEXT
00000000002b32f0 0000000000000570 T _mesa_CompressedMultiTexImage2DEXT
00000000002b3860 0000000000000068 T _mesa_CompressedTexImage3D
00000000002b38d0 0000000000000534 T _mesa_CompressedTextureImage3DEXT
00000000002b3e10 0000000000000534 T _mesa_CompressedMultiTexImage3DEXT
00000000002b4350 0000000000000064 T _mesa_CompressedTexImage1D_no_error
00000000002b43c0 0000000000000068 T _mesa_CompressedTexImage2D_no_error
00000000002b4430 0000000000000068 T _mesa_CompressedTexImage3D_no_error
00000000002b44a0 0000000000000064 T _mesa_CompressedTexSubImage1D_no_error
00000000002b4510 0000000000000064 T _mesa_CompressedTexSubImage1D
00000000002b4580 0000000000000068 T _mesa_CompressedTextureSubImage1D_no_error
00000000002b45f0 0000000000000068 T _mesa_CompressedTextureSubImage1D
00000000002b4660 0000000000000064 T _mesa_CompressedTextureSubImage1DEXT
00000000002b46d0 0000000000000068 T _mesa_CompressedMultiTexSubImage1DEXT
00000000002b4740 0000000000000068 T _mesa_CompressedTexSubImage2D_no_error
00000000002b47b0 0000000000000068 T _mesa_CompressedTexSubImage2D
00000000002b4820 000000000000006c T _mesa_CompressedTextureSubImage2DEXT
00000000002b4890 0000000000000070 T _mesa_CompressedMultiTexSubImage2DEXT
00000000002b4900 000000000000006c T _mesa_CompressedTextureSubImage2D_no_error
00000000002b4970 000000000000006c T _mesa_CompressedTextureSubImage2D
00000000002b49e0 000000000000006c T _mesa_CompressedTexSubImage3D_no_error
00000000002b4a50 0000000000000070 T _mesa_CompressedTexSubImage3D
00000000002b4ac0 0000000000000070 T _mesa_CompressedTextureSubImage3D_no_error
00000000002b4b30 0000000000000070 T _mesa_CompressedTextureSubImage3D
00000000002b4ba0 0000000000000070 T _mesa_CompressedTextureSubImage3DEXT
00000000002b4c10 0000000000000074 T _mesa_CompressedMultiTexSubImage3DEXT
00000000002b4c90 00000000000005dc t _mesa_get_texbuffer_format
00000000002b5270 00000000000000b8 t _mesa_validate_texbuffer_format
00000000002b5330 0000000000000230 t texture_buffer_range
00000000002b5560 000000000000010c T _mesa_TexBuffer
00000000002b5670 0000000000000100 T _mesa_TexBufferRange
00000000002b5770 0000000000000134 T _mesa_TextureBufferRangeEXT
00000000002b58b0 0000000000000110 T _mesa_TextureBuffer
00000000002b59c0 000000000000010c T _mesa_TextureBufferEXT
00000000002b5ad0 000000000000010c T _mesa_MultiTexBufferEXT
00000000002b5be0 0000000000000120 T _mesa_TextureBufferRange
00000000002b5d00 0000000000000044 t _mesa_is_renderable_texture_format
00000000002b5d50 00000000000000b4 T _mesa_TexImage2DMultisample
00000000002b5e10 00000000000000b4 T _mesa_TexImage3DMultisample
00000000002b5ed0 0000000000000110 T _mesa_TexStorage2DMultisample
00000000002b5fe0 0000000000000118 T _mesa_TexStorage3DMultisample
00000000002b6100 0000000000000110 T _mesa_TextureStorage2DMultisample
00000000002b6210 0000000000000114 T _mesa_TextureStorage3DMultisample
00000000002b6330 0000000000000108 T _mesa_TextureStorage2DMultisampleEXT
00000000002b6440 00000000000000fc T _mesa_TextureStorage3DMultisampleEXT
00000000002b6540 0000000000000044 t _mesa_texture_storage_ms_memory
00000000002b6590 0000000000000114 t finish_texture_init
00000000002b66b0 00000000000000e4 t invalidate_tex_image_error_check
00000000002b67a0 00000000000000b0 t unbind_texobj_from_fbo
00000000002b6850 0000000000000108 t create_textures.part.0
00000000002b6960 000000000000000c t _mesa_lookup_texture
00000000002b6970 0000000000000054 t _mesa_lookup_texture_err
00000000002b69d0 000000000000000c t _mesa_lookup_texture_locked
00000000002b69e0 0000000000000440 t _mesa_get_current_tex_object
00000000002b6e20 00000000000000b0 t _mesa_delete_texture_object
00000000002b6ed0 00000000000000b4 t _mesa_copy_texture_object
00000000002b6f90 000000000000008c t _mesa_clear_texture_object
00000000002b7020 00000000000000bc t _mesa_reference_texobj_
00000000002b70e0 000000000000011c t unbind_texobj_from_texunits
00000000002b7200 0000000000000198 t delete_textures
00000000002b73a0 00000000000001a8 t bind_texture_object
00000000002b7550 00000000000000f0 t unbind_textures_from_unit
00000000002b7640 00000000000003a8 t _mesa_test_texobj_completeness
00000000002b79f0 0000000000000090 t _mesa_cube_level_complete
00000000002b7a80 000000000000009c t _mesa_cube_complete
00000000002b7b20 0000000000000018 t _mesa_dirty_texobj
00000000002b7b40 00000000000001f4 t _mesa_get_fallback_texture
00000000002b7d40 0000000000000020 t _mesa_texture_base_format
00000000002b7d60 000000000000003c T _mesa_GenTextures_no_error
00000000002b7da0 0000000000000060 T _mesa_GenTextures
00000000002b7e00 0000000000000040 T _mesa_CreateTextures_no_error
00000000002b7e40 000000000000002c T _mesa_DeleteTextures_no_error
00000000002b7e70 0000000000000044 T _mesa_DeleteTextures
00000000002b7ec0 0000000000000308 t _mesa_tex_target_to_index
00000000002b81d0 00000000000000f4 t _mesa_get_texobj_by_target_and_texunit
00000000002b82d0 0000000000000144 t _mesa_initialize_texture_object
00000000002b8420 0000000000000058 t _mesa_new_texture_object
00000000002b8480 00000000000000a0 T _mesa_CreateTextures
00000000002b8520 0000000000000210 t _mesa_lookup_or_create_texture
00000000002b8730 0000000000000070 T _mesa_BindTexture_no_error
00000000002b87a0 0000000000000070 t _mesa_BindTexture
00000000002b8810 00000000000000b8 T _mesa_BindMultiTextureEXT
00000000002b88d0 0000000000000060 T _mesa_BindTextureUnit_no_error
00000000002b8930 00000000000000c8 T _mesa_BindTextureUnit
00000000002b8a00 0000000000000124 T _mesa_BindTextures_no_error
00000000002b8b30 0000000000000194 T _mesa_BindTextures
00000000002b8cd0 000000000000010c T _mesa_PrioritizeTextures
00000000002b8de0 00000000000000e4 T _mesa_AreTexturesResident
00000000002b8ed0 000000000000007c T _mesa_IsTexture
00000000002b8f50 0000000000000054 t _mesa_lock_context_textures
00000000002b8fb0 000000000000000c t _mesa_unlock_context_textures
00000000002b8fc0 0000000000000004 T _mesa_InvalidateTexSubImage_no_error
00000000002b8fd0 00000000000002a8 T _mesa_InvalidateTexSubImage
00000000002b9280 0000000000000004 T _mesa_InvalidateTexImage_no_error
00000000002b9290 0000000000000034 T _mesa_InvalidateTexImage
00000000002b92d0 00000000000000e8 t tex_combine_translate_mode
00000000002b93c0 0000000000000218 t update_single_program_texture
00000000002b95e0 00000000000002dc t _mesa_copy_texture_state
00000000002b98c0 00000000000000a0 t _mesa_ActiveTexture_no_error
00000000002b9960 00000000000000f0 t _mesa_ActiveTexture
00000000002b9a50 0000000000000078 t _mesa_ClientActiveTexture
00000000002b9ad0 00000000000000cc t _mesa_update_texture_matrices
00000000002b9ba0 0000000000000fec t _mesa_update_texture_state
00000000002bab90 000000000000020c t _mesa_init_texture
00000000002bada0 00000000000000f4 t _mesa_free_texture_data
00000000002baea0 0000000000000088 t _mesa_update_default_objects_texture
00000000002baf30 000000000000027c t tex_storage_error_check
00000000002bb1b0 0000000000000164 t initialize_texture_fields
00000000002bb320 0000000000000088 t update_fbo_texture
00000000002bb3b0 00000000000001d0 t legal_texobj_target
00000000002bb580 00000000000000f4 t clear_texture_fields
00000000002bb680 0000000000000178 t texture_storage_no_error.isra.0
00000000002bb800 00000000000002c0 t texture_storage_error.isra.0
00000000002bbac0 00000000000000ec t _mesa_is_legal_tex_storage_format
00000000002bbbb0 0000000000000148 t texstorage_error
00000000002bbd00 0000000000000138 t texturestorage_error
00000000002bbe40 0000000000000070 T _mesa_TexStorage1D_no_error
00000000002bbeb0 0000000000000028 T _mesa_TexStorage1D
00000000002bbee0 000000000000007c T _mesa_TexStorage2D_no_error
00000000002bbf60 0000000000000028 T _mesa_TexStorage2D
00000000002bbf90 000000000000007c T _mesa_TexStorage3D_no_error
00000000002bc010 0000000000000028 T _mesa_TexStorage3D
00000000002bc040 0000000000000070 T _mesa_TextureStorage1D_no_error
00000000002bc0b0 0000000000000028 T _mesa_TextureStorage1D
00000000002bc0e0 0000000000000078 T _mesa_TextureStorage2D_no_error
00000000002bc160 0000000000000028 T _mesa_TextureStorage2D
00000000002bc190 000000000000007c T _mesa_TextureStorage3D_no_error
00000000002bc210 0000000000000028 T _mesa_TextureStorage3D
00000000002bc240 000000000000009c T _mesa_TextureStorage1DEXT
00000000002bc2e0 00000000000000a0 T _mesa_TextureStorage2DEXT
00000000002bc380 00000000000000a4 T _mesa_TextureStorage3DEXT
00000000002bc430 0000000000000338 t _mesa_texture_storage_memory
00000000002bc770 0000000000000120 t _mesa_texstore_z32
00000000002bc890 0000000000000188 t _mesa_texstore_z24_x8
00000000002bca20 0000000000000118 t _mesa_texstore_x8_z24
00000000002bcb40 0000000000000118 t _mesa_texstore_z16
00000000002bcc60 00000000000001ac t _mesa_texstore_z32f_x24s8
00000000002bce10 0000000000000168 t _mesa_texstore_s8
00000000002bcf80 00000000000002f0 t _mesa_texstore_s8_z24
00000000002bd270 00000000000002e8 t _mesa_texstore_z24_s8
00000000002bd560 00000000000001a0 t _mesa_memcpy_texture
00000000002bd700 00000000000000ac t _mesa_texstore_needs_transfer_ops
00000000002bd7b0 0000000000000114 t _mesa_texstore_can_use_memcpy
00000000002bd8d0 0000000000000814 t _mesa_texstore
00000000002be0f0 00000000000003ac t store_texsubimage
00000000002be4a0 0000000000000044 t _mesa_store_texsubimage
00000000002be4f0 0000000000000170 t _mesa_compute_compressed_pixelstore
00000000002be660 0000000000000258 t _mesa_store_compressed_texsubimage
00000000002be8c0 00000000000000e4 t make_texture_handle_resident
00000000002be9b0 00000000000000b0 t is_sampler_border_color_valid
00000000002bea60 00000000000002f8 t get_texture_handle
00000000002bed60 00000000000002ac t get_image_handle
00000000002bf010 0000000000000034 t _mesa_init_resident_handles
00000000002bf050 0000000000000030 t _mesa_free_resident_handles
00000000002bf080 000000000000003c t _mesa_init_shared_handles
00000000002bf0c0 0000000000000040 t _mesa_free_shared_handles
00000000002bf100 000000000000001c t _mesa_init_texture_handles
00000000002bf120 0000000000000134 t _mesa_make_texture_handles_non_resident
00000000002bf260 00000000000001c0 t _mesa_delete_texture_handles
00000000002bf420 000000000000000c t _mesa_init_sampler_handles
00000000002bf430 000000000000011c t _mesa_delete_sampler_handles
00000000002bf550 0000000000000118 T _mesa_GetTextureHandleARB_no_error
00000000002bf670 0000000000000270 T _mesa_GetTextureHandleARB
00000000002bf8e0 0000000000000144 T _mesa_GetTextureSamplerHandleARB_no_error
00000000002bfa30 00000000000002bc T _mesa_GetTextureSamplerHandleARB
00000000002bfcf0 0000000000000064 T _mesa_MakeTextureHandleResidentARB_no_error
00000000002bfd60 00000000000000f8 T _mesa_MakeTextureHandleResidentARB
00000000002bfe60 0000000000000064 T _mesa_MakeTextureHandleNonResidentARB_no_error
00000000002bfed0 00000000000000f8 T _mesa_MakeTextureHandleNonResidentARB
00000000002bffd0 000000000000013c T _mesa_GetImageHandleARB_no_error
00000000002c0110 0000000000000424 T _mesa_GetImageHandleARB
00000000002c0540 00000000000000b4 T _mesa_MakeImageHandleResidentARB_no_error
00000000002c0600 000000000000019c T _mesa_MakeImageHandleResidentARB
00000000002c07a0 00000000000000a4 T _mesa_MakeImageHandleNonResidentARB_no_error
00000000002c0850 0000000000000168 T _mesa_MakeImageHandleNonResidentARB
00000000002c09c0 0000000000000038 T _mesa_IsTextureHandleResidentARB_no_error
00000000002c0a00 00000000000000e4 T _mesa_IsTextureHandleResidentARB
00000000002c0af0 0000000000000038 T _mesa_IsImageHandleResidentARB_no_error
00000000002c0b30 00000000000000f4 T _mesa_IsImageHandleResidentARB
00000000002c0c30 0000000000000170 t initialize_texture_fields
00000000002c0da0 000000000000018c t _mesa_texture_view_lookup_view_class
00000000002c0f30 0000000000000048 t _mesa_texture_view_compatible_format
00000000002c0f80 00000000000000ec t _mesa_set_texture_view_state
00000000002c1070 0000000000000248 T _mesa_TextureView_no_error
00000000002c12c0 0000000000000700 T _mesa_TextureView
00000000002c19c0 00000000000000a8 t reference_transform_feedback_object
00000000002c1a70 0000000000000014 t delete_cb
00000000002c1a90 000000000000004c t compute_transform_feedback_buffer_sizes
00000000002c1ae0 0000000000000060 t _mesa_delete_transform_feedback_object
00000000002c1b40 0000000000000094 t end_transform_feedback
00000000002c1be0 000000000000015c t create_transform_feedbacks
00000000002c1d40 0000000000000028 t active_xfb_object_references_program
00000000002c1d70 0000000000000070 t _mesa_transform_feedback_is_using_program
00000000002c1de0 0000000000000070 t _mesa_init_transform_feedback
00000000002c1e50 000000000000006c t _mesa_free_transform_feedback
00000000002c1ec0 0000000000000010 t _mesa_init_transform_feedback_object
00000000002c1ed0 000000000000019c T _mesa_BeginTransformFeedback_no_error
00000000002c2070 0000000000000288 T _mesa_BeginTransformFeedback
00000000002c2300 0000000000000028 T _mesa_EndTransformFeedback_no_error
00000000002c2330 0000000000000044 T _mesa_EndTransformFeedback
00000000002c2380 0000000000000130 t _mesa_validate_buffer_range_xfb
00000000002c24b0 0000000000000134 t _mesa_bind_buffer_base_transform_feedback
00000000002c25f0 00000000000000f0 T _mesa_TransformFeedbackBufferBase
00000000002c26e0 0000000000000194 T _mesa_TransformFeedbackBufferRange
00000000002c2880 0000000000000140 T _mesa_BindBufferOffsetEXT_no_error
00000000002c29c0 0000000000000264 T _mesa_BindBufferOffsetEXT
00000000002c2c30 0000000000000108 T _mesa_TransformFeedbackVaryings_no_error
00000000002c2d40 000000000000030c T _mesa_TransformFeedbackVaryings
00000000002c3050 0000000000000134 T _mesa_GetTransformFeedbackVarying
00000000002c3190 0000000000000018 t _mesa_lookup_transform_feedback_object
00000000002c31b0 0000000000000030 T _mesa_GenTransformFeedbacks
00000000002c31e0 0000000000000030 T _mesa_CreateTransformFeedbacks
00000000002c3210 000000000000006c T _mesa_IsTransformFeedback
00000000002c3280 00000000000000a8 T _mesa_BindTransformFeedback_no_error
00000000002c3330 00000000000000c8 T _mesa_BindTransformFeedback
00000000002c3400 0000000000000114 T _mesa_DeleteTransformFeedbacks
00000000002c3520 0000000000000078 T _mesa_PauseTransformFeedback_no_error
00000000002c35a0 00000000000000a4 T _mesa_PauseTransformFeedback
00000000002c3650 0000000000000074 T _mesa_ResumeTransformFeedback_no_error
00000000002c36d0 00000000000000d8 T _mesa_ResumeTransformFeedback
00000000002c37b0 00000000000000c4 T _mesa_GetTransformFeedbackiv
00000000002c3880 00000000000000e8 T _mesa_GetTransformFeedbacki_v
00000000002c3970 0000000000000150 T _mesa_GetTransformFeedbacki64_v
00000000002c3ac0 00000000000000e0 t glsl_type_name(glsl_base_type)
00000000002c3ba0 0000000000000124 t validate_uniform_parameters(int, int, unsigned int*, gl_context*, gl_shader_program*, char const*)
00000000002c3cd0 0000000000000170 t copy_uniform_matrix_to_storage(gl_constant_value*, int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, glsl_base_type) [clone .isra.0]
00000000002c3e40 0000000000000134 t copy_uniforms_to_storage(gl_constant_value*, gl_uniform_storage*, gl_context*, int, void const*, int, unsigned int, unsigned int, glsl_base_type) [clone .isra.0]
00000000002c3f80 0000000000000268 t log_uniform(void const*, glsl_base_type, unsigned int, unsigned int, unsigned int, bool, gl_shader_program const*, int, gl_uniform_storage const*) [clone .isra.0]
00000000002c41f0 000000000000016c T _mesa_GetActiveUniform
00000000002c4360 00000000000001cc T _mesa_GetActiveUniformsiv
00000000002c4530 000000000000074c t _mesa_get_uniform
00000000002c4c80 000000000000037c t _mesa_propagate_uniforms_to_driver_storage
00000000002c5000 00000000000000e4 t _mesa_flush_vertices_for_uniforms
00000000002c50f0 0000000000000730 t _mesa_uniform
00000000002c5820 0000000000000300 t _mesa_uniform_matrix
00000000002c5b20 0000000000000340 t _mesa_uniform_handle
00000000002c5e60 000000000000004c t _mesa_sampler_uniforms_are_valid
00000000002c5eb0 00000000000000f4 t _mesa_sampler_uniforms_pipeline_are_valid
00000000002c5fb0 0000000000000234 t mesa_bufferiv
00000000002c61f0 0000000000000288 t _mesa_update_shader_textures_used
00000000002c6480 0000000000000078 t _mesa_uniform_attach_driver_storage
00000000002c6500 000000000000002c t _mesa_uniform_detach_all_driver_storage
00000000002c6530 000000000000004c T _mesa_Uniform1f
00000000002c6580 000000000000004c T _mesa_Uniform2f
00000000002c65d0 0000000000000050 T _mesa_Uniform3f
00000000002c6620 0000000000000050 T _mesa_Uniform4f
00000000002c6670 000000000000004c T _mesa_Uniform1i
00000000002c66c0 000000000000004c T _mesa_Uniform2i
00000000002c6710 0000000000000054 T _mesa_Uniform3i
00000000002c6770 0000000000000054 T _mesa_Uniform4i
00000000002c67d0 000000000000003c T _mesa_Uniform1fv
00000000002c6810 000000000000003c T _mesa_Uniform2fv
00000000002c6850 000000000000003c T _mesa_Uniform3fv
00000000002c6890 000000000000003c T _mesa_Uniform4fv
00000000002c68d0 000000000000003c T _mesa_Uniform1iv
00000000002c6910 000000000000003c T _mesa_Uniform2iv
00000000002c6950 000000000000003c T _mesa_Uniform3iv
00000000002c6990 000000000000003c T _mesa_Uniform4iv
00000000002c69d0 0000000000000044 T _mesa_UniformHandleui64ARB
00000000002c6a20 0000000000000034 T _mesa_UniformHandleui64vARB
00000000002c6a60 000000000000006c T _mesa_ProgramUniform1f
00000000002c6ad0 000000000000006c T _mesa_ProgramUniform2f
00000000002c6b40 0000000000000070 T _mesa_ProgramUniform3f
00000000002c6bb0 0000000000000070 T _mesa_ProgramUniform4f
00000000002c6c20 000000000000006c T _mesa_ProgramUniform1i
00000000002c6c90 0000000000000068 T _mesa_ProgramUniform2i
00000000002c6d00 000000000000006c T _mesa_ProgramUniform3i
00000000002c6d70 000000000000006c T _mesa_ProgramUniform4i
00000000002c6de0 0000000000000074 T _mesa_ProgramUniform1fv
00000000002c6e60 0000000000000074 T _mesa_ProgramUniform2fv
00000000002c6ee0 0000000000000074 T _mesa_ProgramUniform3fv
00000000002c6f60 0000000000000074 T _mesa_ProgramUniform4fv
00000000002c6fe0 0000000000000074 T _mesa_ProgramUniform1iv
00000000002c7060 0000000000000074 T _mesa_ProgramUniform2iv
00000000002c70e0 0000000000000074 T _mesa_ProgramUniform3iv
00000000002c7160 0000000000000074 T _mesa_ProgramUniform4iv
00000000002c71e0 0000000000000064 T _mesa_ProgramUniformHandleui64ARB
00000000002c7250 000000000000006c T _mesa_ProgramUniformHandleui64vARB
00000000002c72c0 000000000000004c T _mesa_Uniform1ui
00000000002c7310 000000000000004c T _mesa_Uniform2ui
00000000002c7360 0000000000000054 T _mesa_Uniform3ui
00000000002c73c0 0000000000000054 T _mesa_Uniform4ui
00000000002c7420 000000000000003c T _mesa_Uniform1uiv
00000000002c7460 000000000000003c T _mesa_Uniform2uiv
00000000002c74a0 000000000000003c T _mesa_Uniform3uiv
00000000002c74e0 000000000000003c T _mesa_Uniform4uiv
00000000002c7520 000000000000004c T _mesa_UniformMatrix2fv
00000000002c7570 0000000000000050 T _mesa_UniformMatrix3fv
00000000002c75c0 0000000000000050 T _mesa_UniformMatrix4fv
00000000002c7610 000000000000006c T _mesa_ProgramUniform1ui
00000000002c7680 0000000000000068 T _mesa_ProgramUniform2ui
00000000002c76f0 000000000000006c T _mesa_ProgramUniform3ui
00000000002c7760 000000000000006c T _mesa_ProgramUniform4ui
00000000002c77d0 0000000000000074 T _mesa_ProgramUniform1uiv
00000000002c7850 0000000000000074 T _mesa_ProgramUniform2uiv
00000000002c78d0 0000000000000074 T _mesa_ProgramUniform3uiv
00000000002c7950 0000000000000074 T _mesa_ProgramUniform4uiv
00000000002c79d0 0000000000000088 T _mesa_ProgramUniformMatrix2fv
00000000002c7a60 000000000000008c T _mesa_ProgramUniformMatrix3fv
00000000002c7af0 000000000000008c T _mesa_ProgramUniformMatrix4fv
00000000002c7b80 000000000000004c T _mesa_UniformMatrix2x3fv
00000000002c7bd0 000000000000004c T _mesa_UniformMatrix3x2fv
00000000002c7c20 000000000000004c T _mesa_UniformMatrix2x4fv
00000000002c7c70 000000000000004c T _mesa_UniformMatrix4x2fv
00000000002c7cc0 0000000000000050 T _mesa_UniformMatrix3x4fv
00000000002c7d10 0000000000000050 T _mesa_UniformMatrix4x3fv
00000000002c7d60 0000000000000088 T _mesa_ProgramUniformMatrix2x3fv
00000000002c7df0 0000000000000088 T _mesa_ProgramUniformMatrix3x2fv
00000000002c7e80 0000000000000088 T _mesa_ProgramUniformMatrix2x4fv
00000000002c7f10 0000000000000088 T _mesa_ProgramUniformMatrix4x2fv
00000000002c7fa0 000000000000008c T _mesa_ProgramUniformMatrix3x4fv
00000000002c8030 000000000000008c T _mesa_ProgramUniformMatrix4x3fv
00000000002c80c0 0000000000000038 T _mesa_GetnUniformfvARB
00000000002c8100 0000000000000038 T _mesa_GetUniformfv
00000000002c8140 0000000000000038 T _mesa_GetnUniformivARB
00000000002c8180 0000000000000038 T _mesa_GetUniformiv
00000000002c81c0 0000000000000038 T _mesa_GetnUniformuivARB
00000000002c8200 0000000000000038 T _mesa_GetUniformuiv
00000000002c8240 0000000000000038 T _mesa_GetnUniformdvARB
00000000002c8280 0000000000000038 T _mesa_GetUniformdv
00000000002c82c0 0000000000000038 T _mesa_GetnUniformi64vARB
00000000002c8300 0000000000000038 T _mesa_GetUniformi64vARB
00000000002c8340 0000000000000038 T _mesa_GetnUniformui64vARB
00000000002c8380 0000000000000038 T _mesa_GetUniformui64vARB
00000000002c83c0 0000000000000088 T _mesa_GetUniformLocation
00000000002c8450 0000000000000038 T _mesa_GetUniformLocation_no_error
00000000002c8490 0000000000000088 T _mesa_GetUniformBlockIndex
00000000002c8520 00000000000000f8 T _mesa_GetUniformIndices
00000000002c8620 00000000000000b4 T _mesa_UniformBlockBinding_no_error
00000000002c86e0 0000000000000148 T _mesa_UniformBlockBinding
00000000002c8830 00000000000000b4 T _mesa_ShaderStorageBlockBinding_no_error
00000000002c88f0 0000000000000148 T _mesa_ShaderStorageBlockBinding
00000000002c8a40 00000000000000a0 T _mesa_GetActiveUniformBlockiv
00000000002c8ae0 00000000000000cc T _mesa_GetActiveUniformBlockName
00000000002c8bb0 00000000000000c4 T _mesa_GetActiveUniformName
00000000002c8c80 00000000000000a0 T _mesa_GetActiveAtomicCounterBufferiv
00000000002c8d20 000000000000004c T _mesa_Uniform1d
00000000002c8d70 000000000000004c T _mesa_Uniform2d
00000000002c8dc0 0000000000000050 T _mesa_Uniform3d
00000000002c8e10 0000000000000050 T _mesa_Uniform4d
00000000002c8e60 000000000000003c T _mesa_Uniform1dv
00000000002c8ea0 000000000000003c T _mesa_Uniform2dv
00000000002c8ee0 000000000000003c T _mesa_Uniform3dv
00000000002c8f20 000000000000003c T _mesa_Uniform4dv
00000000002c8f60 0000000000000050 T _mesa_UniformMatrix2dv
00000000002c8fb0 0000000000000050 T _mesa_UniformMatrix3dv
00000000002c9000 000000000000004c T _mesa_UniformMatrix4dv
00000000002c9050 0000000000000050 T _mesa_UniformMatrix2x3dv
00000000002c90a0 0000000000000050 T _mesa_UniformMatrix3x2dv
00000000002c90f0 000000000000004c T _mesa_UniformMatrix2x4dv
00000000002c9140 000000000000004c T _mesa_UniformMatrix4x2dv
00000000002c9190 000000000000004c T _mesa_UniformMatrix3x4dv
00000000002c91e0 000000000000004c T _mesa_UniformMatrix4x3dv
00000000002c9230 000000000000006c T _mesa_ProgramUniform1d
00000000002c92a0 000000000000006c T _mesa_ProgramUniform2d
00000000002c9310 0000000000000070 T _mesa_ProgramUniform3d
00000000002c9380 0000000000000070 T _mesa_ProgramUniform4d
00000000002c93f0 0000000000000074 T _mesa_ProgramUniform1dv
00000000002c9470 0000000000000074 T _mesa_ProgramUniform2dv
00000000002c94f0 0000000000000074 T _mesa_ProgramUniform3dv
00000000002c9570 0000000000000074 T _mesa_ProgramUniform4dv
00000000002c95f0 000000000000008c T _mesa_ProgramUniformMatrix2dv
00000000002c9680 000000000000008c T _mesa_ProgramUniformMatrix3dv
00000000002c9710 0000000000000088 T _mesa_ProgramUniformMatrix4dv
00000000002c97a0 000000000000008c T _mesa_ProgramUniformMatrix2x3dv
00000000002c9830 000000000000008c T _mesa_ProgramUniformMatrix3x2dv
00000000002c98c0 0000000000000088 T _mesa_ProgramUniformMatrix2x4dv
00000000002c9950 0000000000000088 T _mesa_ProgramUniformMatrix4x2dv
00000000002c99e0 0000000000000088 T _mesa_ProgramUniformMatrix3x4dv
00000000002c9a70 0000000000000088 T _mesa_ProgramUniformMatrix4x3dv
00000000002c9b00 000000000000004c T _mesa_Uniform1i64ARB
00000000002c9b50 000000000000004c T _mesa_Uniform2i64ARB
00000000002c9ba0 0000000000000054 T _mesa_Uniform3i64ARB
00000000002c9c00 0000000000000054 T _mesa_Uniform4i64ARB
00000000002c9c60 000000000000003c T _mesa_Uniform1i64vARB
00000000002c9ca0 000000000000003c T _mesa_Uniform2i64vARB
00000000002c9ce0 000000000000003c T _mesa_Uniform3i64vARB
00000000002c9d20 000000000000003c T _mesa_Uniform4i64vARB
00000000002c9d60 000000000000004c T _mesa_Uniform1ui64ARB
00000000002c9db0 000000000000004c T _mesa_Uniform2ui64ARB
00000000002c9e00 0000000000000054 T _mesa_Uniform3ui64ARB
00000000002c9e60 0000000000000054 T _mesa_Uniform4ui64ARB
00000000002c9ec0 000000000000003c T _mesa_Uniform1ui64vARB
00000000002c9f00 000000000000003c T _mesa_Uniform2ui64vARB
00000000002c9f40 000000000000003c T _mesa_Uniform3ui64vARB
00000000002c9f80 000000000000003c T _mesa_Uniform4ui64vARB
00000000002c9fc0 000000000000006c T _mesa_ProgramUniform1i64ARB
00000000002ca030 000000000000007c T _mesa_ProgramUniform2i64ARB
00000000002ca0b0 0000000000000088 T _mesa_ProgramUniform3i64ARB
00000000002ca140 0000000000000090 T _mesa_ProgramUniform4i64ARB
00000000002ca1d0 0000000000000074 T _mesa_ProgramUniform1i64vARB
00000000002ca250 0000000000000074 T _mesa_ProgramUniform2i64vARB
00000000002ca2d0 0000000000000074 T _mesa_ProgramUniform3i64vARB
00000000002ca350 0000000000000074 T _mesa_ProgramUniform4i64vARB
00000000002ca3d0 000000000000006c T _mesa_ProgramUniform1ui64ARB
00000000002ca440 000000000000007c T _mesa_ProgramUniform2ui64ARB
00000000002ca4c0 0000000000000088 T _mesa_ProgramUniform3ui64ARB
00000000002ca550 0000000000000090 T _mesa_ProgramUniform4ui64ARB
00000000002ca5e0 0000000000000074 T _mesa_ProgramUniform1ui64vARB
00000000002ca660 0000000000000074 T _mesa_ProgramUniform2ui64vARB
00000000002ca6e0 0000000000000074 T _mesa_ProgramUniform3ui64vARB
00000000002ca760 0000000000000074 T _mesa_ProgramUniform4ui64vARB
00000000002ca7e0 00000000000002ac t get_vertex_array_attrib
00000000002caa90 00000000000000c4 t _lookup_vao_and_vbo_dsa
00000000002cab60 00000000000000b0 t get_current_attrib
00000000002cac10 0000000000000008 t delete_arrayobj_cb
00000000002cac20 00000000000003bc t validate_array_format.isra.0
00000000002cafe0 00000000000001ac t validate_array_and_format.isra.0
00000000002cb190 00000000000000c8 t init_array.isra.0
00000000002cb260 00000000000000b8 t vertex_array_binding_divisor
00000000002cb320 00000000000000a0 t _mesa_vertex_attrib_binding
00000000002cb3c0 0000000000000078 t vertex_array_attrib_binding
00000000002cb440 0000000000000194 t _mesa_bind_vertex_buffer
00000000002cb5e0 00000000000001dc t vertex_array_vertex_buffer_err.part.0
00000000002cb7c0 0000000000000250 t vertex_array_vertex_buffers_err.part.0
00000000002cba10 00000000000001a8 t _mesa_set_vertex_format
00000000002cbbc0 00000000000000b0 t _mesa_update_array_format
00000000002cbc70 00000000000001d0 t vertex_attrib_format
00000000002cbe40 00000000000001e0 t vertex_array_attrib_format
00000000002cc020 0000000000000104 t update_array.isra.0
00000000002cc130 0000000000000140 T _mesa_VertexPointer_no_error
00000000002cc270 00000000000000e4 t _mesa_VertexPointer
00000000002cc360 000000000000012c T _mesa_VertexArrayVertexOffsetEXT
00000000002cc490 0000000000000138 T _mesa_NormalPointer_no_error
00000000002cc5d0 00000000000000e4 t _mesa_NormalPointer
00000000002cc6c0 0000000000000128 T _mesa_VertexArrayNormalOffsetEXT
00000000002cc7f0 0000000000000088 T _mesa_ColorPointer_no_error
00000000002cc880 0000000000000134 t _mesa_ColorPointer
00000000002cc9c0 0000000000000194 T _mesa_VertexArrayColorOffsetEXT
00000000002ccb60 0000000000000138 T _mesa_FogCoordPointer_no_error
00000000002ccca0 00000000000000c8 t _mesa_FogCoordPointer
00000000002ccd70 0000000000000108 T _mesa_VertexArrayFogCoordOffsetEXT
00000000002cce80 0000000000000138 T _mesa_IndexPointer_no_error
00000000002ccfc0 00000000000000c8 t _mesa_IndexPointer
00000000002cd090 0000000000000108 T _mesa_VertexArrayIndexOffsetEXT
00000000002cd1a0 0000000000000088 T _mesa_SecondaryColorPointer_no_error
00000000002cd230 0000000000000100 t _mesa_SecondaryColorPointer
00000000002cd330 0000000000000148 T _mesa_VertexArraySecondaryColorOffsetEXT
00000000002cd480 0000000000000060 T _mesa_TexCoordPointer_no_error
00000000002cd4e0 00000000000000ec t _mesa_TexCoordPointer
00000000002cd5d0 0000000000000148 T _mesa_VertexArrayTexCoordOffsetEXT
00000000002cd720 0000000000000178 T _mesa_VertexArrayMultiTexCoordOffsetEXT
00000000002cd8a0 0000000000000138 T _mesa_EdgeFlagPointer_no_error
00000000002cd9e0 00000000000000c8 t _mesa_EdgeFlagPointer
00000000002cdab0 00000000000000f8 T _mesa_VertexArrayEdgeFlagOffsetEXT
00000000002cdbb0 0000000000000140 T _mesa_PointSizePointerOES_no_error
00000000002cdcf0 00000000000000f0 T _mesa_PointSizePointerOES
00000000002cdde0 0000000000000088 T _mesa_VertexAttribPointer_no_error
00000000002cde70 0000000000000140 t _mesa_VertexAttribPointer
00000000002cdfb0 0000000000000178 T _mesa_VertexArrayVertexAttribOffsetEXT
00000000002ce130 0000000000000144 T _mesa_VertexArrayVertexAttribLOffsetEXT
00000000002ce280 0000000000000064 T _mesa_VertexAttribIPointer_no_error
00000000002ce2f0 0000000000000114 T _mesa_VertexAttribIPointer
00000000002ce410 0000000000000064 T _mesa_VertexAttribLPointer_no_error
00000000002ce480 0000000000000144 T _mesa_VertexArrayVertexAttribIOffsetEXT
00000000002ce5d0 0000000000000114 T _mesa_VertexAttribLPointer
00000000002ce6f0 000000000000004c t _mesa_enable_vertex_array_attribs
00000000002ce740 00000000000000ac T _mesa_EnableVertexAttribArray
00000000002ce7f0 000000000000007c T _mesa_EnableVertexAttribArray_no_error
00000000002ce870 00000000000000a0 T _mesa_EnableVertexArrayAttrib
00000000002ce910 00000000000000a0 T _mesa_EnableVertexArrayAttribEXT
00000000002ce9b0 000000000000008c T _mesa_EnableVertexArrayAttrib_no_error
00000000002cea40 000000000000004c t _mesa_disable_vertex_array_attribs
00000000002cea90 00000000000000a4 t _mesa_DisableVertexAttribArray
00000000002ceb40 000000000000007c T _mesa_DisableVertexAttribArray_no_error
00000000002cebc0 0000000000000098 T _mesa_DisableVertexArrayAttrib
00000000002cec60 0000000000000098 T _mesa_DisableVertexArrayAttribEXT
00000000002ced00 000000000000008c T _mesa_DisableVertexArrayAttrib_no_error
00000000002ced90 00000000000000a0 T _mesa_GetVertexAttribfv
00000000002cee30 0000000000000090 T _mesa_GetVertexAttribdv
00000000002ceec0 00000000000000a0 T _mesa_GetVertexAttribLdv
00000000002cef60 0000000000000088 T _mesa_GetVertexAttribiv
00000000002ceff0 00000000000000a0 T _mesa_GetVertexAttribLui64vARB
00000000002cf090 000000000000009c T _mesa_GetVertexAttribIiv
00000000002cf130 000000000000009c T _mesa_GetVertexAttribIuiv
00000000002cf1d0 0000000000000080 T _mesa_GetVertexAttribPointerv
00000000002cf250 0000000000000150 T _mesa_GetVertexArrayIndexediv
00000000002cf3a0 00000000000000d0 T _mesa_GetVertexArrayIndexed64iv
00000000002cf470 0000000000000008 T _mesa_VertexPointerEXT
00000000002cf480 0000000000000008 T _mesa_NormalPointerEXT
00000000002cf490 0000000000000008 T _mesa_ColorPointerEXT
00000000002cf4a0 0000000000000008 T _mesa_IndexPointerEXT
00000000002cf4b0 0000000000000008 T _mesa_TexCoordPointerEXT
00000000002cf4c0 00000000000000dc T _mesa_MultiTexCoordPointerEXT
00000000002cf5a0 0000000000000008 T _mesa_EdgeFlagPointerEXT
00000000002cf5b0 00000000000001f0 T _mesa_InterleavedArrays
00000000002cf7a0 0000000000000080 T _mesa_LockArraysEXT
00000000002cf820 000000000000004c T _mesa_UnlockArraysEXT
00000000002cf870 000000000000002c t _mesa_PrimitiveRestartIndex_no_error
00000000002cf8a0 000000000000005c T _mesa_PrimitiveRestartIndex
00000000002cf900 0000000000000084 T _mesa_VertexAttribDivisor_no_error
00000000002cf990 00000000000000cc T _mesa_VertexAttribDivisor
00000000002cfa60 0000000000000118 T _mesa_VertexArrayVertexAttribDivisorEXT
00000000002cfb80 00000000000000cc T _mesa_BindVertexBuffer_no_error
00000000002cfc50 00000000000000b0 T _mesa_BindVertexBuffer
00000000002cfd00 00000000000000f0 T _mesa_VertexArrayVertexBuffer_no_error
00000000002cfdf0 00000000000000d0 T _mesa_VertexArrayVertexBuffer
00000000002cfec0 00000000000000d0 T _mesa_VertexArrayBindVertexBufferEXT
00000000002cff90 000000000000018c T _mesa_BindVertexBuffers_no_error
00000000002d0120 000000000000009c T _mesa_BindVertexBuffers
00000000002d01c0 000000000000019c T _mesa_VertexArrayVertexBuffers_no_error
00000000002d0360 00000000000000e8 T _mesa_VertexArrayVertexBuffers
00000000002d0450 000000000000003c T _mesa_VertexAttribFormat
00000000002d0490 0000000000000040 T _mesa_VertexAttribIFormat
00000000002d04d0 0000000000000040 T _mesa_VertexAttribLFormat
00000000002d0510 0000000000000058 T _mesa_VertexArrayAttribFormat
00000000002d0570 0000000000000058 T _mesa_VertexArrayVertexAttribFormatEXT
00000000002d05d0 0000000000000058 T _mesa_VertexArrayAttribIFormat
00000000002d0630 0000000000000058 T _mesa_VertexArrayVertexAttribIFormatEXT
00000000002d0690 0000000000000058 T _mesa_VertexArrayAttribLFormat
00000000002d06f0 0000000000000058 T _mesa_VertexArrayVertexAttribLFormatEXT
00000000002d0750 0000000000000030 T _mesa_VertexAttribBinding_no_error
00000000002d0780 00000000000000f8 T _mesa_VertexAttribBinding
00000000002d0880 0000000000000054 T _mesa_VertexArrayAttribBinding_no_error
00000000002d08e0 0000000000000080 T _mesa_VertexArrayAttribBinding
00000000002d0960 0000000000000080 T _mesa_VertexArrayVertexAttribBindingEXT
00000000002d09e0 0000000000000078 T _mesa_VertexBindingDivisor_no_error
00000000002d0a60 0000000000000130 T _mesa_VertexBindingDivisor
00000000002d0b90 0000000000000084 T _mesa_VertexArrayBindingDivisor_no_error
00000000002d0c20 0000000000000080 T _mesa_VertexArrayBindingDivisor
00000000002d0ca0 0000000000000080 T _mesa_VertexArrayVertexBindingDivisorEXT
00000000002d0d20 0000000000000034 t _mesa_copy_vertex_attrib_array
00000000002d0d60 0000000000000044 t _mesa_copy_vertex_buffer_binding
00000000002d0db0 00000000000001e0 t _mesa_init_varray
00000000002d0f90 0000000000000034 t _mesa_free_varray_data
00000000002d0fd0 0000000000000454 T _mesa_GetVertexArrayIntegervEXT
00000000002d1430 00000000000000c4 T _mesa_GetVertexArrayPointervEXT
00000000002d1500 0000000000000184 T _mesa_GetVertexArrayIntegeri_vEXT
00000000002d1690 00000000000000f4 T _mesa_GetVertexArrayPointeri_vEXT
00000000002d1790 00000000000000b8 t create_version_string
00000000002d1850 00000000000002c8 t get_gl_override
00000000002d1b20 00000000000000b0 t _mesa_override_gl_version_contextless
00000000002d1bd0 00000000000000d0 t _mesa_override_gl_version
00000000002d1ca0 0000000000000078 t _mesa_override_glsl_version
00000000002d1d20 00000000000007cc t _mesa_get_version
00000000002d24f0 000000000000016c t _mesa_compute_version
00000000002d2660 0000000000000010 t _mesa_get_driver_uuid
00000000002d2670 0000000000000010 t _mesa_get_device_uuid
00000000002d2680 0000000000000990 t _mesa_get_shading_language_version
00000000002d3010 00000000000000e4 t clamp_viewport
00000000002d3100 00000000000000e0 t set_depth_range_no_notify
00000000002d31e0 0000000000000150 t viewport_array
00000000002d3330 000000000000013c t viewport
00000000002d3470 0000000000000034 T _mesa_Viewport_no_error
00000000002d34b0 0000000000000060 T _mesa_Viewport
00000000002d3510 00000000000001ac t _mesa_set_viewport
00000000002d36c0 0000000000000030 T _mesa_ViewportArrayv_no_error
00000000002d36f0 00000000000000b4 T _mesa_ViewportArrayv
00000000002d37b0 0000000000000024 T _mesa_ViewportIndexedf_no_error
00000000002d37e0 0000000000000090 T _mesa_ViewportIndexedf
00000000002d3870 0000000000000030 T _mesa_ViewportIndexedfv_no_error
00000000002d38a0 0000000000000094 T _mesa_ViewportIndexedfv
00000000002d3940 0000000000000104 t _mesa_set_depth_range
00000000002d3a50 0000000000000148 T _mesa_DepthRange
00000000002d3ba0 000000000000011c t _mesa_DepthRangef
00000000002d3cc0 0000000000000150 T _mesa_DepthRangeArrayv_no_error
00000000002d3e10 000000000000018c T _mesa_DepthRangeArrayv
00000000002d3fa0 000000000000017c T _mesa_DepthRangeArrayfvOES
00000000002d4120 0000000000000118 T _mesa_DepthRangeIndexed_no_error
00000000002d4240 0000000000000070 T _mesa_DepthRangeIndexed
00000000002d42b0 0000000000000078 T _mesa_DepthRangeIndexedfOES
00000000002d4330 0000000000000074 t _mesa_init_viewport
00000000002d43b0 0000000000000118 T _mesa_ClipControl_no_error
00000000002d44d0 0000000000000190 t _mesa_ClipControl
00000000002d4660 00000000000000a4 t _mesa_get_viewport_xform
00000000002d4710 0000000000000070 T _mesa_SubpixelPrecisionBiasNV_no_error
00000000002d4780 00000000000000d8 t _mesa_SubpixelPrecisionBiasNV
00000000002d4860 00000000000000dc T _mesa_ViewportSwizzleNV_no_error
00000000002d4940 00000000000001b8 T _mesa_ViewportSwizzleNV
00000000002d4b00 00000000000000c8 t matmul4
00000000002d4bd0 00000000000000c4 t matmul34
00000000002d4ca0 000000000000071c t invert_matrix_general
00000000002d53c0 0000000000000090 t invert_matrix_2d_no_rot
00000000002d5450 00000000000000ac t invert_matrix_3d_no_rot
00000000002d5500 0000000000000024 t invert_matrix_identity
00000000002d5530 0000000000000450 t invert_matrix_3d
00000000002d5980 0000000000000038 t _math_matrix_mul_matrix
00000000002d59c0 0000000000000020 t _math_matrix_mul_floats
00000000002d59e0 000000000000023c t _math_matrix_rotate
00000000002d5c20 000000000000009c t _math_matrix_frustum
00000000002d5cc0 00000000000000b4 t _math_matrix_ortho
00000000002d5d80 0000000000000064 t _math_matrix_scale
00000000002d5df0 000000000000003c t _math_matrix_translate
00000000002d5e30 000000000000003c t _math_matrix_set_identity
00000000002d5e70 0000000000000568 t _math_matrix_analyse
00000000002d63e0 0000000000000014 t _math_matrix_is_length_preserving
00000000002d6400 0000000000000010 t _math_matrix_is_dirty
00000000002d6410 000000000000003c t _math_matrix_copy
00000000002d6450 0000000000000020 t _math_matrix_loadf
00000000002d6470 000000000000007c t _math_matrix_ctr
00000000002d64f0 0000000000000034 t _math_matrix_dtr
00000000002d6530 0000000000000084 t _math_transposef
00000000002d65c0 000000000000005c t _math_transposefd
00000000002d6620 00000000000000ac t _mesa_transform_vector
00000000002d66d0 0000000000000010 t _vbo_install_exec_vtxfmt
00000000002d66e0 0000000000000018 t vbo_exec_update_eval_maps
00000000002d6700 00000000000001fc t _vbo_CreateContext
00000000002d6900 000000000000008c t _vbo_DestroyContext
00000000002d6990 0000000000000030 t _vbo_current_attrib
00000000002d69c0 0000000000000120 t vbo_exec_wrap_buffers
00000000002d6ae0 000000000000006c t vbo_exec_vtx_wrap
00000000002d6b50 00000000000001f8 t vbo_exec_End
00000000002d6d50 0000000000000264 t vbo_exec_copy_to_current
00000000002d6fc0 0000000000000518 t vbo_exec_wrap_upgrade_vertex
00000000002d74e0 00000000000000b0 t vbo_exec_fixup_vertex
00000000002d7590 00000000000001ac t vbo_exec_TexCoordP4uiv
00000000002d7740 0000000000000180 t vbo_exec_TexCoordP4ui
00000000002d78c0 0000000000000184 t vbo_exec_TexCoordP3uiv
00000000002d7a50 0000000000000164 t vbo_exec_TexCoordP3ui
00000000002d7bc0 0000000000000160 t vbo_exec_TexCoordP2uiv
00000000002d7d20 0000000000000148 t vbo_exec_TexCoordP2ui
00000000002d7e70 000000000000013c t vbo_exec_TexCoordP1uiv
00000000002d7fb0 0000000000000134 t vbo_exec_TexCoordP1ui
00000000002d80f0 0000000000000090 t vbo_exec_Indexfv
00000000002d8180 00000000000000a4 t vbo_exec_Indexf
00000000002d8230 0000000000000090 t vbo_exec_EdgeFlag
00000000002d82c0 0000000000000984 t vbo_exec_Materialfv
00000000002d8c50 0000000000000090 t vbo_exec_TexCoord4fv
00000000002d8ce0 0000000000000094 t vbo_exec_TexCoord4f
00000000002d8d80 0000000000000098 t vbo_exec_TexCoord3fv
00000000002d8e20 0000000000000094 t vbo_exec_TexCoord3f
00000000002d8ec0 0000000000000090 t vbo_exec_TexCoord2fv
00000000002d8f50 00000000000000a4 t vbo_exec_TexCoord2f
00000000002d9000 0000000000000090 t vbo_exec_TexCoord1fv
00000000002d9090 00000000000000a4 t vbo_exec_TexCoord1f
00000000002d9140 0000000000000098 t vbo_exec_SecondaryColor3fvEXT
00000000002d91e0 0000000000000094 t vbo_exec_SecondaryColor3fEXT
00000000002d9280 0000000000000098 t vbo_exec_Normal3fv
00000000002d9320 0000000000000094 t vbo_exec_Normal3f
00000000002d93c0 0000000000000090 t vbo_exec_FogCoordfvEXT
00000000002d9450 00000000000000a4 t vbo_exec_FogCoordfEXT
00000000002d9500 0000000000000090 t vbo_exec_Color4fv
00000000002d9590 0000000000000094 t vbo_exec_Color4f
00000000002d9630 0000000000000098 t vbo_exec_Color3fv
00000000002d96d0 0000000000000094 t vbo_exec_Color3f
00000000002d9770 00000000000001d0 t vbo_exec_MultiTexCoordP4uiv
00000000002d9940 0000000000000194 t vbo_exec_MultiTexCoordP4ui
00000000002d9ae0 00000000000001a8 t vbo_exec_MultiTexCoordP3uiv
00000000002d9c90 0000000000000178 t vbo_exec_MultiTexCoordP3ui
00000000002d9e10 0000000000000184 t vbo_exec_MultiTexCoordP2uiv
00000000002d9fa0 000000000000015c t vbo_exec_MultiTexCoordP2ui
00000000002da100 0000000000000160 t vbo_exec_MultiTexCoordP1uiv
00000000002da260 0000000000000148 t vbo_exec_MultiTexCoordP1ui
00000000002da3b0 00000000000000a8 t vbo_exec_MultiTexCoord4fv
00000000002da460 00000000000000b0 t vbo_exec_MultiTexCoord4f
00000000002da510 00000000000000b0 t vbo_exec_MultiTexCoord3fv
00000000002da5c0 00000000000000a8 t vbo_exec_MultiTexCoord3f
00000000002da670 00000000000000a8 t vbo_exec_MultiTexCoord2fv
00000000002da720 00000000000000a4 t vbo_exec_MultiTexCoord2f
00000000002da7d0 00000000000000a8 t vbo_exec_MultiTexCoord1fv
00000000002da880 000000000000009c t vbo_exec_MultiTexCoord1f
00000000002da920 00000000000000bc T _es_VertexAttrib4fv
00000000002da9e0 0000000000000128 t vbo_exec_EvalCoord2f
00000000002dab10 0000000000000070 t vbo_exec_EvalPoint2
00000000002dab80 0000000000000008 t vbo_exec_EvalCoord2fv
00000000002dab90 00000000000000e8 t vbo_exec_EvalCoord1f
00000000002dac80 000000000000004c t vbo_exec_EvalPoint1
00000000002dacd0 0000000000000008 t vbo_exec_EvalCoord1fv
00000000002dace0 00000000000001d0 t vbo_exec_VertexAttribL1ui64vARB
00000000002daeb0 00000000000001cc t vbo_exec_VertexAttribL1ui64ARB
00000000002db080 00000000000001c0 t vbo_exec_VertexAttribL4dv
00000000002db240 00000000000001cc t vbo_exec_VertexAttribL3dv
00000000002db410 00000000000001cc t vbo_exec_VertexAttribL2dv
00000000002db5e0 00000000000001d4 t vbo_exec_VertexAttribL1dv
00000000002db7c0 00000000000001d0 t vbo_exec_VertexAttribL4d
00000000002db990 00000000000001cc t vbo_exec_VertexAttribL3d
00000000002dbb60 00000000000001c0 t vbo_exec_VertexAttribL2d
00000000002dbd20 00000000000001d8 t vbo_exec_VertexAttribL1d
00000000002dbf00 000000000000022c t vbo_exec_VertexP4uiv
00000000002dc130 00000000000001f8 t vbo_exec_VertexP4ui
00000000002dc330 000000000000024c t vbo_exec_VertexP3uiv
00000000002dc580 00000000000001fc t vbo_exec_VertexP3ui
00000000002dc780 0000000000000214 t vbo_exec_VertexP2uiv
00000000002dc9a0 0000000000000220 t vbo_exec_VertexP2ui
00000000002dcbc0 00000000000001c4 t vbo_exec_VertexAttribI4uiv
00000000002dcd90 00000000000001d4 t vbo_exec_VertexAttribI3uiv
00000000002dcf70 00000000000001d4 t vbo_exec_VertexAttribI2uiv
00000000002dd150 00000000000001bc t vbo_exec_VertexAttribI4ui
00000000002dd310 00000000000001d4 t vbo_exec_VertexAttribI3ui
00000000002dd4f0 00000000000001d8 t vbo_exec_VertexAttribI2ui
00000000002dd6d0 00000000000001d8 t vbo_exec_VertexAttribI1ui
00000000002dd8b0 00000000000001c4 t vbo_exec_VertexAttribI4iv
00000000002dda80 00000000000001d4 t vbo_exec_VertexAttribI3iv
00000000002ddc60 00000000000001d4 t vbo_exec_VertexAttribI2iv
00000000002dde40 00000000000001bc t vbo_exec_VertexAttribI4i
00000000002de000 00000000000001d4 t vbo_exec_VertexAttribI3i
00000000002de1e0 00000000000001d8 t vbo_exec_VertexAttribI2i
00000000002de3c0 00000000000001d8 t vbo_exec_VertexAttribI1i
00000000002de5a0 0000000000000160 t vbo_exec_VertexAttrib4fvNV
00000000002de700 000000000000017c t vbo_exec_VertexAttrib4fNV
00000000002de880 0000000000000194 t vbo_exec_VertexAttrib3fvNV
00000000002dea20 000000000000018c t vbo_exec_VertexAttrib3fNV
00000000002debb0 0000000000000194 t vbo_exec_VertexAttrib2fvNV
00000000002ded50 000000000000018c t vbo_exec_VertexAttrib2fNV
00000000002deee0 000000000000019c t vbo_exec_VertexAttrib1fvNV
00000000002df080 000000000000019c t vbo_exec_VertexAttrib1fNV
00000000002df220 0000000000000190 t vbo_exec_VertexAttrib4fvARB
00000000002df3b0 00000000000001b4 t vbo_exec_VertexAttrib4fARB
00000000002df570 00000000000001c4 t vbo_exec_VertexAttrib3fvARB
00000000002df740 00000000000001d4 t vbo_exec_VertexAttrib3fARB
00000000002df920 00000000000001c4 t vbo_exec_VertexAttrib2fvARB
00000000002dfaf0 00000000000001c8 t vbo_exec_VertexAttrib2fARB
00000000002dfcc0 00000000000001d4 t vbo_exec_VertexAttrib1fvARB
00000000002dfea0 00000000000001d8 t vbo_exec_VertexAttrib1fARB
00000000002e0080 00000000000000e0 t vbo_exec_Vertex4fv
00000000002e0160 00000000000000e4 t vbo_exec_Vertex4f
00000000002e0250 0000000000000124 t vbo_exec_Vertex3fv
00000000002e0380 000000000000011c t vbo_exec_Vertex3f
00000000002e04a0 0000000000000114 t vbo_exec_Vertex2fv
00000000002e05c0 0000000000000110 t vbo_exec_Vertex2f
00000000002e06d0 00000000000001ac t r11g11b10f_to_float3
00000000002e0880 00000000000000c8 t vbo_exec_FlushVertices_internal
00000000002e0950 0000000000000150 t vbo_exec_Begin
00000000002e0aa0 0000000000000054 t vbo_exec_PrimitiveRestartNV
00000000002e0b00 00000000000000c8 T _es_VertexAttrib4f
00000000002e0bd0 00000000000000c8 T _es_VertexAttrib1f
00000000002e0ca0 00000000000000c4 T _es_VertexAttrib2f
00000000002e0d70 00000000000000d0 T _es_VertexAttrib3f
00000000002e0e40 00000000000000c8 T _es_VertexAttrib1fv
00000000002e0f10 00000000000000c4 T _es_VertexAttrib2fv
00000000002e0fe0 00000000000000dc T _es_VertexAttrib3fv
00000000002e10c0 00000000000002e8 t vbo_exec_SecondaryColorP3ui
00000000002e13b0 00000000000002e8 t vbo_exec_ColorP3ui
00000000002e16a0 00000000000002e8 t vbo_exec_NormalP3ui
00000000002e1990 0000000000000308 t vbo_exec_SecondaryColorP3uiv
00000000002e1ca0 0000000000000308 t vbo_exec_ColorP3uiv
00000000002e1fb0 0000000000000308 t vbo_exec_NormalP3uiv
00000000002e22c0 0000000000000364 t vbo_exec_ColorP4ui
00000000002e2630 00000000000003a0 t vbo_exec_ColorP4uiv
00000000002e29d0 00000000000009c0 t vbo_exec_VertexAttribP4ui
00000000002e3390 0000000000000a60 t vbo_exec_VertexAttribP4uiv
00000000002e3df0 0000000000000820 t vbo_exec_VertexAttribP1ui
00000000002e4610 0000000000000824 t vbo_exec_VertexAttribP1uiv
00000000002e4e40 0000000000000958 t vbo_exec_VertexAttribP2ui
00000000002e57a0 000000000000097c t vbo_exec_VertexAttribP2uiv
00000000002e6120 0000000000000a7c t vbo_exec_VertexAttribP3ui
00000000002e6ba0 0000000000000acc t vbo_exec_VertexAttribP3uiv
00000000002e7670 00000000000006a4 t vbo_exec_vtx_init
00000000002e7d20 0000000000000094 t vbo_exec_vtx_destroy
00000000002e7dc0 0000000000000024 t vbo_exec_FlushVertices
00000000002e7df0 0000000000000094 t _es_Color4f
00000000002e7e90 0000000000000094 t _es_Normal3f
00000000002e7f30 00000000000000b0 t _es_MultiTexCoord4f
00000000002e7fe0 0000000000000004 t _es_Materialfv
00000000002e7ff0 0000000000000024 t _es_Materialf
00000000002e8020 0000000000000050 t vbo_exec_init
00000000002e8070 0000000000000010 t vbo_exec_destroy
00000000002e8080 0000000000000050 t vbo_try_prim_conversion
00000000002e80d0 0000000000000130 t vbo_merge_draws
00000000002e8200 00000000000001e8 t vbo_copy_vertices
00000000002e83f0 00000000000000b4 t vbo_exec_vtx_unmap
00000000002e84b0 000000000000019c t vbo_exec_vtx_map
00000000002e8650 0000000000000520 t vbo_exec_vtx_flush
00000000002e8b70 0000000000000300 t vbo_exec_eval_update
00000000002e8e70 0000000000000198 t vbo_exec_do_EvalCoord1f
00000000002e9010 0000000000000340 t vbo_exec_do_EvalCoord2f
00000000002e9350 0000000000000004 t _mesa_noop_Materialfv
00000000002e9360 0000000000000004 t _mesa_noop_EvalCoord1f
00000000002e9370 0000000000000004 t _mesa_noop_EvalCoord1fv
00000000002e9380 0000000000000004 t _mesa_noop_EvalCoord2f
00000000002e9390 0000000000000004 t _mesa_noop_EvalPoint1
00000000002e93a0 0000000000000004 t _mesa_noop_EvalPoint2
00000000002e93b0 0000000000000004 t _mesa_noop_Begin
00000000002e93c0 0000000000000004 t _mesa_noop_End
00000000002e93d0 0000000000000004 t _mesa_noop_Vertex3f
00000000002e93e0 0000000000000004 t _mesa_noop_Vertex4f
00000000002e93f0 0000000000000004 t _mesa_noop_EdgeFlag
00000000002e9400 0000000000000004 t _mesa_noop_MultiTexCoord1f
00000000002e9410 0000000000000004 t _mesa_noop_MultiTexCoord1fv
00000000002e9420 0000000000000004 t _mesa_noop_MultiTexCoord2f
00000000002e9430 0000000000000004 t _mesa_noop_MultiTexCoord3f
00000000002e9440 0000000000000004 t _mesa_noop_MultiTexCoord4f
00000000002e9450 0000000000000038 t _mesa_noop_VertexAttribL1ui64vARB
00000000002e9490 0000000000000038 t _mesa_noop_VertexAttribL1ui64ARB
00000000002e94d0 0000000000000038 t _mesa_noop_VertexAttribL4dv
00000000002e9510 0000000000000038 t _mesa_noop_VertexAttribL3dv
00000000002e9550 0000000000000038 t _mesa_noop_VertexAttribL2dv
00000000002e9590 0000000000000038 t _mesa_noop_VertexAttribL1dv
00000000002e95d0 0000000000000038 t _mesa_noop_VertexAttribL4d
00000000002e9610 0000000000000038 t _mesa_noop_VertexAttribL3d
00000000002e9650 0000000000000038 t _mesa_noop_VertexAttribL2d
00000000002e9690 0000000000000038 t _mesa_noop_VertexAttribL1d
00000000002e96d0 0000000000000070 t _mesa_noop_VertexAttribP4uiv
00000000002e9740 0000000000000070 t _mesa_noop_VertexAttribP4ui
00000000002e97b0 0000000000000078 t _mesa_noop_VertexAttribP3uiv
00000000002e9830 0000000000000078 t _mesa_noop_VertexAttribP3ui
00000000002e98b0 0000000000000078 t _mesa_noop_VertexAttribP2uiv
00000000002e9930 0000000000000078 t _mesa_noop_VertexAttribP2ui
00000000002e99b0 0000000000000078 t _mesa_noop_VertexAttribP1uiv
00000000002e9a30 0000000000000078 t _mesa_noop_VertexAttribP1ui
00000000002e9ab0 000000000000004c t _mesa_noop_SecondaryColorP3uiv
00000000002e9b00 000000000000004c t _mesa_noop_SecondaryColorP3ui
00000000002e9b50 000000000000004c t _mesa_noop_ColorP4uiv
00000000002e9ba0 000000000000004c t _mesa_noop_ColorP4ui
00000000002e9bf0 000000000000004c t _mesa_noop_ColorP3uiv
00000000002e9c40 000000000000004c t _mesa_noop_ColorP3ui
00000000002e9c90 000000000000004c t _mesa_noop_NormalP3uiv
00000000002e9ce0 000000000000004c t _mesa_noop_NormalP3ui
00000000002e9d30 000000000000004c t _mesa_noop_MultiTexCoordP4uiv
00000000002e9d80 000000000000004c t _mesa_noop_MultiTexCoordP4ui
00000000002e9dd0 000000000000004c t _mesa_noop_MultiTexCoordP3uiv
00000000002e9e20 000000000000004c t _mesa_noop_MultiTexCoordP3ui
00000000002e9e70 000000000000004c t _mesa_noop_MultiTexCoordP2uiv
00000000002e9ec0 000000000000004c t _mesa_noop_MultiTexCoordP2ui
00000000002e9f10 000000000000004c t _mesa_noop_MultiTexCoordP1uiv
00000000002e9f60 000000000000004c t _mesa_noop_MultiTexCoordP1ui
00000000002e9fb0 000000000000004c t _mesa_noop_TexCoordP4uiv
00000000002ea000 000000000000004c t _mesa_noop_TexCoordP4ui
00000000002ea050 000000000000004c t _mesa_noop_TexCoordP3uiv
00000000002ea0a0 000000000000004c t _mesa_noop_TexCoordP3ui
00000000002ea0f0 000000000000004c t _mesa_noop_TexCoordP2uiv
00000000002ea140 000000000000004c t _mesa_noop_TexCoordP2ui
00000000002ea190 000000000000004c t _mesa_noop_TexCoordP1uiv
00000000002ea1e0 000000000000004c t _mesa_noop_TexCoordP1ui
00000000002ea230 000000000000004c t _mesa_noop_VertexP4uiv
00000000002ea280 000000000000004c t _mesa_noop_VertexP4ui
00000000002ea2d0 000000000000004c t _mesa_noop_VertexP3uiv
00000000002ea320 000000000000004c t _mesa_noop_VertexP3ui
00000000002ea370 000000000000004c t _mesa_noop_VertexP2uiv
00000000002ea3c0 000000000000004c t _mesa_noop_VertexP2ui
00000000002ea410 0000000000000038 t _mesa_noop_VertexAttribI4uiv
00000000002ea450 0000000000000038 t _mesa_noop_VertexAttribI3uiv
00000000002ea490 0000000000000038 t _mesa_noop_VertexAttribI2uiv
00000000002ea4d0 0000000000000038 t _mesa_noop_VertexAttribI4ui
00000000002ea510 0000000000000038 t _mesa_noop_VertexAttribI3ui
00000000002ea550 0000000000000038 t _mesa_noop_VertexAttribI2ui
00000000002ea590 0000000000000038 t _mesa_noop_VertexAttribI1ui
00000000002ea5d0 0000000000000038 t _mesa_noop_VertexAttribI4iv
00000000002ea610 0000000000000038 t _mesa_noop_VertexAttribI3iv
00000000002ea650 0000000000000038 t _mesa_noop_VertexAttribI2iv
00000000002ea690 0000000000000038 t _mesa_noop_VertexAttribI4i
00000000002ea6d0 0000000000000038 t _mesa_noop_VertexAttribI3i
00000000002ea710 0000000000000038 t _mesa_noop_VertexAttribI2i
00000000002ea750 0000000000000038 t _mesa_noop_VertexAttribI1i
00000000002ea790 0000000000000038 t _mesa_noop_VertexAttrib4fvARB
00000000002ea7d0 0000000000000038 t _mesa_noop_VertexAttrib4fARB
00000000002ea810 0000000000000038 t _mesa_noop_VertexAttrib3fvARB
00000000002ea850 0000000000000038 t _mesa_noop_VertexAttrib3fARB
00000000002ea890 0000000000000038 t _mesa_noop_VertexAttrib2fvARB
00000000002ea8d0 0000000000000038 t _mesa_noop_VertexAttrib2fARB
00000000002ea910 0000000000000038 t _mesa_noop_VertexAttrib1fvARB
00000000002ea950 0000000000000038 t _mesa_noop_VertexAttrib1fARB
00000000002ea990 0000000000000004 t _mesa_noop_VertexAttrib4fNV
00000000002ea9a0 0000000000000004 t _mesa_noop_VertexAttrib3fNV
00000000002ea9b0 0000000000000004 t _mesa_noop_VertexAttrib2fNV
00000000002ea9c0 0000000000000004 t _mesa_noop_VertexAttrib4fvNV
00000000002ea9d0 0000000000000004 t _mesa_noop_Color4f
00000000002ea9e0 0000000000000004 t _mesa_noop_SecondaryColor3fEXT
00000000002ea9f0 0000000000000004 t _mesa_noop_TexCoord2f
00000000002eaa00 0000000000000004 t _mesa_noop_Indexfv
00000000002eaa10 0000000000000004 t _mesa_noop_Indexf
00000000002eaa20 0000000000000004 t _mesa_noop_TexCoord4f
00000000002eaa30 0000000000000004 t _mesa_noop_TexCoord3f
00000000002eaa40 0000000000000004 t _mesa_noop_Normal3f
00000000002eaa50 0000000000000004 t _mesa_noop_Color3f
00000000002eaa60 0000000000000004 t _mesa_noop_Vertex2f
00000000002eaa70 0000000000000004 t _mesa_noop_VertexAttrib1fNV
00000000002eaa80 0000000000000004 t _mesa_noop_MultiTexCoord2fv
00000000002eaa90 0000000000000004 t _mesa_noop_MultiTexCoord3fv
00000000002eaaa0 0000000000000004 t _mesa_noop_MultiTexCoord4fv
00000000002eaab0 0000000000000004 t _mesa_noop_VertexAttrib1fvNV
00000000002eaac0 0000000000000004 t _mesa_noop_VertexAttrib2fvNV
00000000002eaad0 0000000000000004 t _mesa_noop_VertexAttrib3fvNV
00000000002eaae0 0000000000000004 t _mesa_noop_TexCoord1f
00000000002eaaf0 0000000000000004 t _mesa_noop_FogCoordfEXT
00000000002eab00 0000000000000004 t _mesa_noop_EvalCoord2fv
00000000002eab10 0000000000000004 t _mesa_noop_Vertex2fv
00000000002eab20 0000000000000004 t _mesa_noop_Vertex3fv
00000000002eab30 0000000000000004 t _mesa_noop_Vertex4fv
00000000002eab40 0000000000000004 t _mesa_noop_TexCoord1fv
00000000002eab50 0000000000000004 t _mesa_noop_TexCoord2fv
00000000002eab60 0000000000000004 t _mesa_noop_TexCoord3fv
00000000002eab70 0000000000000004 t _mesa_noop_TexCoord4fv
00000000002eab80 0000000000000004 t _mesa_noop_Normal3fv
00000000002eab90 0000000000000004 t _mesa_noop_FogCoordfvEXT
00000000002eaba0 0000000000000004 t _mesa_noop_Color3fv
00000000002eabb0 0000000000000004 t _mesa_noop_Color4fv
00000000002eabc0 0000000000000004 t _mesa_noop_SecondaryColor3fvEXT
00000000002eabd0 0000000000000004 t _mesa_noop_ArrayElement
00000000002eabe0 0000000000000004 t _mesa_noop_PrimitiveRestartNV
00000000002eabf0 0000000000000574 t _mesa_noop_vtxfmt_init
00000000002eb170 0000000000000018 t _mesa_using_noop_vtxfmt
00000000002eb190 0000000000000068 t reset_counters
00000000002eb200 0000000000000090 t _save_OBE_MultiDrawElements
00000000002eb290 00000000000000b0 t _save_OBE_MultiDrawElementsBaseVertex
00000000002eb340 000000000000002c t _save_Begin
00000000002eb370 0000000000000084 t vbo_destroy_vertex_list
00000000002eb400 00000000000000f0 t alloc_vertex_store
00000000002eb4f0 00000000000000f4 t vbo_print_vertex_list
00000000002eb5f0 000000000000014c t copy_to_current
00000000002eb740 00000000000001ac t r11g11b10f_to_float3
00000000002eb8f0 0000000000000074 t vbo_save_map_vertex_store
00000000002eb970 0000000000000074 t vbo_save_unmap_vertex_store
00000000002eb9f0 00000000000008d8 t compile_vertex_list
00000000002ec2d0 0000000000000070 t wrap_buffers
00000000002ec340 00000000000004fc t fixup_vertex
00000000002ec840 00000000000002f8 t _save_SecondaryColorP3uiv
00000000002ecb40 00000000000002dc t _save_SecondaryColorP3ui
00000000002ece20 00000000000003b0 t _save_ColorP4uiv
00000000002ed1d0 0000000000000374 t _save_ColorP4ui
00000000002ed550 00000000000002f8 t _save_ColorP3uiv
00000000002ed850 00000000000002dc t _save_ColorP3ui
00000000002edb30 00000000000002f8 t _save_NormalP3uiv
00000000002ede30 00000000000002dc t _save_NormalP3ui
00000000002ee110 0000000000000168 t _save_TexCoordP4uiv
00000000002ee280 000000000000014c t _save_TexCoordP4ui
00000000002ee3d0 0000000000000140 t _save_TexCoordP3uiv
00000000002ee510 0000000000000130 t _save_TexCoordP3ui
00000000002ee640 000000000000011c t _save_TexCoordP2uiv
00000000002ee760 0000000000000134 t _save_TexCoordP2ui
00000000002ee8a0 0000000000000114 t _save_TexCoordP1uiv
00000000002ee9c0 0000000000000118 t _save_TexCoordP1ui
00000000002eeae0 0000000000000068 t _save_Indexfv
00000000002eeb50 0000000000000068 t _save_Indexf
00000000002eebc0 0000000000000070 t _save_EdgeFlag
00000000002eec30 00000000000006c0 t _save_Materialfv
00000000002ef2f0 0000000000000068 t _save_TexCoord4fv
00000000002ef360 0000000000000074 t _save_TexCoord4f
00000000002ef3e0 0000000000000070 t _save_TexCoord3fv
00000000002ef450 0000000000000074 t _save_TexCoord3f
00000000002ef4d0 0000000000000068 t _save_TexCoord2fv
00000000002ef540 0000000000000068 t _save_TexCoord2f
00000000002ef5b0 0000000000000068 t _save_TexCoord1fv
00000000002ef620 0000000000000068 t _save_TexCoord1f
00000000002ef690 0000000000000070 t _save_SecondaryColor3fvEXT
00000000002ef700 0000000000000074 t _save_SecondaryColor3fEXT
00000000002ef780 0000000000000070 t _save_Normal3fv
00000000002ef7f0 0000000000000074 t _save_Normal3f
00000000002ef870 0000000000000068 t _save_FogCoordfvEXT
00000000002ef8e0 0000000000000068 t _save_FogCoordfEXT
00000000002ef950 0000000000000068 t _save_Color4fv
00000000002ef9c0 0000000000000074 t _save_Color4f
00000000002efa40 0000000000000070 t _save_Color3fv
00000000002efab0 0000000000000074 t _save_Color3f
00000000002efb30 0000000000000194 t _save_MultiTexCoordP4uiv
00000000002efcd0 0000000000000168 t _save_MultiTexCoordP4ui
00000000002efe40 000000000000016c t _save_MultiTexCoordP3uiv
00000000002effb0 000000000000014c t _save_MultiTexCoordP3ui
00000000002f0100 0000000000000148 t _save_MultiTexCoordP2uiv
00000000002f0250 0000000000000148 t _save_MultiTexCoordP2ui
00000000002f03a0 0000000000000138 t _save_MultiTexCoordP1uiv
00000000002f04e0 000000000000012c t _save_MultiTexCoordP1ui
00000000002f0610 0000000000000088 t _save_MultiTexCoord4fv
00000000002f06a0 0000000000000090 t _save_MultiTexCoord4f
00000000002f0730 0000000000000090 t _save_MultiTexCoord3fv
00000000002f07c0 0000000000000090 t _save_MultiTexCoord3f
00000000002f0850 0000000000000088 t _save_MultiTexCoord2fv
00000000002f08e0 0000000000000084 t _save_MultiTexCoord2f
00000000002f0970 0000000000000088 t _save_MultiTexCoord1fv
00000000002f0a00 0000000000000084 t _save_MultiTexCoord1f
00000000002f0a90 0000000000000074 t wrap_filled_vertex
00000000002f0b10 000000000000016c t _save_VertexAttribL1ui64vARB
00000000002f0c80 0000000000000168 t _save_VertexAttribL1ui64ARB
00000000002f0df0 000000000000016c t _save_VertexAttribL4dv
00000000002f0f60 000000000000017c t _save_VertexAttribL3dv
00000000002f10e0 000000000000016c t _save_VertexAttribL2dv
00000000002f1250 000000000000016c t _save_VertexAttribL1dv
00000000002f13c0 0000000000000184 t _save_VertexAttribL4d
00000000002f1550 0000000000000184 t _save_VertexAttribL3d
00000000002f16e0 0000000000000168 t _save_VertexAttribL2d
00000000002f1850 0000000000000168 t _save_VertexAttribL1d
00000000002f19c0 00000000000009e0 t _save_VertexAttribP4uiv
00000000002f23a0 0000000000000934 t _save_VertexAttribP4ui
00000000002f2ce0 00000000000009e0 t _save_VertexAttribP3uiv
00000000002f36c0 000000000000098c t _save_VertexAttribP3ui
00000000002f4050 000000000000083c t _save_VertexAttribP2uiv
00000000002f4890 0000000000000824 t _save_VertexAttribP2ui
00000000002f50c0 00000000000006a0 t _save_VertexAttribP1uiv
00000000002f5760 00000000000006b8 t _save_VertexAttribP1ui
00000000002f5e20 0000000000000204 t _save_VertexP4uiv
00000000002f6030 0000000000000208 t _save_VertexP4ui
00000000002f6240 00000000000001e4 t _save_VertexP3uiv
00000000002f6430 00000000000001d4 t _save_VertexP3ui
00000000002f6610 00000000000001bc t _save_VertexP2uiv
00000000002f67d0 00000000000001b4 t _save_VertexP2ui
00000000002f6990 000000000000019c t _save_VertexAttribI4uiv
00000000002f6b30 000000000000018c t _save_VertexAttribI3uiv
00000000002f6cc0 000000000000017c t _save_VertexAttribI2uiv
00000000002f6e40 000000000000019c t _save_VertexAttribI4ui
00000000002f6fe0 0000000000000194 t _save_VertexAttribI3ui
00000000002f7180 0000000000000180 t _save_VertexAttribI2ui
00000000002f7300 0000000000000170 t _save_VertexAttribI1ui
00000000002f7470 000000000000019c t _save_VertexAttribI4iv
00000000002f7610 000000000000018c t _save_VertexAttribI3iv
00000000002f77a0 000000000000017c t _save_VertexAttribI2iv
00000000002f7920 000000000000019c t _save_VertexAttribI4i
00000000002f7ac0 0000000000000194 t _save_VertexAttribI3i
00000000002f7c60 0000000000000180 t _save_VertexAttribI2i
00000000002f7de0 0000000000000170 t _save_VertexAttribI1i
00000000002f7f50 0000000000000104 t _save_VertexAttrib4fvNV
00000000002f8060 0000000000000104 t _save_VertexAttrib4fNV
00000000002f8170 000000000000010c t _save_VertexAttrib3fvNV
00000000002f8280 0000000000000104 t _save_VertexAttrib3fNV
00000000002f8390 0000000000000104 t _save_VertexAttrib2fvNV
00000000002f84a0 000000000000011c t _save_VertexAttrib2fNV
00000000002f85c0 0000000000000104 t _save_VertexAttrib1fvNV
00000000002f86d0 000000000000011c t _save_VertexAttrib1fNV
00000000002f87f0 000000000000016c t _save_VertexAttrib4fvARB
00000000002f8960 000000000000018c t _save_VertexAttrib4fARB
00000000002f8af0 000000000000017c t _save_VertexAttrib3fvARB
00000000002f8c70 0000000000000184 t _save_VertexAttrib3fARB
00000000002f8e00 000000000000016c t _save_VertexAttrib2fvARB
00000000002f8f70 0000000000000170 t _save_VertexAttrib2fARB
00000000002f90e0 000000000000016c t _save_VertexAttrib1fvARB
00000000002f9250 0000000000000168 t _save_VertexAttrib1fARB
00000000002f93c0 00000000000000cc t _save_Vertex4fv
00000000002f9490 00000000000000d4 t _save_Vertex4f
00000000002f9570 00000000000000d4 t _save_Vertex3fv
00000000002f9650 00000000000000d4 t _save_Vertex3f
00000000002f9730 00000000000000cc t _save_Vertex2fv
00000000002f9800 00000000000000cc t _save_Vertex2f
00000000002f98d0 0000000000000124 t dlist_fallback
00000000002f9a00 0000000000000050 t _save_EvalPoint2
00000000002f9a50 0000000000000048 t _save_EvalPoint1
00000000002f9aa0 0000000000000048 t _save_EvalCoord2fv
00000000002f9af0 0000000000000050 t _save_EvalCoord2f
00000000002f9b40 0000000000000048 t _save_EvalCoord1fv
00000000002f9b90 0000000000000048 t _save_EvalCoord1f
00000000002f9be0 0000000000000050 t _save_CallLists
00000000002f9c30 0000000000000048 t _save_CallList
00000000002f9c80 00000000000000ac t _save_End
00000000002f9d30 00000000000000a4 t vbo_save_NotifyBegin
00000000002f9de0 00000000000000bc t _save_OBE_Rectf
00000000002f9ea0 0000000000000314 t _save_OBE_DrawElementsBaseVertex
00000000002fa1c0 0000000000000008 t _save_OBE_DrawElements
00000000002fa1d0 0000000000000158 t _save_OBE_DrawRangeElements
00000000002fa330 0000000000000144 t _save_OBE_DrawArrays
00000000002fa480 0000000000000108 t _save_OBE_MultiDrawArrays
00000000002fa590 0000000000000090 t _save_PrimitiveRestartNV
00000000002fa620 000000000000008c t vbo_initialize_save_dispatch
00000000002fa6b0 00000000000000b0 t vbo_save_SaveFlushVertices
00000000002fa760 00000000000000f4 t vbo_save_NewList
00000000002fa860 0000000000000090 t vbo_save_EndList
00000000002fa8f0 0000000000000024 t vbo_save_BeginCallList
00000000002fa920 000000000000002c t vbo_save_EndCallList
00000000002fa950 000000000000063c t vbo_save_api_init
00000000002faf90 0000000000000050 t vbo_save_init
00000000002fafe0 00000000000000b8 t vbo_save_destroy
00000000002fb0a0 000000000000023c t copy_vao
00000000002fb2e0 00000000000002e4 T vbo_save_playback_vertex_list
00000000002fb5d0 0000000000000030 t VertexAttrib1fvNV
00000000002fb600 0000000000000030 t VertexAttrib2fvNV
00000000002fb630 0000000000000030 t VertexAttrib3fvNV
00000000002fb660 0000000000000030 t VertexAttrib4fvNV
00000000002fb690 00000000000002f0 t _vbo_loopback_vertex_list
00000000002fb980 00000000000000b8 t unpack_float_z_X8_UINT_Z24_UNORM
00000000002fba40 00000000000000b8 t unpack_float_z_Z24_UNORM_X8_UINT
00000000002fbb00 00000000000000ac t unpack_float_Z_UNORM16
00000000002fbbb0 0000000000000094 t unpack_float_Z_UNORM32
00000000002fbc50 000000000000002c t unpack_float_z_Z32X24S8
00000000002fbc80 0000000000000030 t unpack_uint_z_X8_UINT_Z24_UNORM
00000000002fbcb0 0000000000000030 t unpack_uint_z_Z24_UNORM_X8_UINT
00000000002fbce0 0000000000000090 t unpack_uint_Z_UNORM16
00000000002fbd70 000000000000005c t unpack_uint_Z_FLOAT32
00000000002fbdd0 0000000000000060 t unpack_uint_Z_FLOAT32_X24S8
00000000002fbe30 0000000000000010 t unpack_float_Z_FLOAT32
00000000002fbe40 0000000000000014 t unpack_uint_Z_UNORM32
00000000002fbe60 0000000000000084 t _mesa_unorm_to_unorm.constprop.0
00000000002fbef0 00000000000050e8 t _mesa_unpack_rgba_row
0000000000300fe0 0000000000001e1c t _mesa_unpack_ubyte_rgba_row
0000000000302e00 0000000000001d60 t _mesa_unpack_uint_rgba_row
0000000000304b60 00000000000000b4 t _mesa_unpack_float_z_row
0000000000304c20 00000000000000cc t _mesa_unpack_uint_z_row
0000000000304cf0 000000000000009c t _mesa_unpack_ubyte_stencil_row
0000000000304d90 0000000000000094 t _mesa_unpack_uint_24_8_depth_stencil_row
0000000000304e30 00000000000000a8 t _mesa_unpack_float_32_uint_24_8_depth_stencil_row
0000000000304ee0 0000000000007b38 t _mesa_initialize_exec_table
000000000030ca20 0000000000000010 t compar_nr
000000000030ca30 0000000000000080 t _mesa_enum_to_string
000000000030cab0 0000000000000024 t _mesa_lookup_prim_by_nr
000000000030cae0 0000000000000184 t _mesa_get_srgb_format_linear
000000000030cc70 000000000000008c t _mesa_get_intensity_format_red
000000000030cd00 0000000000000290 t setup_render_state
000000000030cf90 0000000000000160 t draw_bitmap_quad
000000000030d0f0 0000000000000158 t init_bitmap_state
000000000030d250 000000000000019c t st_flush_bitmap_cache.part.0
000000000030d3f0 00000000000005b4 t st_Bitmap
000000000030d9b0 00000000000004d4 t st_DrawAtlasBitmaps
000000000030de90 0000000000000018 t st_flush_bitmap_cache
000000000030deb0 0000000000000018 t st_init_bitmap_functions
000000000030ded0 0000000000000084 t st_destroy_bitmap
000000000030df60 00000000000000f8 t get_color_fp_variant
000000000030e060 000000000000051c t draw_textured_quad.isra.0
000000000030e580 00000000000000d8 t pipe_resource_reference
000000000030e660 0000000000000378 t make_drawpix_z_stencil_program_tgsi
000000000030e9e0 0000000000000068 t st_make_passthrough_vertex_shader
000000000030ea50 0000000000000e9c t st_CopyPixels
000000000030f8f0 0000000000001468 t st_DrawPixels
0000000000310d60 000000000000001c t st_init_drawpixels_functions
0000000000310d80 00000000000000d8 t st_destroy_drawpix
0000000000310e60 0000000000000058 t st_discard_framebuffer
0000000000310ec0 0000000000000044 t st_UnmapRenderbuffer
0000000000310f10 0000000000000050 t st_new_renderbuffer
0000000000310f60 0000000000000034 t st_EvaluateDepthValues
0000000000310fa0 000000000000017c t st_MapRenderbuffer
0000000000311120 0000000000000070 t st_DrawBufferAllocate
0000000000311190 0000000000000064 t st_ReadBuffer
0000000000311200 0000000000000110 t st_validate_attachment
0000000000311310 00000000000001c4 t st_validate_framebuffer
00000000003114e0 0000000000000018 t st_finish_render_texture
0000000000311500 00000000000001e0 t st_renderbuffer_delete
00000000003116e0 00000000000001fc t st_new_renderbuffer_fb
00000000003118e0 00000000000004fc t st_update_renderbuffer_surface
0000000000311de0 000000000000047c t st_renderbuffer_alloc_storage
0000000000312260 0000000000000128 t st_render_texture
0000000000312390 0000000000000090 t st_init_fbo_functions
0000000000312420 000000000000000c t st_device_reset_callback
0000000000312430 0000000000000094 t st_get_graphics_reset_status
00000000003124d0 0000000000000048 t st_glFlush
0000000000312520 0000000000000030 t st_flush
0000000000312550 000000000000007c t st_finish
00000000003125d0 0000000000000024 t st_glFinish
0000000000312600 0000000000000038 t st_install_device_reset_callback
0000000000312640 000000000000004c t st_init_flush_functions
0000000000312690 000000000000019c t util_format_linear
0000000000312830 00000000000000c0 t guess_base_level_size
00000000003128f0 000000000000008c t alpha_to_red
0000000000312980 0000000000000018 t st_DeleteTextureHandle
00000000003129a0 0000000000000018 t st_MakeTextureHandleResident
00000000003129c0 0000000000000018 t st_DeleteImageHandle
00000000003129e0 0000000000000018 t st_MakeImageHandleResident
0000000000312a00 0000000000000074 t st_TexParameter
0000000000312a80 0000000000000064 t format_is_alpha
0000000000312af0 0000000000000060 t format_is_red_alpha
0000000000312b50 0000000000000060 t format_is_red
0000000000312bb0 0000000000000044 t st_NewImageHandle
0000000000312c00 0000000000000004 t st_DeleteTextureImage
0000000000312c10 000000000000000c t st_NewTextureImage
0000000000312c20 00000000000000a4 t st_NewTextureObject
0000000000312cd0 0000000000000064 t compressed_tex_fallback_allocate.part.0
0000000000312d40 00000000000000cc t default_bindings.isra.0
0000000000312e10 000000000000022c t try_pbo_upload_common
0000000000313040 00000000000000d8 t pipe_resource_reference
0000000000313120 000000000000009c t st_DeleteTextureObject
00000000003131c0 00000000000000a8 t st_FreeTextureImageBuffer
0000000000313270 0000000000000240 t st_TextureView
00000000003134b0 0000000000000108 t prep_teximage
00000000003135c0 0000000000000238 t st_ClearTexSubImage
0000000000313800 0000000000000160 t gl_target_to_pipe
0000000000313960 0000000000000160 t st_TestProxyTexImage
0000000000313ac0 00000000000002a0 t guess_and_alloc_texture
0000000000313d60 00000000000003cc t st_texture_storage
0000000000314130 000000000000001c t st_SetTextureStorageForMemoryObject
0000000000314150 000000000000000c t st_AllocTextureStorage
0000000000314160 0000000000000aac t st_GetTexSubImage
0000000000314c10 0000000000000070 t st_astc_format_fallback
0000000000314c80 000000000000009c t st_compressed_format_fallback
0000000000314d20 0000000000000324 t st_AllocTextureImageBuffer
0000000000315050 000000000000011c t st_UnmapTextureImage
0000000000315170 00000000000001ac t st_MapTextureImage
0000000000315320 0000000000000434 t st_CompressedTexSubImage
0000000000315760 00000000000000f4 t st_CompressedTexImage
0000000000315860 00000000000000a0 t st_get_blit_mask
0000000000315900 0000000000000b94 t st_CopyTexSubImage
00000000003164a0 0000000000001594 t st_TexSubImage
0000000000317a40 00000000000000fc t st_TexImage
0000000000317b40 0000000000000674 t st_finalize_texture
00000000003181c0 00000000000000e0 t st_NewTextureHandle
00000000003182a0 0000000000000140 t st_init_texture_functions
00000000003183e0 0000000000000050 t st_query_memory_info
0000000000318430 0000000000000260 t st_invalidate_state
0000000000318690 0000000000000018 t st_emit_string_marker
00000000003186b0 0000000000000018 t st_set_background_context
00000000003186d0 00000000000001c0 t free_zombie_shaders
0000000000318890 0000000000000020 t st_get_device_uuid
00000000003188b0 0000000000000020 t st_get_driver_uuid
00000000003188d0 000000000000005c t st_Enable
0000000000318930 000000000000004c t destroy_framebuffer_attachment_sampler_cb
0000000000318980 0000000000000008 t destroy_tex_sampler_cb
0000000000318990 00000000000000cc t free_zombie_sampler_views
0000000000318a60 00000000000001c4 t st_destroy_context_priv
0000000000318c30 0000000000000018 t st_invalidate_buffers
0000000000318c50 000000000000007c t st_save_zombie_sampler_view
0000000000318cd0 0000000000000084 t st_save_zombie_shader
0000000000318d60 000000000000001c t st_context_free_zombie_objects
0000000000318d80 0000000000000adc t st_create_context
0000000000319860 0000000000000298 t st_destroy_context
0000000000319b00 0000000000000054 t st_debug_message
0000000000319b60 000000000000005c t st_debug_init
0000000000319bc0 0000000000000098 t st_update_debug_callback
0000000000319c60 0000000000000320 t st_draw_vbo
0000000000319f80 00000000000002d0 t st_indirect_draw_vbo
000000000031a250 0000000000000018 t st_init_draw_functions
000000000031a270 000000000000021c t st_draw_quad
000000000031a490 00000000000000d8 t init_format_extensions
000000000031a570 0000000000000e88 t st_init_limits
000000000031b400 00000000000013a8 t st_init_extensions
000000000031c7b0 0000000000000114 t st_mesa_format_to_pipe_format
000000000031c8d0 0000000000000028 t st_pipe_format_to_mesa_format
000000000031c900 00000000000000b8 t st_choose_matching_format
000000000031c9c0 0000000000000258 t st_choose_format
000000000031cc20 0000000000000064 t st_choose_renderbuffer_format
000000000031cc90 00000000000000d4 t st_QuerySamplesForFormat.isra.0
000000000031cd70 000000000000036c T st_ChooseTextureFormat
000000000031d0e0 00000000000000fc T st_QueryInternalFormat
000000000031d1e0 0000000000000254 t st_translate_color
000000000031d440 00000000000004e4 T st_generate_mipmap
000000000031d930 0000000000000070 t get_pbo_conversion
000000000031d9a0 00000000000002a0 t build_conversion
000000000031dc40 0000000000000fe4 t create_fs_tgsi.isra.0
000000000031ec30 00000000000000a8 t st_pbo_addresses_setup
000000000031ece0 0000000000000124 t st_pbo_addresses_pixelstore
000000000031ee10 0000000000000024 t st_pbo_addresses_invert_y
000000000031ee40 000000000000027c t st_pbo_create_vs
000000000031f0c0 00000000000002d0 t st_pbo_create_gs
000000000031f390 000000000000030c t st_pbo_draw
000000000031f6a0 0000000000000068 t st_pbo_get_upload_fs
000000000031f710 0000000000000078 t st_pbo_get_download_fs
000000000031f790 0000000000000190 t st_init_pbo_helpers
000000000031f920 00000000000000d0 t st_destroy_pbo_helpers
000000000031f9f0 0000000000000190 t delete_variant
000000000031fb80 0000000000000168 t st_create_vp_variant
000000000031fcf0 000000000000044c t st_create_fp_variant
0000000000320140 0000000000000110 t st_unbind_program.isra.0
0000000000320250 0000000000000094 t set_affected_state_flags.isra.0
00000000003202f0 00000000000000cc t destroy_program_variants_cb
00000000003203c0 000000000000010c t destroy_shader_program_variants_cb
00000000003204d0 00000000000001ac t st_set_prog_affected_state_flags
0000000000320680 000000000000006c t st_release_variants
00000000003206f0 00000000000000fc t st_release_program
00000000003207f0 00000000000000bc t st_prepare_vertex_program
00000000003208b0 00000000000000ec t st_translate_stream_output_info
00000000003209a0 00000000000002c0 t st_translate_vertex_program
0000000000320c60 00000000000000b8 t st_get_vp_variant
0000000000320d20 0000000000000924 t st_translate_fragment_program
0000000000321650 00000000000000bc t st_get_fp_variant
0000000000321710 0000000000000460 t st_translate_common_program
0000000000321b70 00000000000001f8 t st_get_common_variant
0000000000321d70 0000000000000054 t st_destroy_program_variants
0000000000321dd0 0000000000000148 t st_finalize_program
0000000000321f20 0000000000000088 t st_window_rectangles_to_blit
0000000000321fb0 00000000000001c4 t st_deserialise_ir_program
0000000000322180 0000000000000140 t st_serialise_ir_program.part.0
00000000003222c0 0000000000000004 T st_get_program_binary_driver_sha1
00000000003222d0 00000000000000bc t st_store_ir_in_disk_cache
0000000000322390 0000000000000100 t st_load_ir_from_disk_cache
0000000000322490 0000000000000014 T st_serialise_tgsi_program
00000000003224b0 0000000000000014 T st_serialise_tgsi_program_binary
00000000003224d0 0000000000000008 T st_deserialise_tgsi_program
00000000003224e0 000000000000008c t st_destroy_bound_texture_handles_per_stage
0000000000322570 0000000000000090 t st_destroy_bound_image_handles_per_stage
0000000000322600 0000000000000080 t st_texture_create
0000000000322680 00000000000001e8 t st_gl_texture_dims_to_pipe_dims
0000000000322870 00000000000000e8 t st_texture_match_image
0000000000322960 0000000000000148 t st_texture_image_map
0000000000322ab0 0000000000000050 t st_texture_image_unmap
0000000000322b00 0000000000000154 t st_texture_image_copy
0000000000322c60 00000000000000a4 t st_create_color_map_texture
0000000000322d10 000000000000003c t st_destroy_bound_texture_handles
0000000000322d50 000000000000003c t st_destroy_bound_image_handles
0000000000322d90 000000000000016c t st_make_bound_samplers_resident
0000000000322f00 000000000000011c t st_make_bound_images_resident
0000000000323020 00000000000000a8 t transform_decl
00000000003230d0 00000000000000bc t prolog_common
0000000000323190 00000000000000ec t prolog_last_vertex_stage
0000000000323280 0000000000000310 t prolog_fs
0000000000323590 00000000000003b4 t epilog_fs
0000000000323950 0000000000000558 t epilog_last_vertex_stage
0000000000323eb0 0000000000000138 t transform_instr
0000000000323ff0 0000000000000130 t st_tgsi_lower_depth_clamp
0000000000324120 0000000000000008 t st_tgsi_lower_depth_clamp_fs
0000000000324130 00000000000000ac t emit_samp
00000000003241e0 00000000000003c4 t yuv_to_rgb
00000000003245b0 0000000000000948 t transform_instr
0000000000324f00 00000000000000ac t st_tgsi_lower_yuv
0000000000324fb0 0000000000000008 t always_available(_mesa_glsl_parse_state const*)
0000000000324fc0 0000000000000040 t compatibility_vs_only(_mesa_glsl_parse_state const*)
0000000000325000 0000000000000030 t derivatives_only(_mesa_glsl_parse_state const*)
0000000000325030 0000000000000010 t gs_only(_mesa_glsl_parse_state const*)
0000000000325040 000000000000000c t v110(_mesa_glsl_parse_state const*)
0000000000325050 000000000000002c t v120(_mesa_glsl_parse_state const*)
0000000000325080 000000000000002c t v130(_mesa_glsl_parse_state const*)
00000000003250b0 0000000000000028 t v130_desktop(_mesa_glsl_parse_state const*)
00000000003250e0 0000000000000028 t v460_desktop(_mesa_glsl_parse_state const*)
0000000000325110 000000000000002c t v140_or_es3(_mesa_glsl_parse_state const*)
0000000000325140 0000000000000008 t texture_rectangle(_mesa_glsl_parse_state const*)
0000000000325150 0000000000000008 t texture_external(_mesa_glsl_parse_state const*)
0000000000325160 0000000000000038 t texture_external_es3(_mesa_glsl_parse_state const*)
00000000003251a0 0000000000000008 t shader_texture_lod(_mesa_glsl_parse_state const*)
00000000003251b0 0000000000000014 t shader_texture_lod_and_rect(_mesa_glsl_parse_state const*)
00000000003251d0 0000000000000060 t shader_integer_mix(_mesa_glsl_parse_state const*)
0000000000325230 000000000000003c t shader_packing_or_es3(_mesa_glsl_parse_state const*)
0000000000325270 0000000000000064 t shader_packing_or_es3_or_gpu_shader5(_mesa_glsl_parse_state const*)
00000000003252e0 0000000000000008 t gpu_shader4(_mesa_glsl_parse_state const*)
00000000003252f0 0000000000000024 t gpu_shader4_integer(_mesa_glsl_parse_state const*)
0000000000325320 0000000000000024 t gpu_shader4_array(_mesa_glsl_parse_state const*)
0000000000325350 0000000000000030 t gpu_shader4_array_integer(_mesa_glsl_parse_state const*)
0000000000325380 0000000000000024 t gpu_shader4_rect(_mesa_glsl_parse_state const*)
00000000003253b0 0000000000000030 t gpu_shader4_rect_integer(_mesa_glsl_parse_state const*)
00000000003253e0 0000000000000024 t gpu_shader4_tbo(_mesa_glsl_parse_state const*)
0000000000325410 0000000000000030 t gpu_shader4_tbo_integer(_mesa_glsl_parse_state const*)
0000000000325440 000000000000003c t v130_or_gpu_shader4(_mesa_glsl_parse_state const*)
0000000000325480 0000000000000038 t gpu_shader5(_mesa_glsl_parse_state const*)
00000000003254c0 0000000000000038 t gpu_shader5_or_es31(_mesa_glsl_parse_state const*)
0000000000325500 0000000000000064 t shader_packing_or_es31_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000325570 000000000000002c t texture_array(_mesa_glsl_parse_state const*)
00000000003255a0 000000000000003c t texture_multisample(_mesa_glsl_parse_state const*)
00000000003255e0 0000000000000038 t texture_query_levels(_mesa_glsl_parse_state const*)
0000000000325620 0000000000000008 t texture_texture4(_mesa_glsl_parse_state const*)
0000000000325630 0000000000000074 t texture_gather_only_or_es31(_mesa_glsl_parse_state const*)
00000000003256b0 0000000000000038 t tex3d(_mesa_glsl_parse_state const*)
00000000003256f0 0000000000000040 t derivatives_tex3d(_mesa_glsl_parse_state const*)
0000000000325730 000000000000003c t shader_atomic_counters(_mesa_glsl_parse_state const*)
0000000000325770 0000000000000008 t shader_atomic_counter_ops(_mesa_glsl_parse_state const*)
0000000000325780 0000000000000040 t shader_atomic_counter_ops_or_v460_desktop(_mesa_glsl_parse_state const*)
00000000003257c0 0000000000000008 t shader_ballot(_mesa_glsl_parse_state const*)
00000000003257d0 0000000000000008 t supports_arb_fragment_shader_interlock(_mesa_glsl_parse_state const*)
00000000003257e0 0000000000000008 t supports_nv_fragment_shader_interlock(_mesa_glsl_parse_state const*)
00000000003257f0 0000000000000008 t shader_clock(_mesa_glsl_parse_state const*)
0000000000325800 0000000000000008 t shader_trinary_minmax(_mesa_glsl_parse_state const*)
0000000000325810 0000000000000008 t shader_image_load_store_ext(_mesa_glsl_parse_state const*)
0000000000325820 0000000000000008 t shader_image_atomic_add_float(_mesa_glsl_parse_state const*)
0000000000325830 0000000000000038 t shader_image_size(_mesa_glsl_parse_state const*)
0000000000325870 0000000000000038 t shader_samples(_mesa_glsl_parse_state const*)
00000000003258b0 0000000000000014 t int64(_mesa_glsl_parse_state const*)
00000000003258d0 0000000000000044 t int64_fp64(_mesa_glsl_parse_state const*)
0000000000325920 0000000000000010 t compute_shader(_mesa_glsl_parse_state const*)
0000000000325930 000000000000003c t compute_shader_supported(_mesa_glsl_parse_state const*)
0000000000325970 0000000000000074 t buffer_atomics_supported(_mesa_glsl_parse_state const*)
00000000003259f0 0000000000000014 t barrier_supported(_mesa_glsl_parse_state const*)
0000000000325a10 0000000000000008 t vote(_mesa_glsl_parse_state const*)
0000000000325a20 0000000000000040 t vote_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000325a60 0000000000000014 t integer_functions_supported(_mesa_glsl_parse_state const*)
0000000000325a80 0000000000000014 t NV_shader_atomic_float_supported(_mesa_glsl_parse_state const*)
0000000000325aa0 0000000000000014 t shader_atomic_float_exchange(_mesa_glsl_parse_state const*)
0000000000325ac0 0000000000000014 t INTEL_shader_atomic_float_minmax_supported(_mesa_glsl_parse_state const*)
0000000000325ae0 0000000000000008 t shader_atomic_float_minmax(_mesa_glsl_parse_state const*)
0000000000325af0 0000000000000008 t demote_to_helper_invocation(_mesa_glsl_parse_state const*)
0000000000325b00 0000000000000008 t shader_integer_functions2(_mesa_glsl_parse_state const*)
0000000000325b10 0000000000000024 t is_nir(_mesa_glsl_parse_state const*)
0000000000325b40 0000000000000024 t is_not_nir(_mesa_glsl_parse_state const*)
0000000000325b70 0000000000000004 W glsl_symbol_table::_ralloc_destructor(void*)
0000000000325b80 00000000000000f4 t (anonymous namespace)::builtin_builder::new_sig(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*), int, ...)
0000000000325c80 0000000000000060 t v130_derivatives_only(_mesa_glsl_parse_state const*)
0000000000325ce0 000000000000003c t texture_query_lod(_mesa_glsl_parse_state const*)
0000000000325d20 0000000000000024 t shader_integer_functions2_int64(_mesa_glsl_parse_state const*)
0000000000325d50 0000000000000048 t shader_image_load_store(_mesa_glsl_parse_state const*)
0000000000325da0 0000000000000050 t shader_image_atomic_exchange_float(_mesa_glsl_parse_state const*)
0000000000325df0 0000000000000080 t lod_exists_in_stage(_mesa_glsl_parse_state const*)
0000000000325e70 000000000000004c t texture_multisample_array(_mesa_glsl_parse_state const*)
0000000000325ec0 000000000000007c t derivatives(_mesa_glsl_parse_state const*)
0000000000325f40 0000000000000064 t derivative_control(_mesa_glsl_parse_state const*)
0000000000325fb0 0000000000000074 t fs_interpolate_at(_mesa_glsl_parse_state const*)
0000000000326030 00000000000000dc t (anonymous namespace)::builtin_builder::add_function(char const*, ...) [clone .constprop.0]
0000000000326110 0000000000000040 t shader_bit_encoding(_mesa_glsl_parse_state const*)
0000000000326150 0000000000000044 t texture_buffer(_mesa_glsl_parse_state const*)
00000000003261a0 0000000000000040 t texture_gather_or_es31(_mesa_glsl_parse_state const*)
00000000003261e0 0000000000000058 t texture_gather_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326240 0000000000000050 t gpu_shader5_es(_mesa_glsl_parse_state const*)
0000000000326290 0000000000000050 t shader_image_atomic(_mesa_glsl_parse_state const*)
00000000003262e0 0000000000000054 t texture_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000326340 0000000000000008 t shader_atomic_float_add(_mesa_glsl_parse_state const*)
0000000000326350 0000000000000024 t shader_clock_int64(_mesa_glsl_parse_state const*)
0000000000326380 0000000000000050 t gpu_shader5_or_OES_texture_cube_map_array(_mesa_glsl_parse_state const*)
00000000003263d0 0000000000000040 t fp64(_mesa_glsl_parse_state const*)
0000000000326410 0000000000000040 t v110_derivatives_only(_mesa_glsl_parse_state const*)
0000000000326450 0000000000000034 t gpu_shader4_derivs_only(_mesa_glsl_parse_state const*)
0000000000326490 000000000000004c t gpu_shader4_integer_derivs_only(_mesa_glsl_parse_state const*)
00000000003264e0 000000000000004c t gpu_shader4_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000326530 0000000000000060 t v400_derivatives_only(_mesa_glsl_parse_state const*)
0000000000326590 0000000000000040 t gpu_shader5_or_es31_or_integer_functions(_mesa_glsl_parse_state const*)
00000000003265d0 0000000000000048 t texture_samples_identical(_mesa_glsl_parse_state const*)
0000000000326620 0000000000000044 t gs_streams(_mesa_glsl_parse_state const*)
0000000000326670 0000000000000058 t gpu_shader4_array_integer_derivs_only(_mesa_glsl_parse_state const*)
00000000003266d0 0000000000000050 t texture_samples_identical_array(_mesa_glsl_parse_state const*)
0000000000326720 0000000000000050 t texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326770 0000000000000048 t v130_or_gpu_shader4_and_tex_shadow_lod(_mesa_glsl_parse_state const*)
00000000003267c0 0000000000000074 t derivatives_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326840 00000000000000bc t v130_or_gpu_shader4_and_tex_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326900 0000000000000064 t es31_not_gs5(_mesa_glsl_parse_state const*)
0000000000326970 000000000000009c t texture_array_lod(_mesa_glsl_parse_state const*)
0000000000326a10 0000000000000088 t tex3d_lod(_mesa_glsl_parse_state const*)
0000000000326aa0 0000000000000060 t v110_lod(_mesa_glsl_parse_state const*)
0000000000326b00 0000000000000060 t tex1d_lod(_mesa_glsl_parse_state const*)
0000000000326b60 00000000000000e4 t (anonymous namespace)::builtin_builder::_EmitStreamVertex(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326c50 00000000000000e4 t (anonymous namespace)::builtin_builder::_EndStreamPrimitive(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326d40 000000000000007c t (anonymous namespace)::builtin_builder::_image_samples_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000326dc0 00000000000001c0 t (anonymous namespace)::builtin_builder::call(ir_function*, ir_variable*, exec_list) [clone .constprop.0] [clone .isra.0]
0000000000326f80 00000000000003cc t (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id) [clone .constprop.0]
0000000000327350 0000000000000468 t (anonymous namespace)::builtin_builder::add_image_functions(bool) [clone .constprop.0]
00000000003277c0 0000000000000090 t (anonymous namespace)::builtin_builder::_memory_barrier(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000327850 0000000000000098 t (anonymous namespace)::builtin_builder::_atomic_intrinsic2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
00000000003278f0 00000000000000a4 t (anonymous namespace)::builtin_builder::_read_invocation_intrinsic(glsl_type const*) [clone .constprop.0]
00000000003279a0 00000000000000b0 t (anonymous namespace)::builtin_builder::_atomic_counter_intrinsic1(bool (*)(_mesa_glsl_parse_state const*), ir_intrinsic_id) [clone .constprop.0]
0000000000327a50 00000000000000b0 t (anonymous namespace)::builtin_builder::_image_size_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000327b00 00000000000000c0 t (anonymous namespace)::builtin_builder::_atomic_intrinsic3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
0000000000327bc0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise1(glsl_type const*) [clone .constprop.0]
0000000000327ca0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise2(glsl_type const*) [clone .constprop.0]
0000000000327d80 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise3(glsl_type const*) [clone .constprop.0]
0000000000327e60 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise4(glsl_type const*) [clone .constprop.0]
0000000000327f40 00000000000000cc t (anonymous namespace)::builtin_builder::_interpolateAtCentroid(glsl_type const*) [clone .constprop.0]
0000000000328010 00000000000000d4 t (anonymous namespace)::builtin_builder::unop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*) [clone .constprop.0]
00000000003280f0 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToInt(glsl_type const*) [clone .constprop.0]
00000000003281c0 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToUint(glsl_type const*) [clone .constprop.0]
0000000000328290 00000000000000c8 t (anonymous namespace)::builtin_builder::_intBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000328360 00000000000000c8 t (anonymous namespace)::builtin_builder::_uintBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000328430 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToInt64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328500 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToUint64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003285d0 00000000000000c8 t (anonymous namespace)::builtin_builder::_int64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003286a0 00000000000000c8 t (anonymous namespace)::builtin_builder::_uint64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328770 0000000000000140 t (anonymous namespace)::builtin_builder::_shader_clock(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003288b0 00000000000000e8 t (anonymous namespace)::builtin_builder::_radians(glsl_type const*) [clone .constprop.0]
00000000003289a0 00000000000000e8 t (anonymous namespace)::builtin_builder::_degrees(glsl_type const*) [clone .constprop.0]
0000000000328a90 0000000000000118 t (anonymous namespace)::builtin_builder::_textureQueryLevels(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328bb0 00000000000000e8 t (anonymous namespace)::builtin_builder::_isnan(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328ca0 00000000000000f8 t (anonymous namespace)::builtin_builder::_any(glsl_type const*) [clone .constprop.0]
0000000000328da0 00000000000000f8 t (anonymous namespace)::builtin_builder::_all(glsl_type const*) [clone .constprop.0]
0000000000328ea0 0000000000000118 t (anonymous namespace)::builtin_builder::_textureSamples(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328fc0 0000000000000100 t (anonymous namespace)::builtin_builder::_read_first_invocation(glsl_type const*) [clone .constprop.0]
00000000003290c0 0000000000000084 t (anonymous namespace)::builtin_builder::matrix_elt(ir_variable*, int, int) [clone .constprop.0]
0000000000329150 00000000000000ec t (anonymous namespace)::builtin_builder::_length(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329240 0000000000000110 t (anonymous namespace)::builtin_builder::_vote(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000329350 00000000000000f4 t (anonymous namespace)::builtin_builder::_tan(glsl_type const*) [clone .constprop.0]
0000000000329450 000000000000011c t (anonymous namespace)::builtin_builder::_atomic_counter_op(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000329570 0000000000000254 t (anonymous namespace)::builtin_builder::asin_expr(ir_variable*, float, float) [clone .constprop.0]
00000000003297d0 00000000000000e8 t (anonymous namespace)::builtin_builder::_acos(glsl_type const*) [clone .constprop.0]
00000000003298c0 00000000000000bc t (anonymous namespace)::builtin_builder::_asin(glsl_type const*) [clone .constprop.0]
0000000000329980 0000000000000128 t (anonymous namespace)::builtin_builder::_interpolateAtOffset(glsl_type const*) [clone .constprop.0]
0000000000329ab0 0000000000000128 t (anonymous namespace)::builtin_builder::_interpolateAtSample(glsl_type const*) [clone .constprop.0]
0000000000329be0 00000000000000fc t (anonymous namespace)::builtin_builder::_countTrailingZeros(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329ce0 0000000000000130 t (anonymous namespace)::builtin_builder::_atomic_op2(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329e10 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidth(glsl_type const*) [clone .constprop.0]
0000000000329f20 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthCoarse(glsl_type const*) [clone .constprop.0]
000000000032a030 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthFine(glsl_type const*) [clone .constprop.0]
000000000032a140 000000000000013c t (anonymous namespace)::builtin_builder::_read_invocation(glsl_type const*) [clone .constprop.0]
000000000032a280 0000000000000114 t (anonymous namespace)::builtin_builder::_determinant_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a3a0 0000000000000168 t (anonymous namespace)::builtin_builder::_textureQueryLod(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032a510 0000000000000168 t (anonymous namespace)::builtin_builder::_textureSamplesIdentical(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032a680 0000000000000170 t (anonymous namespace)::builtin_builder::_isinf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a7f0 000000000000011c t (anonymous namespace)::builtin_builder::_sinh(glsl_type const*) [clone .constprop.0]
000000000032a910 000000000000011c t (anonymous namespace)::builtin_builder::_cosh(glsl_type const*) [clone .constprop.0]
000000000032aa30 000000000000014c t (anonymous namespace)::builtin_builder::_atomic_op3(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032ab80 0000000000000160 t (anonymous namespace)::builtin_builder::_atomic_counter_op2(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000032ace0 0000000000000164 t (anonymous namespace)::builtin_builder::_clamp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032ae50 0000000000000164 t (anonymous namespace)::builtin_builder::_mix_lrp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032afc0 0000000000000164 t (anonymous namespace)::builtin_builder::_mix_sel(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032b130 0000000000000158 t (anonymous namespace)::builtin_builder::_fma(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b290 0000000000000154 t (anonymous namespace)::builtin_builder::_dfrexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032b3f0 0000000000000160 t (anonymous namespace)::builtin_builder::_min3(glsl_type const*) [clone .constprop.0]
000000000032b550 0000000000000160 t (anonymous namespace)::builtin_builder::_max3(glsl_type const*) [clone .constprop.0]
000000000032b6b0 0000000000000144 t (anonymous namespace)::builtin_builder::_acosh(glsl_type const*) [clone .constprop.0]
000000000032b800 0000000000000168 t (anonymous namespace)::builtin_builder::_normalize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b970 0000000000000170 t (anonymous namespace)::builtin_builder::binop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*, glsl_type const*, bool) [clone .constprop.0]
000000000032bae0 0000000000000090 t (anonymous namespace)::builtin_builder::_absoluteDifference(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032bb70 0000000000000064 t (anonymous namespace)::builtin_builder::_dot(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032bbe0 0000000000000164 t (anonymous namespace)::builtin_builder::_atanh(glsl_type const*) [clone .constprop.0]
000000000032bd50 00000000000001f4 t (anonymous namespace)::builtin_builder::_transpose(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032bf50 000000000000018c t (anonymous namespace)::builtin_builder::_asinh(glsl_type const*) [clone .constprop.0]
000000000032c0e0 00000000000001b0 t (anonymous namespace)::builtin_builder::_uaddCarry(glsl_type const*) [clone .constprop.0]
000000000032c290 00000000000001b0 t (anonymous namespace)::builtin_builder::_usubBorrow(glsl_type const*) [clone .constprop.0]
000000000032c440 00000000000001ac t (anonymous namespace)::builtin_builder::_cross(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c5f0 00000000000001b8 t (anonymous namespace)::builtin_builder::_reflect(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c7b0 0000000000000210 t (anonymous namespace)::builtin_builder::_matrixCompMult(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c9c0 00000000000001d8 t (anonymous namespace)::builtin_builder::_modf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032cba0 00000000000001f0 t (anonymous namespace)::builtin_builder::_faceforward(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032cd90 00000000000001ec t (anonymous namespace)::builtin_builder::_bitfieldExtract(glsl_type const*) [clone .constprop.0]
000000000032cf80 00000000000001e0 t (anonymous namespace)::builtin_builder::_mid3(glsl_type const*) [clone .constprop.0]
000000000032d160 0000000000000230 t (anonymous namespace)::builtin_builder::_bitfieldInsert(glsl_type const*) [clone .constprop.0]
000000000032d390 000000000000057c t (anonymous namespace)::builtin_builder::do_atan(ir_builder::ir_factory&, glsl_type const*, ir_variable*, ir_builder::operand) [clone .constprop.0]
000000000032d910 000000000000010c t (anonymous namespace)::builtin_builder::_atan(glsl_type const*) [clone .constprop.0]
000000000032da20 000000000000022c t (anonymous namespace)::builtin_builder::_distance(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032dc50 000000000000025c t (anonymous namespace)::builtin_builder::_atomic_counter_op1(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000032deb0 000000000000022c t (anonymous namespace)::builtin_builder::_tanh(glsl_type const*) [clone .constprop.0]
000000000032e0e0 00000000000001c8 t (anonymous namespace)::builtin_builder::_textureSize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032e2b0 0000000000000270 t (anonymous namespace)::builtin_builder::_determinant_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032e520 00000000000003a0 t (anonymous namespace)::builtin_builder::_smoothstep(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032e8c0 0000000000000474 t (anonymous namespace)::builtin_builder::_mulExtended(glsl_type const*) [clone .constprop.0]
000000000032ed40 00000000000004b0 t (anonymous namespace)::builtin_builder::_refract(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032f1f0 00000000000004bc t (anonymous namespace)::builtin_builder::_frexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032f6b0 0000000000000248 t (anonymous namespace)::builtin_builder::_outerProduct(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032f900 0000000000000308 t (anonymous namespace)::builtin_builder::_inverse_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032fc10 0000000000000708 t (anonymous namespace)::builtin_builder::_atan2(glsl_type const*) [clone .constprop.0]
0000000000330320 000000000000027c t (anonymous namespace)::builtin_builder::_image_prototype(glsl_type const*, unsigned int, unsigned int)
00000000003305a0 00000000000004c0 t (anonymous namespace)::builtin_builder::_step(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000330a60 000000000000024c t (anonymous namespace)::builtin_builder::_textureCubeArrayShadow(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000330cb0 0000000000000308 t (anonymous namespace)::builtin_builder::_texelFetch(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000330fc0 0000000000000a2c t (anonymous namespace)::builtin_builder::_inverse_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003319f0 0000000000000664 t (anonymous namespace)::builtin_builder::_texture(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, int) [clone .constprop.0]
0000000000332060 00000000000013d8 t (anonymous namespace)::builtin_builder::_determinant_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000333440 000000000000239c t (anonymous namespace)::builtin_builder::_inverse_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003357e0 0000000000014078 t (anonymous namespace)::builtin_builder::create_builtins() [clone .constprop.0]
0000000000349860 0000000000000eb4 t _mesa_glsl_builtin_functions_init_or_ref
000000000034a720 0000000000000078 t _mesa_glsl_builtin_functions_decref
000000000034a7a0 0000000000000098 t _mesa_glsl_find_builtin_function(_mesa_glsl_parse_state*, char const*, exec_list*)
000000000034a840 00000000000000a8 t _mesa_glsl_has_builtin_function(_mesa_glsl_parse_state*, char const*)
000000000034a8f0 000000000000000c t _mesa_glsl_get_builtin_function_shader()
000000000034a900 0000000000000054 t _mesa_get_main_function_signature(glsl_symbol_table*)
000000000034a960 00000000000003a8 t generate_ir::umul64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034ad10 00000000000002a8 t generate_ir::sign64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034afc0 0000000000001348 t generate_ir::udiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034c310 0000000000001700 t generate_ir::idiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034da10 0000000000001424 t generate_ir::umod64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034ee40 00000000000017f4 t generate_ir::imod64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000350640 000000000000002c t has_AMD_conservative_depth(gl_context const*, gl_api, unsigned char)
0000000000350670 000000000000002c t has_AMD_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
00000000003506a0 000000000000002c t has_AMD_shader_stencil_export(gl_context const*, gl_api, unsigned char)
00000000003506d0 000000000000002c t has_AMD_shader_trinary_minmax(gl_context const*, gl_api, unsigned char)
0000000000350700 000000000000002c t has_AMD_texture_texture4(gl_context const*, gl_api, unsigned char)
0000000000350730 000000000000002c t has_AMD_vertex_shader_layer(gl_context const*, gl_api, unsigned char)
0000000000350760 000000000000002c t has_AMD_vertex_shader_viewport_index(gl_context const*, gl_api, unsigned char)
0000000000350790 000000000000002c t has_ANDROID_extension_pack_es31a(gl_context const*, gl_api, unsigned char)
00000000003507c0 000000000000002c t has_ARB_ES3_1_compatibility(gl_context const*, gl_api, unsigned char)
00000000003507f0 000000000000002c t has_ARB_ES3_2_compatibility(gl_context const*, gl_api, unsigned char)
0000000000350820 000000000000002c t has_ARB_arrays_of_arrays(gl_context const*, gl_api, unsigned char)
0000000000350850 000000000000002c t has_ARB_bindless_texture(gl_context const*, gl_api, unsigned char)
0000000000350880 000000000000002c t has_ARB_compatibility(gl_context const*, gl_api, unsigned char)
00000000003508b0 000000000000002c t has_ARB_compute_shader(gl_context const*, gl_api, unsigned char)
00000000003508e0 000000000000002c t has_ARB_compute_variable_group_size(gl_context const*, gl_api, unsigned char)
0000000000350910 000000000000002c t has_ARB_conservative_depth(gl_context const*, gl_api, unsigned char)
0000000000350940 000000000000002c t has_ARB_cull_distance(gl_context const*, gl_api, unsigned char)
0000000000350970 000000000000002c t has_ARB_derivative_control(gl_context const*, gl_api, unsigned char)
00000000003509a0 000000000000002c t has_ARB_draw_buffers(gl_context const*, gl_api, unsigned char)
00000000003509d0 000000000000002c t has_ARB_draw_instanced(gl_context const*, gl_api, unsigned char)
0000000000350a00 000000000000002c t has_ARB_enhanced_layouts(gl_context const*, gl_api, unsigned char)
0000000000350a30 000000000000002c t has_ARB_explicit_attrib_location(gl_context const*, gl_api, unsigned char)
0000000000350a60 000000000000002c t has_ARB_explicit_uniform_location(gl_context const*, gl_api, unsigned char)
0000000000350a90 000000000000002c t has_ARB_fragment_coord_conventions(gl_context const*, gl_api, unsigned char)
0000000000350ac0 000000000000002c t has_ARB_fragment_layer_viewport(gl_context const*, gl_api, unsigned char)
0000000000350af0 000000000000002c t has_ARB_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000350b20 000000000000002c t has_ARB_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000350b50 000000000000002c t has_ARB_gpu_shader_fp64(gl_context const*, gl_api, unsigned char)
0000000000350b80 000000000000002c t has_ARB_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
0000000000350bb0 000000000000002c t has_ARB_post_depth_coverage(gl_context const*, gl_api, unsigned char)
0000000000350be0 000000000000002c t has_ARB_sample_shading(gl_context const*, gl_api, unsigned char)
0000000000350c10 000000000000002c t has_ARB_separate_shader_objects(gl_context const*, gl_api, unsigned char)
0000000000350c40 000000000000002c t has_ARB_shader_atomic_counter_ops(gl_context const*, gl_api, unsigned char)
0000000000350c70 000000000000002c t has_ARB_shader_atomic_counters(gl_context const*, gl_api, unsigned char)
0000000000350ca0 000000000000002c t has_ARB_shader_ballot(gl_context const*, gl_api, unsigned char)
0000000000350cd0 000000000000002c t has_ARB_shader_bit_encoding(gl_context const*, gl_api, unsigned char)
0000000000350d00 000000000000002c t has_ARB_shader_clock(gl_context const*, gl_api, unsigned char)
0000000000350d30 000000000000002c t has_ARB_shader_draw_parameters(gl_context const*, gl_api, unsigned char)
0000000000350d60 000000000000002c t has_ARB_shader_group_vote(gl_context const*, gl_api, unsigned char)
0000000000350d90 000000000000002c t has_ARB_shader_image_load_store(gl_context const*, gl_api, unsigned char)
0000000000350dc0 000000000000002c t has_ARB_shader_image_size(gl_context const*, gl_api, unsigned char)
0000000000350df0 000000000000002c t has_ARB_shader_precision(gl_context const*, gl_api, unsigned char)
0000000000350e20 000000000000002c t has_ARB_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000350e50 000000000000002c t has_ARB_shader_storage_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000350e80 000000000000002c t has_ARB_shader_subroutine(gl_context const*, gl_api, unsigned char)
0000000000350eb0 000000000000002c t has_ARB_shader_texture_image_samples(gl_context const*, gl_api, unsigned char)
0000000000350ee0 000000000000002c t has_ARB_shader_texture_lod(gl_context const*, gl_api, unsigned char)
0000000000350f10 000000000000002c t has_ARB_shader_viewport_layer_array(gl_context const*, gl_api, unsigned char)
0000000000350f40 000000000000002c t has_ARB_shading_language_420pack(gl_context const*, gl_api, unsigned char)
0000000000350f70 000000000000002c t has_ARB_shading_language_include(gl_context const*, gl_api, unsigned char)
0000000000350fa0 000000000000002c t has_ARB_shading_language_packing(gl_context const*, gl_api, unsigned char)
0000000000350fd0 000000000000002c t has_ARB_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000351000 000000000000002c t has_ARB_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000351030 000000000000002c t has_ARB_texture_gather(gl_context const*, gl_api, unsigned char)
0000000000351060 000000000000002c t has_ARB_texture_multisample(gl_context const*, gl_api, unsigned char)
0000000000351090 000000000000002c t has_ARB_texture_query_levels(gl_context const*, gl_api, unsigned char)
00000000003510c0 000000000000002c t has_ARB_texture_query_lod(gl_context const*, gl_api, unsigned char)
00000000003510f0 000000000000002c t has_ARB_texture_rectangle(gl_context const*, gl_api, unsigned char)
0000000000351120 0000000000000030 t has_ARB_uniform_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000351150 0000000000000030 t has_ARB_vertex_attrib_64bit(gl_context const*, gl_api, unsigned char)
0000000000351180 0000000000000030 t has_ARB_viewport_array(gl_context const*, gl_api, unsigned char)
00000000003511b0 0000000000000030 t has_EXT_blend_func_extended(gl_context const*, gl_api, unsigned char)
00000000003511e0 0000000000000030 t has_EXT_clip_cull_distance(gl_context const*, gl_api, unsigned char)
0000000000351210 0000000000000030 t has_EXT_demote_to_helper_invocation(gl_context const*, gl_api, unsigned char)
0000000000351240 0000000000000030 t has_EXT_draw_buffers(gl_context const*, gl_api, unsigned char)
0000000000351270 0000000000000030 t has_EXT_draw_instanced(gl_context const*, gl_api, unsigned char)
00000000003512a0 0000000000000030 t has_EXT_frag_depth(gl_context const*, gl_api, unsigned char)
00000000003512d0 0000000000000030 t has_EXT_geometry_point_size(gl_context const*, gl_api, unsigned char)
0000000000351300 0000000000000030 t has_EXT_geometry_shader(gl_context const*, gl_api, unsigned char)
0000000000351330 0000000000000030 t has_EXT_gpu_shader4(gl_context const*, gl_api, unsigned char)
0000000000351360 0000000000000030 t has_EXT_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000351390 0000000000000030 t has_EXT_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003513c0 0000000000000030 t has_EXT_separate_shader_objects(gl_context const*, gl_api, unsigned char)
00000000003513f0 0000000000000030 t has_EXT_shader_framebuffer_fetch(gl_context const*, gl_api, unsigned char)
0000000000351420 0000000000000030 t has_EXT_shader_framebuffer_fetch_non_coherent(gl_context const*, gl_api, unsigned char)
0000000000351450 0000000000000030 t has_EXT_shader_image_load_formatted(gl_context const*, gl_api, unsigned char)
0000000000351480 0000000000000030 t has_EXT_shader_image_load_store(gl_context const*, gl_api, unsigned char)
00000000003514b0 0000000000000030 t has_EXT_shader_implicit_conversions(gl_context const*, gl_api, unsigned char)
00000000003514e0 0000000000000030 t has_EXT_shader_integer_mix(gl_context const*, gl_api, unsigned char)
0000000000351510 0000000000000030 t has_EXT_shader_io_blocks(gl_context const*, gl_api, unsigned char)
0000000000351540 0000000000000030 t has_EXT_shader_samples_identical(gl_context const*, gl_api, unsigned char)
0000000000351570 0000000000000030 t has_EXT_tessellation_point_size(gl_context const*, gl_api, unsigned char)
00000000003515a0 0000000000000030 t has_EXT_tessellation_shader(gl_context const*, gl_api, unsigned char)
00000000003515d0 0000000000000030 t has_EXT_texture_array(gl_context const*, gl_api, unsigned char)
0000000000351600 0000000000000030 t has_EXT_texture_buffer(gl_context const*, gl_api, unsigned char)
0000000000351630 0000000000000030 t has_EXT_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000351660 0000000000000030 t has_EXT_texture_query_lod(gl_context const*, gl_api, unsigned char)
0000000000351690 0000000000000030 t has_EXT_texture_shadow_lod(gl_context const*, gl_api, unsigned char)
00000000003516c0 0000000000000030 t has_INTEL_conservative_rasterization(gl_context const*, gl_api, unsigned char)
00000000003516f0 0000000000000030 t has_INTEL_shader_atomic_float_minmax(gl_context const*, gl_api, unsigned char)
0000000000351720 0000000000000030 t has_INTEL_shader_integer_functions2(gl_context const*, gl_api, unsigned char)
0000000000351750 0000000000000030 t has_KHR_blend_equation_advanced(gl_context const*, gl_api, unsigned char)
0000000000351780 0000000000000030 t has_MESA_shader_integer_functions(gl_context const*, gl_api, unsigned char)
00000000003517b0 0000000000000030 t has_NV_compute_shader_derivatives(gl_context const*, gl_api, unsigned char)
00000000003517e0 0000000000000030 t has_NV_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000351810 0000000000000030 t has_NV_image_formats(gl_context const*, gl_api, unsigned char)
0000000000351840 0000000000000030 t has_NV_shader_atomic_float(gl_context const*, gl_api, unsigned char)
0000000000351870 0000000000000030 t has_NV_viewport_array2(gl_context const*, gl_api, unsigned char)
00000000003518a0 0000000000000030 t has_OES_EGL_image_external(gl_context const*, gl_api, unsigned char)
00000000003518d0 0000000000000030 t has_OES_EGL_image_external_essl3(gl_context const*, gl_api, unsigned char)
0000000000351900 0000000000000030 t has_OES_geometry_point_size(gl_context const*, gl_api, unsigned char)
0000000000351930 0000000000000030 t has_OES_geometry_shader(gl_context const*, gl_api, unsigned char)
0000000000351960 0000000000000030 t has_OES_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000351990 0000000000000030 t has_OES_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003519c0 0000000000000030 t has_OES_sample_variables(gl_context const*, gl_api, unsigned char)
00000000003519f0 0000000000000030 t has_OES_shader_image_atomic(gl_context const*, gl_api, unsigned char)
0000000000351a20 0000000000000030 t has_OES_shader_io_blocks(gl_context const*, gl_api, unsigned char)
0000000000351a50 0000000000000030 t has_OES_shader_multisample_interpolation(gl_context const*, gl_api, unsigned char)
0000000000351a80 0000000000000030 t has_OES_standard_derivatives(gl_context const*, gl_api, unsigned char)
0000000000351ab0 0000000000000030 t has_OES_tessellation_point_size(gl_context const*, gl_api, unsigned char)
0000000000351ae0 0000000000000030 t has_OES_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000351b10 0000000000000030 t has_OES_texture_3D(gl_context const*, gl_api, unsigned char)
0000000000351b40 0000000000000030 t has_OES_texture_buffer(gl_context const*, gl_api, unsigned char)
0000000000351b70 0000000000000030 t has_OES_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000351ba0 0000000000000030 t has_OES_texture_storage_multisample_2d_array(gl_context const*, gl_api, unsigned char)
0000000000351bd0 0000000000000030 t has_OES_viewport_array(gl_context const*, gl_api, unsigned char)
0000000000351c00 0000000000000054 t ast_case_statement_list::print() const
0000000000351c60 00000000000000f8 t add_builtin_defines
0000000000351d60 00000000000000f8 t _mesa_glsl_msg(YYLTYPE const*, _mesa_glsl_parse_state*, unsigned int, char const*, std::__va_list)
0000000000351e60 000000000000000c T ast_node::print() const
0000000000351e70 000000000000000c T ast_demote_statement::print() const
0000000000351e80 0000000000000070 T ast_struct_specifier::print() const
0000000000351ef0 0000000000000090 t ast_subroutine_list::print() const
0000000000351f80 000000000000006c t ast_compound_statement::print() const
0000000000351ff0 000000000000006c T ast_switch_body::print() const
0000000000352060 00000000000004ec t ast_expression::print() const
0000000000352550 0000000000000144 T ast_iteration_statement::print() const
00000000003526a0 000000000000006c T ast_switch_statement::print() const
0000000000352710 000000000000005c T ast_expression_statement::print() const
0000000000352770 0000000000000058 t ast_case_label_list::print() const
00000000003527d0 0000000000000088 T ast_case_statement::print() const
0000000000352860 000000000000020c t _mesa_ast_type_qualifier_print(ast_type_qualifier const*)
0000000000352a70 0000000000000034 T ast_fully_specified_type::print() const
0000000000352ab0 000000000000008c T ast_declaration::print() const
0000000000352b40 00000000000000a0 T ast_jump_statement::print() const
0000000000352be0 000000000000009c T ast_selection_statement::print() const
0000000000352c80 0000000000000078 T ast_case_label::print() const
0000000000352d00 0000000000000090 T ast_parameter_declarator::print() const
0000000000352d90 00000000000000ac t ast_function::print() const
0000000000352e40 0000000000000088 T ast_function_definition::print() const
0000000000352ed0 0000000000000100 T ast_declarator_list::print() const
0000000000352fd0 000000000000003c t glsl_compute_version_string(void*, bool, unsigned int)
0000000000353010 0000000000000074 t _mesa_glsl_error(YYLTYPE*, _mesa_glsl_parse_state*, char const*, ...)
0000000000353090 00000000000001f4 t _mesa_glsl_parse_state::check_version(unsigned int, unsigned int, YYLTYPE*, char const*, ...)
0000000000353290 0000000000000364 t _mesa_glsl_parse_state::process_version_directive(YYLTYPE*, int, char const*)
0000000000353600 000000000000007c t _mesa_glsl_warning(YYLTYPE const*, _mesa_glsl_parse_state*, char const*, ...)
0000000000353680 00000000000002f0 t _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)
0000000000353970 0000000000000754 t _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
0000000000353970 0000000000000754 T _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
00000000003540d0 00000000000001cc t _mesa_ast_set_aggregate_type(glsl_type const*, ast_expression*)
00000000003542a0 0000000000000478 t _mesa_ast_process_interface_block(YYLTYPE*, _mesa_glsl_parse_state*, ast_interface_block*, ast_type_qualifier const&)
0000000000354720 000000000000001c T ast_node::ast_node()
0000000000354720 000000000000001c t ast_node::ast_node()
0000000000354740 0000000000000050 t ast_compound_statement::ast_compound_statement(int, ast_node*)
0000000000354740 0000000000000050 T ast_compound_statement::ast_compound_statement(int, ast_node*)
0000000000354790 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
0000000000354790 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
00000000003547e0 000000000000001c t ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003547e0 000000000000001c T ast_expression_statement::ast_expression_statement(ast_expression*)
0000000000354800 0000000000000038 t ast_function::ast_function()
0000000000354800 0000000000000038 T ast_function::ast_function()
0000000000354840 0000000000000020 t ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000354840 0000000000000020 T ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000354860 0000000000000038 t ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000354860 0000000000000038 T ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
00000000003548a0 000000000000002c t ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000003548a0 000000000000002c T ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000003548d0 0000000000000020 t ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000003548d0 0000000000000020 T ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000003548f0 0000000000000020 t ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
00000000003548f0 0000000000000020 T ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000354910 000000000000001c t ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000354910 000000000000001c T ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000354930 000000000000001c t ast_case_label::ast_case_label(ast_expression*)
0000000000354930 000000000000001c T ast_case_label::ast_case_label(ast_expression*)
0000000000354950 0000000000000030 t ast_case_label_list::ast_case_label_list()
0000000000354950 0000000000000030 T ast_case_label_list::ast_case_label_list()
0000000000354980 0000000000000034 t ast_case_statement::ast_case_statement(ast_case_label_list*)
0000000000354980 0000000000000034 T ast_case_statement::ast_case_statement(ast_case_label_list*)
00000000003549c0 0000000000000030 t ast_case_statement_list::ast_case_statement_list()
00000000003549c0 0000000000000030 T ast_case_statement_list::ast_case_statement_list()
00000000003549f0 0000000000000028 t ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
00000000003549f0 0000000000000028 T ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000354a20 0000000000000054 t ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000354a20 0000000000000054 T ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000354a80 00000000000000f4 t _mesa_glsl_copy_symbols_from_table
0000000000354b80 00000000000004a4 t do_common_optimization(exec_list*, bool, bool, gl_shader_compiler_options const*, bool)
0000000000355030 00000000000009f8 t _mesa_glsl_compile_shader
0000000000355a30 0000000000000040 t glsl_symbol_table::glsl_symbol_table()
0000000000355a30 0000000000000040 T glsl_symbol_table::glsl_symbol_table()
0000000000355a70 0000000000000028 t glsl_symbol_table::~glsl_symbol_table()
0000000000355a70 0000000000000028 T glsl_symbol_table::~glsl_symbol_table()
0000000000355aa0 0000000000000008 t glsl_symbol_table::push_scope()
0000000000355ab0 0000000000000008 t glsl_symbol_table::pop_scope()
0000000000355ac0 0000000000000020 t glsl_symbol_table::name_declared_this_scope(char const*)
0000000000355ae0 000000000000011c t glsl_symbol_table::add_variable(ir_variable*)
0000000000355c00 0000000000000060 t glsl_symbol_table::add_type(char const*, glsl_type const*)
0000000000355c60 0000000000000148 t glsl_symbol_table::add_interface(char const*, glsl_type const*, ir_variable_mode)
0000000000355db0 000000000000009c t glsl_symbol_table::add_function(ir_function*)
0000000000355e50 00000000000000e4 t glsl_symbol_table::add_default_precision_qualifier(char const*, int)
0000000000355f40 0000000000000020 t glsl_symbol_table::get_variable(char const*)
0000000000355f60 0000000000000020 t glsl_symbol_table::get_type(char const*)
0000000000355f80 000000000000007c t glsl_symbol_table::get_interface(char const*, ir_variable_mode)
0000000000356000 0000000000000020 t glsl_symbol_table::get_function(char const*)
0000000000356020 000000000000005c t glsl_symbol_table::get_default_precision_qualifier(char const*)
0000000000356080 0000000000000020 t glsl_symbol_table::disable_variable(char const*)
00000000003560a0 000000000000002c t glsl_symbol_table::replace_variable(char const*, ir_variable*)
00000000003560d0 0000000000000034 t ir_builder::ir_factory::emit(ir_instruction*)
0000000000356110 0000000000000070 t ir_builder::ir_factory::make_temp(glsl_type const*, char const*)
0000000000356180 0000000000000050 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand, int)
00000000003561d0 0000000000000064 t ir_builder::assign(ir_builder::deref, ir_builder::operand)
0000000000356240 000000000000004c t ir_builder::assign(ir_builder::deref, ir_builder::operand, int)
0000000000356290 000000000000006c t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand)
0000000000356300 0000000000000048 t ir_builder::ret(ir_builder::operand)
0000000000356350 000000000000005c t ir_builder::swizzle(ir_builder::operand, int, int)
00000000003563b0 0000000000000098 t ir_builder::swizzle_for_size(ir_builder::operand, unsigned int)
0000000000356450 000000000000004c t ir_builder::swizzle_xxxx(ir_builder::operand)
00000000003564a0 000000000000004c t ir_builder::swizzle_x(ir_builder::operand)
00000000003564f0 000000000000004c t ir_builder::swizzle_y(ir_builder::operand)
0000000000356540 000000000000004c t ir_builder::swizzle_z(ir_builder::operand)
0000000000356590 000000000000004c t ir_builder::swizzle_w(ir_builder::operand)
00000000003565e0 000000000000004c t ir_builder::swizzle_xy(ir_builder::operand)
0000000000356630 000000000000004c t ir_builder::swizzle_xyz(ir_builder::operand)
0000000000356680 0000000000000044 t ir_builder::expr(ir_expression_operation, ir_builder::operand)
00000000003566d0 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand)
0000000000356730 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000356790 0000000000000034 t ir_builder::add(ir_builder::operand, ir_builder::operand)
00000000003567d0 0000000000000034 t ir_builder::sub(ir_builder::operand, ir_builder::operand)
0000000000356810 0000000000000034 t ir_builder::min2(ir_builder::operand, ir_builder::operand)
0000000000356850 0000000000000034 t ir_builder::max2(ir_builder::operand, ir_builder::operand)
0000000000356890 0000000000000034 t ir_builder::mul(ir_builder::operand, ir_builder::operand)
00000000003568d0 0000000000000034 t ir_builder::imul_high(ir_builder::operand, ir_builder::operand)
0000000000356910 0000000000000034 t ir_builder::div(ir_builder::operand, ir_builder::operand)
0000000000356950 0000000000000034 t ir_builder::carry(ir_builder::operand, ir_builder::operand)
0000000000356990 0000000000000034 t ir_builder::borrow(ir_builder::operand, ir_builder::operand)
00000000003569d0 0000000000000034 t ir_builder::trunc(ir_builder::operand)
0000000000356a10 0000000000000034 t ir_builder::round_even(ir_builder::operand)
0000000000356a50 0000000000000034 t ir_builder::fract(ir_builder::operand)
0000000000356a90 0000000000000088 t ir_builder::dot(ir_builder::operand, ir_builder::operand)
0000000000356b20 0000000000000074 t ir_builder::clamp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000356ba0 0000000000000034 t ir_builder::saturate(ir_builder::operand)
0000000000356be0 0000000000000034 t ir_builder::abs(ir_builder::operand)
0000000000356c20 0000000000000034 t ir_builder::neg(ir_builder::operand)
0000000000356c60 0000000000000034 t ir_builder::sin(ir_builder::operand)
0000000000356ca0 0000000000000034 t ir_builder::cos(ir_builder::operand)
0000000000356ce0 0000000000000034 t ir_builder::exp(ir_builder::operand)
0000000000356d20 0000000000000034 t ir_builder::rcp(ir_builder::operand)
0000000000356d60 0000000000000034 t ir_builder::rsq(ir_builder::operand)
0000000000356da0 0000000000000034 t ir_builder::sqrt(ir_builder::operand)
0000000000356de0 0000000000000034 t ir_builder::log(ir_builder::operand)
0000000000356e20 0000000000000034 t ir_builder::sign(ir_builder::operand)
0000000000356e60 0000000000000034 t ir_builder::subr_to_int(ir_builder::operand)
0000000000356ea0 0000000000000034 t ir_builder::equal(ir_builder::operand, ir_builder::operand)
0000000000356ee0 0000000000000034 t ir_builder::nequal(ir_builder::operand, ir_builder::operand)
0000000000356f20 0000000000000034 t ir_builder::less(ir_builder::operand, ir_builder::operand)
0000000000356f60 000000000000003c t ir_builder::greater(ir_builder::operand, ir_builder::operand)
0000000000356fa0 000000000000003c t ir_builder::lequal(ir_builder::operand, ir_builder::operand)
0000000000356fe0 0000000000000034 t ir_builder::gequal(ir_builder::operand, ir_builder::operand)
0000000000357020 0000000000000034 t ir_builder::logic_not(ir_builder::operand)
0000000000357060 0000000000000034 t ir_builder::logic_and(ir_builder::operand, ir_builder::operand)
00000000003570a0 0000000000000034 t ir_builder::logic_or(ir_builder::operand, ir_builder::operand)
00000000003570e0 0000000000000034 t ir_builder::bit_not(ir_builder::operand)
0000000000357120 0000000000000034 t ir_builder::bit_and(ir_builder::operand, ir_builder::operand)
0000000000357160 0000000000000034 t ir_builder::bit_or(ir_builder::operand, ir_builder::operand)
00000000003571a0 0000000000000034 t ir_builder::lshift(ir_builder::operand, ir_builder::operand)
00000000003571e0 0000000000000034 t ir_builder::rshift(ir_builder::operand, ir_builder::operand)
0000000000357220 0000000000000034 t ir_builder::f2i(ir_builder::operand)
0000000000357260 0000000000000034 t ir_builder::bitcast_f2i(ir_builder::operand)
00000000003572a0 0000000000000034 t ir_builder::i2f(ir_builder::operand)
00000000003572e0 0000000000000034 t ir_builder::bitcast_i2f(ir_builder::operand)
0000000000357320 0000000000000034 t ir_builder::i2u(ir_builder::operand)
0000000000357360 0000000000000034 t ir_builder::u2i(ir_builder::operand)
00000000003573a0 0000000000000034 t ir_builder::f2u(ir_builder::operand)
00000000003573e0 0000000000000034 t ir_builder::bitcast_f2u(ir_builder::operand)
0000000000357420 0000000000000034 t ir_builder::u2f(ir_builder::operand)
0000000000357460 0000000000000034 t ir_builder::bitcast_u2f(ir_builder::operand)
00000000003574a0 0000000000000034 t ir_builder::b2i(ir_builder::operand)
00000000003574e0 0000000000000034 t ir_builder::b2f(ir_builder::operand)
0000000000357520 0000000000000034 t ir_builder::bitcast_d2i64(ir_builder::operand)
0000000000357560 0000000000000034 t ir_builder::bitcast_d2u64(ir_builder::operand)
00000000003575a0 0000000000000034 t ir_builder::bitcast_i642d(ir_builder::operand)
00000000003575e0 0000000000000034 t ir_builder::bitcast_u642d(ir_builder::operand)
0000000000357620 0000000000000034 t ir_builder::interpolate_at_centroid(ir_builder::operand)
0000000000357660 0000000000000034 t ir_builder::interpolate_at_offset(ir_builder::operand, ir_builder::operand)
00000000003576a0 0000000000000034 t ir_builder::interpolate_at_sample(ir_builder::operand, ir_builder::operand)
00000000003576e0 0000000000000034 t ir_builder::f2d(ir_builder::operand)
0000000000357720 0000000000000044 t ir_builder::fma(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000357770 0000000000000044 t ir_builder::lrp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003577c0 0000000000000044 t ir_builder::csel(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000357810 0000000000000044 t ir_builder::bitfield_extract(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000357860 0000000000000050 t ir_builder::bitfield_insert(ir_builder::operand, ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003578b0 0000000000000088 t ir_builder::if_tree(ir_builder::operand, ir_instruction*)
0000000000357940 00000000000000a8 t ir_builder::if_tree(ir_builder::operand, ir_instruction*, ir_instruction*)
00000000003579f0 0000000000000004 W ir_visitor::visit(ir_rvalue*)
0000000000357a00 0000000000000004 W ir_control_flow_visitor::visit(ir_variable*)
0000000000357a10 0000000000000004 W ir_control_flow_visitor::visit(ir_texture*)
0000000000357a20 0000000000000004 W ir_control_flow_visitor::visit(ir_swizzle*)
0000000000357a30 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_variable*)
0000000000357a40 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_array*)
0000000000357a50 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_record*)
0000000000357a60 0000000000000004 W ir_control_flow_visitor::visit(ir_assignment*)
0000000000357a70 0000000000000004 W ir_control_flow_visitor::visit(ir_constant*)
0000000000357a80 0000000000000004 W ir_control_flow_visitor::visit(ir_call*)
0000000000357a90 0000000000000004 W ir_control_flow_visitor::visit(ir_demote*)
0000000000357aa0 0000000000000008 W ir_rvalue::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000357ab0 0000000000000008 W ir_rvalue::variable_referenced() const
0000000000357ac0 0000000000000008 W ir_rvalue::whole_variable_referenced()
0000000000357ad0 0000000000000008 W ir_rvalue::is_uint16_constant() const
0000000000357ae0 000000000000001c W ir_function_signature::accept(ir_visitor*)
0000000000357b00 000000000000001c W ir_function::accept(ir_visitor*)
0000000000357b20 000000000000001c W ir_if::accept(ir_visitor*)
0000000000357b40 000000000000001c W ir_loop::accept(ir_visitor*)
0000000000357b60 000000000000001c W ir_return::accept(ir_visitor*)
0000000000357b80 000000000000001c W ir_loop_jump::accept(ir_visitor*)
0000000000357ba0 000000000000001c W ir_discard::accept(ir_visitor*)
0000000000357bc0 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000357bc0 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000357bd0 0000000000000044 W ir_swizzle::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000357c20 0000000000000008 W ir_dereference_variable::variable_referenced() const
0000000000357c30 0000000000000010 W ir_dereference_variable::precision() const
0000000000357c40 0000000000000008 W ir_dereference_variable::whole_variable_referenced()
0000000000357c50 0000000000000014 W ir_dereference_array::variable_referenced() const
0000000000357c70 0000000000000028 W ir_dereference_array::precision() const
0000000000357ca0 0000000000000014 W ir_dereference_record::variable_referenced() const
0000000000357cc0 0000000000000024 W ir_dereference_record::precision() const
0000000000357cf0 0000000000000004 W ir_constant::~ir_constant()
0000000000357cf0 0000000000000004 W ir_constant::~ir_constant()
0000000000357d00 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000357d00 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000357d10 0000000000000004 W ir_function::~ir_function()
0000000000357d10 0000000000000004 W ir_function::~ir_function()
0000000000357d20 0000000000000004 W ir_assignment::~ir_assignment()
0000000000357d20 0000000000000004 W ir_assignment::~ir_assignment()
0000000000357d30 0000000000000004 W ir_texture::~ir_texture()
0000000000357d30 0000000000000004 W ir_texture::~ir_texture()
0000000000357d40 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000357d40 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000357d50 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000357d50 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000357d60 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000357d60 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000357d70 0000000000000004 W ir_call::~ir_call()
0000000000357d70 0000000000000004 W ir_call::~ir_call()
0000000000357d80 0000000000000004 W ir_loop::~ir_loop()
0000000000357d80 0000000000000004 W ir_loop::~ir_loop()
0000000000357d90 0000000000000004 W ir_if::~ir_if()
0000000000357d90 0000000000000004 W ir_if::~ir_if()
0000000000357da0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000357da0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000357db0 0000000000000004 W ir_demote::~ir_demote()
0000000000357db0 0000000000000004 W ir_demote::~ir_demote()
0000000000357dc0 0000000000000004 W ir_discard::~ir_discard()
0000000000357dc0 0000000000000004 W ir_discard::~ir_discard()
0000000000357dd0 0000000000000004 W ir_return::~ir_return()
0000000000357dd0 0000000000000004 W ir_return::~ir_return()
0000000000357de0 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000357de0 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000357df0 0000000000000004 W ir_variable::~ir_variable()
0000000000357df0 0000000000000004 W ir_variable::~ir_variable()
0000000000357e00 0000000000000008 T ir_rvalue::clone(void*, hash_table*) const
0000000000357e10 0000000000000160 T ir_if::clone(void*, hash_table*) const
0000000000357f70 0000000000000060 T ir_return::clone(void*, hash_table*) const
0000000000357fd0 0000000000000044 T ir_loop_jump::clone(void*, hash_table*) const
0000000000358020 0000000000000060 T ir_discard::clone(void*, hash_table*) const
0000000000358080 0000000000000034 T ir_demote::clone(void*, hash_table*) const
00000000003580c0 0000000000000068 t ir_swizzle::clone(void*, hash_table*) const
0000000000358130 00000000000000ac T ir_loop::clone(void*, hash_table*) const
00000000003581e0 0000000000000038 W fixup_ir_call_visitor::visit_enter(ir_call*)
0000000000358220 0000000000000068 T ir_dereference_variable::clone(void*, hash_table*) const
0000000000358290 000000000000008c T ir_dereference_array::clone(void*, hash_table*) const
0000000000358320 0000000000000084 T ir_dereference_record::clone(void*, hash_table*) const
00000000003583b0 00000000000001c8 T ir_texture::clone(void*, hash_table*) const
0000000000358580 00000000000000bc T ir_assignment::clone(void*, hash_table*) const
0000000000358640 0000000000000118 T ir_function::clone(void*, hash_table*) const
0000000000358760 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000358770 0000000000000004 W ir_constant::~ir_constant()
0000000000358780 0000000000000004 W ir_texture::~ir_texture()
0000000000358790 0000000000000004 W ir_swizzle::~ir_swizzle()
00000000003587a0 0000000000000004 W ir_function_signature::~ir_function_signature()
00000000003587b0 0000000000000004 W ir_function::~ir_function()
00000000003587c0 0000000000000004 W ir_assignment::~ir_assignment()
00000000003587d0 0000000000000004 W ir_call::~ir_call()
00000000003587e0 0000000000000004 W ir_loop::~ir_loop()
00000000003587f0 0000000000000004 W ir_if::~ir_if()
0000000000358800 0000000000000004 W ir_demote::~ir_demote()
0000000000358810 0000000000000004 W ir_variable::~ir_variable()
0000000000358820 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000358830 0000000000000004 W ir_discard::~ir_discard()
0000000000358840 0000000000000004 W ir_return::~ir_return()
0000000000358850 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000358860 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000358870 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000358880 0000000000000140 t ir_constant::clone(void*, hash_table*) const
00000000003589c0 00000000000001e8 T ir_variable::clone(void*, hash_table*) const
0000000000358bb0 0000000000000030 W ir_constant::accept(ir_visitor*)
0000000000358be0 0000000000000030 W ir_dereference_record::accept(ir_visitor*)
0000000000358c10 0000000000000030 W ir_dereference_array::accept(ir_visitor*)
0000000000358c40 0000000000000030 W ir_dereference_variable::accept(ir_visitor*)
0000000000358c70 0000000000000030 W ir_swizzle::accept(ir_visitor*)
0000000000358ca0 0000000000000030 W ir_texture::accept(ir_visitor*)
0000000000358cd0 0000000000000030 W ir_demote::accept(ir_visitor*)
0000000000358d00 0000000000000030 W ir_call::accept(ir_visitor*)
0000000000358d30 0000000000000030 W ir_assignment::accept(ir_visitor*)
0000000000358d60 0000000000000030 W ir_variable::accept(ir_visitor*)
0000000000358d90 0000000000000030 W ir_rvalue::accept(ir_visitor*)
0000000000358dc0 000000000000016c T ir_call::clone(void*, hash_table*) const
0000000000358f30 00000000000000d4 T ir_expression::clone(void*, hash_table*) const
0000000000359010 00000000000000cc t ir_function_signature::clone_prototype(void*, hash_table*) const
00000000003590e0 00000000000000b0 T ir_function_signature::clone(void*, hash_table*) const
0000000000359190 00000000000000cc t clone_ir_list(void*, exec_list*, exec_list const*)
0000000000359260 000000000000024c t constant_referenced(ir_dereference const*, hash_table*, ir_constant*&, int&)
00000000003594b0 0000000000000008 T ir_texture::constant_expression_value(void*, hash_table*)
00000000003594b0 0000000000000008 T ir_assignment::constant_expression_value(void*, hash_table*)
00000000003594b0 0000000000000008 T ir_rvalue::constant_expression_value(void*, hash_table*)
00000000003594c0 0000000000004394 t ir_expression::constant_expression_value(void*, hash_table*)
000000000035d860 000000000000022c T ir_swizzle::constant_expression_value(void*, hash_table*)
000000000035da90 00000000000000b8 T ir_dereference_variable::constant_expression_value(void*, hash_table*)
000000000035db50 000000000000021c T ir_dereference_array::constant_expression_value(void*, hash_table*)
000000000035dd70 0000000000000044 T ir_dereference_record::constant_expression_value(void*, hash_table*)
000000000035ddc0 0000000000000004 T ir_constant::constant_expression_value(void*, hash_table*)
000000000035ddd0 00000000000001c8 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*)
000000000035dfa0 0000000000000010 T ir_call::constant_expression_value(void*, hash_table*)
000000000035dfb0 0000000000000270 t ir_function_signature::constant_expression_evaluate_expression_list(void*, exec_list const&, hash_table*, ir_constant**)
000000000035e220 0000000000000008 T ir_rvalue::is_negative_one() const
000000000035e220 0000000000000008 T ir_rvalue::is_one() const
000000000035e220 0000000000000008 T ir_rvalue::is_zero() const
000000000035e230 0000000000000250 t ir_constant::is_value(float, int) const
000000000035e480 0000000000000094 T ir_dereference::is_lvalue(_mesa_glsl_parse_state const*) const
000000000035e520 00000000000000f4 t steal_memory(ir_instruction*, void*)
000000000035e620 000000000000002c T ir_rvalue::ir_rvalue(ir_node_type)
000000000035e620 000000000000002c t ir_rvalue::ir_rvalue(ir_node_type)
000000000035e650 0000000000000454 t ir_assignment::set_lhs(ir_rvalue*)
000000000035eab0 0000000000000074 t ir_assignment::whole_variable_written()
000000000035eb30 0000000000000034 t ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000035eb30 0000000000000034 T ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000035eb70 000000000000009c t ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035eb70 000000000000009c T ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035ec10 000000000000006c t ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035ec10 000000000000006c T ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035ec80 0000000000000308 t ir_expression::ir_expression(int, ir_rvalue*)
000000000035ec80 0000000000000308 T ir_expression::ir_expression(int, ir_rvalue*)
000000000035ef90 0000000000000260 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000035ef90 0000000000000260 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000035f1f0 00000000000000ac t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f1f0 00000000000000ac T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f2a0 000000000000002c t ir_expression::get_num_operands(ir_expression_operation)
000000000035f2d0 0000000000000064 t depth_layout_string(ir_depth_layout)
000000000035f340 000000000000002c T ir_expression::variable_referenced() const
000000000035f370 0000000000000034 t ir_constant::ir_constant()
000000000035f370 0000000000000034 T ir_constant::ir_constant()
000000000035f3b0 0000000000000058 t ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
000000000035f3b0 0000000000000058 T ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
000000000035f410 00000000000000c0 t ir_constant::ir_constant(float16_t, unsigned int)
000000000035f410 00000000000000c0 T ir_constant::ir_constant(float16_t, unsigned int)
000000000035f4d0 00000000000000c0 t ir_constant::ir_constant(float, unsigned int)
000000000035f4d0 00000000000000c0 T ir_constant::ir_constant(float, unsigned int)
000000000035f590 00000000000000c0 t ir_constant::ir_constant(double, unsigned int)
000000000035f590 00000000000000c0 T ir_constant::ir_constant(double, unsigned int)
000000000035f650 00000000000000c0 t ir_constant::ir_constant(unsigned int, unsigned int)
000000000035f650 00000000000000c0 T ir_constant::ir_constant(unsigned int, unsigned int)
000000000035f710 00000000000000c0 t ir_constant::ir_constant(int, unsigned int)
000000000035f710 00000000000000c0 T ir_constant::ir_constant(int, unsigned int)
000000000035f7d0 00000000000000c0 t ir_constant::ir_constant(unsigned long, unsigned int)
000000000035f7d0 00000000000000c0 T ir_constant::ir_constant(unsigned long, unsigned int)
000000000035f890 00000000000000c0 t ir_constant::ir_constant(long, unsigned int)
000000000035f890 00000000000000c0 T ir_constant::ir_constant(long, unsigned int)
000000000035f950 00000000000000c4 t ir_constant::ir_constant(bool, unsigned int)
000000000035f950 00000000000000c4 T ir_constant::ir_constant(bool, unsigned int)
000000000035fa20 0000000000000100 t ir_constant::ir_constant(ir_constant const*, unsigned int)
000000000035fa20 0000000000000100 T ir_constant::ir_constant(ir_constant const*, unsigned int)
000000000035fb20 0000000000000150 t ir_constant::zero(void*, glsl_type const*)
000000000035fc70 00000000000000fc t ir_constant::get_bool_component(unsigned int) const
000000000035fd70 00000000000000e0 t ir_constant::get_float_component(unsigned int) const
000000000035fe50 00000000000000fc t ir_constant::get_double_component(unsigned int) const
000000000035ff50 00000000000000d8 t ir_constant::get_int_component(unsigned int) const
0000000000360030 00000000000000d8 t ir_constant::get_uint_component(unsigned int) const
0000000000360110 00000000000000ec t ir_constant::get_int64_component(unsigned int) const
0000000000360200 00000000000000ec t ir_constant::get_uint64_component(unsigned int) const
00000000003602f0 00000000000005e8 t ir_constant::ir_constant(glsl_type const*, exec_list*)
00000000003602f0 00000000000005e8 T ir_constant::ir_constant(glsl_type const*, exec_list*)
00000000003608e0 000000000000003c t ir_constant::get_array_element(unsigned int) const
0000000000360920 000000000000000c t ir_constant::get_record_field(int)
0000000000360930 000000000000020c t ir_constant::copy_offset(ir_constant*, int)
0000000000360b40 0000000000000290 t ir_constant::copy_masked_offset(ir_constant*, int, unsigned int)
0000000000360dd0 0000000000000210 t ir_constant::has_value(ir_constant const*) const
0000000000360fe0 000000000000002c T ir_constant::is_zero() const
0000000000361010 000000000000002c T ir_constant::is_one() const
0000000000361040 000000000000002c T ir_constant::is_negative_one() const
0000000000361070 000000000000002c T ir_constant::is_uint16_constant() const
00000000003610a0 0000000000000034 t ir_loop::ir_loop()
00000000003610a0 0000000000000034 T ir_loop::ir_loop()
00000000003610e0 0000000000000038 t ir_dereference_variable::ir_dereference_variable(ir_variable*)
00000000003610e0 0000000000000038 T ir_dereference_variable::ir_dereference_variable(ir_variable*)
0000000000361120 00000000000000cc t ir_dereference_array::set_array(ir_rvalue*)
00000000003611f0 0000000000000030 t ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
00000000003611f0 0000000000000030 T ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
0000000000361220 0000000000000094 t ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
0000000000361220 0000000000000094 T ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
00000000003612c0 0000000000000074 t ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
00000000003612c0 0000000000000074 T ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
0000000000361340 0000000000000014 t ir_texture::opcode_string()
0000000000361360 000000000000000c t ir_texture::set_sampler(ir_dereference*, glsl_type const*)
0000000000361370 0000000000000138 t ir_swizzle::init_mask(unsigned int const*, unsigned int)
00000000003614b0 0000000000000050 t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003614b0 0000000000000050 T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0000000000361500 000000000000003c t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
0000000000361500 000000000000003c T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
0000000000361540 0000000000000070 t ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
0000000000361540 0000000000000070 T ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
00000000003615b0 0000000000000124 t ir_swizzle::create(ir_rvalue*, char const*, unsigned int)
00000000003616e0 0000000000000014 T ir_swizzle::variable_referenced() const
0000000000361700 0000000000000234 t ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000361700 0000000000000234 T ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000361940 0000000000000050 t interpolation_string(unsigned int)
0000000000361990 000000000000006c t ir_variable::enable_extension_warning(char const*)
0000000000361a00 0000000000000060 t ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000361a00 0000000000000060 T ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000361a60 0000000000000010 t ir_function_signature::is_builtin() const
0000000000361a70 000000000000001c t ir_function_signature::is_builtin_available(_mesa_glsl_parse_state const*) const
0000000000361a90 00000000000000d4 t ir_function_signature::qualifiers_match(exec_list*)
0000000000361b70 0000000000000058 t ir_function_signature::replace_parameters(exec_list*)
0000000000361bd0 000000000000005c t ir_function::ir_function(char const*)
0000000000361bd0 000000000000005c T ir_function::ir_function(char const*)
0000000000361c30 0000000000000038 t ir_function::has_user_signature()
0000000000361c70 0000000000000044 t ir_rvalue::error_value(void*)
0000000000361cc0 00000000000000a8 t visit_exec_list(exec_list*, ir_visitor*)
0000000000361d70 0000000000000068 t reparent_ir(exec_list*, void*)
0000000000361de0 0000000000000020 t vertices_per_prim(unsigned int)
0000000000361e00 00000000000000b4 t mode_string(ir_variable const*)
0000000000361ec0 0000000000000004 W ir_control_flow_visitor::visit(ir_expression*)
0000000000361ed0 0000000000000008 T ir_instruction::equals(ir_instruction const*, ir_node_type) const
0000000000361ee0 00000000000000b4 T ir_expression::equals(ir_instruction const*, ir_node_type) const
0000000000361fa0 0000000000000004 W ir_expression::~ir_expression()
0000000000361fa0 0000000000000004 W ir_expression::~ir_expression()
0000000000361fb0 0000000000000004 W ir_expression::~ir_expression()
0000000000361fc0 0000000000000030 W ir_expression::accept(ir_visitor*)
0000000000361ff0 00000000000000b0 T ir_constant::equals(ir_instruction const*, ir_node_type) const
00000000003620a0 0000000000000028 T ir_dereference_variable::equals(ir_instruction const*, ir_node_type) const
00000000003620d0 000000000000008c T ir_dereference_array::equals(ir_instruction const*, ir_node_type) const
0000000000362160 0000000000000068 T ir_swizzle::equals(ir_instruction const*, ir_node_type) const
00000000003621d0 0000000000000214 T ir_texture::equals(ir_instruction const*, ir_node_type) const
00000000003623f0 00000000000003d8 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool, bool*)
00000000003627d0 0000000000000018 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool)
00000000003627f0 00000000000000bc t ir_function::exact_matching_signature(_mesa_glsl_parse_state*, exec_list const*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_discard*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_swizzle*)
00000000003628b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_texture*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_assignment*)
00000000003628b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_expression*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_emit_vertex*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_end_primitive*)
00000000003628b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_array*)
00000000003628b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_record*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function_signature*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_if*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_call*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_loop*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_demote*)
00000000003628b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_return*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_discard*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_swizzle*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_texture*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function*)
00000000003628f0 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_assignment*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_expression*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_emit_vertex*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_end_primitive*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_array*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_record*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function_signature*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_if*)
00000000003628f0 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_call*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_loop*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_demote*)
00000000003628f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_return*)
0000000000362930 0000000000000044 T ir_hierarchical_visitor::visit(ir_barrier*)
0000000000362930 0000000000000044 T ir_hierarchical_visitor::visit(ir_constant*)
0000000000362930 0000000000000044 T ir_hierarchical_visitor::visit(ir_variable*)
0000000000362930 0000000000000044 T ir_hierarchical_visitor::visit(ir_loop_jump*)
0000000000362930 0000000000000044 T ir_hierarchical_visitor::visit(ir_dereference_variable*)
0000000000362930 0000000000000044 T ir_hierarchical_visitor::visit(ir_rvalue*)
0000000000362980 000000000000001c T ir_hierarchical_visitor::ir_hierarchical_visitor()
0000000000362980 000000000000001c t ir_hierarchical_visitor::ir_hierarchical_visitor()
00000000003629a0 0000000000000008 t ir_hierarchical_visitor::run(exec_list*)
00000000003629b0 0000000000000038 t visit_tree(ir_instruction*, void (*)(ir_instruction*, void*), void*, void (*)(ir_instruction*, void*), void*)
00000000003629f0 0000000000000004 W ir_control_flow_visitor::visit(ir_emit_vertex*)
0000000000362a00 0000000000000004 W ir_control_flow_visitor::visit(ir_end_primitive*)
0000000000362a10 0000000000000004 W ir_control_flow_visitor::visit(ir_barrier*)
0000000000362a20 000000000000001c T ir_dereference_variable::accept(ir_hierarchical_visitor*)
0000000000362a40 000000000000001c T ir_barrier::accept(ir_hierarchical_visitor*)
0000000000362a60 0000000000000004 W ir_barrier::~ir_barrier()
0000000000362a60 0000000000000004 W ir_barrier::~ir_barrier()
0000000000362a70 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000362a70 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000362a80 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000362a80 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000362a90 0000000000000074 W ir_emit_vertex::clone(void*, hash_table*) const
0000000000362b10 0000000000000074 W ir_end_primitive::clone(void*, hash_table*) const
0000000000362b90 0000000000000034 W ir_barrier::clone(void*, hash_table*) const
0000000000362bd0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000362be0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000362bf0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000362c00 0000000000000088 T ir_emit_vertex::accept(ir_hierarchical_visitor*)
0000000000362c90 0000000000000088 T ir_end_primitive::accept(ir_hierarchical_visitor*)
0000000000362d20 0000000000000030 W ir_barrier::accept(ir_visitor*)
0000000000362d50 0000000000000030 W ir_end_primitive::accept(ir_visitor*)
0000000000362d80 0000000000000030 W ir_emit_vertex::accept(ir_visitor*)
0000000000362db0 000000000000009c t visit_list_elements(ir_hierarchical_visitor*, exec_list*, bool)
0000000000362e50 000000000000001c T ir_rvalue::accept(ir_hierarchical_visitor*)
0000000000362e70 000000000000001c T ir_variable::accept(ir_hierarchical_visitor*)
0000000000362e90 0000000000000078 T ir_loop::accept(ir_hierarchical_visitor*)
0000000000362f10 000000000000001c T ir_loop_jump::accept(ir_hierarchical_visitor*)
0000000000362f30 00000000000000a0 T ir_function_signature::accept(ir_hierarchical_visitor*)
0000000000362fd0 0000000000000078 T ir_function::accept(ir_hierarchical_visitor*)
0000000000363050 00000000000000bc T ir_expression::accept(ir_hierarchical_visitor*)
0000000000363110 0000000000000168 T ir_texture::accept(ir_hierarchical_visitor*)
0000000000363280 000000000000007c T ir_swizzle::accept(ir_hierarchical_visitor*)
0000000000363300 00000000000000b8 T ir_dereference_array::accept(ir_hierarchical_visitor*)
00000000003633c0 000000000000007c T ir_dereference_record::accept(ir_hierarchical_visitor*)
0000000000363440 00000000000000cc t ir_assignment::accept(ir_hierarchical_visitor*)
0000000000363510 000000000000001c T ir_constant::accept(ir_hierarchical_visitor*)
0000000000363530 00000000000000d8 T ir_call::accept(ir_hierarchical_visitor*)
0000000000363610 0000000000000080 T ir_return::accept(ir_hierarchical_visitor*)
0000000000363690 0000000000000080 T ir_discard::accept(ir_hierarchical_visitor*)
0000000000363710 0000000000000060 T ir_demote::accept(ir_hierarchical_visitor*)
0000000000363770 00000000000000c8 T ir_if::accept(ir_hierarchical_visitor*)
0000000000363840 0000000000000018 T ir_print_visitor::visit(ir_rvalue*)
0000000000363860 0000000000000074 T ir_print_visitor::visit(ir_dereference_array*)
00000000003638e0 0000000000000074 T ir_print_visitor::visit(ir_dereference_record*)
0000000000363960 0000000000000018 T ir_print_visitor::visit(ir_demote*)
0000000000363980 0000000000000060 T ir_print_visitor::visit(ir_emit_vertex*)
00000000003639e0 0000000000000060 T ir_print_visitor::visit(ir_end_primitive*)
0000000000363a40 0000000000000018 T ir_print_visitor::visit(ir_barrier*)
0000000000363a60 00000000000000d0 T ir_print_visitor::visit(ir_swizzle*)
0000000000363b30 00000000000000ec T ir_print_visitor::visit(ir_assignment*)
0000000000363c20 0000000000000068 T ir_print_visitor::visit(ir_discard*)
0000000000363c90 0000000000000068 T ir_print_visitor::visit(ir_return*)
0000000000363d00 0000000000000024 T ir_print_visitor::visit(ir_loop_jump*)
0000000000363d30 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000363d30 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000363d70 00000000000000b0 t print_type(__sFILE*, glsl_type const*)
0000000000363e20 00000000000000b4 T ir_print_visitor::visit(ir_expression*)
0000000000363ee0 0000000000000270 T ir_print_visitor::visit(ir_texture*)
0000000000364150 0000000000000070 t print_float_constant(__sFILE*, float)
00000000003641c0 00000000000000d8 T ir_print_visitor::visit(ir_call*)
00000000003642a0 00000000000003cc T ir_print_visitor::visit(ir_constant*)
0000000000364670 000000000000004c T ir_print_visitor::~ir_print_visitor()
00000000003646c0 0000000000000128 T ir_print_visitor::visit(ir_loop*)
00000000003647f0 0000000000000340 t ir_print_visitor::visit(ir_function_signature*)
0000000000364b30 0000000000000198 T ir_print_visitor::visit(ir_function*)
0000000000364cd0 00000000000002d0 T ir_print_visitor::visit(ir_if*)
0000000000364fa0 0000000000000084 t ir_instruction::fprint(__sFILE*) const
0000000000365030 0000000000000028 t ir_instruction::print() const
0000000000365060 000000000000018c t _mesa_print_ir
00000000003651f0 00000000000000d0 t ir_print_visitor::unique_name(ir_variable*)
00000000003652c0 0000000000000328 T ir_print_visitor::visit(ir_variable*)
00000000003655f0 000000000000006c T ir_print_visitor::visit(ir_dereference_variable*)
0000000000365660 0000000000000004 t validate_ir_tree(exec_list*)
0000000000365670 0000000000000014 t (anonymous namespace)::deref_type_updater::visit(ir_dereference_variable*)
0000000000365690 0000000000000024 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_array*)
00000000003656c0 0000000000000028 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_record*)
00000000003656f0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000003656f0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000365700 0000000000000058 t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_emit_vertex*)
0000000000365760 0000000000000058 t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_end_primitive*)
00000000003657c0 0000000000000010 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)::temp_attr::compare(void const*, void const*)
00000000003657d0 000000000000017c t match_explicit_outputs_to_inputs(gl_linked_shader*, gl_linked_shader*)
0000000000365950 000000000000004c t (anonymous namespace)::find_deref_visitor::visit(ir_dereference_variable*)
00000000003659a0 00000000000002c4 t move_non_declarations(exec_list*, exec_node*, bool, gl_linked_shader*)
0000000000365c70 0000000000000008 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000365c80 0000000000000090 t linker_optimisation_loop(gl_context*, exec_list*, unsigned int)
0000000000365d10 00000000000000dc t remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor::visit(ir_dereference_variable*)
0000000000365df0 0000000000000054 t set_always_active_io(exec_list*, ir_variable_mode) [clone .isra.0]
0000000000365e50 0000000000000428 t add_shader_variable(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int, ir_variable*, char const*, glsl_type const*, bool, int, bool, glsl_type const*) [clone .isra.0]
0000000000366280 00000000000001f4 t add_interface_variables(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int) [clone .isra.0]
0000000000366480 00000000000000e0 t (anonymous namespace)::dynamic_sampler_array_indexing_visitor::visit_enter(ir_dereference_array*)
0000000000366560 000000000000029c t add_packed_varyings(gl_context const*, gl_shader_program*, set*, int, unsigned int) [clone .isra.0]
0000000000366800 00000000000001c0 t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_call*)
00000000003669c0 00000000000000ac t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_assignment*)
0000000000366a70 000000000000009c t linker_error
0000000000366b10 0000000000000104 t (anonymous namespace)::array_resize_visitor::visit(ir_variable*)
0000000000366c20 0000000000000240 t analyze_clip_cull_usage(gl_shader_program*, gl_linked_shader*, gl_context*, shader_info*)
0000000000366e60 0000000000000310 t interstage_cross_validate_uniform_blocks(gl_shader_program*, bool)
0000000000367170 0000000000000094 t linker_warning
0000000000367210 00000000000009b4 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)
0000000000367bd0 00000000000000c4 t parse_program_resource_name(char const*, char const**)
0000000000367ca0 0000000000000078 t link_invalidate_variable_locations(exec_list*)
0000000000367d20 0000000000000150 t validate_intrastage_arrays(gl_shader_program*, ir_variable*, ir_variable*, bool)
0000000000367e70 00000000000005d8 t cross_validate_globals(gl_context*, gl_shader_program*, exec_list*, glsl_symbol_table*, bool) [clone .isra.0]
0000000000368450 00000000000000b0 t array_sizing_visitor::update_interface_members_array(glsl_type const*, glsl_type const*)
0000000000368500 0000000000000718 W array_sizing_visitor::visit(ir_variable*)
0000000000368c20 00000000000013b0 t link_intrastage_shaders(void*, gl_context*, gl_shader_program*, gl_shader**, unsigned int, bool)
0000000000369fd0 00000000000005a0 t build_program_resource_list(gl_context*, gl_shader_program*, bool)
000000000036a570 0000000000001bdc t link_shaders(gl_context*, gl_shader_program*)
000000000036c150 0000000000000048 t link_util_should_add_buffer_variable
000000000036c1a0 00000000000000d4 t link_util_add_program_resource
000000000036c280 0000000000000088 t link_util_find_empty_block
000000000036c310 00000000000000ac t link_util_update_empty_uniform_locations
000000000036c3c0 000000000000009c t link_util_check_subroutine_resources
000000000036c460 0000000000000278 t link_util_check_uniform_resources
000000000036c6e0 000000000000012c t link_util_calculate_subroutine_compat
000000000036c810 00000000000000f4 t _mark_array_elements_referenced(array_deref_range const*, unsigned int, unsigned int, unsigned int, unsigned int*)
000000000036c910 000000000000001c t link_util_mark_array_elements_referenced
000000000036c930 0000000000000018 t (anonymous namespace)::cmp_actives(void const*, void const*)
000000000036c950 000000000000028c t (anonymous namespace)::process_atomic_variable(glsl_type const*, gl_shader_program*, unsigned int*, ir_variable*, (anonymous namespace)::active_atomic_buffer*, unsigned int*, int*, unsigned int)
000000000036cbe0 00000000000002f8 t (anonymous namespace)::find_active_atomic_counters(gl_context*, gl_shader_program*, unsigned int*)
000000000036cee0 0000000000000374 t link_assign_atomic_counter_resources(gl_context*, gl_shader_program*)
000000000036d260 000000000000025c t link_check_atomic_counter_resources(gl_context*, gl_shader_program*)
000000000036d4c0 00000000000000bc t (anonymous namespace)::call_link_visitor::visit_leave(ir_call*)
000000000036d580 0000000000000060 t find_matching_signature(char const*, exec_list const*, glsl_symbol_table*)
000000000036d5e0 00000000000002c8 t (anonymous namespace)::call_link_visitor::visit_enter(ir_call*)
000000000036d8b0 000000000000001c t (anonymous namespace)::call_link_visitor::visit(ir_variable*)
000000000036d8d0 000000000000017c t (anonymous namespace)::call_link_visitor::visit(ir_dereference_variable*)
000000000036da50 0000000000000090 t link_function_calls(gl_shader_program*, gl_linked_shader*, gl_shader**, unsigned int)
000000000036dae0 000000000000010c t (anonymous namespace)::interstage_member_mismatch(gl_shader_program*, glsl_type const*, glsl_type const*)
000000000036dbf0 000000000000023c t (anonymous namespace)::intrastage_match(ir_variable*, ir_variable*, gl_shader_program*, bool)
000000000036de30 0000000000000364 t validate_intrastage_interface_blocks(gl_shader_program*, gl_shader const**, unsigned int)
000000000036e1a0 0000000000000484 t validate_interstage_inout_blocks(gl_shader_program*, gl_linked_shader const*, gl_linked_shader const*)
000000000036e630 00000000000001fc t validate_interstage_uniform_blocks(gl_shader_program*, gl_linked_shader**)
000000000036e830 0000000000000004 T program_resource_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036e830 0000000000000004 T program_resource_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036e840 0000000000000004 T program_resource_visitor::set_buffer_offset(unsigned int)
000000000036e840 0000000000000004 T program_resource_visitor::set_record_array_count(unsigned int)
000000000036e850 0000000000000008 W parcel_out_uniform_storage::set_buffer_offset(unsigned int)
000000000036e860 0000000000000008 W parcel_out_uniform_storage::set_record_array_count(unsigned int)
000000000036e870 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036e870 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036e8a0 0000000000000078 t get_top_level_name(char const*)
000000000036e920 00000000000000d8 t is_top_level_shader_storage_block_member(char const*, char const*, char const*)
000000000036ea00 0000000000000084 W parcel_out_uniform_storage::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036ea90 0000000000000084 W parcel_out_uniform_storage::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036eb20 0000000000000034 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036eb60 0000000000000070 t assign_hidden_uniform_slot_id(char const*, unsigned int, void*)
000000000036ebd0 00000000000001b8 t parcel_out_uniform_storage::set_opaque_indices(glsl_type const*, gl_uniform_storage*, char const*, unsigned int&, string_to_uint_map*) [clone .isra.0]
000000000036ed90 00000000000001ec t (anonymous namespace)::count_uniform_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000036ef80 0000000000000b24 W parcel_out_uniform_storage::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000036fab0 00000000000003dc t program_resource_visitor::recursion(glsl_type const*, char**, unsigned long, bool, glsl_type const*, glsl_interface_packing, bool, unsigned int, glsl_struct_field const*)
000000000036fe90 00000000000000b4 t program_resource_visitor::process(glsl_type const*, char const*, bool)
000000000036ff50 0000000000000248 t program_resource_visitor::process(ir_variable*, glsl_type const*, bool)
00000000003701a0 000000000000001c t program_resource_visitor::process(ir_variable*, bool)
00000000003701c0 0000000000000048 t link_calculate_matrix_stride(glsl_type const*, bool, glsl_interface_packing)
0000000000370210 000000000000052c t parcel_out_uniform_storage::set_and_process(ir_variable*)
0000000000370740 0000000000000e54 t link_assign_uniform_locations(gl_shader_program*, gl_context*)
00000000003715a0 0000000000000290 t linker::set_opaque_binding(void*, gl_shader_program*, ir_variable const*, glsl_type const*, char const*, int*)
0000000000371830 000000000000016c t linker::copy_constant_to_storage(gl_constant_value*, ir_constant const*, glsl_base_type, unsigned int, unsigned int)
00000000003719a0 00000000000002d4 t linker::set_uniform_initializer(void*, gl_shader_program*, char const*, glsl_type const*, ir_constant*, unsigned int)
0000000000371c80 00000000000001b0 t link_set_uniform_initializers(gl_shader_program*, unsigned int)
0000000000371e30 0000000000000008 t (anonymous namespace)::ubo_visitor::set_buffer_offset(unsigned int)
0000000000371e40 0000000000000010 t (anonymous namespace)::count_block_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000371e50 0000000000000064 t resize_block_array(glsl_type const*, uniform_block_array_elements*)
0000000000371ec0 0000000000000188 t process_block_array_leaf(char const*, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, unsigned int, gl_context*, gl_shader_program*)
0000000000372050 0000000000000120 t process_block_array(uniform_block_array_elements*, char**, unsigned long, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, gl_context*, gl_shader_program*, unsigned int)
0000000000372170 0000000000000068 t (anonymous namespace)::ubo_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000372170 0000000000000068 t (anonymous namespace)::ubo_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003721e0 00000000000001a8 t create_buffer_blocks(void*, gl_context*, gl_shader_program*, gl_uniform_block**, unsigned int, hash_table*, unsigned int, bool) [clone .part.0]
0000000000372390 0000000000000200 t (anonymous namespace)::ubo_visitor::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372590 00000000000002f8 t link_uniform_blocks(void*, gl_context*, gl_shader_program*, gl_linked_shader*, gl_uniform_block**, unsigned int*, gl_uniform_block**, unsigned int*)
0000000000372890 0000000000000240 t link_cross_validate_uniform_block(void*, gl_uniform_block**, unsigned int*, gl_uniform_block*)
0000000000372ad0 0000000000000090 t compute_variable_location_slot(ir_variable*, gl_shader_stage)
0000000000372b60 0000000000000028 t cmp_xfb_offset(void const*, void const*)
0000000000372b90 0000000000000028 t (anonymous namespace)::varying_matches::match_comparator(void const*, void const*)
0000000000372bc0 0000000000000440 t check_location_aliasing(explicit_location_info (*) [4], ir_variable*, unsigned int, unsigned int, unsigned int, glsl_type const*, unsigned int, bool, bool, bool, gl_shader_program*, gl_shader_stage)
0000000000373000 0000000000000060 t io_variable_cmp(void const*, void const*)
0000000000373060 0000000000000424 t cross_validate_types_and_qualifiers(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000373490 00000000000000a0 t cross_validate_front_and_back_color(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000373530 0000000000000234 t create_xfb_varying_names(void*, glsl_type const*, char**, unsigned long, unsigned int*, char const*, glsl_type const*, char***)
0000000000373770 00000000000000e8 t canonicalize_shader_io(exec_list*, ir_variable_mode)
0000000000373860 000000000000007c W tfeedback_candidate_generator::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003738e0 0000000000000044 t (anonymous namespace)::varying_matches::not_xfb_comparator(void const*, void const*)
0000000000373930 00000000000000ec t remove_unused_shader_inputs_and_outputs(bool, gl_linked_shader*, ir_variable_mode) [clone .part.0]
0000000000373a20 0000000000000044 t (anonymous namespace)::varying_matches::xfb_comparator(void const*, void const*)
0000000000373a70 0000000000000134 t reserved_varying_slot(gl_linked_shader*, ir_variable_mode)
0000000000373bb0 0000000000000280 t validate_explicit_variable_location(gl_context*, explicit_location_info (*) [4], ir_variable*, gl_shader_program*, gl_linked_shader*)
0000000000373e30 0000000000000544 t (anonymous namespace)::varying_matches::record(ir_variable*, ir_variable*)
0000000000374380 0000000000000154 t validate_first_and_last_interface_explicit_locations(gl_context*, gl_shader_program*, gl_shader_stage, gl_shader_stage)
00000000003744e0 00000000000003c0 t cross_validate_outputs_to_inputs(gl_context*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*)
00000000003748a0 0000000000000214 t tfeedback_decl::init(gl_context*, void const*, char const*)
0000000000374ac0 0000000000000370 t tfeedback_decl::assign_location(gl_context*, gl_shader_program*)
0000000000374e30 00000000000000cc t tfeedback_decl::get_num_outputs() const
0000000000374f00 00000000000004b4 t tfeedback_decl::store(gl_context*, gl_shader_program*, gl_transform_feedback_info*, unsigned int, unsigned int, unsigned int, unsigned int**, bool*, bool, void const*) const
00000000003753c0 00000000000000bc t tfeedback_decl::find_candidate(gl_shader_program*, hash_table*)
0000000000375480 0000000000000108 t linker::populate_consumer_input_sets(void*, exec_list*, hash_table*, hash_table*, ir_variable**)
0000000000375590 00000000000000c0 t linker::get_matching_input(void*, ir_variable const*, hash_table*, hash_table*, ir_variable**)
0000000000375650 0000000000000f3c t assign_varying_locations(gl_context*, void*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*, unsigned long)
0000000000376590 0000000000000b68 t link_varyings(gl_shader_program*, unsigned int, unsigned int, gl_context*, void*)
0000000000377100 0000000000000030 t (anonymous namespace)::loop_analysis::visit(ir_loop_jump*)
0000000000377130 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_call*)
0000000000377160 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_if*)
0000000000377190 0000000000000024 t (anonymous namespace)::loop_analysis::visit_leave(ir_if*)
00000000003771c0 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_assignment*)
00000000003771f0 000000000000000c t (anonymous namespace)::loop_analysis::visit_leave(ir_assignment*)
0000000000377200 000000000000000c W loop_variable_state::_ralloc_destructor(void*)
0000000000377210 000000000000008c W examine_rhs::visit(ir_dereference_variable*)
00000000003772a0 0000000000000198 t (anonymous namespace)::loop_analysis::visit(ir_dereference_variable*)
0000000000377440 000000000000002c t loop_state::~loop_state()
0000000000377440 000000000000002c T loop_state::~loop_state()
0000000000377470 00000000000000c8 t loop_state::insert(ir_loop*)
0000000000377540 000000000000003c t (anonymous namespace)::loop_analysis::visit_enter(ir_loop*)
0000000000377580 0000000000000020 t loop_state::get(ir_loop const*)
00000000003775a0 0000000000000038 t loop_variable_state::get(ir_variable const*)
00000000003775e0 0000000000000088 t analyze_loop_variables(exec_list*)
0000000000377670 0000000000000ba4 t (anonymous namespace)::loop_analysis::visit_leave(ir_loop*)
0000000000378220 0000000000000014 W loop_unroll_count::visit_enter(ir_assignment*)
0000000000378240 0000000000000014 W loop_unroll_count::visit_enter(ir_expression*)
0000000000378260 0000000000000010 W loop_unroll_count::visit_enter(ir_loop*)
0000000000378270 00000000000001fc W loop_unroll_count::visit_enter(ir_dereference_array*)
0000000000378470 00000000000001b0 t (anonymous namespace)::loop_unroll_visitor::complex_unroll(ir_loop*, int, bool, bool, bool)
0000000000378620 00000000000002a0 t (anonymous namespace)::loop_unroll_visitor::simple_unroll(ir_loop*, int)
00000000003788c0 00000000000005ac t (anonymous namespace)::loop_unroll_visitor::visit_leave(ir_loop*)
0000000000378e70 0000000000000060 t unroll_loops(exec_list*, loop_state*, gl_shader_compiler_options const*)
0000000000378ed0 0000000000000054 t (anonymous namespace)::lower_builtins_visitor::visit_leave(ir_call*)
0000000000378f30 0000000000000040 t lower_builtins(exec_list*)
0000000000378f70 0000000000000008 t (anonymous namespace)::lower_const_array_visitor::visit_enter(ir_texture*)
0000000000378f80 0000000000000164 t (anonymous namespace)::lower_const_array_visitor::handle_rvalue(ir_rvalue**)
00000000003790f0 00000000000000c4 t lower_const_arrays_to_uniforms(exec_list*, unsigned int, unsigned int)
00000000003791c0 0000000000000094 t (anonymous namespace)::lower_cs_derived_visitor::add_system_value(int, glsl_type const*, char const*)
0000000000379260 00000000000001c0 t (anonymous namespace)::lower_cs_derived_visitor::find_sysvals() [clone .part.0]
0000000000379420 0000000000000424 t (anonymous namespace)::lower_cs_derived_visitor::visit(ir_dereference_variable*)
0000000000379850 000000000000008c t lower_cs_derived(gl_linked_shader*)
00000000003798e0 00000000000000d4 t (anonymous namespace)::lower_discard_flow_visitor::generate_discard_break()
00000000003799c0 0000000000000040 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_loop*)
0000000000379a00 00000000000000c0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_discard*)
0000000000379ac0 00000000000000b0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_function_signature*)
0000000000379b70 0000000000000050 t (anonymous namespace)::lower_discard_flow_visitor::visit(ir_loop_jump*)
0000000000379bc0 000000000000008c t lower_discard_flow(exec_list*)
0000000000379c50 00000000000000b0 t (anonymous namespace)::lower_distance_visitor::is_distance_vec8(ir_rvalue*)
0000000000379d00 0000000000000004 t (anonymous namespace)::lower_distance_visitor_counter::handle_rvalue(ir_rvalue**)
0000000000379d10 0000000000000138 t (anonymous namespace)::lower_distance_visitor_counter::visit(ir_variable*)
0000000000379e50 00000000000000a8 t (anonymous namespace)::lower_distance_visitor::fix_lhs(ir_assignment*) [clone .part.0]
0000000000379f00 00000000000001c0 t (anonymous namespace)::lower_distance_visitor::visit(ir_variable*)
000000000037a0c0 0000000000000470 t (anonymous namespace)::lower_distance_visitor::handle_rvalue(ir_rvalue**)
000000000037a530 0000000000000224 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_assignment*)
000000000037a760 0000000000000160 t lower_clip_cull_distance(gl_shader_program*, gl_linked_shader*)
000000000037a8c0 0000000000000268 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_call*)
000000000037ab30 00000000000000c4 t (anonymous namespace)::lower_instructions_visitor::_imm_fp(void*, glsl_type const*, double, unsigned int) [clone .constprop.0] [clone .isra.0]
000000000037ac00 000000000000007c t (anonymous namespace)::lower_instructions_visitor::_carry(ir_builder::operand, ir_builder::operand) [clone .isra.0]
000000000037ac80 0000000000000070 t (anonymous namespace)::lower_instructions_visitor::div_to_mul_rcp(ir_expression*)
000000000037acf0 0000000000000058 t (anonymous namespace)::lower_instructions_visitor::dfloor_to_dfrac(ir_expression*)
000000000037ad50 00000000000002c4 t (anonymous namespace)::lower_instructions_visitor::mod_to_floor(ir_expression*)
000000000037b020 0000000000000238 t (anonymous namespace)::lower_instructions_visitor::int_div_to_mul_rcp(ir_expression*)
000000000037b260 0000000000000278 t (anonymous namespace)::lower_instructions_visitor::double_dot_to_fma(ir_expression*)
000000000037b4e0 00000000000002ec t (anonymous namespace)::lower_instructions_visitor::dfrexp_exp_to_arith(ir_expression*)
000000000037b7d0 00000000000002c4 t (anonymous namespace)::lower_instructions_visitor::dtrunc_to_dfrac(ir_expression*)
000000000037baa0 00000000000003c0 t (anonymous namespace)::lower_instructions_visitor::dround_even_to_dfrac(ir_expression*)
000000000037be60 0000000000000508 t (anonymous namespace)::lower_instructions_visitor::dfrexp_sig_to_arith(ir_expression*)
000000000037c370 00000000000003d4 t (anonymous namespace)::lower_instructions_visitor::extract_to_shifts(ir_expression*)
000000000037c750 00000000000003fc t (anonymous namespace)::lower_instructions_visitor::bit_count_to_math(ir_expression*)
000000000037cb50 0000000000000a44 t (anonymous namespace)::lower_instructions_visitor::dldexp_to_arith(ir_expression*)
000000000037d5a0 000000000000098c t (anonymous namespace)::lower_instructions_visitor::ldexp_to_arith(ir_expression*)
000000000037df30 0000000000001104 t (anonymous namespace)::lower_instructions_visitor::imul_high_to_mul(ir_expression*)
000000000037f040 00000000000022f8 t (anonymous namespace)::lower_instructions_visitor::visit_leave(ir_expression*)
0000000000381340 0000000000000058 t lower_instructions(exec_list*, unsigned int)
00000000003813a0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_discard*)
00000000003813b0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003813b0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003813c0 0000000000000174 t (anonymous namespace)::ir_lower_jumps_visitor::create_lowered_break()
0000000000381540 0000000000000248 t (anonymous namespace)::ir_lower_jumps_visitor::insert_lowered_return(ir_return*)
0000000000381790 0000000000000008 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003817a0 0000000000000040 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_return*)
00000000003817e0 000000000000004c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop_jump*)
0000000000381830 0000000000000070 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function*)
00000000003818a0 0000000000000208 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function_signature*)
0000000000381ab0 000000000000056c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop*)
0000000000382020 0000000000000a64 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_if*)
0000000000382a90 000000000000008c t do_lower_jumps(exec_list*, bool, bool, bool, bool, bool)
0000000000382b20 0000000000000090 T lower_packed_varyings_gs_splicer::visit_leave(ir_emit_vertex*)
0000000000382bb0 0000000000000090 T lower_packed_varyings_return_splicer::visit_leave(ir_return*)
0000000000382c40 0000000000001138 t (anonymous namespace)::lower_packed_varyings_visitor::lower_rvalue(ir_rvalue*, unsigned int, ir_variable*, char const*, bool, unsigned int)
0000000000383d80 0000000000000514 t lower_packed_varyings(void*, unsigned int, unsigned char const*, ir_variable_mode, unsigned int, gl_linked_shader*, bool, bool, bool)
00000000003842a0 0000000000000140 t (anonymous namespace)::lower_packed_varyings_visitor::lower_arraylike(ir_rvalue*, unsigned int, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000003843e0 0000000000000088 t process_array_ir(void*, ir_dereference_array*, ir_rvalue*)
0000000000384470 0000000000000058 t process_array_type(glsl_type const*, unsigned int)
00000000003844d0 000000000000005c t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_expression*)
0000000000384530 0000000000000170 t (anonymous namespace)::flatten_named_interface_blocks_declarations::handle_rvalue(ir_rvalue**)
00000000003846a0 00000000000000cc t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_assignment*)
0000000000384770 0000000000000440 t lower_named_interface_blocks(void*, gl_linked_shader*)
0000000000384bb0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_texture*)
0000000000384bb0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_array*)
0000000000384bb0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_record*)
0000000000384bb0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_call*)
0000000000384bc0 00000000000000a4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_assignment*)
0000000000384c70 0000000000000078 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_expression*)
0000000000384cf0 0000000000000068 t (anonymous namespace)::lower_precision_visitor::visit_leave(ir_expression*)
0000000000384d60 000000000000007c t (anonymous namespace)::convert_precision(int, ir_rvalue*)
0000000000384de0 0000000000000104 t (anonymous namespace)::lower_precision_visitor::handle_rvalue(ir_rvalue**)
0000000000384ef0 00000000000000b8 t (anonymous namespace)::find_precision_visitor::handle_rvalue(ir_rvalue**)
0000000000384fb0 0000000000000264 t (anonymous namespace)::find_lowerable_rvalues_visitor::pop_stack_entry()
0000000000385220 0000000000000008 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_leave(ir_instruction*, void*)
0000000000385230 0000000000000118 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_array*)
0000000000385350 0000000000000190 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_enter(ir_instruction*, void*)
00000000003854e0 000000000000007c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_constant*)
0000000000385560 000000000000009c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_texture*)
0000000000385600 00000000000000d4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_dereference_variable*)
00000000003856e0 00000000000000dc t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_record*)
00000000003857c0 0000000000000134 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_call*)
0000000000385900 000000000000013c t lower_precision(exec_list*)
0000000000385a40 0000000000000180 t (anonymous namespace)::find_precision_visitor::visit_enter(ir_call*)
0000000000385bc0 0000000000000330 t (anonymous namespace)::lower_subroutine_visitor::visit_leave(ir_call*)
0000000000385ef0 0000000000000058 t lower_subroutine(exec_list*, _mesa_glsl_parse_state*)
0000000000385f50 00000000000000b0 t (anonymous namespace)::lower_tess_level_visitor::is_tess_level_array(ir_rvalue*)
0000000000386000 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::handle_rvalue(ir_rvalue**)
0000000000386150 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::visit(ir_variable*)
00000000003862a0 0000000000000124 t (anonymous namespace)::lower_tess_level_visitor::fix_lhs(ir_assignment*) [clone .part.0]
00000000003863d0 0000000000000238 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_assignment*)
0000000000386610 0000000000000098 t lower_tess_level(gl_linked_shader*)
00000000003866b0 0000000000000274 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_call*)
0000000000386930 00000000000000f0 t (anonymous namespace)::ir_vec_index_to_swizzle_visitor::handle_rvalue(ir_rvalue**)
0000000000386a20 000000000000003c t do_vec_index_to_swizzle(exec_list*)
0000000000386a60 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000386a60 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000386a70 0000000000000008 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000386a80 00000000000000f8 t (anonymous namespace)::vector_deref_visitor::handle_rvalue(ir_rvalue**)
0000000000386b80 000000000000063c t (anonymous namespace)::vector_deref_visitor::visit_enter(ir_assignment*)
00000000003871c0 0000000000000070 t lower_vector_derefs(gl_linked_shader*)
0000000000387230 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
0000000000387230 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
0000000000387240 0000000000000008 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
0000000000387250 000000000000041c t (anonymous namespace)::vector_insert_visitor::handle_rvalue(ir_rvalue**)
0000000000387670 000000000000006c t lower_vector_insert(exec_list*, bool)
00000000003876e0 0000000000000284 t (anonymous namespace)::lower_vertex_id_visitor::visit(ir_dereference_variable*)
0000000000387970 00000000000000d4 t lower_vertex_id(gl_linked_shader*)
0000000000387a50 0000000000000010 t (anonymous namespace)::compute_shader_enabled(_mesa_glsl_parse_state const*)
0000000000387a60 00000000000000cc t (anonymous namespace)::lower_shared_reference_visitor::get_shared_offset(ir_variable const*)
0000000000387b30 0000000000000560 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_call*)
0000000000388090 0000000000000294 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_assignment*)
0000000000388330 0000000000000538 t (anonymous namespace)::lower_shared_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
0000000000388870 000000000000021c t (anonymous namespace)::lower_shared_reference_visitor::handle_rvalue(ir_rvalue**)
0000000000388a90 00000000000000cc t lower_shared_reference(gl_context*, gl_shader_program*, gl_linked_shader*)
0000000000388b60 000000000000003c t (anonymous namespace)::shader_storage_buffer_object(_mesa_glsl_parse_state const*)
0000000000388ba0 0000000000000070 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_access_params()
0000000000388c10 00000000000004cc t (anonymous namespace)::lower_ubo_reference_visitor::setup_for_load_or_store(void*, ir_variable*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_interface_packing)
00000000003890e0 0000000000000680 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_call*)
0000000000389760 0000000000000264 t (anonymous namespace)::lower_ubo_reference_visitor::handle_rvalue(ir_rvalue**)
00000000003899d0 0000000000000034 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_texture*)
0000000000389a10 00000000000003f8 t (anonymous namespace)::lower_ubo_reference_visitor::calculate_ssbo_unsized_array_length(ir_expression*)
0000000000389e10 00000000000000a0 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_expression*)
0000000000389eb0 0000000000000374 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_store(void*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000038a230 00000000000004e4 t (anonymous namespace)::lower_ubo_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
000000000038a720 0000000000000648 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_assignment*)
000000000038ad70 000000000000006c t lower_ubo_reference(gl_linked_shader*, bool, bool)
000000000038ade0 0000000000000090 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_return*)
000000000038ae70 0000000000000078 t get_field_name(char const*)
000000000038aef0 00000000000001fc t get_deref(void*, char const*, gl_linked_shader*, ir_dereference**, glsl_type const**)
000000000038b0f0 00000000000000d0 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_function_signature*)
000000000038b1c0 00000000000001e0 t lower_xfb_varying(void*, gl_linked_shader*, char const*)
000000000038b3a0 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038b3a0 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038b3b0 000000000000002c t (anonymous namespace)::ir_algebraic_visitor::visit_enter(ir_assignment*)
000000000038b3e0 000000000000001c t is_vec_negative_one(ir_constant*)
000000000038b400 0000000000000008 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038b410 00000000000000e4 t is_less_than_one(ir_constant*)
000000000038b500 00000000000000d0 t is_greater_than_zero(ir_constant*)
000000000038b5d0 0000000000000264 t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .isra.0]
000000000038b840 0000000000000048 t ir_builder::operand::operand(ir_variable*)
000000000038b840 0000000000000048 W ir_builder::operand::operand(ir_variable*)
000000000038b890 0000000000000048 t ir_builder::deref::deref(ir_variable*)
000000000038b890 0000000000000048 W ir_builder::deref::deref(ir_variable*)
000000000038b8e0 00000000000020a4 t (anonymous namespace)::ir_algebraic_visitor::handle_rvalue(ir_rvalue**)
000000000038d990 0000000000000064 t do_algebraic(exec_list*, bool, gl_shader_compiler_options const*)
000000000038da00 000000000000000c t (anonymous namespace)::ir_array_reference_visitor::visit_leave(ir_assignment*)
000000000038da10 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038da10 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038da20 0000000000000058 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_assignment*)
000000000038da80 0000000000000020 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_function_signature*)
000000000038daa0 0000000000000008 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038dab0 0000000000000114 t (anonymous namespace)::ir_array_reference_visitor::get_variable_entry(ir_variable*)
000000000038dbd0 0000000000000040 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_dereference_variable*)
000000000038dc10 0000000000000024 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_variable*)
000000000038dc40 0000000000000068 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_dereference_array*)
000000000038dcb0 0000000000000154 t ir_array_splitting_visitor::split_deref(ir_dereference**)
000000000038de10 0000000000000048 T ir_array_splitting_visitor::handle_rvalue(ir_rvalue**)
000000000038de60 0000000000000388 t optimize_split_arrays(exec_list*, bool)
000000000038e1f0 0000000000000374 T ir_array_splitting_visitor::visit_leave(ir_assignment*)
000000000038e570 00000000000000cc t (anonymous namespace)::opt_conditional_discard_visitor::visit_leave(ir_if*)
000000000038e640 000000000000003c t opt_conditional_discard(exec_list*)
000000000038e680 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038e680 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038e690 0000000000000008 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038e6a0 0000000000000100 t ir_constant_fold(ir_rvalue**)
000000000038e7a0 0000000000000030 t (anonymous namespace)::ir_constant_folding_visitor::handle_rvalue(ir_rvalue**)
000000000038e7d0 0000000000000088 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_discard*)
000000000038e860 0000000000000174 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_call*)
000000000038e9e0 00000000000000bc t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_assignment*)
000000000038eaa0 0000000000000040 t do_constant_folding(exec_list*)
000000000038eae0 0000000000000008 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function*)
000000000038eaf0 00000000000002c8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_propagation(ir_rvalue**)
000000000038edc0 0000000000000080 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function_signature*)
000000000038ee40 00000000000000e0 t (anonymous namespace)::ir_constant_propagation_visitor::handle_if_block(exec_list*, hash_table*, bool*)
000000000038ef20 0000000000000160 t (anonymous namespace)::ir_constant_propagation_visitor::kill(ir_variable*, unsigned int)
000000000038f080 0000000000000134 t (anonymous namespace)::ir_constant_propagation_visitor::handle_loop(ir_loop*, bool)
000000000038f1c0 000000000000002c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_loop*)
000000000038f1f0 00000000000000a8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_folding(ir_rvalue**) [clone .part.0]
000000000038f2a0 000000000000015c t (anonymous namespace)::ir_constant_propagation_visitor::visit_leave(ir_assignment*)
000000000038f400 0000000000000038 t (anonymous namespace)::ir_constant_propagation_visitor::handle_rvalue(ir_rvalue**)
000000000038f440 0000000000000140 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_call*)
000000000038f580 000000000000012c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_if*)
000000000038f6b0 00000000000000a0 t do_constant_propagation(exec_list*)
000000000038f750 0000000000000008 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_dereference_variable*)
000000000038f760 000000000000007c t (anonymous namespace)::ir_constant_variable_visitor::visit(ir_variable*)
000000000038f7e0 0000000000000180 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_call*)
000000000038f960 00000000000000f4 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_assignment*)
000000000038fa60 00000000000000f8 t do_constant_variable(exec_list*)
000000000038fb60 000000000000008c t do_constant_variable_unlinked(exec_list*)
000000000038fbf0 0000000000000008 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_swizzle*)
000000000038fc00 0000000000000210 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_rvalue(ir_rvalue**)
000000000038fe10 000000000000009c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit(ir_dereference_variable*)
000000000038feb0 00000000000000b0 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_if_block(exec_list*, exec_list*, bool*)
000000000038ff60 00000000000000c0 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_function_signature*)
0000000000390020 000000000000032c t (anonymous namespace)::ir_copy_propagation_elements_visitor::kill((anonymous namespace)::kill_entry*)
0000000000390350 0000000000000130 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_if*)
0000000000390480 000000000000015c t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_loop(ir_loop*, bool)
00000000003905e0 000000000000002c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_loop*)
0000000000390610 00000000000001ac t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_call*)
00000000003907c0 0000000000000930 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_assignment*)
00000000003910f0 00000000000000c4 t do_copy_propagation_elements(exec_list*)
00000000003911c0 0000000000000150 t optimize_dead_builtin_variables(exec_list*, ir_variable_mode)
0000000000391310 00000000000001b8 t (anonymous namespace)::replace_varyings_visitor::visit(ir_variable*)
00000000003914d0 00000000000000b0 t (anonymous namespace)::varying_info_visitor::visit(ir_variable*)
0000000000391580 00000000000000d8 t (anonymous namespace)::varying_info_visitor::visit(ir_dereference_variable*)
0000000000391660 00000000000001e8 t (anonymous namespace)::varying_info_visitor::visit_enter(ir_dereference_array*)
0000000000391850 00000000000002e0 t (anonymous namespace)::replace_varyings_visitor::handle_rvalue(ir_rvalue**)
0000000000391b30 0000000000000064 t (anonymous namespace)::replace_varyings_visitor::visit_leave(ir_assignment*)
0000000000391ba0 00000000000003f4 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
0000000000391ba0 00000000000003f4 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
0000000000391fa0 000000000000041c t do_dead_builtin_varyings(gl_context*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*)
00000000003923c0 00000000000001c0 t do_dead_code(exec_list*, bool)
0000000000392580 0000000000000090 t do_dead_code_unlinked(exec_list*)
0000000000392610 000000000000002c t (anonymous namespace)::array_index_visit::visit_enter(ir_dereference_array*)
0000000000392640 00000000000000b4 t (anonymous namespace)::kill_for_derefs_visitor::visit_leave(ir_emit_vertex*)
0000000000392700 00000000000004e0 t dead_code_local_basic_block(ir_instruction*, ir_instruction*, void*)
0000000000392be0 0000000000000124 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_swizzle*)
0000000000392d10 00000000000000d0 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_dereference_variable*)
0000000000392de0 0000000000000028 t do_dead_code_local(exec_list*)
0000000000392e10 0000000000000074 t (anonymous namespace)::ir_dead_functions_visitor::get_signature_entry(ir_function_signature*)
0000000000392e90 0000000000000024 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_call*)
0000000000392ec0 000000000000004c t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_function_signature*)
0000000000392f10 000000000000021c t do_dead_functions(exec_list*)
0000000000393130 0000000000000008 t (anonymous namespace)::nested_if_flattener::visit_enter(ir_assignment*)
0000000000393140 00000000000000f8 t (anonymous namespace)::nested_if_flattener::visit_leave(ir_if*)
0000000000393240 000000000000003c t opt_flatten_nested_if_blocks(exec_list*)
0000000000393280 00000000000001b4 t (anonymous namespace)::matrix_flipper::visit_enter(ir_expression*)
0000000000393440 00000000000000c4 t opt_flip_matrices(exec_list*)
0000000000393510 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000393510 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000393520 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_swizzle*)
0000000000393520 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_texture*)
0000000000393520 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_expression*)
0000000000393520 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_return*)
0000000000393530 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000393530 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000393540 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000393550 0000000000000008 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000393560 0000000000000120 t (anonymous namespace)::ir_save_lvalue_visitor::visit_enter(ir_dereference_array*)
0000000000393680 00000000000000b8 t replace_return_with_assignment(ir_instruction*, void*)
0000000000393740 00000000000000ec T ir_variable_replacement_visitor::visit_leave(ir_expression*)
0000000000393830 0000000000000074 T ir_variable_replacement_visitor::visit_leave(ir_texture*)
00000000003938b0 0000000000000084 T ir_variable_replacement_visitor::visit_leave(ir_return*)
0000000000393940 0000000000000084 T ir_variable_replacement_visitor::visit_leave(ir_dereference_array*)
0000000000393940 0000000000000084 T ir_variable_replacement_visitor::visit_leave(ir_dereference_record*)
00000000003939d0 000000000000003c t do_function_inlining(exec_list*)
0000000000393a10 0000000000000508 t ir_call::generate_inline(ir_instruction*)
0000000000393f20 0000000000000064 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_call*)
0000000000393f90 000000000000006c t ir_variable_replacement_visitor::replace_deref(ir_dereference**)
0000000000394000 00000000000000f4 T ir_variable_replacement_visitor::visit_leave(ir_call*)
0000000000394100 00000000000000a4 T ir_variable_replacement_visitor::visit_leave(ir_assignment*)
00000000003941b0 0000000000000008 t (anonymous namespace)::ir_if_simplification_visitor::visit_enter(ir_assignment*)
00000000003941c0 00000000000001dc t (anonymous namespace)::ir_if_simplification_visitor::visit_leave(ir_if*)
00000000003943a0 000000000000003c t do_if_simplification(exec_list*)
00000000003943e0 0000000000000250 t (anonymous namespace)::compare_components(ir_constant*, ir_constant*)
0000000000394630 0000000000000290 t (anonymous namespace)::combine_constant(bool, ir_constant*, ir_constant*)
00000000003948c0 0000000000000258 t (anonymous namespace)::get_range(ir_rvalue*)
0000000000394b20 0000000000000328 t (anonymous namespace)::ir_minmax_visitor::prune_expression(ir_expression*, (anonymous namespace)::minmax_range)
0000000000394e50 00000000000000d0 t (anonymous namespace)::ir_minmax_visitor::handle_rvalue(ir_rvalue**)
0000000000394f20 0000000000000040 t do_minmax_prune(exec_list*)
0000000000394f60 000000000000002c t (anonymous namespace)::ir_rebalance_visitor::visit_enter(ir_assignment*)
0000000000394f90 0000000000000164 t handle_expression(ir_expression*)
0000000000395100 0000000000000068 t update_types(ir_instruction*, void*)
0000000000395170 000000000000009c t (anonymous namespace)::ir_rebalance_visitor::handle_rvalue(ir_rvalue**)
0000000000395210 0000000000000124 t is_reduction(ir_instruction*, void*)
0000000000395340 000000000000003c t do_rebalance_tree(exec_list*)
0000000000395380 0000000000000008 t (anonymous namespace)::redundant_jumps_visitor::visit_enter(ir_assignment*)
0000000000395390 00000000000000c8 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_if*)
0000000000395460 0000000000000050 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_loop*)
00000000003954b0 000000000000003c t optimize_redundant_jumps(exec_list*)
00000000003954f0 0000000000000008 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_dereference_record*)
0000000000395500 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000395500 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000395510 0000000000000020 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_function_signature*)
0000000000395530 0000000000000008 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000395540 00000000000000c4 t (anonymous namespace)::ir_structure_reference_visitor::get_variable_entry(ir_variable*)
0000000000395610 0000000000000024 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_variable*)
0000000000395640 000000000000004c t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_assignment*)
0000000000395690 0000000000000064 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_dereference_variable*)
0000000000395700 00000000000000cc t (anonymous namespace)::ir_structure_splitting_visitor::handle_rvalue(ir_rvalue**)
00000000003957d0 0000000000000378 t (anonymous namespace)::ir_structure_splitting_visitor::visit_leave(ir_assignment*)
0000000000395b50 0000000000000324 t do_structure_splitting(exec_list*)
0000000000395e80 0000000000000190 t (anonymous namespace)::ir_opt_swizzle_visitor::handle_rvalue(ir_rvalue**)
0000000000396010 0000000000000040 t optimize_swizzles(exec_list*)
0000000000396050 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_loop*)
0000000000396060 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function*)
0000000000396060 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function_signature*)
0000000000396070 00000000000001b8 t (anonymous namespace)::tree_grafting_basic_block(ir_instruction*, ir_instruction*, void*)
0000000000396230 0000000000000064 t (anonymous namespace)::ir_tree_grafting_visitor::do_graft(ir_rvalue**)
00000000003962a0 0000000000000020 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_if*)
00000000003962c0 000000000000001c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_swizzle*)
00000000003962e0 00000000000000c0 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_texture*)
00000000003963a0 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_expression*)
0000000000396410 000000000000002c t (anonymous namespace)::dereferences_variable_callback(ir_instruction*, void*)
0000000000396440 000000000000003c t (anonymous namespace)::ir_tree_grafting_visitor::check_graft(ir_instruction*, ir_variable*) [clone .isra.0]
0000000000396480 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_leave(ir_assignment*)
00000000003964f0 0000000000000118 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_call*)
0000000000396610 0000000000000064 t do_tree_grafting(exec_list*)
0000000000396680 0000000000000098 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_swizzle*)
0000000000396720 000000000000000c t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_texture*)
0000000000396720 000000000000000c t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_dereference_array*)
0000000000396730 000000000000014c t (anonymous namespace)::ir_vectorize_visitor::try_vectorize()
0000000000396880 0000000000000058 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_if*)
00000000003968e0 00000000000000e0 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_assignment*)
00000000003969c0 0000000000000040 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_loop*)
0000000000396a00 0000000000000168 t rewrite_swizzle(ir_instruction*, void*)
0000000000396b70 0000000000000038 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_expression*)
0000000000396bb0 0000000000000060 t (anonymous namespace)::ir_vectorize_visitor::visit_leave(ir_assignment*)
0000000000396c10 000000000000005c t do_vectorize(exec_list*)
0000000000396c70 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000396c70 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000396c80 0000000000000050 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_enter(ir_assignment*)
0000000000396cd0 000000000000000c t (anonymous namespace)::ir_invariance_propagation_visitor::visit_leave(ir_assignment*)
0000000000396ce0 0000000000000008 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000396cf0 0000000000000060 t (anonymous namespace)::ir_invariance_propagation_visitor::visit(ir_dereference_variable*)
0000000000396d50 0000000000000050 t propagate_invariance(exec_list*)
0000000000396da0 0000000000000044 t string_to_uint_map_ctor
0000000000396df0 0000000000000074 t string_to_uint_map_dtor
0000000000396e70 0000000000000034 t match_layout_qualifier(char const*, char const*, _mesa_glsl_parse_state*) [clone .isra.0]
0000000000396eb0 000000000000039c t yysyntax_error(long*, char**, yypcontext_t const*)
0000000000397250 000000000000003c t _mesa_glsl_parse_state::has_compute_shader() const
0000000000397290 0000000000000068 t _mesa_glsl_parse_state::has_geometry_shader() const
0000000000397300 0000000000000050 t _mesa_glsl_parse_state::has_tessellation_shader() const
0000000000397350 0000000000000074 t ast_layout_expression::ast_layout_expression(YYLTYPE const&, ast_expression*)
0000000000397350 0000000000000074 W ast_layout_expression::ast_layout_expression(YYLTYPE const&, ast_expression*)
00000000003973d0 00000000000086d8 t _mesa_glsl_parse(_mesa_glsl_parse_state*)
000000000039fab0 00000000000000f8 t yy_get_previous_state(void*)
000000000039fbb0 0000000000000298 t literal_integer(char*, int, _mesa_glsl_parse_state*, YYSTYPE*, YYLTYPE*, int)
000000000039fe50 00000000000000bc t classify_identifier(_mesa_glsl_parse_state*, char const*, unsigned int, YYSTYPE*)
000000000039ff10 0000000000000030 t yy_fatal_error(char const*, void*) [clone .isra.0]
000000000039ff40 00000000000000ac t _mesa_glsl_lexer_ensure_buffer_stack(void*)
000000000039fff0 00000000000000b4 t _mesa_glsl_lexer__switch_to_buffer(yy_buffer_state*, void*)
00000000003a00b0 0000000000000068 t _mesa_glsl_lexer__delete_buffer(yy_buffer_state*, void*)
00000000003a0120 0000000000000070 t _mesa_glsl_lexer__flush_buffer(yy_buffer_state*, void*)
00000000003a0190 0000000000000078 t _mesa_glsl_lexer__init_buffer(yy_buffer_state*, __sFILE*, void*)
00000000003a0210 000000000000007c t _mesa_glsl_lexer__create_buffer(__sFILE*, int, void*)
00000000003a0290 00000000000000b0 t _mesa_glsl_lexer_restart(__sFILE*, void*)
00000000003a0340 00000000000003ac t yy_get_next_buffer(void*)
00000000003a06f0 000000000000dc68 t _mesa_glsl_lexer_lex(YYSTYPE*, YYLTYPE*, void*)
00000000003ae360 000000000000008c t _mesa_glsl_lexer_pop_buffer_state(void*)
00000000003ae3f0 000000000000009c t _mesa_glsl_lexer__scan_buffer(char*, unsigned long, void*)
00000000003ae490 00000000000000a0 t _mesa_glsl_lexer__scan_bytes(char const*, int, void*)
00000000003ae530 0000000000000074 t _mesa_glsl_lexer_lex_destroy(void*)
00000000003ae5b0 0000000000000084 t _mesa_glsl_lexer_ctor(_mesa_glsl_parse_state*, char const*)
00000000003ae640 0000000000000008 t _mesa_glsl_lexer_dtor(_mesa_glsl_parse_state*)
00000000003ae650 0000000000000044 t skip_newline
00000000003ae6a0 00000000000000bc t glcpp_error
00000000003ae760 00000000000000ac t glcpp_warning
00000000003ae810 00000000000002c4 t glcpp_preprocess
00000000003aeae0 00000000000000e0 t yy_get_previous_state
00000000003aebc0 0000000000000030 t yy_fatal_error.isra.0
00000000003aebf0 00000000000000ac t glcpp_ensure_buffer_stack
00000000003aeca0 00000000000000b4 t glcpp__switch_to_buffer
00000000003aed60 0000000000000068 t glcpp__delete_buffer
00000000003aedd0 0000000000000070 t glcpp__flush_buffer
00000000003aee40 0000000000000078 t glcpp__init_buffer
00000000003aeec0 000000000000007c t glcpp__create_buffer
00000000003aef40 00000000000000b0 t glcpp_restart
00000000003aeff0 000000000000272c t glcpp_lex
00000000003b1720 000000000000008c t glcpp_pop_buffer_state
00000000003b17b0 000000000000009c t glcpp__scan_buffer
00000000003b1850 00000000000000a0 t glcpp__scan_bytes
00000000003b18f0 0000000000000084 t glcpp_lex_init_extra
00000000003b1980 0000000000000074 t glcpp_lex_destroy
00000000003b1a00 0000000000000034 t glcpp_lex_set_source_string
00000000003b1a40 0000000000000084 t yy_stack_print
00000000003b1ad0 00000000000000d4 t _check_for_reserved_macro_name
00000000003b1bb0 00000000000000bc t _glcpp_parser_skip_stack_push_if
00000000003b1c70 00000000000001b0 t _glcpp_parser_evaluate_defined_in_list
00000000003b1e20 0000000000000128 t yy_symbol_print.isra.0
00000000003b1f50 000000000000006c t yydestruct.isra.0
00000000003b1fc0 00000000000002b0 t _macro_equal
00000000003b2270 0000000000000094 t glcpp_parser_copy_defines
00000000003b2310 00000000000000c4 t _define_object_macro
00000000003b23e0 000000000000012c t _define_function_macro
00000000003b2510 000000000000039c t yysyntax_error
00000000003b28b0 00000000000000d0 t _token_list_copy
00000000003b2980 00000000000000a4 t _token_list_create_with_one_ival
00000000003b2a30 00000000000000b0 t add_builtin_define
00000000003b2ae0 0000000000000260 t _glcpp_parser_handle_version_declaration.part.0
00000000003b2d40 00000000000001d0 t _token_print
00000000003b2f10 0000000000000554 t _glcpp_parser_apply_pastes
00000000003b3470 00000000000008c0 t _glcpp_parser_expand_token_list
00000000003b3d30 0000000000000188 t _glcpp_parser_expand_and_lex_from
00000000003b3ec0 00000000000000f8 t glcpp_parser_create
00000000003b3fc0 00000000000022c0 t glcpp_parser_parse
00000000003b6280 0000000000000034 t glcpp_parser_destroy
00000000003b62c0 000000000000002c t glcpp_parser_resolve_implicit_version
00000000003b62f0 0000000000000050 T glsl_type::record_key_hash(void const*)
00000000003b6340 000000000000005c t hash_free_type_function(hash_entry*)
00000000003b63a0 0000000000000084 t glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b63a0 0000000000000084 T glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b6430 0000000000000074 t glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b6430 0000000000000074 T glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b64b0 00000000000000d4 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b64b0 00000000000000d4 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b6590 00000000000000e4 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b6590 00000000000000e4 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b6680 0000000000000008 t glsl_type::~glsl_type()
00000000003b6680 0000000000000008 T glsl_type::~glsl_type()
00000000003b6690 0000000000000084 t glsl_type::contains_sampler() const
00000000003b6720 0000000000000074 t glsl_type::contains_array() const
00000000003b67a0 0000000000000090 t glsl_type::contains_integer() const
00000000003b6830 0000000000000084 t glsl_type::contains_double() const
00000000003b68c0 0000000000000098 t glsl_type::contains_opaque() const
00000000003b6960 0000000000000084 t glsl_type::contains_subroutine() const
00000000003b69f0 00000000000000b8 t glsl_type::sampler_index() const
00000000003b6ab0 0000000000000084 t glsl_type::contains_image() const
00000000003b6b40 00000000000000c0 t glsl_type::get_base_type() const
00000000003b6c00 0000000000000048 t glsl_type::get_scalar_type() const
00000000003b6c50 0000000000000038 t glsl_type_singleton_init_or_ref
00000000003b6c90 00000000000000e4 t glsl_type_singleton_decref
00000000003b6d80 0000000000000134 t glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b6d80 0000000000000134 T glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b6ec0 0000000000000138 t glsl_type::vec(unsigned int)
00000000003b7000 0000000000000138 t glsl_type::f16vec(unsigned int)
00000000003b7140 0000000000000138 t glsl_type::dvec(unsigned int)
00000000003b7280 0000000000000138 t glsl_type::ivec(unsigned int)
00000000003b73c0 0000000000000138 t glsl_type::uvec(unsigned int)
00000000003b7500 0000000000000138 t glsl_type::bvec(unsigned int)
00000000003b7640 0000000000000138 t glsl_type::i64vec(unsigned int)
00000000003b7780 0000000000000138 t glsl_type::u64vec(unsigned int)
00000000003b78c0 0000000000000138 t glsl_type::i16vec(unsigned int)
00000000003b7a00 0000000000000138 t glsl_type::u16vec(unsigned int)
00000000003b7b40 0000000000000138 t glsl_type::i8vec(unsigned int)
00000000003b7c80 0000000000000138 t glsl_type::u8vec(unsigned int)
00000000003b7dc0 0000000000000498 t glsl_type::get_instance(unsigned int, unsigned int, unsigned int, unsigned int, bool)
00000000003b8260 00000000000003ac t glsl_type::get_sampler_instance(glsl_sampler_dim, bool, bool, glsl_base_type)
00000000003b8610 000000000000038c t glsl_type::get_image_instance(glsl_sampler_dim, bool, glsl_base_type)
00000000003b89a0 00000000000000f4 t glsl_type::get_array_instance(glsl_type const*, unsigned int, unsigned int)
00000000003b8aa0 00000000000001cc t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const
00000000003b8c70 0000000000000084 t glsl_type::compare_no_precision(glsl_type const*) const
00000000003b8d00 0000000000000054 T glsl_type::record_key_compare(void const*, void const*)
00000000003b8d60 00000000000000ec t glsl_type::get_struct_instance(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b8e50 00000000000000f8 t glsl_type::get_interface_instance(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b8f50 0000000000000108 t glsl_type::get_subroutine_instance(char const*)
00000000003b9060 000000000000041c t glsl_type::get_mul_type(glsl_type const*, glsl_type const*)
00000000003b9480 00000000000000a0 t glsl_type::field_type(char const*) const
00000000003b9520 0000000000000098 t glsl_type::field_index(char const*) const
00000000003b95c0 0000000000000104 t glsl_type::component_slots() const
00000000003b96d0 0000000000000164 t glsl_type::struct_location_offset(unsigned int) const
00000000003b9840 00000000000000bc t glsl_type::uniform_locations() const
00000000003b9900 0000000000000110 t glsl_type::varying_count() const
00000000003b9a10 0000000000000210 t glsl_type::can_implicitly_convert_to(glsl_type const*, _mesa_glsl_parse_state*) const
00000000003b9c20 00000000000002b4 t glsl_type::std140_base_alignment(bool) const
00000000003b9ee0 0000000000000404 t glsl_type::std140_size(bool) const
00000000003ba2f0 0000000000000240 t glsl_type::std430_base_alignment(bool) const
00000000003ba530 0000000000000340 t glsl_type::std430_size(bool) const
00000000003ba870 0000000000000054 t glsl_type::std430_array_stride(bool) const
00000000003ba8d0 0000000000000124 t glsl_type::count_vec4_slots(bool, bool) const
00000000003baa00 0000000000000058 t glsl_type::coordinate_components() const
00000000003baa60 0000000000000350 t encode_type_to_blob
00000000003badb0 00000000000002d8 t decode_type_from_blob
00000000003bb090 0000000000000078 t _mesa_shader_stage_to_string
00000000003bb110 0000000000000134 t cso_set_vertex_elements_direct
00000000003bb250 0000000000000114 t cso_single_sampler.part.0
00000000003bb370 0000000000000070 t cso_init_vbuf.constprop.0
00000000003bb3e0 0000000000000280 t sanitize_hash
00000000003bb660 00000000000001a4 t cso_set_vertex_buffers_direct
00000000003bb810 00000000000005c0 t cso_destroy_context
00000000003bbdd0 0000000000000138 t cso_create_context
00000000003bbf10 0000000000000128 t cso_set_blend
00000000003bc040 0000000000000100 t cso_set_depth_stencil_alpha
00000000003bc140 0000000000000100 t cso_set_rasterizer
00000000003bc240 0000000000000024 t cso_set_fragment_shader_handle
00000000003bc270 0000000000000024 t cso_set_vertex_shader_handle
00000000003bc2a0 000000000000006c t cso_set_framebuffer
00000000003bc310 0000000000000070 t cso_set_viewport
00000000003bc380 00000000000000b8 t cso_set_viewport_dims
00000000003bc440 0000000000000040 t cso_set_blend_color
00000000003bc480 0000000000000024 t cso_set_sample_mask
00000000003bc4b0 000000000000002c t cso_set_min_samples
00000000003bc4e0 0000000000000028 t cso_set_stencil_ref
00000000003bc510 0000000000000088 t cso_set_render_condition
00000000003bc5a0 000000000000002c t cso_set_geometry_shader_handle
00000000003bc5d0 000000000000002c t cso_set_tessctrl_shader_handle
00000000003bc600 000000000000002c t cso_set_tesseval_shader_handle
00000000003bc630 000000000000002c t cso_set_compute_shader_handle
00000000003bc660 0000000000000034 t cso_set_vertex_elements
00000000003bc6a0 000000000000001c t cso_set_vertex_buffers
00000000003bc6c0 0000000000000270 t cso_set_vertex_buffers_and_elements
00000000003bc930 00000000000000a0 t cso_set_samplers
00000000003bc9d0 00000000000001a0 t cso_set_sampler_views
00000000003bcb70 00000000000001a4 t cso_set_shader_images
00000000003bcd20 0000000000000180 t cso_set_stream_outputs
00000000003bcea0 0000000000000190 t cso_set_constant_buffer
00000000003bd030 00000000000000d0 t cso_save_constant_buffer_slot0
00000000003bd100 00000000000001a8 t cso_restore_constant_buffer_slot0
00000000003bd2b0 000000000000056c t cso_save_state
00000000003bd820 0000000000000954 t cso_restore_state
00000000003be180 0000000000000020 t cso_draw_vbo
00000000003be1a0 0000000000000068 t cso_draw_arrays
00000000003be210 0000000000000064 t cso_draw_arrays_instanced
00000000003be280 0000000000000280 t cso_data_rehash
00000000003be500 00000000000000c8 t cso_hash_insert
00000000003be5d0 0000000000000014 t cso_hash_init
00000000003be5f0 0000000000000078 t cso_hash_deinit
00000000003be670 0000000000000020 t cso_hash_iter_key
00000000003be690 0000000000000064 t cso_hash_data_next
00000000003be700 00000000000000d4 t cso_hash_take
00000000003be7e0 0000000000000038 t cso_hash_first_node
00000000003be820 0000000000000008 t cso_hash_size
00000000003be830 000000000000009c t cso_hash_erase
00000000003be8d0 0000000000000058 t cso_hash_contains
00000000003be930 0000000000000008 t tgsi_build_header
00000000003be940 0000000000000014 t tgsi_build_processor
00000000003be960 0000000000000020 t tgsi_default_full_declaration
00000000003be980 0000000000000214 t tgsi_build_full_declaration
00000000003beba0 0000000000000010 t tgsi_default_full_immediate
00000000003bebb0 00000000000000a4 t tgsi_build_full_immediate
00000000003bec60 000000000000000c t tgsi_default_instruction
00000000003bec70 0000000000000098 t tgsi_default_full_instruction
00000000003bed10 0000000000000494 t tgsi_build_full_instruction
00000000003bf1b0 0000000000000034 t tgsi_default_full_property
00000000003bf1f0 00000000000000ac t tgsi_build_full_property
00000000003bf2a0 000000000000004c t tgsi_full_src_register_from_dst
00000000003bf2f0 0000000000000090 t dump_ctx_printf
00000000003bf380 00000000000000ac t _dump_writemask.part.0
00000000003bf430 0000000000000070 t prolog
00000000003bf4a0 00000000000002f8 t iter_immediate
00000000003bf7a0 0000000000000228 t iter_property
00000000003bf9d0 0000000000000e20 t iter_instruction
00000000003c07f0 0000000000000a2c t iter_declaration
00000000003c1220 0000000000000078 t tgsi_dump
00000000003c12a0 0000000000000040 t transform_decl
00000000003c12e0 0000000000000280 t transform_instr
00000000003c1560 00000000000000f0 t tgsi_emulate
00000000003c1650 0000000000000040 t tgsi_get_generic_gl_varying_index
00000000003c1690 00000000000001bc t tgsi_get_gl_varying_semantic
00000000003c1850 00000000000000f0 t tgsi_get_sysval_semantic
00000000003c1940 0000000000000028 t tgsi_get_opcode_info
00000000003c1970 0000000000000024 t tgsi_get_opcode_name
00000000003c19a0 0000000000000110 t tgsi_iterate_shader
00000000003c1ab0 0000000000000034 t tgsi_parse_init
00000000003c1af0 0000000000000004 t tgsi_parse_free
00000000003c1b00 0000000000000020 t tgsi_parse_end_of_tokens
00000000003c1b20 0000000000000488 t tgsi_parse_token
00000000003c1fb0 0000000000000050 t tgsi_dup_tokens
00000000003c2000 0000000000000008 t tgsi_alloc_tokens
00000000003c2010 0000000000000004 t tgsi_free_tokens
00000000003c2020 00000000000006e8 t scan_src_operand
00000000003c2710 00000000000013b4 t tgsi_scan_shader
00000000003c3ad0 0000000000000024 t tgsi_file_name
00000000003c3b00 0000000000000044 t emit_property
00000000003c3b50 0000000000000044 t emit_immediate
00000000003c3ba0 0000000000000044 t emit_declaration
00000000003c3bf0 0000000000000044 t emit_instruction
00000000003c3c40 0000000000000298 t tgsi_transform_shader
00000000003c3ee0 0000000000000198 t match_or_expand_immediate
00000000003c4080 0000000000000068 t tokens_error
00000000003c40f0 0000000000000124 t get_tokens
00000000003c4220 00000000000000bc t emit_decl_semantic
00000000003c42e0 00000000000000ec t alloc_temporary
00000000003c43d0 0000000000000240 t decl_immediate
00000000003c4610 0000000000000018 t ureg_property
00000000003c4630 000000000000014c t ureg_DECL_fs_input_cyl_centroid_layout
00000000003c4780 0000000000000030 t ureg_DECL_fs_input_cyl_centroid
00000000003c47b0 0000000000000038 t ureg_DECL_vs_input
00000000003c47f0 0000000000000038 t ureg_DECL_input
00000000003c4830 0000000000000114 t ureg_DECL_system_value
00000000003c4950 000000000000015c t ureg_DECL_output_layout
00000000003c4ab0 0000000000000038 t ureg_DECL_output
00000000003c4af0 0000000000000040 t ureg_DECL_constant2D
00000000003c4b30 0000000000000160 t ureg_DECL_constant
00000000003c4c90 00000000000000c4 t ureg_DECL_hw_atomic
00000000003c4d60 0000000000000008 t ureg_DECL_temporary
00000000003c4d70 0000000000000008 t ureg_DECL_local_temporary
00000000003c4d80 00000000000000b4 t ureg_DECL_array_temporary
00000000003c4e40 0000000000000024 t ureg_release_temporary
00000000003c4e70 0000000000000044 t ureg_DECL_address
00000000003c4ec0 00000000000000c4 t ureg_DECL_sampler
00000000003c4f90 00000000000000b8 t ureg_DECL_sampler_view
00000000003c5050 00000000000000b0 t ureg_DECL_image
00000000003c5100 00000000000000a4 t ureg_DECL_buffer
00000000003c51b0 000000000000002c t ureg_DECL_memory
00000000003c51e0 0000000000000054 t ureg_DECL_immediate
00000000003c5240 000000000000003c t ureg_DECL_immediate_f64
00000000003c5280 0000000000000008 t ureg_DECL_immediate_uint
00000000003c5290 0000000000000008 t ureg_DECL_immediate_int
00000000003c52a0 000000000000003c t ureg_DECL_immediate_uint64
00000000003c52e0 000000000000003c t ureg_DECL_immediate_int64
00000000003c5320 0000000000000198 t ureg_emit_src
00000000003c54c0 0000000000000154 t ureg_emit_dst
00000000003c5620 000000000000009c t ureg_emit_insn
00000000003c56c0 0000000000000144 t ureg_emit_texture
00000000003c5810 0000000000000038 t ureg_fixup_insn_size
00000000003c5850 000000000000016c t ureg_insn
00000000003c59c0 00000000000001f0 t ureg_tex_insn
00000000003c5bb0 0000000000000168 t ureg_memory_insn
00000000003c5d20 0000000000000ac8 t ureg_finalize
00000000003c67f0 000000000000011c t ureg_create_shader
00000000003c6910 0000000000000044 t ureg_get_tokens
00000000003c6960 0000000000000004 t ureg_free_tokens
00000000003c6970 00000000000000fc t ureg_create_with_screen
00000000003c6a70 0000000000000008 t ureg_create
00000000003c6a80 0000000000000008 t ureg_set_next_shader_processor
00000000003c6a90 0000000000000078 t ureg_destroy
00000000003c6b10 0000000000000050 t tgsi_util_get_src_register_swizzle
00000000003c6b60 0000000000000560 t tgsi_util_get_inst_usage_mask
00000000003c70c0 0000000000000028 t tgsi_util_get_src_from_ind
00000000003c70f0 0000000000000058 t util_bitmask_create
00000000003c7150 00000000000000f8 t util_bitmask_set
00000000003c7250 000000000000003c t util_bitmask_clear
00000000003c7290 000000000000005c t util_bitmask_get
00000000003c72f0 00000000000000a0 t util_bitmask_get_next_index
00000000003c7390 0000000000000008 t util_bitmask_get_first_index
00000000003c73a0 000000000000002c t util_bitmask_destroy
00000000003c73d0 00000000000001fc t util_copy_framebuffer_state
00000000003c75d0 00000000000000b8 t util_unreference_framebuffer_state
00000000003c7690 0000000000000080 t util_framebuffer_get_num_layers
00000000003c7710 00000000000000a4 t util_framebuffer_get_num_samples
00000000003c77c0 00000000000000e0 t util_sample_locations_flip_y
00000000003c78a0 0000000000000254 t util_gen_mipmap
00000000003c7b00 0000000000000244 t util_set_vertex_buffers_mask
00000000003c7d50 000000000000008c t util_set_vertex_buffers_count
00000000003c7de0 0000000000000008 t util_throttle_init
00000000003c7df0 0000000000000050 t util_throttle_deinit
00000000003c7e40 0000000000000238 t util_throttle_memory_usage
00000000003c8080 0000000000000010 t u_prim_name
00000000003c8090 00000000000000c8 t u_sampler_view_default_template
00000000003c8160 000000000000017c t u_pipe_screen_get_param_defaults
00000000003c82e0 0000000000000218 t util_make_vertex_passthrough_shader_with_so
00000000003c8500 000000000000000c t util_make_vertex_passthrough_shader
00000000003c8510 0000000000000034 t util_make_layered_clear_vertex_shader
00000000003c8550 0000000000000098 t util_make_layered_clear_helper_vertex_shader
00000000003c85f0 0000000000000098 t util_make_layered_clear_geometry_shader
00000000003c8690 00000000000000d4 t util_make_fragment_passthrough_shader
00000000003c8770 000000000000014c t pipe_get_tile_raw
00000000003c88c0 0000000000000c60 t pipe_get_tile_rgba
00000000003c9520 00000000000000b4 t upload_unmap_internal
00000000003c95e0 0000000000000088 t u_upload_create
00000000003c9670 0000000000000014 t u_upload_create_default
00000000003c9690 0000000000000008 t u_upload_unmap
00000000003c96a0 0000000000000074 t u_upload_destroy
00000000003c9720 00000000000003a4 t u_upload_alloc
00000000003c9ad0 000000000000004c t u_upload_data
00000000003c9b20 000000000000003c t u_vbuf_delete_vertex_elements
00000000003c9b60 000000000000022c t u_vbuf_get_minmax_index_mapped
00000000003c9d90 0000000000000064 t u_vbuf_set_driver_vertex_buffers
00000000003c9e00 000000000000034c t u_vbuf_set_vertex_elements_internal
00000000003ca150 00000000000009c8 t u_vbuf_translate_begin
00000000003cab20 0000000000000254 t u_vbuf_get_caps
00000000003cad80 00000000000000a8 t u_vbuf_create
00000000003cae30 0000000000000024 t u_vbuf_set_vertex_elements
00000000003cae60 0000000000000008 t u_vbuf_unset_vertex_elements
00000000003cae70 000000000000019c t u_vbuf_destroy
00000000003cb010 000000000000056c t u_vbuf_set_vertex_buffers
00000000003cb580 00000000000000ac t u_vbuf_get_minmax_index
00000000003cb630 000000000000089c t u_vbuf_draw_vbo
00000000003cbed0 00000000000000b8 t u_vbuf_split_indexed_multidraw
00000000003cbf90 000000000000000c t u_vbuf_save_vertex_elements
00000000003cbfa0 0000000000000050 t u_vbuf_restore_vertex_elements
00000000003cbff0 00000000000000bc t u_vbuf_save_vertex_buffer0
00000000003cc0b0 000000000000009c t u_vbuf_restore_vertex_buffer0
00000000003cc150 00000000000000a4 t nouveau_transfer_read
00000000003cc200 000000000000005c t nouveau_scratch_unref_bos
00000000003cc260 00000000000000e0 t nouveau_transfer_staging.isra.0
00000000003cc340 00000000000001d0 t nouveau_scratch_more
00000000003cc510 00000000000000f8 t nouveau_buffer_destroy
00000000003cc610 000000000000011c t nouveau_buffer_cache.isra.0
00000000003cc730 0000000000000188 t nouveau_transfer_write
00000000003cc8c0 00000000000000ec t nouveau_buffer_transfer_flush_region
00000000003cc9b0 0000000000000164 t nouveau_buffer_transfer_unmap
00000000003ccb20 0000000000000590 t nouveau_buffer_transfer_map
00000000003cd0b0 0000000000000218 t nouveau_copy_buffer
00000000003cd2d0 0000000000000168 t nouveau_resource_map_offset
00000000003cd440 0000000000000234 t nouveau_buffer_create
00000000003cd680 0000000000000240 t nouveau_buffer_invalidate
00000000003cd8c0 0000000000000048 t nouveau_scratch_runout_release
00000000003cd910 00000000000000b0 t nouveau_scratch_data
00000000003cd9c0 0000000000000090 t nouveau_scratch_get
00000000003cda50 0000000000000064 t nouveau_fence_trigger_work
00000000003cdac0 0000000000000054 t nouveau_fence_new
00000000003cdb20 000000000000005c t nouveau_fence_emit
00000000003cdb80 00000000000000a4 t nouveau_fence_del
00000000003cdc30 00000000000000e0 t nouveau_fence_update
00000000003cdd10 000000000000005c t nouveau_fence_signalled
00000000003cdd70 00000000000000c8 t nouveau_fence_next
00000000003cde40 000000000000011c t nouveau_fence_kick
00000000003cdf60 00000000000000f0 t nouveau_fence_wait
00000000003ce050 0000000000000020 T nouveau_fence_unref_bo
00000000003ce070 00000000000000a4 t nouveau_fence_work
00000000003ce120 0000000000000050 t nouveau_heap_init
00000000003ce170 0000000000000030 t nouveau_heap_destroy
00000000003ce1a0 00000000000000ec t nouveau_heap_alloc
00000000003ce290 00000000000000e4 t nouveau_heap_free
00000000003ce380 00000000000002f8 t nouveau_mm_allocate
00000000003ce680 00000000000000d8 t nouveau_mm_free
00000000003ce760 0000000000000004 T nouveau_mm_free_work
00000000003ce770 0000000000000074 t nouveau_mm_create
00000000003ce7f0 000000000000013c t nouveau_mm_destroy
00000000003ce930 000000000000000c t nouveau_screen_get_vendor
00000000003ce940 000000000000000c t nouveau_screen_get_device_vendor
00000000003ce950 0000000000000008 t nouveau_screen_get_disk_shader_cache
00000000003ce960 0000000000000050 t nouveau_screen_fence_ref
00000000003ce9b0 000000000000003c t nouveau_screen_get_name
00000000003ce9f0 0000000000000050 t nouveau_screen_get_timestamp
00000000003cea40 0000000000000028 t nouveau_set_debug_callback
00000000003cea70 0000000000000014 t nouveau_screen_fence_finish
00000000003cea90 0000000000000084 t nouveau_screen_bo_from_handle
00000000003ceb20 0000000000000080 t nouveau_screen_bo_get_handle
00000000003ceba0 0000000000000278 t nouveau_screen_init
00000000003cee20 0000000000000060 t nouveau_screen_fini
00000000003cee80 0000000000000010 t nouveau_context_init
00000000003cee90 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_planes
00000000003ceea0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_components
00000000003ceeb0 0000000000000008 t nouveau_vp3_video_buffer_surfaces
00000000003ceec0 0000000000000004 t nouveau_vp3_decoder_flush
00000000003ceed0 0000000000000004 t nouveau_vp3_decoder_begin_frame
00000000003ceee0 00000000000000e8 t nouveau_vp3_decoder_destroy
00000000003cefd0 00000000000000a4 t vp4_getpath
00000000003cf080 0000000000000088 t vp3_getpath
00000000003cf110 000000000000021c t firmware_present
00000000003cf330 0000000000000004 t nouveau_vp3_decoder_end_frame
00000000003cf340 0000000000000148 t nouveau_vp3_video_buffer_destroy
00000000003cf490 00000000000002e8 t nouveau_vp3_video_buffer_create
00000000003cf780 000000000000002c t nouveau_vp3_decoder_init_common
00000000003cf7b0 00000000000001d4 t nouveau_vp3_load_firmware
00000000003cf990 0000000000000150 T nouveau_vp3_screen_get_video_param
00000000003cfae0 0000000000000014 T nouveau_vp3_screen_video_supported
00000000003cfb00 000000000000028c T nv50_clear_texture
00000000003cfd90 0000000000000fdc t nv50_blitter_make_fp
00000000003d0d70 000000000000010c t nv50_blit_select_mode
00000000003d0e80 000000000000022c t nv50_m2mf_rect_setup
00000000003d10b0 0000000000000560 t nv50_m2mf_transfer_rect
00000000003d1610 000000000000037c T nv50_miptree_transfer_map
00000000003d1990 0000000000000128 T nv50_miptree_transfer_unmap
00000000003d1ac0 0000000000000078 T nvc0_compute_validate_globals
00000000003d1b40 0000000000000168 t nvc0_compute_validate_surfaces
00000000003d1cb0 00000000000000ec t nvc0_compute_validate_driverconst
00000000003d1da0 00000000000000b0 t nvc0_compute_validate_samplers
00000000003d1e50 0000000000000200 t nvc0_compute_validate_buffers
00000000003d2050 00000000000000fc t nvc0_compute_validate_textures
00000000003d2150 0000000000000338 t nvc0_compute_validate_constbufs
00000000003d2490 00000000000006a0 t nvc0_screen_compute_setup
00000000003d2b30 000000000000012c t nvc0_update_compute_invocations_counter
00000000003d2c60 0000000000000908 T nvc0_launch_grid
00000000003d3570 0000000000000008 t nvc0_get_device_reset_status
00000000003d3580 0000000000000044 T nvc0_default_kick_notify
00000000003d35d0 000000000000045c t nvc0_invalidate_resource_storage
00000000003d3a30 0000000000000084 t nvc0_context_get_sample_position
00000000003d3ac0 00000000000000b8 t nvc0_flush
00000000003d3b80 00000000000000c0 t nvc0_texture_barrier
00000000003d3c40 0000000000000174 t nvc0_emit_string_marker
00000000003d3dc0 00000000000001d0 t nvc0_memory_barrier
00000000003d3f90 0000000000000594 t nvc0_destroy
00000000003d4530 0000000000000430 T nvc0_create
00000000003d4960 0000000000000188 t nvc0_bufctx_fence
00000000003d4af0 0000000000000054 t nvc0_get_sample_locations
00000000003d4b50 0000000000000080 t nvc0_miptree_get_handle
00000000003d4bd0 00000000000006c0 t nvc0_miptree_create
00000000003d5290 00000000000000d0 t nvc0_mt_zslice_offset
00000000003d5360 0000000000000030 t nvc0_miptree_surface_new
00000000003d5390 00000000000000dc t nvc0_shader_input_address
00000000003d5470 0000000000000200 t nvc0_program_upload_code
00000000003d5670 00000000000000b0 t nvc0_tp_get_tess_mode.isra.0
00000000003d5720 0000000000000298 t nvc0_vtgp_gen_header.isra.0
00000000003d59c0 0000000000000380 t nvc0_program_assign_varying_slots
00000000003d5d40 00000000000008bc t nvc0_program_translate
00000000003d6600 0000000000000098 t nvc0_program_library_upload
00000000003d66a0 00000000000005a8 t nvc0_program_upload
00000000003d6c50 00000000000000c4 t nvc0_program_destroy
00000000003d6d20 0000000000000058 t nvc0_program_symbol_offset
00000000003d6d80 0000000000000088 t nvc0_program_init_tcp_empty
00000000003d6e10 0000000000000010 t nvc0_destroy_query
00000000003d6e20 0000000000000010 t nvc0_begin_query
00000000003d6e30 0000000000000020 t nvc0_end_query
00000000003d6e50 0000000000000010 t nvc0_get_query_result
00000000003d6e60 0000000000000018 t nvc0_get_query_result_resource
00000000003d6e80 0000000000000004 t nvc0_set_active_query_state
00000000003d6e90 0000000000000050 t nvc0_create_query
00000000003d6ee0 00000000000002b8 t nvc0_render_condition
00000000003d71a0 0000000000000098 T nvc0_screen_get_driver_query_info
00000000003d7240 00000000000000f0 T nvc0_screen_get_driver_query_group_info
00000000003d7330 0000000000000060 t nvc0_init_query_functions
00000000003d7390 00000000000000b0 t nvc0_hw_query_write_compute_invocations
00000000003d7440 000000000000023c t nvc0_hw_get_query_result
00000000003d7680 00000000000000b8 t nvc0_hw_query_get
00000000003d7740 00000000000000dc t nvc0_hw_destroy_query
00000000003d7820 00000000000000f0 t nvc0_hw_query_allocate
00000000003d7910 00000000000003ac t nvc0_hw_end_query
00000000003d7cc0 0000000000000350 t nvc0_hw_begin_query
00000000003d8010 00000000000001ac t nvc0_hw_create_query
00000000003d81c0 0000000000000090 t nvc0_hw_get_driver_query_info
00000000003d8250 0000000000000060 t nvc0_hw_query_pushbuf_submit
00000000003d82b0 0000000000000104 t nvc0_hw_query_fifo_wait
00000000003d83c0 0000000000000694 t nvc0_hw_get_query_result_resource
00000000003d8a60 000000000000007c t nvc0_hw_metric_begin_query
00000000003d8ae0 0000000000000060 t nvc0_hw_metric_end_query
00000000003d8b40 0000000000000064 t nvc0_hw_metric_destroy_query
00000000003d8bb0 0000000000000168 t sm20_hw_metric_calc_result.isra.0
00000000003d8d20 000000000000017c t sm30_hw_metric_calc_result.isra.0
00000000003d8ea0 0000000000000314 t nvc0_hw_metric_get_query_result
00000000003d91c0 0000000000000084 t nvc0_hw_metric_get_num_queries
00000000003d9250 0000000000000244 t nvc0_hw_metric_create_query
00000000003d94a0 00000000000001b8 t nvc0_hw_metric_get_driver_query_info
00000000003d9660 0000000000000054 t nvc0_hw_sm_destroy_query
00000000003d96c0 0000000000000110 t nvc0_hw_sm_query_get_cfg.isra.0
00000000003d97d0 0000000000000500 t nvc0_hw_sm_begin_query
00000000003d9cd0 00000000000004e8 t nvc0_hw_sm_end_query
00000000003da1c0 0000000000000304 t nvc0_hw_sm_get_query_result
00000000003da4d0 0000000000000068 t nvc0_hw_sm_get_num_queries
00000000003da540 00000000000000d8 t nvc0_hw_sm_create_query
00000000003da620 00000000000001ac t nvc0_hw_sm_get_driver_query_info
00000000003da7d0 0000000000000008 t nvc0_sw_create_query
00000000003da7e0 0000000000000008 t nvc0_sw_get_driver_query_info
00000000003da7f0 0000000000000098 t nvc0_query_dmabuf_modifiers
00000000003da890 0000000000000010 t nvc0_surface_create
00000000003da8a0 0000000000000010 t nvc0_resource_create_with_modifiers
00000000003da8b0 0000000000000038 t nvc0_resource_create
00000000003da8f0 0000000000000034 t nvc0_resource_from_handle
00000000003da930 0000000000000064 t nvc0_init_resource_functions
00000000003da9a0 0000000000000048 t nvc0_screen_init_resource_functions
00000000003da9f0 00000000000001c4 t nvc0_vertprog_validate
00000000003dabc0 0000000000000420 T nvc0_fragprog_validate
00000000003dafe0 00000000000002a8 T nvc0_tctlprog_validate
00000000003db290 0000000000000310 t nvc0_tevlprog_validate
00000000003db5a0 0000000000000318 t nvc0_gmtyprog_validate
00000000003db8c0 00000000000000e4 T nvc0_compprog_validate
00000000003db9b0 0000000000000124 T nvc0_layer_validate
00000000003dbae0 00000000000004ac T nvc0_tfb_validate
00000000003dbf90 0000000000000014 t nvc0_blend_state_bind
00000000003dbfb0 0000000000000014 t nvc0_rasterizer_state_bind
00000000003dbfd0 0000000000000014 t nvc0_zsa_state_bind
00000000003dbff0 0000000000000014 t nvc0_vp_state_bind
00000000003dc010 0000000000000014 t nvc0_fp_state_bind
00000000003dc030 0000000000000014 t nvc0_gp_state_bind
00000000003dc050 0000000000000014 t nvc0_tcp_state_bind
00000000003dc070 0000000000000014 t nvc0_tep_state_bind
00000000003dc090 0000000000000014 t nvc0_cp_state_bind
00000000003dc0b0 0000000000000020 t nvc0_set_blend_color
00000000003dc0d0 000000000000001c t nvc0_set_stencil_ref
00000000003dc0f0 0000000000000014 t nvc0_set_sample_mask
00000000003dc110 000000000000003c t nvc0_set_polygon_stipple
00000000003dc150 0000000000000028 t nvc0_set_tess_state
00000000003dc180 0000000000000014 t nvc0_vertex_state_bind
00000000003dc1a0 0000000000000008 t nvc0_blend_state_delete
00000000003dc1b0 0000000000000168 t nvc0_set_vertex_buffers
00000000003dc320 0000000000000054 t nvc0_set_window_rectangles
00000000003dc380 000000000000005c t nvc0_set_sample_locations
00000000003dc3e0 0000000000000040 t nvc0_set_clip_state
00000000003dc420 00000000000000bc t nvc0_set_viewport_states
00000000003dc4e0 0000000000000060 t nvc0_set_scissor_states
00000000003dc540 0000000000000050 t nvc0_set_framebuffer_state
00000000003dc590 00000000000002e0 t nvc0_zsa_state_create
00000000003dc870 00000000000003d0 t nvc0_rasterizer_state_create
00000000003dcc40 000000000000009c t nvc0_cp_state_create
00000000003dcce0 00000000000000a4 t nvc0_sp_state_create
00000000003dcd90 0000000000000008 t nvc0_tep_state_create
00000000003dcda0 0000000000000008 t nvc0_tcp_state_create
00000000003dcdb0 0000000000000008 t nvc0_gp_state_create
00000000003dcdc0 0000000000000008 t nvc0_fp_state_create
00000000003dcdd0 0000000000000008 t nvc0_vp_state_create
00000000003dcde0 0000000000000044 t nvc0_sp_state_delete
00000000003dce30 0000000000000020 t nvc0_set_min_samples
00000000003dce50 00000000000000ac t nvc0_sampler_state_delete
00000000003dcf00 00000000000001a8 t nvc0_bind_sampler_states
00000000003dd0b0 0000000000000008 t nvc0_rasterizer_state_delete
00000000003dd0c0 0000000000000008 t nvc0_zsa_state_delete
00000000003dd0d0 0000000000000118 t nvc0_so_target_save_offset
00000000003dd1f0 00000000000002f8 t nvc0_set_constant_buffer
00000000003dd4f0 0000000000000584 t nvc0_blend_state_create
00000000003dda80 00000000000001c4 t nvc0_set_compute_resources
00000000003ddc50 000000000000020c t nvc0_set_transform_feedback_targets
00000000003dde60 00000000000003f8 t nvc0_set_sampler_views
00000000003de260 0000000000000074 t nvc0_so_target_destroy
00000000003de2e0 00000000000000ac t nvc0_sampler_view_destroy
00000000003de390 00000000000002a4 t nvc0_set_global_bindings
00000000003de640 0000000000000360 t nvc0_set_shader_buffers
00000000003de9a0 0000000000000144 t nvc0_so_target_create
00000000003deaf0 0000000000000524 t nvc0_set_shader_images
00000000003df020 0000000000000264 t nvc0_init_state_functions
00000000003df290 0000000000000070 t nvc0_validate_driverconst
00000000003df300 000000000000023c t nvc0_constbufs_validate
00000000003df540 0000000000000140 t nvc0_validate_scissor
00000000003df680 0000000000000234 t nvc0_validate_buffers
00000000003df8c0 0000000000000094 t nvc0_validate_sample_mask
00000000003df960 0000000000000094 t nvc0_validate_tess_state
00000000003dfa00 00000000000000cc t nvc0_validate_stipple
00000000003dfad0 0000000000000084 t nvc0_validate_blend_colour
00000000003dfb60 0000000000000080 t nvc0_validate_rasterizer
00000000003dfbe0 0000000000000080 t nvc0_validate_zsa
00000000003dfc60 0000000000000080 t nvc0_validate_blend
00000000003dfce0 00000000000000f0 t nvc0_validate_stencil_ref
00000000003dfdd0 0000000000000100 t nvc0_validate_min_samples
00000000003dfed0 0000000000000384 t nvc0_validate_viewport
00000000003e0260 00000000000000f0 t nvc0_validate_fp_zsa_rast
00000000003e0350 0000000000000114 t nvc0_validate_rast_fb
00000000003e0470 0000000000000208 t nvc0_validate_window_rects
00000000003e0680 0000000000000478 t gm200_validate_sample_locations
00000000003e0b00 0000000000000164 t validate_sample_locations
00000000003e0c70 00000000000000ec t nvc0_validate_zsa_fb
00000000003e0d60 000000000000030c t nvc0_validate_fbread
00000000003e1070 0000000000000398 t nvc0_validate_clip
00000000003e1410 0000000000000768 t nvc0_validate_fb
00000000003e1b80 00000000000001fc t nvc0_state_validate
00000000003e1d80 0000000000000070 t nvc0_state_validate_3d
00000000003e1df0 000000000000000c t nvc0_draw_vbo_kick_notify
00000000003e1e00 000000000000015c t nvc0_set_constant_vertex_attrib
00000000003e1f60 00000000000001a4 t nvc0_update_user_vbufs_shared
00000000003e2110 000000000000023c t nvc0_update_user_vbufs
00000000003e2350 0000000000000034 T nvc0_vertex_state_delete
00000000003e2390 0000000000000394 T nvc0_vertex_state_create
00000000003e2730 00000000000008b8 T nvc0_vertex_arrays_validate
00000000003e2ff0 00000000000014e8 T nvc0_draw_vbo
00000000003e44e0 0000000000001cdc t nvc0_push_vbo
00000000003e61c0 000000000000022c t nvc0_push_vbo_indirect
00000000003e63f0 0000000000000094 t nvc0_decoder_end_frame
00000000003e6490 0000000000000014 t nvc0_decoder_decode_bitstream
00000000003e64b0 0000000000000010 t nvc0_decoder_begin_frame
00000000003e64c0 0000000000000840 T nvc0_create_decoder
00000000003e6d00 0000000000000008 T nvc0_video_buffer_create
00000000003e6d10 0000000000000210 t nvc0_decoder_setup_ppp
00000000003e6f20 000000000000023c t nvc0_decoder_ppp
00000000003e7160 00000000000005e4 t nvc0_decoder_vp
00000000003e7750 0000000000000098 t grow_to_fit
00000000003e77f0 0000000000000010 t blob_init
00000000003e7800 0000000000000014 t blob_init_fixed
00000000003e7820 00000000000000dc t blob_write_bytes
00000000003e7900 0000000000000118 t blob_write_uint32
00000000003e7a20 0000000000000118 t blob_write_uint64
00000000003e7b40 0000000000000038 t blob_overwrite_uint32
00000000003e7b80 00000000000000d4 t blob_write_string
00000000003e7c60 0000000000000014 t blob_reader_init
00000000003e7c80 0000000000000040 t blob_read_bytes
00000000003e7cc0 000000000000004c t blob_copy_bytes
00000000003e7d10 0000000000000060 t blob_read_uint32
00000000003e7d70 0000000000000060 t blob_read_uint64
00000000003e7dd0 0000000000000080 t blob_read_string
00000000003e7e50 00000000000000e4 t _mesa_float_to_half
00000000003e7f40 0000000000000058 t _mesa_half_to_float
00000000003e7fa0 000000000000002c t _mesa_half_to_unorm8
00000000003e7fd0 0000000000000034 t _mesa_uint16_div_64k_to_half
00000000003e8010 0000000000000048 t _mesa_sha1_format
00000000003e8060 0000000000000040 t os_time_get_nano
00000000003e80a0 0000000000000038 t os_file_create_unique
00000000003e80e0 0000000000000064 t os_log_message
00000000003e8150 0000000000000004 t os_get_option
00000000003e8160 0000000000000fd4 t SHA1Transform
00000000003e9140 0000000000000038 t SHA1Init
00000000003e9180 00000000000000ec t SHA1Update
00000000003e9270 00000000000000a4 t SHA1Pad
00000000003e9320 0000000000000068 t SHA1Final
00000000003e9390 00000000000000e4 t util_format_unsigned_write_rgtc_encoded_channel
00000000003e9480 00000000000000e4 t util_format_signed_write_rgtc_encoded_channel
00000000003e9570 0000000000000110 t util_format_unsigned_fetch_texel_rgtc
00000000003e9680 0000000000000c40 t util_format_unsigned_encode_rgtc_ubyte
00000000003ea2c0 0000000000000118 t util_format_signed_fetch_texel_rgtc
00000000003ea3e0 0000000000000c84 t util_format_signed_encode_rgtc_ubyte
00000000003eb070 00000000000000f4 t set_search
00000000003eb170 0000000000000150 t set_rehash
00000000003eb2c0 0000000000000194 t set_search_or_add
00000000003eb460 0000000000000090 t _mesa_set_create
00000000003eb4f0 0000000000000080 t _mesa_set_clone
00000000003eb570 00000000000000b8 t _mesa_set_destroy
00000000003eb630 0000000000000038 t _mesa_set_search
00000000003eb670 0000000000000048 t _mesa_set_add
00000000003eb6c0 0000000000000028 t _mesa_set_remove
00000000003eb6f0 0000000000000060 t _mesa_set_remove_key
00000000003eb750 0000000000000050 t _mesa_set_next_entry
00000000003eb7a0 0000000000000014 t _mesa_pointer_set_create
00000000003eb7c0 0000000000000068 t _mesa_string_buffer_create
00000000003eb830 00000000000000d8 t _mesa_string_buffer_append_len
00000000003eb910 00000000000000e8 t _mesa_string_buffer_vprintf
00000000003eba00 0000000000000064 t _mesa_string_buffer_printf
00000000003eba70 0000000000000004 t _mesa_locale_init
00000000003eba80 0000000000000004 t _mesa_locale_fini
00000000003eba90 0000000000000004 t _mesa_strtod
00000000003ebaa0 0000000000000004 t _mesa_strtof
00000000003ebab0 0000000000000034 t util_cpu_detect_once
00000000003ebaf0 0000000000000014 t util_cpu_detect
00000000003ebb10 0000000000000070 t count_anchors_before_texel
00000000003ebb80 00000000000007dc t compress_rgb_float
00000000003ec360 0000000000000924 t compress_rgba_unorm
00000000003ecc90 0000000000000330 t extract_float_endpoints
00000000003ecfc0 00000000000003fc t extract_unorm_endpoints
00000000003ed3c0 0000000000000354 t fetch_rgb_float_from_block
00000000003ed720 00000000000005cc t decompress_rgb_float
00000000003edcf0 00000000000004f8 t fetch_rgba_unorm_from_block
00000000003ee1f0 0000000000000724 t decompress_rgba_unorm
00000000003ee920 000000000000001c T util_format_bptc_rgba_unorm_unpack_rgba_8unorm
00000000003ee940 000000000000001c T util_format_bptc_rgba_unorm_pack_rgba_8unorm
00000000003ee960 00000000000000a0 T util_format_bptc_rgba_unorm_unpack_rgba_float
00000000003eea00 00000000000000a0 T util_format_bptc_rgba_unorm_pack_rgba_float
00000000003eeaa0 0000000000000078 T util_format_bptc_rgba_unorm_fetch_rgba_float
00000000003eeb20 000000000000001c T util_format_bptc_srgba_unpack_rgba_8unorm
00000000003eeb40 000000000000001c T util_format_bptc_srgba_pack_rgba_8unorm
00000000003eeb60 00000000000000a0 T util_format_bptc_srgba_unpack_rgba_float
00000000003eec00 0000000000000020 T util_format_bptc_srgba_pack_rgba_float
00000000003eec20 000000000000007c T util_format_bptc_srgba_fetch_rgba_float
00000000003eeca0 00000000000000a4 T util_format_bptc_rgb_float_unpack_rgba_8unorm
00000000003eed50 000000000000001c T util_format_bptc_rgb_float_pack_rgba_8unorm
00000000003eed70 0000000000000020 T util_format_bptc_rgb_float_unpack_rgba_float
00000000003eed90 0000000000000020 T util_format_bptc_rgb_float_pack_rgba_float
00000000003eedb0 000000000000002c T util_format_bptc_rgb_float_fetch_rgba_float
00000000003eede0 00000000000000a4 T util_format_bptc_rgb_ufloat_unpack_rgba_8unorm
00000000003eee90 000000000000001c T util_format_bptc_rgb_ufloat_pack_rgba_8unorm
00000000003eeeb0 0000000000000020 T util_format_bptc_rgb_ufloat_unpack_rgba_float
00000000003eeed0 0000000000000020 T util_format_bptc_rgb_ufloat_pack_rgba_float
00000000003eeef0 000000000000002c T util_format_bptc_rgb_ufloat_fetch_rgba_float
00000000003eef20 0000000000000128 t etc1_parse_block
00000000003ef050 000000000000024c T util_format_etc1_rgb8_unpack_rgba_8unorm
00000000003ef2a0 0000000000000004 T util_format_etc1_rgb8_pack_rgba_8unorm
00000000003ef2b0 0000000000000224 T util_format_etc1_rgb8_unpack_rgba_float
00000000003ef4e0 0000000000000004 T util_format_etc1_rgb8_pack_rgba_float
00000000003ef4f0 0000000000000194 T util_format_etc1_rgb8_fetch_rgba_float
00000000003ef690 000000000000003c T util_format_latc1_unorm_fetch_rgba_8unorm
00000000003ef6d0 0000000000000004 T util_format_latc1_unorm_unpack_rgba_8unorm
00000000003ef6e0 0000000000000004 T util_format_latc1_unorm_pack_rgba_8unorm
00000000003ef6f0 0000000000000180 T util_format_latc1_unorm_unpack_rgba_float
00000000003ef870 0000000000000004 T util_format_latc1_unorm_pack_rgba_float
00000000003ef880 0000000000000050 T util_format_latc1_unorm_fetch_rgba_float
00000000003ef8d0 0000000000000028 T util_format_latc1_snorm_fetch_rgba_8unorm
00000000003ef900 0000000000000028 T util_format_latc1_snorm_unpack_rgba_8unorm
00000000003ef930 0000000000000028 T util_format_latc1_snorm_pack_rgba_8unorm
00000000003ef960 0000000000000004 T util_format_latc1_snorm_pack_rgba_float
00000000003ef970 0000000000000188 T util_format_latc1_snorm_unpack_rgba_float
00000000003efb00 0000000000000058 T util_format_latc1_snorm_fetch_rgba_float
00000000003efb60 0000000000000054 T util_format_latc2_unorm_fetch_rgba_8unorm
00000000003efbc0 0000000000000004 T util_format_latc2_unorm_unpack_rgba_8unorm
00000000003efbd0 0000000000000004 T util_format_latc2_unorm_pack_rgba_8unorm
00000000003efbe0 0000000000000008 T util_format_latc2_unorm_pack_rgba_float
00000000003efbf0 00000000000001c0 T util_format_latc2_unorm_unpack_rgba_float
00000000003efdb0 0000000000000078 T util_format_latc2_unorm_fetch_rgba_float
00000000003efe30 0000000000000028 T util_format_latc2_snorm_fetch_rgba_8unorm
00000000003efe60 0000000000000028 T util_format_latc2_snorm_unpack_rgba_8unorm
00000000003efe90 0000000000000028 T util_format_latc2_snorm_pack_rgba_8unorm
00000000003efec0 00000000000001dc T util_format_latc2_snorm_unpack_rgba_float
00000000003f00a0 0000000000000008 T util_format_latc2_snorm_pack_rgba_float
00000000003f00b0 0000000000000098 T util_format_latc2_snorm_fetch_rgba_float
00000000003f0150 0000000000000144 T util_format_r9g9b9e5_float_unpack_rgba_float
00000000003f02a0 0000000000000198 T util_format_r9g9b9e5_float_pack_rgba_float
00000000003f0440 0000000000000048 T util_format_r9g9b9e5_float_fetch_rgba_float
00000000003f0490 0000000000000128 T util_format_r9g9b9e5_float_unpack_rgba_8unorm
00000000003f05c0 00000000000001b8 T util_format_r9g9b9e5_float_pack_rgba_8unorm
00000000003f0780 00000000000001fc T util_format_r11g11b10_float_unpack_rgba_float
00000000003f0980 00000000000001e0 T util_format_r11g11b10_float_pack_rgba_float
00000000003f0b60 00000000000001bc T util_format_r11g11b10_float_fetch_rgba_float
00000000003f0d20 00000000000002c8 T util_format_r11g11b10_float_unpack_rgba_8unorm
00000000003f0ff0 0000000000000234 T util_format_r11g11b10_float_pack_rgba_8unorm
00000000003f1230 0000000000000004 T util_format_r1_unorm_unpack_rgba_float
00000000003f1240 0000000000000004 T util_format_r1_unorm_pack_rgba_float
00000000003f1250 0000000000000004 T util_format_r1_unorm_fetch_rgba_float
00000000003f1260 0000000000000004 T util_format_r1_unorm_unpack_rgba_8unorm
00000000003f1270 0000000000000004 T util_format_r1_unorm_pack_rgba_8unorm
00000000003f1280 00000000000002dc T util_format_r8g8bx_snorm_unpack_rgba_float
00000000003f1560 0000000000000104 T util_format_r8g8bx_snorm_unpack_rgba_8unorm
00000000003f1670 00000000000000c8 T util_format_r8g8bx_snorm_pack_rgba_float
00000000003f1740 000000000000006c T util_format_r8g8bx_snorm_pack_rgba_8unorm
00000000003f17b0 000000000000008c T util_format_r8g8bx_snorm_fetch_rgba_float
00000000003f1840 0000000000000034 T util_format_rgtc1_unorm_fetch_rgba_8unorm
00000000003f1880 0000000000000150 t util_format_rgtc1_unorm_unpack_rgba_8unorm
00000000003f19d0 0000000000000128 t util_format_rgtc1_unorm_pack_rgba_8unorm
00000000003f1b00 0000000000000180 T util_format_rgtc1_unorm_unpack_rgba_float
00000000003f1c80 0000000000000168 t util_format_rgtc1_unorm_pack_rgba_float
00000000003f1df0 0000000000000054 T util_format_rgtc1_unorm_fetch_rgba_float
00000000003f1e50 0000000000000028 T util_format_rgtc1_snorm_fetch_rgba_8unorm
00000000003f1e80 0000000000000028 T util_format_rgtc1_snorm_unpack_rgba_8unorm
00000000003f1eb0 0000000000000028 T util_format_rgtc1_snorm_pack_rgba_8unorm
00000000003f1ee0 0000000000000140 t util_format_rgtc1_snorm_pack_rgba_float
00000000003f2020 0000000000000188 T util_format_rgtc1_snorm_unpack_rgba_float
00000000003f21b0 000000000000005c T util_format_rgtc1_snorm_fetch_rgba_float
00000000003f2210 0000000000000054 T util_format_rgtc2_unorm_fetch_rgba_8unorm
00000000003f2270 0000000000000170 t util_format_rgtc2_unorm_unpack_rgba_8unorm
00000000003f23e0 0000000000000148 t util_format_rgtc2_unorm_pack_rgba_8unorm
00000000003f2530 00000000000001c4 t util_format_rxtc2_unorm_pack_rgba_float
00000000003f2700 0000000000000008 T util_format_rgtc2_unorm_pack_rgba_float
00000000003f2710 00000000000001dc T util_format_rgtc2_unorm_unpack_rgba_float
00000000003f28f0 000000000000007c T util_format_rgtc2_unorm_fetch_rgba_float
00000000003f2970 0000000000000028 T util_format_rgtc2_snorm_fetch_rgba_8unorm
00000000003f29a0 0000000000000028 T util_format_rgtc2_snorm_unpack_rgba_8unorm
00000000003f29d0 0000000000000028 T util_format_rgtc2_snorm_pack_rgba_8unorm
00000000003f2a00 00000000000001e8 T util_format_rgtc2_snorm_unpack_rgba_float
00000000003f2bf0 0000000000000184 t util_format_rxtc2_snorm_pack_rgba_float
00000000003f2d80 0000000000000008 T util_format_rgtc2_snorm_pack_rgba_float
00000000003f2d90 000000000000009c T util_format_rgtc2_snorm_fetch_rgba_float
00000000003f2e30 00000000000001fc t dxt135_decode_imageblock
00000000003f3030 0000000000000058 t fetch_2d_texel_rgb_dxt1
00000000003f3090 0000000000000058 t fetch_2d_texel_rgba_dxt1
00000000003f30f0 0000000000000088 t fetch_2d_texel_rgba_dxt3
00000000003f3180 0000000000000144 t fetch_2d_texel_rgba_dxt5
00000000003f32d0 00000000000000e4 t writedxt5encodedalphablock
00000000003f33c0 0000000000000c24 t encodedxtcolorblockfaster
00000000003f3ff0 0000000000001318 t tx_compress_dxtn
00000000003f5310 0000000000000014 T util_format_dxt1_rgb_fetch_rgba_8unorm
00000000003f5330 0000000000000014 T util_format_dxt1_rgba_fetch_rgba_8unorm
00000000003f5350 0000000000000014 T util_format_dxt3_rgba_fetch_rgba_8unorm
00000000003f5370 0000000000000014 T util_format_dxt5_rgba_fetch_rgba_8unorm
00000000003f5390 000000000000006c T util_format_dxt1_rgb_fetch_rgba_float
00000000003f5400 0000000000000074 T util_format_dxt1_rgba_fetch_rgba_float
00000000003f5480 0000000000000074 T util_format_dxt3_rgba_fetch_rgba_float
00000000003f5500 0000000000000074 T util_format_dxt5_rgba_fetch_rgba_float
00000000003f5580 0000000000000138 T util_format_dxt1_rgb_unpack_rgba_8unorm
00000000003f56c0 0000000000000138 T util_format_dxt1_rgba_unpack_rgba_8unorm
00000000003f5800 0000000000000138 T util_format_dxt3_rgba_unpack_rgba_8unorm
00000000003f5940 0000000000000138 T util_format_dxt5_rgba_unpack_rgba_8unorm
00000000003f5a80 00000000000001a0 T util_format_dxt1_rgb_unpack_rgba_float
00000000003f5c20 00000000000001a0 T util_format_dxt1_rgba_unpack_rgba_float
00000000003f5dc0 00000000000001a0 T util_format_dxt3_rgba_unpack_rgba_float
00000000003f5f60 00000000000001a0 T util_format_dxt5_rgba_unpack_rgba_float
00000000003f6100 0000000000000150 T util_format_dxt1_rgb_pack_rgba_8unorm
00000000003f6250 0000000000000150 T util_format_dxt1_rgba_pack_rgba_8unorm
00000000003f63a0 0000000000000150 T util_format_dxt3_rgba_pack_rgba_8unorm
00000000003f64f0 0000000000000150 T util_format_dxt5_rgba_pack_rgba_8unorm
00000000003f6640 00000000000001c4 T util_format_dxt1_rgb_pack_rgba_float
00000000003f6810 00000000000001c4 T util_format_dxt1_rgba_pack_rgba_float
00000000003f69e0 00000000000001c4 T util_format_dxt3_rgba_pack_rgba_float
00000000003f6bb0 00000000000001c4 T util_format_dxt5_rgba_pack_rgba_float
00000000003f6d80 0000000000000064 T util_format_dxt1_srgb_fetch_rgba_8unorm
00000000003f6df0 0000000000000064 T util_format_dxt1_srgba_fetch_rgba_8unorm
00000000003f6e60 0000000000000064 T util_format_dxt3_srgba_fetch_rgba_8unorm
00000000003f6ed0 0000000000000064 T util_format_dxt5_srgba_fetch_rgba_8unorm
00000000003f6f40 000000000000005c T util_format_dxt1_srgb_fetch_rgba_float
00000000003f6fa0 0000000000000070 T util_format_dxt1_srgba_fetch_rgba_float
00000000003f7010 0000000000000070 T util_format_dxt3_srgba_fetch_rgba_float
00000000003f7080 0000000000000070 T util_format_dxt5_srgba_fetch_rgba_float
00000000003f70f0 000000000000017c T util_format_dxt1_srgb_unpack_rgba_8unorm
00000000003f7270 000000000000017c T util_format_dxt1_srgba_unpack_rgba_8unorm
00000000003f73f0 000000000000017c T util_format_dxt3_srgba_unpack_rgba_8unorm
00000000003f7570 000000000000017c T util_format_dxt5_srgba_unpack_rgba_8unorm
00000000003f76f0 00000000000001a4 T util_format_dxt1_srgb_unpack_rgba_float
00000000003f78a0 00000000000001a4 T util_format_dxt1_srgba_unpack_rgba_float
00000000003f7a50 00000000000001a4 T util_format_dxt3_srgba_unpack_rgba_float
00000000003f7c00 00000000000001a4 T util_format_dxt5_srgba_unpack_rgba_float
00000000003f7db0 0000000000000168 T util_format_dxt1_srgb_pack_rgba_8unorm
00000000003f7f20 0000000000000168 T util_format_dxt1_srgba_pack_rgba_8unorm
00000000003f8090 0000000000000168 T util_format_dxt3_srgba_pack_rgba_8unorm
00000000003f8200 0000000000000168 T util_format_dxt5_srgba_pack_rgba_8unorm
00000000003f8370 0000000000000204 T util_format_dxt1_srgb_pack_rgba_float
00000000003f8580 0000000000000204 T util_format_dxt1_srgba_pack_rgba_float
00000000003f8790 0000000000000204 T util_format_dxt3_srgba_pack_rgba_float
00000000003f89a0 0000000000000204 T util_format_dxt5_srgba_pack_rgba_float
00000000003f8bb0 0000000000000158 T util_format_r8g8_b8g8_unorm_unpack_rgba_float
00000000003f8d10 0000000000000110 T util_format_r8g8_b8g8_unorm_unpack_rgba_8unorm
00000000003f8e20 0000000000000254 T util_format_r8g8_b8g8_unorm_pack_rgba_float
00000000003f9080 0000000000000114 T util_format_r8g8_b8g8_unorm_pack_rgba_8unorm
00000000003f91a0 000000000000004c T util_format_r8g8_b8g8_unorm_fetch_rgba_float
00000000003f91f0 000000000000015c T util_format_g8r8_g8b8_unorm_unpack_rgba_float
00000000003f9350 0000000000000114 T util_format_g8r8_g8b8_unorm_unpack_rgba_8unorm
00000000003f9470 0000000000000250 T util_format_g8r8_g8b8_unorm_pack_rgba_float
00000000003f96c0 0000000000000114 T util_format_g8r8_g8b8_unorm_pack_rgba_8unorm
00000000003f97e0 0000000000000048 T util_format_g8r8_g8b8_unorm_fetch_rgba_float
00000000003f9830 000000000000024c T util_format_uyvy_unpack_rgba_float
00000000003f9a80 0000000000000290 T util_format_uyvy_unpack_rgba_8unorm
00000000003f9d10 0000000000000518 T util_format_uyvy_pack_rgba_float
00000000003fa230 00000000000002a4 T util_format_uyvy_pack_rgba_8unorm
00000000003fa4e0 00000000000000b4 T util_format_uyvy_fetch_rgba_float
00000000003fa5a0 000000000000024c T util_format_yuyv_unpack_rgba_float
00000000003fa7f0 0000000000000290 T util_format_yuyv_unpack_rgba_8unorm
00000000003faa80 000000000000051c T util_format_yuyv_pack_rgba_float
00000000003fafa0 00000000000002a8 T util_format_yuyv_pack_rgba_8unorm
00000000003fb250 00000000000000b0 T util_format_yuyv_fetch_rgba_float
00000000003fb300 0000000000000004 T util_format_yv12_unpack_rgba_8unorm
00000000003fb310 0000000000000004 T util_format_yv12_pack_rgba_8unorm
00000000003fb320 0000000000000004 T util_format_yv12_unpack_rgba_float
00000000003fb330 0000000000000004 T util_format_yv12_pack_rgba_float
00000000003fb340 0000000000000004 T util_format_yv12_fetch_rgba_float
00000000003fb350 0000000000000004 T util_format_yv16_unpack_rgba_8unorm
00000000003fb360 0000000000000004 T util_format_yv16_pack_rgba_8unorm
00000000003fb370 0000000000000004 T util_format_yv16_unpack_rgba_float
00000000003fb380 0000000000000004 T util_format_yv16_pack_rgba_float
00000000003fb390 0000000000000004 T util_format_yv16_fetch_rgba_float
00000000003fb3a0 0000000000000004 T util_format_iyuv_unpack_rgba_8unorm
00000000003fb3b0 0000000000000004 T util_format_iyuv_pack_rgba_8unorm
00000000003fb3c0 0000000000000004 T util_format_iyuv_unpack_rgba_float
00000000003fb3d0 0000000000000004 T util_format_iyuv_pack_rgba_float
00000000003fb3e0 0000000000000004 T util_format_iyuv_fetch_rgba_float
00000000003fb3f0 0000000000000004 T util_format_nv12_unpack_rgba_8unorm
00000000003fb400 0000000000000004 T util_format_nv12_pack_rgba_8unorm
00000000003fb410 0000000000000004 T util_format_nv12_unpack_rgba_float
00000000003fb420 0000000000000004 T util_format_nv12_pack_rgba_float
00000000003fb430 0000000000000004 T util_format_nv12_fetch_rgba_float
00000000003fb440 0000000000000004 T util_format_nv21_unpack_rgba_8unorm
00000000003fb450 0000000000000004 T util_format_nv21_pack_rgba_8unorm
00000000003fb460 0000000000000004 T util_format_nv21_unpack_rgba_float
00000000003fb470 0000000000000004 T util_format_nv21_pack_rgba_float
00000000003fb480 0000000000000004 T util_format_nv21_fetch_rgba_float
00000000003fb490 0000000000000004 T util_format_p010_unpack_rgba_8unorm
00000000003fb4a0 0000000000000004 T util_format_p010_pack_rgba_8unorm
00000000003fb4b0 0000000000000004 T util_format_p010_unpack_rgba_float
00000000003fb4c0 0000000000000004 T util_format_p010_pack_rgba_float
00000000003fb4d0 0000000000000004 T util_format_p010_fetch_rgba_float
00000000003fb4e0 0000000000000004 T util_format_p016_unpack_rgba_8unorm
00000000003fb4f0 0000000000000004 T util_format_p016_pack_rgba_8unorm
00000000003fb500 0000000000000004 T util_format_p016_unpack_rgba_float
00000000003fb510 0000000000000004 T util_format_p016_pack_rgba_float
00000000003fb520 0000000000000004 T util_format_p016_fetch_rgba_float
00000000003fb530 0000000000000004 T util_format_xyuv_unpack_rgba_float
00000000003fb540 0000000000000004 T util_format_xyuv_unpack_rgba_8unorm
00000000003fb550 0000000000000004 T util_format_xyuv_pack_rgba_float
00000000003fb560 0000000000000004 T util_format_xyuv_pack_rgba_8unorm
00000000003fb570 0000000000000004 T util_format_xyuv_fetch_rgba_float
00000000003fb580 0000000000000004 T util_format_ayuv_unpack_rgba_float
00000000003fb590 0000000000000004 T util_format_ayuv_unpack_rgba_8unorm
00000000003fb5a0 0000000000000004 T util_format_ayuv_pack_rgba_float
00000000003fb5b0 0000000000000004 T util_format_ayuv_pack_rgba_8unorm
00000000003fb5c0 0000000000000004 T util_format_ayuv_fetch_rgba_float
00000000003fb5d0 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_float
00000000003fb5e0 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_8unorm
00000000003fb5f0 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_float
00000000003fb600 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_8unorm
00000000003fb610 0000000000000004 T util_format_r8g8_r8b8_unorm_fetch_rgba_float
00000000003fb620 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_float
00000000003fb630 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_8unorm
00000000003fb640 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_float
00000000003fb650 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_8unorm
00000000003fb660 0000000000000004 T util_format_g8r8_b8r8_unorm_fetch_rgba_float
00000000003fb670 0000000000000074 T util_format_s8_uint_unpack_s_8uint
00000000003fb6f0 0000000000000074 T util_format_s8_uint_pack_s_8uint
00000000003fb770 0000000000000104 T util_format_z16_unorm_unpack_z_float
00000000003fb880 0000000000000110 T util_format_z16_unorm_pack_z_float
00000000003fb990 00000000000000f0 T util_format_z16_unorm_unpack_z_32unorm
00000000003fba80 00000000000000e0 T util_format_z16_unorm_pack_z_32unorm
00000000003fbb60 0000000000000108 T util_format_z32_unorm_unpack_z_float
00000000003fbc70 0000000000000104 T util_format_z32_unorm_pack_z_float
00000000003fbd80 0000000000000074 T util_format_z32_unorm_unpack_z_32unorm
00000000003fbe00 0000000000000074 T util_format_z32_unorm_pack_z_32unorm
00000000003fbe80 0000000000000074 T util_format_z32_float_unpack_z_float
00000000003fbf00 0000000000000074 T util_format_z32_float_pack_z_float
00000000003fbf80 0000000000000104 T util_format_z32_float_unpack_z_32unorm
00000000003fc090 0000000000000108 T util_format_z32_float_pack_z_32unorm
00000000003fc1a0 0000000000000110 T util_format_z24_unorm_s8_uint_unpack_z_float
00000000003fc2b0 000000000000011c T util_format_z24_unorm_s8_uint_pack_z_float
00000000003fc3d0 0000000000000064 T util_format_z24_unorm_s8_uint_unpack_z_32unorm
00000000003fc440 0000000000000068 T util_format_z24_unorm_s8_uint_pack_z_32unorm
00000000003fc4b0 0000000000000060 T util_format_z24_unorm_s8_uint_unpack_s_8uint
00000000003fc510 0000000000000060 T util_format_z24_unorm_s8_uint_pack_s_8uint
00000000003fc570 0000000000000110 T util_format_s8_uint_z24_unorm_unpack_z_float
00000000003fc680 000000000000011c T util_format_s8_uint_z24_unorm_pack_z_float
00000000003fc7a0 0000000000000064 T util_format_s8_uint_z24_unorm_unpack_z_32unorm
00000000003fc810 0000000000000068 T util_format_s8_uint_z24_unorm_pack_z_32unorm
00000000003fc880 000000000000005c T util_format_s8_uint_z24_unorm_unpack_s_8uint
00000000003fc8e0 0000000000000060 T util_format_s8_uint_z24_unorm_pack_s_8uint
00000000003fc940 0000000000000110 T util_format_z24x8_unorm_unpack_z_float
00000000003fca50 000000000000010c T util_format_z24x8_unorm_pack_z_float
00000000003fcb60 0000000000000064 T util_format_z24x8_unorm_unpack_z_32unorm
00000000003fcbd0 0000000000000060 T util_format_z24x8_unorm_pack_z_32unorm
00000000003fcc30 0000000000000110 T util_format_x8z24_unorm_unpack_z_float
00000000003fcd40 000000000000010c T util_format_x8z24_unorm_pack_z_float
00000000003fce50 0000000000000064 T util_format_x8z24_unorm_unpack_z_32unorm
00000000003fcec0 0000000000000060 T util_format_x8z24_unorm_pack_z_32unorm
00000000003fcf20 000000000000005c T util_format_z32_float_s8x24_uint_unpack_z_float
00000000003fcf80 000000000000005c T util_format_z32_float_s8x24_uint_pack_z_float
00000000003fcfe0 0000000000000078 T util_format_z32_float_s8x24_uint_unpack_z_32unorm
00000000003fd060 0000000000000108 T util_format_z32_float_s8x24_uint_pack_z_32unorm
00000000003fd170 0000000000000064 T util_format_z32_float_s8x24_uint_unpack_s_8uint
00000000003fd1e0 0000000000000064 T util_format_z32_float_s8x24_uint_pack_s_8uint
00000000003fd250 0000000000000060 T util_format_x24s8_uint_unpack_s_8uint
00000000003fd2b0 0000000000000060 T util_format_x24s8_uint_pack_s_8uint
00000000003fd310 000000000000005c T util_format_s8x24_uint_unpack_s_8uint
00000000003fd370 0000000000000060 T util_format_s8x24_uint_pack_s_8uint
00000000003fd3d0 0000000000000064 T util_format_x32_s8x24_uint_unpack_s_8uint
00000000003fd440 0000000000000064 T util_format_x32_s8x24_uint_pack_s_8uint
00000000003fd4b0 0000000000000300 t (anonymous namespace)::add_uniform_to_shader::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003fd7b0 00000000000000d8 t _mesa_generate_parameters_list_for_uniforms
00000000003fd890 00000000000003ac t _mesa_associate_uniform_storage
00000000003fdc40 0000000000000230 t _mesa_glsl_link_shader
00000000003fde70 00000000000000f0 t get_src_arg_mask
00000000003fdf60 0000000000000018 t compare_start
00000000003fdf80 0000000000000070 t update_interval
00000000003fdff0 0000000000000168 t find_next_use
00000000003fe160 000000000000011c t remove_instructions
00000000003fe280 0000000000000228 t _mesa_remove_dead_code_global
00000000003fe4b0 00000000000001a4 t _mesa_simplify_cmp
00000000003fe660 0000000000000188 t _mesa_find_temp_intervals
00000000003fe7f0 000000000000037c t _mesa_reallocate_registers
00000000003feb70 00000000000007c8 t _mesa_optimize_program
00000000003ff340 000000000000000c t _mesa_new_parameter_list
00000000003ff350 00000000000000c0 t _mesa_new_parameter_list_sized
00000000003ff410 0000000000000068 t _mesa_free_parameter_list
00000000003ff480 00000000000000c0 t _mesa_reserve_parameter_storage
00000000003ff540 0000000000000274 t _mesa_add_parameter
00000000003ff7c0 00000000000002c8 t _mesa_add_typed_unnamed_constant
00000000003ffa90 00000000000000dc t _mesa_add_sized_state_reference
00000000003ffb70 000000000000000c t _mesa_add_state_reference
00000000003ffb80 0000000000000090 t binary
00000000003ffc10 0000000000000118 t _mesa_register_file_name
00000000003ffd30 0000000000000204 t reg_string
00000000003fff40 00000000000000e0 t _mesa_fprint_parameter_list.part.0
0000000000400020 0000000000000260 t _mesa_swizzle_string
0000000000400280 0000000000000068 t fprint_src_reg
00000000004002f0 0000000000000080 t _mesa_writemask_string
0000000000400370 000000000000016c t _mesa_fprint_alu_instruction
00000000004004e0 00000000000006bc t _mesa_fprint_instruction_opt
0000000000400ba0 00000000000001c8 t _mesa_fprint_program_opt
0000000000400d70 0000000000000028 t _mesa_print_program
0000000000400da0 00000000000001b8 t _mesa_print_program_parameters
0000000000400f60 000000000000002c t _mesa_print_parameter_list
0000000000400f90 0000000000000180 t _mesa_write_shader_to_file
0000000000401110 0000000000000048 t _mesa_set_program_error
0000000000401160 00000000000000a8 t _mesa_init_gl_program
0000000000401210 0000000000000070 t _mesa_delete_program
0000000000401280 0000000000000018 t _mesa_lookup_program
00000000004012a0 00000000000000a8 t _mesa_reference_program_
0000000000401350 00000000000000e4 t _mesa_init_program
0000000000401440 00000000000000a0 t _mesa_free_program_data
00000000004014e0 00000000000000a0 t _mesa_update_default_objects_program
0000000000401580 0000000000000100 t _mesa_insert_instructions
0000000000401680 00000000000000e8 t _mesa_delete_instructions
0000000000401770 00000000000000e8 t _mesa_find_used_registers
0000000000401860 0000000000000038 t _mesa_find_free_register
00000000004018a0 00000000000000a8 t _mesa_get_min_invocations_per_fragment
0000000000401950 000000000000038c t _mesa_insert_mvp_code
0000000000401ce0 00000000000003f0 t _mesa_append_fog_code
00000000004020d0 0000000000000240 t _mesa_remove_output_reads
0000000000402310 00000000000000d4 t _mesa_program_fragment_position_to_sysval
00000000004023f0 0000000000000ec8 t append_token
00000000004032c0 0000000000000178 t _mesa_program_state_flags
0000000000403440 000000000000071c t _mesa_program_state_string
0000000000403b60 00000000000013c0 t _mesa_load_state_parameters
0000000000404f20 0000000000000098 t _mesa_symbol_table_pop_scope
0000000000404fc0 0000000000000058 t _mesa_symbol_table_push_scope
0000000000405020 0000000000000050 t _mesa_symbol_table_symbol_scope
0000000000405070 0000000000000028 t _mesa_symbol_table_find_symbol
00000000004050a0 00000000000000f8 t _mesa_symbol_table_add_symbol
00000000004051a0 0000000000000048 t _mesa_symbol_table_replace_symbol
00000000004051f0 0000000000000084 t _mesa_symbol_table_ctor
0000000000405280 0000000000000044 t _mesa_symbol_table_dtor
00000000004052d0 0000000000000290 t accum_scale_or_bias
0000000000405560 0000000000000334 t accum_or_load
00000000004058a0 0000000000000128 t _mesa_ClearAccum
00000000004059d0 00000000000001c0 t _mesa_clear_accum_buffer
0000000000405b90 0000000000000010 t _mesa_init_accum
0000000000405ba0 0000000000000724 T _mesa_Accum
00000000004062d0 0000000000000068 t VertexAttrib1NbvNV
0000000000406340 0000000000000060 t VertexAttrib1bvNV
00000000004063a0 000000000000007c t VertexAttrib2NbvNV
0000000000406420 0000000000000070 t VertexAttrib2bvNV
0000000000406490 0000000000000090 t VertexAttrib3NbvNV
0000000000406520 000000000000005c t VertexAttrib3bvNV
0000000000406580 00000000000000a4 t VertexAttrib4NbvNV
0000000000406630 0000000000000064 t VertexAttrib4bvNV
00000000004066a0 0000000000000070 t VertexAttrib1NubvNV
0000000000406710 0000000000000060 t VertexAttrib1ubvNV
0000000000406770 000000000000005c t VertexAttrib2NubvNV
00000000004067d0 0000000000000070 t VertexAttrib2ubvNV
0000000000406840 0000000000000064 t VertexAttrib3NubvNV
00000000004068b0 000000000000005c t VertexAttrib3ubvNV
0000000000406910 000000000000006c t VertexAttrib4NubvNV
0000000000406980 0000000000000064 t VertexAttrib4ubvNV
00000000004069f0 0000000000000068 t VertexAttrib1NsvNV
0000000000406a60 0000000000000060 t VertexAttrib1svNV
0000000000406ac0 000000000000007c t VertexAttrib2NsvNV
0000000000406b40 0000000000000070 t VertexAttrib2svNV
0000000000406bb0 0000000000000090 t VertexAttrib3NsvNV
0000000000406c40 000000000000005c t VertexAttrib3svNV
0000000000406ca0 00000000000000a4 t VertexAttrib4NsvNV
0000000000406d50 0000000000000064 t VertexAttrib4svNV
0000000000406dc0 000000000000005c t VertexAttrib1NusvNV
0000000000406e20 0000000000000060 t VertexAttrib1usvNV
0000000000406e80 0000000000000068 t VertexAttrib2NusvNV
0000000000406ef0 0000000000000070 t VertexAttrib2usvNV
0000000000406f60 0000000000000074 t VertexAttrib3NusvNV
0000000000406fe0 000000000000005c t VertexAttrib3usvNV
0000000000407040 0000000000000080 t VertexAttrib4NusvNV
00000000004070c0 0000000000000064 t VertexAttrib4usvNV
0000000000407130 0000000000000070 t VertexAttrib1NivNV
00000000004071a0 0000000000000060 t VertexAttrib1ivNV
0000000000407200 0000000000000088 t VertexAttrib2NivNV
0000000000407290 0000000000000068 t VertexAttrib2ivNV
0000000000407300 00000000000000a4 t VertexAttrib3NivNV
00000000004073b0 0000000000000078 t VertexAttrib3ivNV
0000000000407430 00000000000000bc t VertexAttrib4NivNV
00000000004074f0 000000000000005c t VertexAttrib4ivNV
0000000000407550 0000000000000060 t VertexAttrib1NuivNV
00000000004075b0 0000000000000060 t VertexAttrib1uivNV
0000000000407610 000000000000006c t VertexAttrib2NuivNV
0000000000407680 0000000000000068 t VertexAttrib2uivNV
00000000004076f0 000000000000007c t VertexAttrib3NuivNV
0000000000407770 0000000000000078 t VertexAttrib3uivNV
00000000004077f0 0000000000000088 t VertexAttrib4NuivNV
0000000000407880 000000000000005c t VertexAttrib4uivNV
00000000004078e0 0000000000000050 t VertexAttrib1fvNV
0000000000407930 0000000000000050 t VertexAttrib2fvNV
0000000000407980 0000000000000050 t VertexAttrib3fvNV
00000000004079d0 0000000000000050 t VertexAttrib4fvNV
0000000000407a20 0000000000000050 t VertexAttrib1dvNV
0000000000407a70 0000000000000050 t VertexAttrib2dvNV
0000000000407ac0 0000000000000050 t VertexAttrib3dvNV
0000000000407b10 0000000000000050 t VertexAttrib4dvNV
0000000000407b60 0000000000000068 t VertexAttrib1NbvARB
0000000000407bd0 0000000000000060 t VertexAttrib1bvARB
0000000000407c30 000000000000007c t VertexAttrib2NbvARB
0000000000407cb0 0000000000000070 t VertexAttrib2bvARB
0000000000407d20 0000000000000090 t VertexAttrib3NbvARB
0000000000407db0 000000000000005c t VertexAttrib3bvARB
0000000000407e10 00000000000000a4 t VertexAttrib4NbvARB
0000000000407ec0 0000000000000064 t VertexAttrib4bvARB
0000000000407f30 0000000000000070 t VertexAttrib1NubvARB
0000000000407fa0 0000000000000060 t VertexAttrib1ubvARB
0000000000408000 000000000000005c t VertexAttrib2NubvARB
0000000000408060 0000000000000070 t VertexAttrib2ubvARB
00000000004080d0 0000000000000064 t VertexAttrib3NubvARB
0000000000408140 000000000000005c t VertexAttrib3ubvARB
00000000004081a0 000000000000006c t VertexAttrib4NubvARB
0000000000408210 0000000000000064 t VertexAttrib4ubvARB
0000000000408280 0000000000000068 t VertexAttrib1NsvARB
00000000004082f0 0000000000000060 t VertexAttrib1svARB
0000000000408350 000000000000007c t VertexAttrib2NsvARB
00000000004083d0 0000000000000070 t VertexAttrib2svARB
0000000000408440 0000000000000090 t VertexAttrib3NsvARB
00000000004084d0 000000000000005c t VertexAttrib3svARB
0000000000408530 00000000000000a4 t VertexAttrib4NsvARB
00000000004085e0 0000000000000064 t VertexAttrib4svARB
0000000000408650 000000000000005c t VertexAttrib1NusvARB
00000000004086b0 0000000000000060 t VertexAttrib1usvARB
0000000000408710 0000000000000068 t VertexAttrib2NusvARB
0000000000408780 0000000000000070 t VertexAttrib2usvARB
00000000004087f0 0000000000000074 t VertexAttrib3NusvARB
0000000000408870 000000000000005c t VertexAttrib3usvARB
00000000004088d0 0000000000000080 t VertexAttrib4NusvARB
0000000000408950 0000000000000064 t VertexAttrib4usvARB
00000000004089c0 0000000000000070 t VertexAttrib1NivARB
0000000000408a30 0000000000000060 t VertexAttrib1ivARB
0000000000408a90 0000000000000088 t VertexAttrib2NivARB
0000000000408b20 0000000000000068 t VertexAttrib2ivARB
0000000000408b90 00000000000000a4 t VertexAttrib3NivARB
0000000000408c40 0000000000000078 t VertexAttrib3ivARB
0000000000408cc0 00000000000000bc t VertexAttrib4NivARB
0000000000408d80 000000000000005c t VertexAttrib4ivARB
0000000000408de0 0000000000000060 t VertexAttrib1NuivARB
0000000000408e40 0000000000000060 t VertexAttrib1uivARB
0000000000408ea0 000000000000006c t VertexAttrib2NuivARB
0000000000408f10 0000000000000068 t VertexAttrib2uivARB
0000000000408f80 000000000000007c t VertexAttrib3NuivARB
0000000000409000 0000000000000078 t VertexAttrib3uivARB
0000000000409080 0000000000000088 t VertexAttrib4NuivARB
0000000000409110 000000000000005c t VertexAttrib4uivARB
0000000000409170 0000000000000050 t VertexAttrib1fvARB
00000000004091c0 0000000000000050 t VertexAttrib2fvARB
0000000000409210 0000000000000050 t VertexAttrib3fvARB
0000000000409260 0000000000000050 t VertexAttrib4fvARB
00000000004092b0 0000000000000050 t VertexAttrib1dvARB
0000000000409300 0000000000000050 t VertexAttrib2dvARB
0000000000409350 0000000000000050 t VertexAttrib3dvARB
00000000004093a0 0000000000000050 t VertexAttrib4dvARB
00000000004093f0 0000000000000058 t VertexAttribI1bv
0000000000409450 0000000000000060 t VertexAttribI2bv
00000000004094b0 0000000000000068 t VertexAttribI3bv
0000000000409520 0000000000000050 t VertexAttribI4bv
0000000000409570 0000000000000058 t VertexAttribI1ubv
00000000004095d0 0000000000000060 t VertexAttribI2ubv
0000000000409630 0000000000000068 t VertexAttribI3ubv
00000000004096a0 0000000000000050 t VertexAttribI4ubv
00000000004096f0 0000000000000058 t VertexAttribI1sv
0000000000409750 0000000000000060 t VertexAttribI2sv
00000000004097b0 0000000000000068 t VertexAttribI3sv
0000000000409820 0000000000000050 t VertexAttribI4sv
0000000000409870 0000000000000058 t VertexAttribI1usv
00000000004098d0 0000000000000060 t VertexAttribI2usv
0000000000409930 0000000000000068 t VertexAttribI3usv
00000000004099a0 0000000000000050 t VertexAttribI4usv
00000000004099f0 0000000000000058 t VertexAttribI1iv
0000000000409a50 0000000000000058 t VertexAttribI2iv
0000000000409ab0 0000000000000060 t VertexAttribI3iv
0000000000409b10 0000000000000050 t VertexAttribI4iv
0000000000409b60 0000000000000058 t VertexAttribI1uiv
0000000000409bc0 0000000000000058 t VertexAttribI2uiv
0000000000409c20 0000000000000060 t VertexAttribI3uiv
0000000000409c80 0000000000000050 t VertexAttribI4uiv
0000000000409cd0 0000000000000050 t VertexAttribL1dv
0000000000409d20 0000000000000050 t VertexAttribL2dv
0000000000409d70 0000000000000050 t VertexAttribL3dv
0000000000409dc0 0000000000000050 t VertexAttribL4dv
0000000000409e10 0000000000000370 t _mesa_array_element
000000000040a180 00000000000000bc T _ae_ArrayElement
000000000040a240 000000000000000c t _mesa_install_arrayelt_vtxfmt
000000000040a250 0000000000000074 T _mesa_Color3b
000000000040a2d0 0000000000000038 T _mesa_Color3d
000000000040a310 0000000000000080 T _mesa_Color3i
000000000040a390 0000000000000074 T _mesa_Color3s
000000000040a410 000000000000005c T _mesa_Color3ui
000000000040a470 000000000000005c T _mesa_Color3us
000000000040a4d0 000000000000004c T _mesa_Color3ub
000000000040a520 0000000000000074 T _mesa_Color3bv
000000000040a5a0 0000000000000040 T _mesa_Color3dv
000000000040a5e0 0000000000000088 T _mesa_Color3iv
000000000040a670 0000000000000074 T _mesa_Color3sv
000000000040a6f0 0000000000000064 T _mesa_Color3uiv
000000000040a760 000000000000005c T _mesa_Color3usv
000000000040a7c0 000000000000004c T _mesa_Color3ubv
000000000040a810 0000000000000088 T _mesa_Color4b
000000000040a8a0 0000000000000038 T _mesa_Color4d
000000000040a8e0 0000000000000098 T _mesa_Color4i
000000000040a980 0000000000000088 T _mesa_Color4s
000000000040aa10 0000000000000064 T _mesa_Color4ui
000000000040aa80 0000000000000064 T _mesa_Color4us
000000000040aaf0 0000000000000050 T _mesa_Color4ub
000000000040ab40 00000000000000a0 T _mesa_Color4iv
000000000040abe0 0000000000000088 T _mesa_Color4bv
000000000040ac70 0000000000000040 T _mesa_Color4dv
000000000040acb0 0000000000000088 T _mesa_Color4sv
000000000040ad40 000000000000006c T _mesa_Color4uiv
000000000040adb0 0000000000000064 T _mesa_Color4usv
000000000040ae20 0000000000000050 T _mesa_Color4ubv
000000000040ae70 000000000000004c T _mesa_FogCoordd
000000000040aec0 0000000000000058 T _mesa_FogCoorddv
000000000040af20 000000000000002c T _mesa_Indexd
000000000040af50 000000000000002c T _mesa_Indexi
000000000040af80 0000000000000030 T _mesa_Indexs
000000000040afb0 0000000000000030 T _mesa_Indexub
000000000040afe0 0000000000000030 T _mesa_Indexdv
000000000040b010 0000000000000030 T _mesa_Indexiv
000000000040b040 0000000000000030 T _mesa_Indexsv
000000000040b070 0000000000000030 T _mesa_Indexubv
000000000040b0a0 0000000000000030 T _mesa_EdgeFlagv
000000000040b0d0 0000000000000074 T _mesa_Normal3b
000000000040b150 0000000000000034 T _mesa_Normal3d
000000000040b190 0000000000000080 T _mesa_Normal3i
000000000040b210 0000000000000074 T _mesa_Normal3s
000000000040b290 0000000000000074 T _mesa_Normal3bv
000000000040b310 000000000000003c T _mesa_Normal3dv
000000000040b350 0000000000000088 T _mesa_Normal3iv
000000000040b3e0 0000000000000074 T _mesa_Normal3sv
000000000040b460 000000000000002c T _mesa_TexCoord1d
000000000040b490 000000000000002c T _mesa_TexCoord1i
000000000040b4c0 0000000000000030 T _mesa_TexCoord1s
000000000040b4f0 0000000000000030 T _mesa_TexCoord2d
000000000040b520 0000000000000038 T _mesa_TexCoord2s
000000000040b560 0000000000000030 T _mesa_TexCoord2i
000000000040b590 0000000000000034 T _mesa_TexCoord3d
000000000040b5d0 0000000000000034 T _mesa_TexCoord3i
000000000040b610 0000000000000040 T _mesa_TexCoord3s
000000000040b650 0000000000000038 T _mesa_TexCoord4d
000000000040b690 0000000000000038 T _mesa_TexCoord4i
000000000040b6d0 0000000000000048 T _mesa_TexCoord4s
000000000040b720 0000000000000030 T _mesa_TexCoord1dv
000000000040b750 0000000000000030 T _mesa_TexCoord1iv
000000000040b780 0000000000000030 T _mesa_TexCoord1sv
000000000040b7b0 0000000000000034 T _mesa_TexCoord2dv
000000000040b7f0 0000000000000034 T _mesa_TexCoord2iv
000000000040b830 0000000000000038 T _mesa_TexCoord2sv
000000000040b870 000000000000003c T _mesa_TexCoord3dv
000000000040b8b0 000000000000003c T _mesa_TexCoord3iv
000000000040b8f0 0000000000000040 T _mesa_TexCoord3sv
000000000040b930 0000000000000040 T _mesa_TexCoord4dv
000000000040b970 0000000000000040 T _mesa_TexCoord4iv
000000000040b9b0 0000000000000048 T _mesa_TexCoord4sv
000000000040ba00 0000000000000030 T _mesa_Vertex2d
000000000040ba30 0000000000000030 T _mesa_Vertex2i
000000000040ba60 0000000000000038 T _mesa_Vertex2s
000000000040baa0 0000000000000034 T _mesa_Vertex3d
000000000040bae0 0000000000000034 T _mesa_Vertex3i
000000000040bb20 0000000000000040 T _mesa_Vertex3s
000000000040bb60 0000000000000038 T _mesa_Vertex4d
000000000040bba0 0000000000000038 T _mesa_Vertex4i
000000000040bbe0 0000000000000048 T _mesa_Vertex4s
000000000040bc30 0000000000000034 T _mesa_Vertex2dv
000000000040bc70 0000000000000034 T _mesa_Vertex2iv
000000000040bcb0 0000000000000038 T _mesa_Vertex2sv
000000000040bcf0 000000000000003c T _mesa_Vertex3dv
000000000040bd30 000000000000003c T _mesa_Vertex3iv
000000000040bd70 0000000000000040 T _mesa_Vertex3sv
000000000040bdb0 0000000000000040 T _mesa_Vertex4dv
000000000040bdf0 0000000000000040 T _mesa_Vertex4iv
000000000040be30 0000000000000048 T _mesa_Vertex4sv
000000000040be80 0000000000000034 T _mesa_MultiTexCoord1d
000000000040bec0 0000000000000038 T _mesa_MultiTexCoord1dv
000000000040bf00 0000000000000034 T _mesa_MultiTexCoord1i
000000000040bf40 0000000000000038 T _mesa_MultiTexCoord1iv
000000000040bf80 0000000000000038 T _mesa_MultiTexCoord1s
000000000040bfc0 0000000000000038 T _mesa_MultiTexCoord1sv
000000000040c000 0000000000000038 T _mesa_MultiTexCoord2d
000000000040c040 000000000000003c T _mesa_MultiTexCoord2dv
000000000040c080 0000000000000038 T _mesa_MultiTexCoord2i
000000000040c0c0 000000000000003c T _mesa_MultiTexCoord2iv
000000000040c100 0000000000000040 T _mesa_MultiTexCoord2s
000000000040c140 0000000000000040 T _mesa_MultiTexCoord2sv
000000000040c180 000000000000003c T _mesa_MultiTexCoord3d
000000000040c1c0 0000000000000044 T _mesa_MultiTexCoord3dv
000000000040c210 000000000000003c T _mesa_MultiTexCoord3i
000000000040c250 0000000000000044 T _mesa_MultiTexCoord3iv
000000000040c2a0 0000000000000048 T _mesa_MultiTexCoord3s
000000000040c2f0 0000000000000048 T _mesa_MultiTexCoord3sv
000000000040c340 0000000000000040 T _mesa_MultiTexCoord4d
000000000040c380 0000000000000048 T _mesa_MultiTexCoord4dv
000000000040c3d0 0000000000000040 T _mesa_MultiTexCoord4i
000000000040c410 0000000000000048 T _mesa_MultiTexCoord4iv
000000000040c460 0000000000000050 T _mesa_MultiTexCoord4s
000000000040c4b0 0000000000000050 T _mesa_MultiTexCoord4sv
000000000040c500 0000000000000034 T _mesa_EvalCoord2dv
000000000040c540 0000000000000030 T _mesa_EvalCoord2d
000000000040c570 0000000000000030 T _mesa_EvalCoord1dv
000000000040c5a0 000000000000002c T _mesa_EvalCoord1d
000000000040c5d0 0000000000000038 T _mesa_Materialf
000000000040c610 000000000000003c T _mesa_Materiali
000000000040c650 00000000000000e8 T _mesa_Materialiv
000000000040c740 0000000000000038 T _mesa_Rectd
000000000040c780 0000000000000040 T _mesa_Rectdv
000000000040c7c0 0000000000000034 T _mesa_Rectfv
000000000040c800 0000000000000038 T _mesa_Recti
000000000040c840 0000000000000040 T _mesa_Rectiv
000000000040c880 0000000000000048 T _mesa_Rects
000000000040c8d0 0000000000000048 T _mesa_Rectsv
000000000040c920 0000000000000088 T _mesa_SecondaryColor3b
000000000040c9b0 000000000000005c T _mesa_SecondaryColor3d
000000000040ca10 0000000000000098 T _mesa_SecondaryColor3i
000000000040cab0 0000000000000088 T _mesa_SecondaryColor3s
000000000040cb40 0000000000000070 T _mesa_SecondaryColor3ui
000000000040cbb0 000000000000006c T _mesa_SecondaryColor3us
000000000040cc20 0000000000000078 T _mesa_SecondaryColor3ub
000000000040cca0 000000000000008c T _mesa_SecondaryColor3bv
000000000040cd30 0000000000000070 T _mesa_SecondaryColor3dv
000000000040cda0 00000000000000a0 T _mesa_SecondaryColor3iv
000000000040ce40 000000000000008c T _mesa_SecondaryColor3sv
000000000040ced0 0000000000000078 T _mesa_SecondaryColor3uiv
000000000040cf50 0000000000000070 T _mesa_SecondaryColor3usv
000000000040cfc0 0000000000000060 T _mesa_SecondaryColor3ubv
000000000040d020 000000000000005c T _mesa_VertexAttrib1sNV
000000000040d080 0000000000000058 T _mesa_VertexAttrib1dNV
000000000040d0e0 0000000000000068 T _mesa_VertexAttrib2sNV
000000000040d150 0000000000000060 T _mesa_VertexAttrib2dNV
000000000040d1b0 0000000000000074 T _mesa_VertexAttrib3sNV
000000000040d230 0000000000000070 T _mesa_VertexAttrib3dNV
000000000040d2a0 0000000000000080 T _mesa_VertexAttrib4sNV
000000000040d320 0000000000000070 T _mesa_VertexAttrib4dNV
000000000040d390 000000000000006c T _mesa_VertexAttrib4ubNV
000000000040d400 0000000000000060 T _mesa_VertexAttrib1svNV
000000000040d460 0000000000000060 T _mesa_VertexAttrib1dvNV
000000000040d4c0 0000000000000070 T _mesa_VertexAttrib2svNV
000000000040d530 0000000000000068 T _mesa_VertexAttrib2dvNV
000000000040d5a0 000000000000005c t _mesa_VertexAttrib3svNV
000000000040d600 0000000000000078 T _mesa_VertexAttrib3dvNV
000000000040d680 0000000000000064 t _mesa_VertexAttrib4svNV
000000000040d6f0 000000000000005c T _mesa_VertexAttrib4dvNV
000000000040d750 000000000000006c t _mesa_VertexAttrib4ubvNV
000000000040d7c0 000000000000008c T _mesa_VertexAttribs1fvNV
000000000040d850 000000000000008c T _mesa_VertexAttribs2fvNV
000000000040d8e0 0000000000000060 T _mesa_VertexAttribs3svNV
000000000040d940 0000000000000094 T _mesa_VertexAttribs3fvNV
000000000040d9e0 0000000000000058 T _mesa_VertexAttribs4svNV
000000000040da40 0000000000000090 T _mesa_VertexAttribs4fvNV
000000000040dad0 0000000000000058 T _mesa_VertexAttribs4ubvNV
000000000040db30 000000000000005c T _mesa_VertexAttrib1s
000000000040db90 0000000000000058 T _mesa_VertexAttrib1d
000000000040dbf0 0000000000000068 T _mesa_VertexAttrib2s
000000000040dc60 0000000000000060 T _mesa_VertexAttrib2d
000000000040dcc0 0000000000000074 T _mesa_VertexAttrib3s
000000000040dd40 0000000000000070 T _mesa_VertexAttrib3d
000000000040ddb0 0000000000000080 T _mesa_VertexAttrib4s
000000000040de30 0000000000000070 T _mesa_VertexAttrib4d
000000000040dea0 0000000000000060 T _mesa_VertexAttrib1sv
000000000040df00 0000000000000060 T _mesa_VertexAttrib1dv
000000000040df60 0000000000000070 T _mesa_VertexAttrib2sv
000000000040dfd0 0000000000000068 T _mesa_VertexAttrib2dv
000000000040e040 000000000000005c T _mesa_VertexAttrib3sv
000000000040e0a0 0000000000000078 T _mesa_VertexAttrib3dv
000000000040e120 0000000000000064 T _mesa_VertexAttrib4sv
000000000040e190 000000000000005c T _mesa_VertexAttrib4dv
000000000040e1f0 0000000000000064 T _mesa_VertexAttrib4bv
000000000040e260 000000000000005c T _mesa_VertexAttrib4iv
000000000040e2c0 0000000000000064 T _mesa_VertexAttrib4ubv
000000000040e330 0000000000000064 T _mesa_VertexAttrib4usv
000000000040e3a0 000000000000005c T _mesa_VertexAttrib4uiv
000000000040e400 00000000000000a4 T _mesa_VertexAttrib4Nbv
000000000040e4b0 00000000000000a4 T _mesa_VertexAttrib4Nsv
000000000040e560 00000000000000bc T _mesa_VertexAttrib4Niv
000000000040e620 000000000000006c T _mesa_VertexAttrib4Nub
000000000040e690 000000000000006c T _mesa_VertexAttrib4Nubv
000000000040e700 0000000000000080 T _mesa_VertexAttrib4Nusv
000000000040e780 0000000000000088 T _mesa_VertexAttrib4Nuiv
000000000040e810 0000000000000058 T _mesa_VertexAttribI1iv
000000000040e870 0000000000000058 T _mesa_VertexAttribI1uiv
000000000040e8d0 0000000000000070 T _mesa_VertexAttribI4bv
000000000040e940 0000000000000070 T _mesa_VertexAttribI4sv
000000000040e9b0 0000000000000070 T _mesa_VertexAttribI4ubv
000000000040ea20 0000000000000070 T _mesa_VertexAttribI4usv
000000000040ea90 0000000000000090 T _mesa_VertexAttribs1dvNV
000000000040eb20 0000000000000090 T _mesa_VertexAttribs1svNV
000000000040ebb0 0000000000000094 T _mesa_VertexAttribs2dvNV
000000000040ec50 00000000000000a0 T _mesa_VertexAttribs3dvNV
000000000040ecf0 0000000000000098 T _mesa_VertexAttribs2svNV
000000000040ed90 00000000000000a4 T _mesa_VertexAttribs4dvNV
000000000040ee40 0000000000000c48 t _mesa_loopback_init_api_table
000000000040fa90 00000000000001bc t lookup_or_create_program
000000000040fc50 0000000000000330 t set_program_string
000000000040ff80 000000000000009c t get_local_param_pointer
0000000000410020 0000000000000384 t get_program_iv
00000000004103b0 0000000000000188 t program_local_parameters4fv
0000000000410540 0000000000000278 t _mesa_BindProgramARB
00000000004107c0 00000000000001ac T _mesa_DeleteProgramsARB
0000000000410970 0000000000000114 T _mesa_GenProgramsARB
0000000000410a90 0000000000000070 T _mesa_IsProgramARB
0000000000410b00 00000000000000a0 T _mesa_ProgramStringARB
0000000000410ba0 0000000000000054 T _mesa_NamedProgramStringEXT
0000000000410c00 0000000000000200 T _mesa_ProgramEnvParameter4dARB
0000000000410e00 00000000000001f8 T _mesa_ProgramEnvParameter4dvARB
0000000000411000 0000000000000204 T _mesa_ProgramEnvParameter4fARB
0000000000411210 00000000000001dc T _mesa_ProgramEnvParameter4fvARB
00000000004113f0 00000000000001ac T _mesa_ProgramEnvParameters4fvEXT
00000000004115a0 00000000000000f4 T _mesa_GetProgramEnvParameterdvARB
00000000004116a0 00000000000000f0 T _mesa_GetProgramEnvParameterfvARB
0000000000411790 0000000000000138 t _mesa_ProgramLocalParameter4fARB
00000000004118d0 000000000000022c t _mesa_NamedProgramLocalParameter4fEXT
0000000000411b00 000000000000000c T _mesa_ProgramLocalParameter4fvARB
0000000000411b10 000000000000000c T _mesa_NamedProgramLocalParameter4fvEXT
0000000000411b20 0000000000000098 T _mesa_ProgramLocalParameters4fvEXT
0000000000411bc0 0000000000000064 T _mesa_NamedProgramLocalParameters4fvEXT
0000000000411c30 0000000000000148 T _mesa_ProgramLocalParameter4dARB
0000000000411d80 0000000000000014 T _mesa_NamedProgramLocalParameter4dEXT
0000000000411da0 000000000000001c T _mesa_ProgramLocalParameter4dvARB
0000000000411dc0 000000000000001c T _mesa_NamedProgramLocalParameter4dvEXT
0000000000411de0 0000000000000124 T _mesa_GetProgramLocalParameterfvARB
0000000000411f10 0000000000000100 T _mesa_GetNamedProgramLocalParameterfvEXT
0000000000412010 000000000000011c T _mesa_GetProgramLocalParameterdvARB
0000000000412130 00000000000000ec T _mesa_GetNamedProgramLocalParameterdvEXT
0000000000412220 000000000000009c T _mesa_GetProgramivARB
00000000004122c0 00000000000000ec T _mesa_GetNamedProgramivEXT
00000000004123b0 00000000000000b8 T _mesa_GetProgramStringARB
0000000000412470 00000000000000b0 T _mesa_GetNamedProgramStringEXT
0000000000412520 00000000000000ec t gen_vertex_arrays.part.0
0000000000412610 0000000000000050 t _mesa_new_vao
0000000000412660 0000000000000078 t _mesa_delete_vao
00000000004126e0 00000000000000d8 t _mesa_reference_vao_
00000000004127c0 0000000000000090 t _mesa_lookup_vao
0000000000412850 0000000000000120 t _mesa_lookup_vao_err
0000000000412970 0000000000000038 t _mesa_initialize_vao
00000000004129b0 00000000000004c8 t _mesa_update_vao_derived_arrays
0000000000412e80 0000000000000028 t _mesa_set_vao_immutable
0000000000412eb0 0000000000000054 t _mesa_all_varyings_in_vbos
0000000000412f10 0000000000000064 t _mesa_all_buffers_are_unmapped
0000000000412f80 00000000000000a4 t _mesa_vao_map_arrays
0000000000413030 0000000000000070 t _mesa_vao_map
00000000004130a0 0000000000000084 t _mesa_vao_unmap_arrays
0000000000413130 0000000000000054 t _mesa_vao_unmap
0000000000413190 00000000000000a0 t _mesa_BindVertexArray_no_error
0000000000413230 0000000000000140 t delete_vertex_arrays
0000000000413370 00000000000000c0 t _mesa_BindVertexArray
0000000000413430 000000000000002c T _mesa_DeleteVertexArrays_no_error
0000000000413460 0000000000000044 T _mesa_DeleteVertexArrays
00000000004134b0 0000000000000040 T _mesa_GenVertexArrays_no_error
00000000004134f0 0000000000000064 T _mesa_GenVertexArrays
0000000000413560 0000000000000040 T _mesa_CreateVertexArrays_no_error
00000000004135a0 0000000000000064 T _mesa_CreateVertexArrays
0000000000413610 000000000000006c t _mesa_IsVertexArray
0000000000413680 00000000000000c8 T _mesa_VertexArrayElementBuffer_no_error
0000000000413750 00000000000000e0 T _mesa_VertexArrayElementBuffer
0000000000413830 00000000000000bc T _mesa_GetVertexArrayiv
00000000004138f0 00000000000000e4 t check_arith_arg
00000000004139e0 000000000000005c t _mesa_delete_ati_fragment_shader.part.0
0000000000413a40 00000000000006e4 t _mesa_FragmentOpXATI
0000000000414130 0000000000000034 t _mesa_new_ati_fragment_shader
0000000000414170 0000000000000018 t _mesa_delete_ati_fragment_shader
0000000000414190 0000000000000104 T _mesa_GenFragmentShadersATI
00000000004142a0 00000000000001a0 t _mesa_BindFragmentShaderATI
0000000000414440 0000000000000190 T _mesa_DeleteFragmentShaderATI
00000000004145d0 0000000000000178 T _mesa_BeginFragmentShaderATI
0000000000414750 000000000000016c T _mesa_EndFragmentShaderATI
00000000004148c0 00000000000001e0 T _mesa_PassTexCoordATI
0000000000414aa0 00000000000001e0 T _mesa_SampleMapATI
0000000000414c80 0000000000000058 T _mesa_ColorFragmentOp1ATI
0000000000414ce0 0000000000000060 T _mesa_ColorFragmentOp2ATI
0000000000414d40 000000000000006c T _mesa_ColorFragmentOp3ATI
0000000000414db0 0000000000000058 T _mesa_AlphaFragmentOp1ATI
0000000000414e10 000000000000005c T _mesa_AlphaFragmentOp2ATI
0000000000414e70 0000000000000068 T _mesa_AlphaFragmentOp3ATI
0000000000414ee0 0000000000000114 T _mesa_SetFragmentShaderConstantATI
0000000000415000 0000000000000118 t copy_array_attrib
0000000000415120 00000000000000b0 t push_attrib
00000000004151d0 0000000000000980 T _mesa_PushAttrib
0000000000415b50 0000000000001eb8 T _mesa_PopAttrib
0000000000417a10 00000000000003d4 t _mesa_PushClientAttrib
0000000000417df0 000000000000034c T _mesa_PopClientAttrib
0000000000418140 000000000000031c t _mesa_ClientAttribDefaultEXT
0000000000418460 000000000000001c T _mesa_PushClientAttribDefaultEXT
0000000000418480 0000000000000114 t _mesa_free_attrib_data
00000000004185a0 0000000000000014 t _mesa_init_attrib
00000000004185c0 000000000000004c T _mesa_TextureBarrierNV
0000000000418610 000000000000003c T _mesa_MemoryBarrier
0000000000418650 0000000000000054 T _mesa_MemoryBarrierByRegion_no_error
00000000004186b0 0000000000000098 T _mesa_MemoryBarrierByRegion
0000000000418750 000000000000004c T _mesa_BlendBarrier
00000000004187a0 000000000000004c T _mesa_FramebufferFetchBarrierEXT
00000000004187f0 0000000000000044 T _mesa_PrimitiveBoundingBox
0000000000418840 000000000000002c t _mesa_init_bbox
0000000000418870 00000000000000ec t legal_dst_factor
0000000000418960 0000000000000098 t update_uses_dual_src
0000000000418a00 0000000000000154 t blend_func_separate
0000000000418b60 0000000000000098 t legal_src_factor
0000000000418c00 0000000000000138 t validate_blend_factors
0000000000418d40 00000000000000bc t skip_blend_state_update
0000000000418e00 000000000000025c t blend_equation_separate
0000000000419060 000000000000009c T _mesa_BlendFunc
0000000000419100 0000000000000050 T _mesa_BlendFunc_no_error
0000000000419150 00000000000000b0 t _mesa_BlendFuncSeparate
0000000000419200 0000000000000050 T _mesa_BlendFuncSeparate_no_error
0000000000419250 0000000000000110 t _mesa_BlendFuncSeparateiARB_no_error
0000000000419360 000000000000000c T _mesa_BlendFunciARB_no_error
0000000000419370 00000000000001bc t _mesa_BlendFuncSeparateiARB
0000000000419530 000000000000000c T _mesa_BlendFunciARB
0000000000419540 00000000000003ac t _mesa_BlendEquation
00000000004198f0 000000000000025c T _mesa_BlendEquationiARB_no_error
0000000000419b50 00000000000002c8 T _mesa_BlendEquationiARB
0000000000419e20 0000000000000030 T _mesa_BlendEquationSeparate_no_error
0000000000419e50 0000000000000030 t _mesa_BlendEquationSeparate
0000000000419e80 0000000000000114 T _mesa_BlendEquationSeparateiARB_no_error
0000000000419fa0 0000000000000204 t _mesa_BlendEquationSeparateiARB
000000000041a1b0 00000000000001a8 t _mesa_BlendColor
000000000041a360 0000000000000128 t _mesa_AlphaFunc
000000000041a490 00000000000000f4 t _mesa_LogicOp
000000000041a590 00000000000000cc T _mesa_LogicOp_no_error
000000000041a660 000000000000008c t _mesa_IndexMask
000000000041a6f0 0000000000000140 t _mesa_ColorMask
000000000041a830 000000000000011c t _mesa_ColorMaski
000000000041a950 00000000000001ec t _mesa_ClampColor
000000000041ab40 0000000000000024 t _mesa_get_clamp_fragment_color
000000000041ab70 0000000000000024 t _mesa_get_clamp_read_color
000000000041aba0 000000000000004c t _mesa_update_clamp_fragment_color
000000000041abf0 0000000000000034 t _mesa_update_clamp_vertex_color
000000000041ac30 00000000000000f8 t _mesa_init_color
000000000041ad30 0000000000000120 t validate_depth_buffer.isra.0
000000000041ae50 000000000000012c t validate_stencil_buffer.isra.0
000000000041af80 00000000000001e8 t validate_color_buffer
000000000041b170 0000000000000070 t _mesa_regions_overlap
000000000041b1e0 00000000000001a8 T _mesa_BlitFramebuffer_no_error
000000000041b390 0000000000000498 T _mesa_BlitFramebuffer
000000000041b830 00000000000001dc T _mesa_BlitNamedFramebuffer_no_error
000000000041ba10 00000000000004fc T _mesa_BlitNamedFramebuffer
000000000041bf10 00000000000003b0 t get_buffer_target
000000000041c2c0 0000000000000048 t _mesa_delete_buffer_object
000000000041c310 0000000000000130 t validate_buffer_storage
000000000041c440 0000000000000104 t buffer_object_subdata_range_good
000000000041c550 00000000000000b8 t map_buffer_range
000000000041c610 00000000000000bc t buffer_page_commitment
000000000041c6d0 00000000000000e4 t _mesa_ClearBufferSubData_sw
000000000041c7c0 00000000000001b4 t get_buffer_parameter
000000000041c980 0000000000000074 t buffer_usage_warning
000000000041ca00 00000000000000f4 t validate_buffer_sub_data
000000000041cb00 00000000000002c0 t validate_map_buffer_range
000000000041cdc0 00000000000000d4 t convert_clear_buffer_data
000000000041cea0 0000000000000248 t clear_buffer_sub_data_error
000000000041d0f0 0000000000000078 t validate_and_unmap_buffer
000000000041d170 000000000000010c t copy_buffer_sub_data.part.0
000000000041d280 00000000000000d4 t flush_mapped_buffer_range
000000000041d360 0000000000000128 t create_buffers.part.0
000000000041d490 0000000000000124 t clear_buffer_sub_data_no_error.isra.0
000000000041d5c0 0000000000000128 t buffer_data_no_error
000000000041d6f0 000000000000017c t buffer_storage
000000000041d870 0000000000000214 t buffer_data_error
000000000041da90 0000000000000084 t _mesa_reference_buffer_object_
000000000041db20 0000000000000110 t bind_buffer
000000000041dc30 0000000000000104 t bind_buffer_base_uniform_buffer
000000000041dd40 0000000000000104 t bind_buffer_base_shader_storage_buffer
000000000041de50 00000000000000f0 t bind_buffer_base_atomic_buffer
000000000041df40 00000000000000a4 t _mesa_initialize_buffer_object
000000000041dff0 0000000000000160 t _mesa_init_buffer_objects
000000000041e150 0000000000000314 t _mesa_free_buffer_objects
000000000041e470 00000000000000d0 t _mesa_handle_bind_buffer_gen
000000000041e540 00000000000000dc t bind_buffer_object
000000000041e620 000000000000052c t delete_buffers
000000000041eb50 0000000000000068 t _mesa_update_default_objects_buffer_objects
000000000041ebc0 0000000000000018 t _mesa_lookup_bufferobj
000000000041ebe0 0000000000000078 t _mesa_lookup_bufferobj_err
000000000041ec60 00000000000000c4 t _mesa_multi_bind_lookup_bufferobj
000000000041ed30 0000000000000384 t bind_xfb_buffers
000000000041f0c0 0000000000000104 t set_buffer_multi_binding
000000000041f1d0 00000000000002d0 t bind_uniform_buffers
000000000041f4a0 00000000000002d8 t bind_shader_storage_buffers
000000000041f780 00000000000002c0 t bind_atomic_buffers
000000000041fa40 000000000000006c t _mesa_buffer_unmap_all_mappings
000000000041fab0 00000000000003d0 T _mesa_BindBuffer_no_error
000000000041fe80 0000000000000074 t _mesa_BindBuffer
000000000041ff00 000000000000002c T _mesa_DeleteBuffers_no_error
000000000041ff30 0000000000000044 T _mesa_DeleteBuffers
000000000041ff80 0000000000000038 T _mesa_GenBuffers_no_error
000000000041ffc0 000000000000005c T _mesa_GenBuffers
0000000000420020 0000000000000038 T _mesa_CreateBuffers_no_error
0000000000420060 000000000000005c T _mesa_CreateBuffers
00000000004200c0 000000000000007c t _mesa_IsBuffer
0000000000420140 000000000000006c T _mesa_BufferStorage_no_error
00000000004201b0 0000000000000104 T _mesa_BufferStorage
00000000004202c0 000000000000018c T _mesa_NamedBufferStorageEXT
0000000000420450 000000000000019c T _mesa_BufferStorageMemEXT
00000000004205f0 00000000000000a0 T _mesa_BufferStorageMemEXT_no_error
0000000000420690 000000000000008c T _mesa_NamedBufferStorage_no_error
0000000000420720 00000000000000fc T _mesa_NamedBufferStorage
0000000000420820 0000000000000188 T _mesa_NamedBufferStorageMemEXT
00000000004209b0 00000000000000b8 T _mesa_NamedBufferStorageMemEXT_no_error
0000000000420a70 0000000000000058 T _mesa_BufferData_no_error
0000000000420ad0 00000000000000a0 T _mesa_BufferData
0000000000420b70 0000000000000078 T _mesa_NamedBufferData_no_error
0000000000420bf0 00000000000000a0 T _mesa_NamedBufferData
0000000000420c90 00000000000000d0 T _mesa_NamedBufferDataEXT
0000000000420d60 0000000000000080 T _mesa_BufferSubData_no_error
0000000000420de0 0000000000000114 T _mesa_BufferSubData
0000000000420f00 000000000000008c T _mesa_NamedBufferSubData_no_error
0000000000420f90 0000000000000118 T _mesa_NamedBufferSubData
00000000004210b0 000000000000011c T _mesa_NamedBufferSubDataEXT
00000000004211d0 00000000000000fc T _mesa_GetBufferSubData
00000000004212d0 00000000000000fc T _mesa_GetNamedBufferSubData
00000000004213d0 00000000000000f4 T _mesa_GetNamedBufferSubDataEXT
00000000004214d0 000000000000006c T _mesa_ClearBufferData_no_error
0000000000421540 00000000000000c0 T _mesa_ClearBufferData
0000000000421600 0000000000000090 T _mesa_ClearNamedBufferData_no_error
0000000000421690 00000000000000c8 T _mesa_ClearNamedBufferData
0000000000421760 0000000000000144 T _mesa_ClearNamedBufferDataEXT
00000000004218b0 0000000000000078 T _mesa_ClearBufferSubData_no_error
0000000000421930 00000000000000d0 T _mesa_ClearBufferSubData
0000000000421a00 00000000000000a0 T _mesa_ClearNamedBufferSubData_no_error
0000000000421aa0 00000000000000cc T _mesa_ClearNamedBufferSubData
0000000000421b70 000000000000015c T _mesa_ClearNamedBufferSubDataEXT
0000000000421cd0 0000000000000050 T _mesa_UnmapBuffer_no_error
0000000000421d20 000000000000008c T _mesa_UnmapBuffer
0000000000421db0 0000000000000084 T _mesa_UnmapNamedBufferEXT_no_error
0000000000421e40 00000000000000b4 T _mesa_UnmapNamedBufferEXT
0000000000421f00 00000000000000ac T _mesa_GetBufferParameteriv
0000000000421fb0 00000000000000ac T _mesa_GetBufferParameteri64v
0000000000422060 00000000000000b8 T _mesa_GetNamedBufferParameteriv
0000000000422120 00000000000000c4 T _mesa_GetNamedBufferParameterivEXT
00000000004221f0 00000000000000b8 T _mesa_GetNamedBufferParameteri64v
00000000004222b0 00000000000000ac T _mesa_GetBufferPointerv
0000000000422360 00000000000000b0 T _mesa_GetNamedBufferPointerv
0000000000422410 00000000000000b0 T _mesa_GetNamedBufferPointervEXT
00000000004224c0 0000000000000078 T _mesa_CopyBufferSubData_no_error
0000000000422540 00000000000000ec T _mesa_CopyBufferSubData
0000000000422630 0000000000000130 T _mesa_NamedCopyBufferSubDataEXT
0000000000422760 00000000000000bc T _mesa_CopyNamedBufferSubData_no_error
0000000000422820 0000000000000160 T _mesa_CopyNamedBufferSubData
0000000000422980 0000000000000058 T _mesa_MapBufferRange_no_error
00000000004229e0 0000000000000130 T _mesa_MapBufferRange
0000000000422b10 00000000000000f4 T _mesa_MapNamedBufferRange_no_error
0000000000422c10 0000000000000128 T _mesa_MapNamedBufferRangeEXT
0000000000422d40 000000000000012c T _mesa_MapNamedBufferRange
0000000000422e70 0000000000000078 T _mesa_MapBuffer_no_error
0000000000422ef0 000000000000014c T _mesa_MapBuffer
0000000000423040 0000000000000094 T _mesa_MapNamedBuffer_no_error
00000000004230e0 0000000000000160 T _mesa_MapNamedBuffer
0000000000423240 0000000000000164 T _mesa_MapNamedBufferEXT
00000000004233b0 0000000000000064 T _mesa_FlushMappedBufferRange_no_error
0000000000423420 0000000000000098 T _mesa_FlushMappedBufferRange
00000000004234c0 0000000000000078 T _mesa_FlushMappedNamedBufferRange_no_error
0000000000423540 0000000000000098 T _mesa_FlushMappedNamedBufferRange
00000000004235e0 00000000000000b8 T _mesa_FlushMappedNamedBufferRangeEXT
00000000004236a0 00000000000002bc T _mesa_BindBufferRange_no_error
0000000000423960 00000000000003d4 T _mesa_BindBufferRange
0000000000423d40 000000000000014c T _mesa_BindBufferBase
0000000000423e90 00000000000000f8 T _mesa_BindBuffersRange
0000000000423f90 00000000000000f8 T _mesa_BindBuffersBase
0000000000424090 0000000000000078 T _mesa_InvalidateBufferSubData_no_error
0000000000424110 0000000000000114 T _mesa_InvalidateBufferSubData
0000000000424230 0000000000000070 T _mesa_InvalidateBufferData_no_error
00000000004242a0 00000000000000c4 T _mesa_InvalidateBufferData
0000000000424370 00000000000000a0 T _mesa_BufferPageCommitmentARB
0000000000424410 00000000000000a8 T _mesa_NamedBufferPageCommitmentARB
00000000004244c0 00000000000000bc T _mesa_NamedBufferPageCommitmentEXT
0000000000424580 0000000000000078 t supported_buffer_bitmask
0000000000424600 0000000000000140 t read_buffer_enum_to_index
0000000000424740 00000000000001a8 t read_buffer_err
00000000004248f0 000000000000016c t draw_buffer_enum_to_bitmask
0000000000424a60 0000000000000044 t _mesa_back_to_front_if_single_buffered
0000000000424ab0 00000000000003f8 t _mesa_drawbuffers
0000000000424eb0 0000000000000138 t draw_buffer_error
0000000000424ff0 0000000000000034 t _mesa_DrawBuffer
0000000000425030 0000000000000078 T _mesa_FramebufferDrawBufferEXT
00000000004250b0 0000000000000078 T _mesa_NamedFramebufferDrawBuffer
0000000000425130 00000000000003f4 t draw_buffers_error
0000000000425530 0000000000000038 t _mesa_DrawBuffers
0000000000425570 0000000000000084 T _mesa_FramebufferDrawBuffersEXT
0000000000425600 0000000000000084 T _mesa_NamedFramebufferDrawBuffers
0000000000425690 000000000000013c t draw_buffers_no_error.isra.0
00000000004257d0 000000000000007c T _mesa_NamedFramebufferDrawBuffers_no_error
0000000000425850 0000000000000030 T _mesa_DrawBuffers_no_error
0000000000425880 00000000000000c8 t draw_buffer_no_error.isra.0
0000000000425950 0000000000000064 T _mesa_NamedFramebufferDrawBuffer_no_error
00000000004259c0 000000000000002c T _mesa_DrawBuffer_no_error
00000000004259f0 000000000000001c t _mesa_update_draw_buffers
0000000000425a10 0000000000000058 t _mesa_readbuffer
0000000000425a70 00000000000000f0 T _mesa_ReadBuffer_no_error
0000000000425b60 0000000000000034 t _mesa_ReadBuffer
0000000000425ba0 0000000000000104 T _mesa_NamedFramebufferReadBuffer_no_error
0000000000425cb0 0000000000000078 T _mesa_FramebufferReadBufferEXT
0000000000425d30 0000000000000078 T _mesa_NamedFramebufferReadBuffer
0000000000425db0 000000000000018c t make_color_buffer_mask
0000000000425f40 00000000000000b0 t color_buffer_writes_enabled
0000000000425ff0 000000000000002c t _mesa_ClearIndex
0000000000426020 0000000000000034 t _mesa_ClearColor
0000000000426060 0000000000000038 T _mesa_ClearColorIiEXT
00000000004260a0 0000000000000038 T _mesa_ClearColorIuiEXT
00000000004260e0 0000000000000190 T _mesa_Clear_no_error
0000000000426270 000000000000025c T _mesa_Clear
00000000004264d0 000000000000015c T _mesa_ClearBufferiv_no_error
0000000000426630 00000000000001d4 t _mesa_ClearBufferiv
0000000000426810 0000000000000064 T _mesa_ClearNamedFramebufferiv
0000000000426880 00000000000000fc T _mesa_ClearBufferuiv_no_error
0000000000426980 0000000000000148 t _mesa_ClearBufferuiv
0000000000426ad0 0000000000000064 T _mesa_ClearNamedFramebufferuiv
0000000000426b40 0000000000000160 T _mesa_ClearBufferfv_no_error
0000000000426ca0 00000000000001a0 t _mesa_ClearBufferfv
0000000000426e40 0000000000000064 T _mesa_ClearNamedFramebufferfv
0000000000426eb0 00000000000000f8 T _mesa_ClearBufferfi_no_error
0000000000426fb0 000000000000019c t _mesa_ClearBufferfi
0000000000427150 0000000000000074 T _mesa_ClearNamedFramebufferfi
00000000004271d0 000000000000006c t _mesa_update_clip_plane
0000000000427240 00000000000001f0 t _mesa_ClipPlane
0000000000427430 000000000000006c t _mesa_GetClipPlane
00000000004274a0 000000000000002c T _mesa_ColorTable
00000000004274d0 000000000000002c T _mesa_ColorSubTable
0000000000427500 000000000000002c T _mesa_CopyColorTable
0000000000427530 000000000000002c T _mesa_CopyColorSubTable
0000000000427560 000000000000002c T _mesa_GetnColorTableARB
0000000000427590 000000000000002c T _mesa_GetColorTable
00000000004275c0 000000000000002c T _mesa_ColorTableParameterfv
00000000004275f0 000000000000002c T _mesa_ColorTableParameteriv
0000000000427620 000000000000002c T _mesa_GetColorTableParameterfv
0000000000427650 000000000000002c T _mesa_GetColorTableParameteriv
0000000000427680 00000000000000bc t check_valid_to_compute
0000000000427740 0000000000000084 T _mesa_DispatchCompute_no_error
00000000004277d0 0000000000000148 T _mesa_DispatchCompute
0000000000427920 0000000000000068 T _mesa_DispatchComputeIndirect_no_error
0000000000427990 0000000000000188 T _mesa_DispatchComputeIndirect
0000000000427b20 0000000000000090 T _mesa_DispatchComputeGroupSizeARB_no_error
0000000000427bb0 0000000000000200 T _mesa_DispatchComputeGroupSizeARB
0000000000427db0 0000000000000094 T _mesa_BeginConditionalRender_no_error
0000000000427e50 0000000000000170 T _mesa_BeginConditionalRender
0000000000427fc0 0000000000000068 T _mesa_EndConditionalRender_no_error
0000000000428030 00000000000000a0 T _mesa_EndConditionalRender
00000000004280d0 000000000000016c t _mesa_check_conditional_render
0000000000428240 000000000000010c T _mesa_ConservativeRasterParameteriNV_no_error
0000000000428350 0000000000000210 T _mesa_ConservativeRasterParameteriNV
0000000000428560 0000000000000108 T _mesa_ConservativeRasterParameterfNV_no_error
0000000000428670 0000000000000200 T _mesa_ConservativeRasterParameterfNV
0000000000428870 0000000000000018 t _mesa_init_conservative_raster
0000000000428890 000000000000002c T _mesa_ConvolutionFilter1D
00000000004288c0 000000000000002c T _mesa_ConvolutionFilter2D
00000000004288f0 000000000000002c T _mesa_ConvolutionParameterf
0000000000428920 000000000000002c T _mesa_ConvolutionParameterfv
0000000000428950 000000000000002c T _mesa_ConvolutionParameteri
0000000000428980 000000000000002c T _mesa_ConvolutionParameteriv
00000000004289b0 000000000000002c T _mesa_CopyConvolutionFilter1D
00000000004289e0 000000000000002c T _mesa_CopyConvolutionFilter2D
0000000000428a10 000000000000002c T _mesa_GetnConvolutionFilterARB
0000000000428a40 000000000000002c T _mesa_GetConvolutionFilter
0000000000428a70 000000000000002c T _mesa_GetConvolutionParameterfv
0000000000428aa0 000000000000002c T _mesa_GetConvolutionParameteriv
0000000000428ad0 000000000000002c T _mesa_GetnSeparableFilterARB
0000000000428b00 000000000000002c T _mesa_GetSeparableFilter
0000000000428b30 000000000000002c T _mesa_SeparableFilter2D
0000000000428b60 0000000000000144 t copy_image_subdata
0000000000428cb0 00000000000001ec t check_region_bounds
0000000000428ea0 00000000000003b4 t prepare_target_err
0000000000429260 0000000000000248 t compressed_format_compatible
00000000004294b0 00000000000001ac T _mesa_CopyImageSubData_no_error
0000000000429660 0000000000000430 T _mesa_CopyImageSubData
0000000000429a90 000000000000039c T _mesa_CopyImageSubDataNV
0000000000429e30 00000000000003d8 t _mesa_validated_multidrawelements
000000000042a210 00000000000000e8 t _mesa_exec_Rectf
000000000042a300 0000000000000060 t skip_validated_draw
000000000042a360 0000000000000124 T _mesa_MultiDrawElements
000000000042a490 000000000000017c T _mesa_MultiDrawElementsBaseVertex
000000000042a610 00000000000002a0 t _mesa_exec_MultiDrawArrays
000000000042a8b0 00000000000000bc t _mesa_validated_drawrangeelements
000000000042a970 0000000000000290 t _mesa_DrawRangeElementsBaseVertex
000000000042ac00 0000000000000008 T _mesa_DrawRangeElements
000000000042ac10 0000000000000160 T _mesa_DrawElements
000000000042ad70 0000000000000170 T _mesa_DrawElementsBaseVertex
000000000042aee0 00000000000000c4 t _mesa_draw_arrays.constprop.0
000000000042afb0 00000000000001e4 t _mesa_draw_transform_feedback
000000000042b1a0 000000000000012c T _mesa_DrawArrays
000000000042b2d0 0000000000000118 T _mesa_EvalMesh1
000000000042b3f0 0000000000000358 T _mesa_EvalMesh2
000000000042b750 0000000000000138 T _mesa_DrawArraysInstancedARB
000000000042b890 0000000000000148 t _mesa_DrawArraysInstancedBaseInstance
000000000042b9e0 0000000000000170 T _mesa_DrawElementsInstancedARB
000000000042bb50 0000000000000174 T _mesa_DrawElementsInstancedBaseVertex
000000000042bcd0 0000000000000174 T _mesa_DrawElementsInstancedBaseInstance
000000000042be50 0000000000000184 t _mesa_DrawElementsInstancedBaseVertexBaseInstance
000000000042bfe0 0000000000000048 T _mesa_DrawTransformFeedback
000000000042c030 000000000000004c T _mesa_DrawTransformFeedbackStream
000000000042c080 000000000000004c T _mesa_DrawTransformFeedbackInstanced
000000000042c0d0 0000000000000048 T _mesa_DrawTransformFeedbackStreamInstanced
000000000042c120 00000000000001b0 T _mesa_DrawArraysIndirect
000000000042c2d0 0000000000000218 t _mesa_DrawElementsIndirect
000000000042c4f0 00000000000001d8 T _mesa_MultiDrawArraysIndirect
000000000042c6d0 000000000000023c T _mesa_MultiDrawElementsIndirect
000000000042c910 0000000000000184 T _mesa_MultiDrawArraysIndirectCountARB
000000000042caa0 00000000000001bc T _mesa_MultiDrawElementsIndirectCountARB
000000000042cc60 0000000000000164 t _mesa_initialize_exec_dispatch
000000000042cdd0 00000000000000b8 T _mesa_MultiModeDrawArraysIBM
000000000042ce90 00000000000000c0 T _mesa_MultiModeDrawElementsIBM
000000000042cf50 0000000000000360 T _mesa_DrawPixels
000000000042d2b0 00000000000002c4 T _mesa_CopyPixels
000000000042d580 0000000000000354 T _mesa_Bitmap
000000000042d8e0 00000000000000dc t draw_texture
000000000042d9c0 00000000000000ec t _mesa_DrawTexfOES
000000000042dab0 0000000000000030 t _mesa_DrawTexfvOES
000000000042dae0 0000000000000034 T _mesa_DrawTexiOES
000000000042db20 0000000000000040 T _mesa_DrawTexivOES
000000000042db60 0000000000000048 T _mesa_DrawTexsOES
000000000042dbb0 0000000000000048 T _mesa_DrawTexsvOES
000000000042dc00 00000000000000b0 t enable_texture
000000000042dcb0 00000000000002f4 t client_state
000000000042dfb0 000000000000008c t client_state_i.part.0
000000000042e040 0000000000000060 t _mesa_update_derived_primitive_restart_state
000000000042e0a0 0000000000000030 t _mesa_EnableClientState
000000000042e0d0 00000000000000d0 T _mesa_EnableVertexArrayEXT
000000000042e1a0 0000000000000074 T _mesa_EnableClientStateiEXT
000000000042e220 0000000000000030 t _mesa_DisableClientState
000000000042e250 00000000000000d0 T _mesa_DisableVertexArrayEXT
000000000042e320 0000000000000074 T _mesa_DisableClientStateiEXT
000000000042e3a0 00000000000000ec t _mesa_set_multisample
000000000042e490 00000000000000a4 t _mesa_set_framebuffer_srgb
000000000042e540 0000000000003430 t _mesa_set_enable
0000000000431970 0000000000000028 T _mesa_Enable
00000000004319a0 0000000000000028 t _mesa_Disable
00000000004319d0 00000000000003bc t _mesa_set_enablei
0000000000431d90 0000000000000030 T _mesa_Disablei
0000000000431dc0 0000000000000030 T _mesa_Enablei
0000000000431df0 00000000000012e0 t _mesa_IsEnabled
00000000004330d0 0000000000000198 T _mesa_IsEnabledi
0000000000433270 0000000000000008 t _mesa_delete_memory_object
0000000000433280 0000000000000084 t lookup_memory_object_err
0000000000433310 0000000000000008 t _mesa_initialize_memory_object
0000000000433320 0000000000000128 T _mesa_DeleteMemoryObjectsEXT
0000000000433450 0000000000000074 T _mesa_IsMemoryObjectEXT
00000000004334d0 000000000000014c T _mesa_CreateMemoryObjectsEXT
0000000000433620 00000000000000f0 T _mesa_MemoryObjectParameterivEXT
0000000000433710 00000000000000b4 T _mesa_GetMemoryObjectParameterivEXT
00000000004337d0 0000000000000100 T _mesa_TexStorageMem2DEXT
00000000004338d0 0000000000000114 T _mesa_TexStorageMem2DMultisampleEXT
00000000004339f0 000000000000010c T _mesa_TexStorageMem3DEXT
0000000000433b00 0000000000000118 T _mesa_TexStorageMem3DMultisampleEXT
0000000000433c20 0000000000000108 T _mesa_TextureStorageMem2DEXT
0000000000433d30 0000000000000108 T _mesa_TextureStorageMem2DMultisampleEXT
0000000000433e40 0000000000000108 T _mesa_TextureStorageMem3DEXT
0000000000433f50 0000000000000114 T _mesa_TextureStorageMem3DMultisampleEXT
0000000000434070 00000000000000f8 T _mesa_TexStorageMem1DEXT
0000000000434170 00000000000000f8 T _mesa_TextureStorageMem1DEXT
0000000000434270 000000000000001c t _mesa_delete_semaphore_object
0000000000434290 0000000000000008 t _mesa_initialize_semaphore_object
00000000004342a0 000000000000011c T _mesa_GenSemaphoresEXT
00000000004343c0 0000000000000138 T _mesa_DeleteSemaphoresEXT
0000000000434500 0000000000000074 T _mesa_IsSemaphoreEXT
0000000000434580 0000000000000060 T _mesa_SemaphoreParameterui64vEXT
00000000004345e0 0000000000000060 T _mesa_GetSemaphoreParameterui64vEXT
0000000000434640 0000000000000200 T _mesa_WaitSemaphoreEXT
0000000000434840 0000000000000200 T _mesa_SignalSemaphoreEXT
0000000000434a40 00000000000000d0 T _mesa_ImportMemoryFdEXT
0000000000434b10 0000000000000158 T _mesa_ImportSemaphoreFdEXT
0000000000434c70 00000000000000ac t get_current_attrib(texenv_fragment_program*, unsigned int)
0000000000434d20 000000000000006c t get_gl_Color(texenv_fragment_program*)
0000000000434d90 0000000000000538 t load_texture(texenv_fragment_program*, unsigned int) [clone .part.0]
00000000004352d0 0000000000000040 t load_texenv_source(texenv_fragment_program*, unsigned int, unsigned int)
0000000000435310 00000000000005c8 t emit_combine(texenv_fragment_program*, unsigned int, unsigned int, unsigned int, gl_tex_env_argument const*)
00000000004358e0 00000000000012c8 t _mesa_get_fixed_func_fragment_program
0000000000436bb0 0000000000000074 t get_temp
0000000000436c30 00000000000001b4 t emit_op3fn.isra.0
0000000000436df0 000000000000006c t make_temp
0000000000436e60 00000000000000a8 t emit_matrix_transform_vec4
0000000000436f10 0000000000000070 t get_identity_param
0000000000436f80 0000000000000588 t make_state_key
0000000000437510 0000000000000080 t register_input
0000000000437590 000000000000007c t get_material
0000000000437610 0000000000000064 t emit_passthrough
0000000000437680 00000000000000f8 t get_lightprod
0000000000437780 000000000000010c t get_scenecolor
0000000000437890 0000000000000094 t emit_degenerate_lit
0000000000437930 00000000000000dc t emit_normalize_vec3
0000000000437a10 000000000000024c t get_transformed_normal
0000000000437c60 0000000000000174 t emit_transpose_matrix_transform_vec4
0000000000437de0 000000000000015c t get_eye_position
0000000000437f40 0000000000000078 t get_eye_position_normalized
0000000000437fc0 0000000000000128 t get_eye_position_z
00000000004380f0 000000000000320c t _mesa_get_fixed_func_vertex_program
000000000043b300 0000000000000068 t _set_default_response
000000000043b370 0000000000000034 t _is_renderable
000000000043b3b0 0000000000000270 t _mesa_query_internal_format_default
000000000043b620 000000000000237c t _mesa_GetInternalformativ
000000000043d9a0 0000000000000194 T _mesa_GetInternalformati64v
000000000043db40 000000000000012c t convert_ubyte_rgba_to_bgra
000000000043dc70 0000000000006478 t convert_float
00000000004440f0 0000000000007774 t convert_half_float
000000000044b870 00000000000077c4 t convert_int
0000000000453040 000000000000811c t convert_short
000000000045b160 00000000000084c0 t convert_byte
0000000000463620 0000000000007cac t convert_ushort
000000000046b2d0 0000000000008434 t convert_ubyte
0000000000473710 000000000000754c t convert_uint
000000000047ac60 0000000000000090 t _mesa_compute_rgba2base2rgba_component_mapping
000000000047acf0 0000000000000110 t _mesa_swizzle_and_convert
000000000047ae00 0000000000000e70 t _mesa_format_convert
000000000047bc70 000000000000007c t get_value_size
000000000047bcf0 0000000000001304 t find_value_indexed
000000000047d000 0000000000001ed4 t find_value
000000000047eee0 000000000000036c T _mesa_GetBooleanv
000000000047f250 0000000000000324 t _mesa_GetFloatv
000000000047f580 000000000000034c t _mesa_GetIntegerv
000000000047f8d0 00000000000003c8 T _mesa_GetInteger64v
000000000047fca0 0000000000000304 T _mesa_GetDoublev
000000000047ffb0 0000000000000180 T _mesa_GetUnsignedBytevEXT
0000000000480130 00000000000000dc T _mesa_GetBooleani_v
0000000000480210 000000000000010c T _mesa_GetIntegeri_v
0000000000480320 000000000000008c T _mesa_GetInteger64i_v
00000000004803b0 000000000000022c T _mesa_GetFloati_v
00000000004805e0 0000000000000234 T _mesa_GetDoublei_v
0000000000480820 00000000000000ec T _mesa_GetUnsignedBytei_vEXT
0000000000480910 0000000000000504 T _mesa_GetFixedv
0000000000480e20 000000000000015c t _mesa_is_valid_generate_texture_mipmap_target
0000000000480f80 00000000000000e0 t _mesa_is_valid_generate_texture_mipmap_internalformat
0000000000481060 0000000000000224 t validate_params_and_generate_mipmap
0000000000481290 0000000000000124 T _mesa_GenerateMipmap_no_error
00000000004813c0 0000000000000234 T _mesa_GenerateMipmap
0000000000481600 0000000000000124 T _mesa_GenerateTextureMipmap_no_error
0000000000481730 0000000000000038 T _mesa_GenerateTextureMipmap
0000000000481770 0000000000000040 T _mesa_GenerateTextureMipmapEXT
00000000004817b0 0000000000000040 T _mesa_GenerateMultiTexMipmapEXT
00000000004817f0 0000000000000074 t _mesa_spirv_module_reference
0000000000481870 00000000000000b4 t _mesa_shader_spirv_data_reference
0000000000481930 00000000000000f8 t _mesa_spirv_shader_binary
0000000000481a30 0000000000000240 t _mesa_spirv_link_shaders
0000000000481c70 0000000000000040 T _mesa_SpecializeShaderARB
0000000000481cb0 000000000000002c T _mesa_GetnMinmaxARB
0000000000481ce0 000000000000002c T _mesa_GetMinmax
0000000000481d10 000000000000002c T _mesa_GetnHistogramARB
0000000000481d40 000000000000002c T _mesa_GetHistogram
0000000000481d70 000000000000002c T _mesa_GetHistogramParameterfv
0000000000481da0 000000000000002c T _mesa_GetHistogramParameteriv
0000000000481dd0 000000000000002c T _mesa_GetMinmaxParameterfv
0000000000481e00 000000000000002c T _mesa_GetMinmaxParameteriv
0000000000481e30 000000000000002c T _mesa_Histogram
0000000000481e60 000000000000002c T _mesa_Minmax
0000000000481e90 000000000000002c T _mesa_ResetHistogram
0000000000481ec0 000000000000002c T _mesa_ResetMinmax
0000000000481ef0 0000000000000134 t float3_to_rgb9e5
0000000000482030 0000000000000040 t rgb9e5_to_float3
0000000000482070 000000000000017c t float3_to_r11g11b10f
00000000004821f0 00000000000001ac t r11g11b10f_to_float3
00000000004823a0 00000000000019c4 t do_row
0000000000483d70 00000000000000f0 t make_1d_mipmap
0000000000483e60 000000000000042c t make_2d_mipmap
0000000000484290 000000000000004c t _mesa_compute_num_levels
00000000004842e0 0000000000003520 t _mesa_generate_mipmap_level
0000000000487800 00000000000000bc t _mesa_next_mipmap_level_size
00000000004878c0 000000000000020c t _mesa_prepare_mipmap_levels
0000000000487ad0 00000000000008a0 t _mesa_generate_mipmap
0000000000488370 0000000000000260 t get_label_pointer
00000000004885d0 00000000000000a8 t copy_label
0000000000488680 00000000000000f8 t set_label
0000000000488780 0000000000000098 T _mesa_ObjectLabel
0000000000488820 00000000000000b4 T _mesa_GetObjectLabel
00000000004888e0 00000000000000b8 T _mesa_ObjectPtrLabel
00000000004889a0 00000000000000f8 T _mesa_GetObjectPtrLabel
0000000000488aa0 0000000000000244 T _mesa_ObjectPurgeableAPPLE
0000000000488cf0 00000000000001c0 T _mesa_ObjectUnpurgeableAPPLE
0000000000488eb0 0000000000000184 T _mesa_GetObjectParameterivAPPLE
0000000000489040 00000000000000bc t write_program_payload
0000000000489100 000000000000007c t _mesa_get_program_binary_length
0000000000489180 0000000000000170 t _mesa_get_program_binary
00000000004892f0 0000000000000204 t _mesa_program_binary
0000000000489500 00000000000001b4 t supported_interface_enum
00000000004896c0 00000000000004a0 T _mesa_GetProgramInterfaceiv
0000000000489b60 0000000000000158 T _mesa_GetProgramResourceIndex
0000000000489cc0 0000000000000108 T _mesa_GetProgramResourceName
0000000000489dd0 00000000000000e4 T _mesa_GetProgramResourceiv
0000000000489ec0 0000000000000278 T _mesa_GetProgramResourceLocation
000000000048a140 00000000000000cc T _mesa_GetProgramResourceLocationIndex
000000000048a210 0000000000000170 T _mesa_QueryMatrixxOES
000000000048a380 0000000000000060 t _context_lost_GetQueryObjectuiv
000000000048a3e0 0000000000000064 t _context_lost_GetSynciv
000000000048a450 0000000000000038 t context_lost_nop_handler
000000000048a490 0000000000000104 t _mesa_set_context_lost_dispatch
000000000048a5a0 00000000000000c8 T _mesa_GetGraphicsResetStatusARB
000000000048a670 0000000000000088 T _mesa_new_sampler_object
000000000048a700 00000000000000f4 t create_samplers.part.0
000000000048a800 0000000000000084 t sampler_parameter_error_check
000000000048a890 00000000000000c8 t set_sampler_cube_map_seamless
000000000048a960 0000000000000170 t set_sampler_wrap_s
000000000048aad0 0000000000000170 t set_sampler_wrap_t
000000000048ac40 0000000000000170 t set_sampler_wrap_r
000000000048adb0 0000000000000018 t _mesa_lookup_samplerobj
000000000048add0 00000000000000c0 t _mesa_reference_sampler_object_
000000000048ae90 0000000000000180 t delete_samplers
000000000048b010 000000000000003c T _mesa_GenSamplers_no_error
000000000048b050 0000000000000060 T _mesa_GenSamplers
000000000048b0b0 000000000000003c T _mesa_CreateSamplers_no_error
000000000048b0f0 0000000000000060 T _mesa_CreateSamplers
000000000048b150 000000000000002c T _mesa_DeleteSamplers_no_error
000000000048b180 0000000000000044 T _mesa_DeleteSamplers
000000000048b1d0 0000000000000070 T _mesa_IsSampler
000000000048b240 00000000000000c4 t _mesa_bind_sampler
000000000048b310 000000000000014c T _mesa_BindSampler_no_error
000000000048b460 00000000000000a8 T _mesa_BindSampler
000000000048b510 00000000000001c0 T _mesa_BindSamplers_no_error
000000000048b6d0 0000000000000230 T _mesa_BindSamplers
000000000048b900 0000000000000554 T _mesa_SamplerParameteri
000000000048be60 0000000000000550 T _mesa_SamplerParameterf
000000000048c3b0 0000000000000628 T _mesa_SamplerParameteriv
000000000048c9e0 00000000000005fc T _mesa_SamplerParameterfv
000000000048cfe0 0000000000000608 T _mesa_SamplerParameterIiv
000000000048d5f0 0000000000000608 T _mesa_SamplerParameterIuiv
000000000048dc00 0000000000000270 T _mesa_GetSamplerParameteriv
000000000048de70 0000000000000248 T _mesa_GetSamplerParameterfv
000000000048e0c0 0000000000000234 T _mesa_GetSamplerParameterIiv
000000000048e300 0000000000000234 T _mesa_GetSamplerParameterIuiv
000000000048e540 0000000000000010 t _mesa_init_sampler_object_functions
000000000048e550 000000000000014c t unpack_quint_block(int, unsigned int, unsigned char*)
000000000048e6a0 0000000000000074 t Block::decode_void_extent(InputBitVector)
000000000048e720 0000000000000178 t Block::decode_block_mode(InputBitVector)
000000000048e8a0 00000000000009b4 t Block::decode_cem(InputBitVector)
000000000048f260 00000000000005a8 t Block::unpack_colour_endpoints(InputBitVector)
000000000048f810 0000000000000588 t Block::decode_colour_endpoints()
000000000048fda0 00000000000006d4 t Block::unpack_weights(InputBitVector)
0000000000490480 0000000000000230 t Block::unquantise_weights()
00000000004906b0 0000000000000290 t Block::compute_infill_weights(int, int, int)
0000000000490940 00000000000002b0 t Block::unquantise_colour_endpoints()
0000000000490bf0 00000000000006b8 t Block::write_decoded(Decoder const&, unsigned short*)
00000000004912b0 000000000000026c t Block::calculate_from_weights()
0000000000491520 00000000000000f0 t Block::calculate_colour_endpoints_size()
0000000000491610 00000000000002e8 t Block::decode(Decoder const&, InputBitVector)
0000000000491900 00000000000000fc t Decoder::decode(unsigned char const*, unsigned short*) const
0000000000491a00 00000000000001e4 t _mesa_unpack_astc_2d_ldr
0000000000491bf0 0000000000000088 t _mesa_cpal_compressed_size
0000000000491c80 0000000000000354 t _mesa_cpal_compressed_teximage2d
0000000000491fe0 0000000000000170 t get_texenvi
0000000000492150 00000000000001ac t _mesa_gettexenviv_indexed
0000000000492300 0000000000000d80 t _mesa_texenvfv_indexed
0000000000493080 0000000000000234 t _mesa_gettexenvfv_indexed
00000000004932c0 0000000000000038 t _mesa_TexEnvfv
0000000000493300 0000000000000044 t _mesa_TexEnvf
0000000000493350 000000000000004c t _mesa_TexEnvi
00000000004933a0 00000000000000e0 T _mesa_TexEnviv
0000000000493480 0000000000000048 T _mesa_MultiTexEnvfEXT
00000000004934d0 0000000000000038 T _mesa_MultiTexEnvfvEXT
0000000000493510 000000000000004c T _mesa_MultiTexEnviEXT
0000000000493560 00000000000000fc T _mesa_MultiTexEnvivEXT
0000000000493660 0000000000000038 t _mesa_GetTexEnvfv
00000000004936a0 000000000000000c T _mesa_GetMultiTexEnvfvEXT
00000000004936b0 0000000000000038 T _mesa_GetTexEnviv
00000000004936f0 000000000000000c T _mesa_GetMultiTexEnvivEXT
0000000000493700 00000000000004c0 t texgenfv
0000000000493bc0 0000000000000164 t gettexgendv
0000000000493d30 00000000000001c0 t gettexgenfv
0000000000493ef0 00000000000001a0 t gettexgeniv
0000000000494090 0000000000000040 t _mesa_TexGenfv
00000000004940d0 0000000000000014 T _mesa_MultiTexGenfvEXT
00000000004940f0 0000000000000080 T _mesa_TexGeniv
0000000000494170 0000000000000080 T _mesa_MultiTexGenivEXT
00000000004941f0 0000000000000054 T _mesa_TexGend
0000000000494250 0000000000000038 T _mesa_MultiTexGendEXT
0000000000494290 00000000000000f0 t _es_TexGenf
0000000000494380 0000000000000080 T _mesa_TexGendv
0000000000494400 0000000000000080 T _mesa_MultiTexGendvEXT
0000000000494480 0000000000000050 T _mesa_TexGenf
00000000004944d0 0000000000000034 T _mesa_MultiTexGenfEXT
0000000000494510 0000000000000054 t _mesa_TexGeni
0000000000494570 0000000000000038 T _mesa_MultiTexGeniEXT
00000000004945b0 0000000000000040 T _mesa_GetTexGendv
00000000004945f0 0000000000000014 T _mesa_GetMultiTexGendvEXT
0000000000494610 0000000000000040 T _mesa_GetTexGenfv
0000000000494650 0000000000000014 T _mesa_GetMultiTexGenfvEXT
0000000000494670 0000000000000040 t _mesa_GetTexGeniv
00000000004946b0 0000000000000014 T _mesa_GetMultiTexGenivEXT
00000000004946d0 00000000000000d8 t legal_getteximage_target
00000000004947b0 00000000000000f4 t pbo_error_check
00000000004948b0 00000000000001ac t teximage_error_check
0000000000494a60 0000000000000484 t dimensions_error_check
0000000000494ef0 0000000000000274 t getcompressedteximage_error_check
0000000000495170 00000000000003cc t get_compressed_texture_image.isra.0
0000000000495540 00000000000001f4 t get_texture_image.isra.0
0000000000495740 000000000000012c t common_error_check.isra.0
0000000000495870 0000000000000108 t getteximage_error_check
0000000000495980 000000000000012c t _get_texture_image
0000000000495ab0 00000000000000d4 t _mesa_base_pack_format
0000000000495b90 0000000000000fc0 t _mesa_GetTexSubImage_sw
0000000000496b50 000000000000011c T _mesa_GetnTexImageARB
0000000000496c70 000000000000011c T _mesa_GetTexImage
0000000000496d90 00000000000000f4 T _mesa_GetTextureImage
0000000000496e90 00000000000000f8 T _mesa_GetTextureImageEXT
0000000000496f90 00000000000001ac T _mesa_GetMultiTexImageEXT
0000000000497140 0000000000000208 T _mesa_GetTextureSubImage
0000000000497350 0000000000000174 T _mesa_GetnCompressedTexImageARB
00000000004974d0 0000000000000174 T _mesa_GetCompressedTexImage
0000000000497650 0000000000000140 T _mesa_GetCompressedTextureImageEXT
0000000000497790 0000000000000140 T _mesa_GetCompressedMultiTexImageEXT
00000000004978d0 0000000000000158 T _mesa_GetCompressedTextureImage
0000000000497a30 0000000000000124 T _mesa_GetCompressedTextureSubImage
0000000000497b60 0000000000000094 t is_texparameteri_target_valid
0000000000497c00 0000000000000174 t validate_texture_wrap_mode
0000000000497d80 0000000000000878 t get_tex_level_parameteriv
0000000000498600 0000000000000868 t get_tex_parameteriv
0000000000498e70 00000000000009d4 t get_tex_parameterfv
0000000000499850 0000000000000564 t set_tex_parameterf
0000000000499dc0 0000000000000d58 t set_tex_parameteri
000000000049ab20 0000000000000014 t _mesa_target_allows_setting_sampler_parameters
000000000049ab40 00000000000001e4 t _mesa_texture_parameterf
000000000049ad30 00000000000001a4 t _mesa_texture_parameterfv
000000000049aee0 0000000000000134 t _mesa_texture_parameteri
000000000049b020 0000000000000140 t _mesa_texture_parameteriv
000000000049b160 00000000000000c0 t _mesa_texture_parameterIiv
000000000049b220 00000000000000c0 t _mesa_texture_parameterIuiv
000000000049b2e0 0000000000000084 t _mesa_TexParameterf
000000000049b370 0000000000000084 t _mesa_TexParameterfv
000000000049b400 0000000000000084 t _mesa_TexParameteri
000000000049b490 0000000000000084 T _mesa_TexParameteriv
000000000049b520 0000000000000084 T _mesa_TexParameterIiv
000000000049b5b0 0000000000000084 T _mesa_TexParameterIuiv
000000000049b640 00000000000000b0 T _mesa_TextureParameterfvEXT
000000000049b6f0 00000000000000b0 T _mesa_TextureParameterfv
000000000049b7a0 00000000000000b0 T _mesa_MultiTexParameterfvEXT
000000000049b850 00000000000000c0 T _mesa_TextureParameterfEXT
000000000049b910 00000000000000c0 T _mesa_MultiTexParameterfEXT
000000000049b9d0 00000000000000c0 T _mesa_TextureParameterf
000000000049ba90 00000000000000b0 T _mesa_TextureParameteriEXT
000000000049bb40 00000000000000b0 T _mesa_MultiTexParameteriEXT
000000000049bbf0 00000000000000b0 T _mesa_TextureParameteri
000000000049bca0 00000000000000b0 T _mesa_TextureParameterivEXT
000000000049bd50 00000000000000b0 T _mesa_MultiTexParameterivEXT
000000000049be00 00000000000000b0 T _mesa_TextureParameteriv
000000000049beb0 00000000000000b0 T _mesa_TextureParameterIiv
000000000049bf60 0000000000000080 T _mesa_TextureParameterIivEXT
000000000049bfe0 0000000000000080 T _mesa_MultiTexParameterIivEXT
000000000049c060 00000000000000b0 T _mesa_TextureParameterIuiv
000000000049c110 0000000000000080 T _mesa_TextureParameterIuivEXT
000000000049c190 0000000000000080 T _mesa_MultiTexParameterIuivEXT
000000000049c210 0000000000000270 t _mesa_legal_get_tex_level_parameter_target
000000000049c480 00000000000000d4 T _mesa_GetTexLevelParameterfv
000000000049c560 00000000000000d8 T _mesa_GetTexLevelParameteriv
000000000049c640 00000000000000d8 T _mesa_GetTextureLevelParameterfv
000000000049c720 00000000000000e0 T _mesa_GetTextureLevelParameterfvEXT
000000000049c800 00000000000000e0 T _mesa_GetMultiTexLevelParameterfvEXT
000000000049c8e0 00000000000000d8 T _mesa_GetTextureLevelParameteriv
000000000049c9c0 00000000000000e0 T _mesa_GetTextureLevelParameterivEXT
000000000049caa0 00000000000000e0 T _mesa_GetMultiTexLevelParameterivEXT
000000000049cb80 0000000000000084 t _mesa_GetTexParameterfv
000000000049cc10 0000000000000084 T _mesa_GetTexParameteriv
000000000049cca0 00000000000000b0 T _mesa_GetTexParameterIiv
000000000049cd50 00000000000000b0 T _mesa_GetTexParameterIuiv
000000000049ce00 00000000000000b0 T _mesa_GetTextureParameterfvEXT
000000000049ceb0 00000000000000b0 T _mesa_GetMultiTexParameterfvEXT
000000000049cf60 00000000000000b0 T _mesa_GetTextureParameterfv
000000000049d010 00000000000000b0 T _mesa_GetTextureParameterivEXT
000000000049d0c0 00000000000000b0 T _mesa_GetMultiTexParameterivEXT
000000000049d170 00000000000000b0 T _mesa_GetTextureParameteriv
000000000049d220 00000000000000dc T _mesa_GetTextureParameterIiv
000000000049d300 00000000000000ac T _mesa_GetTextureParameterIivEXT
000000000049d3b0 00000000000000ac T _mesa_GetMultiTexParameterIivEXT
000000000049d460 00000000000000dc T _mesa_GetTextureParameterIuiv
000000000049d540 00000000000000ac T _mesa_GetTextureParameterIuivEXT
000000000049d5f0 00000000000000ac T _mesa_GetMultiTexParameterIuivEXT
000000000049d6a0 0000000000000258 t register_surface
000000000049d900 00000000000000b0 T _mesa_VDPAUInitNV
000000000049d9b0 0000000000000074 T _mesa_VDPAUFiniNV
000000000049da30 000000000000005c T _mesa_VDPAURegisterVideoSurfaceNV
000000000049da90 000000000000005c T _mesa_VDPAURegisterOutputSurfaceNV
000000000049daf0 000000000000006c T _mesa_VDPAUIsSurfaceNV
000000000049db60 00000000000000f8 T _mesa_VDPAUUnregisterSurfaceNV
000000000049dc60 00000000000000e4 T _mesa_VDPAUGetSurfaceivNV
000000000049dd50 00000000000000b4 T _mesa_VDPAUSurfaceAccessNV
000000000049de10 0000000000000204 T _mesa_VDPAUMapSurfacesNV
000000000049e020 00000000000001dc t _mesa_VDPAUUnmapSurfacesNV
000000000049e200 000000000000008c t unregister_surface
000000000049e290 00000000000006f8 t install_vtxfmt
000000000049e990 0000000000000038 t _mesa_install_exec_vtxfmt
000000000049e9d0 0000000000000020 t _mesa_install_save_vtxfmt
000000000049e9f0 0000000000000038 t _mesa_initialize_vbo_vtxfmt
000000000049ea30 0000000000000014 T _mesa_AlphaFuncx
000000000049ea50 000000000000002c T _mesa_ClearColorx
000000000049ea80 0000000000000014 T _mesa_ClearDepthx
000000000049eaa0 0000000000000028 T _mesa_ClipPlanef
000000000049ead0 0000000000000040 T _mesa_ClipPlanex
000000000049eb10 000000000000002c T _mesa_Color4x
000000000049eb40 000000000000001c T _mesa_DepthRangex
000000000049eb60 0000000000000034 T _mesa_DrawTexxOES
000000000049eba0 0000000000000040 T _mesa_DrawTexxvOES
000000000049ebe0 0000000000000020 T _mesa_Fogx
000000000049ec00 0000000000000154 T _mesa_Fogxv
000000000049ed60 000000000000001c T _mesa_Frustumf
000000000049ed80 000000000000003c T _mesa_Frustumx
000000000049edc0 0000000000000034 T _mesa_GetClipPlanef
000000000049ee00 0000000000000038 T _mesa_GetClipPlanex
000000000049ee40 00000000000000f4 T _mesa_GetLightxv
000000000049ef40 00000000000000dc T _mesa_GetMaterialxv
000000000049f020 00000000000001c0 T _mesa_GetTexEnvxv
000000000049f1e0 0000000000000004 T _mesa_GetTexGenxvOES
000000000049f1f0 00000000000000ec T _mesa_GetTexParameterxv
000000000049f2e0 0000000000000008 T _mesa_LightModelx
000000000049f2f0 0000000000000088 T _mesa_LightModelxv
000000000049f380 0000000000000014 T _mesa_Lightx
000000000049f3a0 00000000000000f8 T _mesa_Lightxv
000000000049f4a0 0000000000000014 T _mesa_LineWidthx
000000000049f4c0 0000000000000044 T _mesa_LoadMatrixx
000000000049f510 0000000000000074 T _mesa_Materialx
000000000049f590 0000000000000104 T _mesa_Materialxv
000000000049f6a0 0000000000000044 T _mesa_MultMatrixx
000000000049f6f0 000000000000002c T _mesa_MultiTexCoord4x
000000000049f720 0000000000000024 T _mesa_Normal3x
000000000049f750 000000000000001c T _mesa_Orthof
000000000049f770 000000000000003c T _mesa_Orthox
000000000049f7b0 0000000000000014 T _mesa_PointParameterx
000000000049f7d0 0000000000000098 T _mesa_PointParameterxv
000000000049f870 0000000000000014 T _mesa_PointSizex
000000000049f890 000000000000001c T _mesa_PolygonOffsetx
000000000049f8b0 000000000000002c T _mesa_Rotatex
000000000049f8e0 0000000000000018 T _mesa_SampleCoveragex
000000000049f900 0000000000000024 T _mesa_Scalex
000000000049f930 0000000000000110 T _mesa_TexEnvx
000000000049fa40 000000000000015c T _mesa_TexEnvxv
000000000049fba0 0000000000000008 T _mesa_TexGenxOES
000000000049fbb0 000000000000000c T _mesa_TexGenxvOES
000000000049fbc0 0000000000000024 T _mesa_TexParameterx
000000000049fbf0 0000000000000124 T _mesa_TexParameterxv
000000000049fd20 0000000000000024 T _mesa_Translatex
000000000049fd50 00000000000000f8 t _math_horner_bezier_curve
000000000049fe50 00000000000001c4 t _math_horner_bezier_surf
00000000004a0020 0000000000000d5c t _math_de_casteljau_surf
00000000004a0d80 0000000000000050 t _math_init_eval
00000000004a0dd0 0000000000000048 t vbo_minmax_cache_key_equal
00000000004a0e20 0000000000000008 t vbo_minmax_cache_delete_entry
00000000004a0e30 0000000000000008 t vbo_minmax_cache_hash
00000000004a0e40 0000000000000030 t vbo_delete_minmax_cache
00000000004a0e70 00000000000001a8 t vbo_get_minmax_index_mapped
00000000004a1020 000000000000041c t vbo_get_minmax_indices
00000000004a1440 0000000000000070 t util_format_linear_float_to_srgb_8unorm
00000000004a14b0 0000000000000080 t pack_ubyte_rgb_float16
00000000004a1530 000000000000003c t _mesa_float_to_unorm
00000000004a1570 0000000000000044 t _mesa_float_to_snorm
00000000004a15c0 000000000000007c t _mesa_unorm_to_unorm.constprop.0
00000000004a1640 000000000000017c t float3_to_r11g11b10f
00000000004a17c0 00000000000001ac t pack_ubyte_r11g11b10_float
00000000004a1970 00000000000000c4 t pack_float_rgb_snorm16
00000000004a1a40 0000000000000034 t pack_ubyte_rgb_snorm16
00000000004a1a80 00000000000000d4 t pack_float_r5g5b5a1_unorm
00000000004a1b60 00000000000000e4 t pack_float_r4g4b4a4_unorm
00000000004a1c50 00000000000000e4 t pack_float_a4b4g4r4_unorm
00000000004a1d40 00000000000000d8 t pack_float_a1r5g5b5_unorm
00000000004a1e20 00000000000000fc t pack_float_a2r10g10b10_unorm
00000000004a1f20 00000000000000fc t pack_float_a2b10g10r10_unorm
00000000004a2020 00000000000000fc t pack_float_r10g10b10a2_unorm
00000000004a2120 00000000000000fc t pack_float_b10g10r10a2_unorm
00000000004a2220 00000000000000f4 t pack_float_a8r8g8b8_unorm
00000000004a2320 00000000000000f4 t pack_float_b8g8r8a8_unorm
00000000004a2420 00000000000000f4 t pack_float_r8g8b8a8_unorm
00000000004a2520 00000000000000f4 t pack_float_a8b8g8r8_unorm
00000000004a2620 0000000000000060 t pack_ubyte_r3g3b2_unorm
00000000004a2680 0000000000000020 t pack_ubyte_r8g8b8x8_unorm
00000000004a26a0 0000000000000020 t pack_ubyte_b8g8r8x8_unorm
00000000004a26c0 0000000000000060 t pack_ubyte_b4g4r4x4_unorm
00000000004a2720 0000000000000064 t pack_ubyte_x1b5g5r5_unorm
00000000004a2790 0000000000000060 t pack_ubyte_b5g5r5x1_unorm
00000000004a27f0 0000000000000038 t pack_ubyte_b10g10r10x2_unorm
00000000004a2830 0000000000000038 t pack_ubyte_r10g10b10x2_unorm
00000000004a2870 0000000000000064 t pack_ubyte_x8b8g8r8_snorm
00000000004a28e0 0000000000000064 t pack_ubyte_r8g8b8x8_snorm
00000000004a2950 0000000000000020 t pack_ubyte_x8b8g8r8_unorm
00000000004a2970 0000000000000020 t pack_ubyte_x8r8g8b8_unorm
00000000004a2990 0000000000000034 t pack_ubyte_rgba_unorm16
00000000004a29d0 0000000000000044 t pack_ubyte_rgba_snorm16
00000000004a2a20 0000000000000080 t pack_ubyte_b4g4r4a4_unorm
00000000004a2aa0 0000000000000080 t pack_ubyte_a4r4g4b4_unorm
00000000004a2b20 0000000000000078 t pack_ubyte_a1b5g5r5_unorm
00000000004a2ba0 0000000000000078 t pack_ubyte_b5g5r5a1_unorm
00000000004a2c20 0000000000000078 t pack_ubyte_a1r5g5b5_unorm
00000000004a2ca0 0000000000000080 t pack_ubyte_a4b4g4r4_unorm
00000000004a2d20 0000000000000080 t pack_ubyte_r4g4b4a4_unorm
00000000004a2da0 0000000000000078 t pack_ubyte_r5g5b5a1_unorm
00000000004a2e20 0000000000000080 t pack_ubyte_a8b8g8r8_snorm
00000000004a2ea0 0000000000000080 t pack_ubyte_r8g8b8a8_snorm
00000000004a2f20 0000000000000010 t pack_ubyte_a8b8g8r8_unorm
00000000004a2f30 000000000000000c t pack_ubyte_r8g8b8a8_unorm
00000000004a2f40 0000000000000014 t pack_ubyte_b8g8r8a8_unorm
00000000004a2f60 0000000000000028 t pack_ubyte_a8r8g8b8_unorm
00000000004a2f90 0000000000000058 t pack_ubyte_b10g10r10a2_unorm
00000000004a2ff0 0000000000000058 t pack_ubyte_r10g10b10a2_unorm
00000000004a3050 0000000000000058 t pack_ubyte_a2b10g10r10_unorm
00000000004a30b0 0000000000000058 t pack_ubyte_a2r10g10b10_unorm
00000000004a3110 0000000000002990 t _mesa_pack_ubyte_rgba_row
00000000004a5aa0 0000000000001c34 t _mesa_pack_uint_rgba_row
00000000004a76e0 0000000000002d28 t _mesa_pack_float_rgba_row
00000000004aa410 000000000000009c t _mesa_pack_ubyte_stencil_row
00000000004aa4b0 0000000000000040 t transform_decl
00000000004aa4f0 00000000000008c0 t transform_instr
00000000004aadb0 0000000000001960 t st_translate_atifs_program
00000000004ac710 0000000000000210 t st_init_atifs_prog
00000000004ac920 00000000000000a4 t st_fixup_atifs
00000000004ac9d0 00000000000002bc t check_program_state
00000000004acc90 0000000000000004 t st_init_atoms
00000000004acca0 0000000000000004 t st_destroy_atoms
00000000004accb0 0000000000000334 t st_validate_state
00000000004acff0 00000000000000d0 T st_update_clip
00000000004ad0c0 00000000000000e8 t st_bind_ubos
00000000004ad1b0 000000000000020c t st_upload_constants
00000000004ad3c0 0000000000000008 T st_update_vs_constants
00000000004ad3d0 0000000000000008 T st_update_fs_constants
00000000004ad3e0 0000000000000010 T st_update_gs_constants
00000000004ad3f0 0000000000000010 T st_update_tcs_constants
00000000004ad400 0000000000000010 T st_update_tes_constants
00000000004ad410 0000000000000010 T st_update_cs_constants
00000000004ad420 0000000000000018 T st_bind_vs_ubos
00000000004ad440 0000000000000018 T st_bind_fs_ubos
00000000004ad460 0000000000000018 T st_bind_gs_ubos
00000000004ad480 0000000000000018 T st_bind_tcs_ubos
00000000004ad4a0 0000000000000018 T st_bind_tes_ubos
00000000004ad4c0 0000000000000018 T st_bind_cs_ubos
00000000004ad4e0 0000000000000008 t st_compare_func_to_pipe
00000000004ad4f0 0000000000000580 T st_update_depth_stencil_alpha
00000000004ada70 00000000000003ec t st_update_framebuffer_state
00000000004ade60 00000000000001b8 t st_convert_image
00000000004ae020 0000000000000164 t st_bind_images.part.0
00000000004ae190 000000000000006c t st_convert_image_from_unit
00000000004ae200 000000000000002c T st_bind_vs_images
00000000004ae230 000000000000002c T st_bind_fs_images
00000000004ae260 000000000000002c T st_bind_gs_images
00000000004ae290 000000000000002c T st_bind_tcs_images
00000000004ae2c0 000000000000002c T st_bind_tes_images
00000000004ae2f0 000000000000002c T st_bind_cs_images
00000000004ae320 00000000000002a8 t update_sample_locations
00000000004ae5d0 00000000000000ac T st_update_sample_state
00000000004ae680 0000000000000048 T st_update_sample_shading
00000000004ae6d0 0000000000000588 T st_update_pixel_transfer
00000000004aec60 000000000000079c T st_update_rasterizer
00000000004af400 00000000000002f8 t st_convert_sampler
00000000004af700 0000000000000088 t st_convert_sampler_from_unit
00000000004af790 00000000000002b0 t update_shader_samplers
00000000004afa40 000000000000001c T st_update_vertex_samplers
00000000004afa60 0000000000000024 T st_update_tessctrl_samplers
00000000004afa90 0000000000000024 T st_update_tesseval_samplers
00000000004afac0 0000000000000024 T st_update_geometry_samplers
00000000004afaf0 000000000000001c T st_update_fragment_samplers
00000000004afb10 0000000000000024 T st_update_compute_samplers
00000000004afb40 00000000000001b4 T st_update_scissor
00000000004afd00 00000000000001cc T st_update_window_rectangles
00000000004afed0 0000000000000130 t st_update_common_program
00000000004b0000 00000000000004cc T st_update_fp
00000000004b04d0 00000000000001fc T st_update_vp
00000000004b06d0 0000000000000040 T st_update_gp
00000000004b0710 0000000000000040 T st_update_tcp
00000000004b0750 0000000000000040 T st_update_tep
00000000004b0790 0000000000000040 T st_update_cp
00000000004b07d0 0000000000000114 T st_update_polygon_stipple
00000000004b08f0 0000000000000160 t st_bind_ssbos
00000000004b0a50 0000000000000018 T st_bind_vs_ssbos
00000000004b0a70 0000000000000018 T st_bind_fs_ssbos
00000000004b0a90 0000000000000018 T st_bind_gs_ssbos
00000000004b0ab0 0000000000000018 T st_bind_tcs_ssbos
00000000004b0ad0 0000000000000018 T st_bind_tes_ssbos
00000000004b0af0 0000000000000018 T st_bind_cs_ssbos
00000000004b0b10 0000000000000030 T st_update_tess
00000000004b0b40 0000000000000100 t st_update_single_texture
00000000004b0c40 0000000000000398 t update_textures
00000000004b0fe0 0000000000000098 t update_textures_local
00000000004b1080 0000000000000028 T st_update_vertex_textures
00000000004b10b0 0000000000000018 T st_update_fragment_textures
00000000004b10d0 000000000000001c T st_update_geometry_textures
00000000004b10f0 000000000000001c T st_update_tessctrl_textures
00000000004b1110 000000000000001c T st_update_tesseval_textures
00000000004b1130 000000000000001c T st_update_compute_textures
00000000004b1150 0000000000000130 T st_update_viewport
00000000004b1280 00000000000003b8 t transform_instr
00000000004b1640 00000000000000b4 t st_get_bitmap_shader
00000000004b1700 000000000000079c t st_BlitFramebuffer
00000000004b1ea0 0000000000000010 t st_init_blit_functions
00000000004b1eb0 00000000000000fc t buffer_target_to_bind_flags
00000000004b1fb0 0000000000000088 t buffer_usage
00000000004b2040 0000000000000040 t st_bufferobj_invalidate
00000000004b2080 0000000000000064 t st_bufferobj_flush_mapped_range
00000000004b20f0 0000000000000088 t st_bufferobj_unmap
00000000004b2180 000000000000006c t st_copy_buffer_subdata
00000000004b21f0 0000000000000074 t st_bufferobj_page_commitment
00000000004b2270 0000000000000048 t st_clear_buffer_subdata
00000000004b22c0 000000000000004c t st_bufferobj_alloc
00000000004b2310 0000000000000050 t st_bufferobj_subdata
00000000004b2360 0000000000000330 t st_bufferobj_data
00000000004b2690 0000000000000094 t st_bufferobj_get_subdata
00000000004b2730 0000000000000080 t st_bufferobj_free
00000000004b27b0 0000000000000304 t st_bufferobj_data_mem
00000000004b2ac0 0000000000000068 t st_access_flags_to_transfer_flags
00000000004b2b30 00000000000000c4 t st_bufferobj_map_range
00000000004b2c00 00000000000000c8 t st_init_bufferobject_functions
00000000004b2cd0 0000000000000a24 t st_Clear
00000000004b3700 000000000000002c t st_init_clear
00000000004b3730 000000000000007c t st_destroy_clear
00000000004b37b0 0000000000000010 t st_init_clear_functions
00000000004b37c0 00000000000001d4 t st_dispatch_compute_common
00000000004b39a0 000000000000000c t st_dispatch_compute_group_size
00000000004b39b0 000000000000001c t st_dispatch_compute_indirect
00000000004b39d0 0000000000000010 t st_dispatch_compute
00000000004b39e0 0000000000000028 t st_init_compute_functions
00000000004b3a10 0000000000000034 t st_EndConditionalRender
00000000004b3a50 000000000000007c t st_BeginConditionalRender
00000000004b3ad0 000000000000001c t st_init_cond_render_functions
00000000004b3af0 0000000000000430 t get_canonical_format
00000000004b3f20 00000000000000c4 t canonical_format_from_bits
00000000004b3ff0 00000000000000a8 t same_size_and_swizzle
00000000004b40a0 000000000000019c t swizzled_copy
00000000004b4240 00000000000004ec t handle_complex_copy
00000000004b4730 0000000000000868 t st_CopyImageSubData
00000000004b4fa0 0000000000000010 t st_init_copy_image_functions
00000000004b4fb0 0000000000000830 t transform_instr
00000000004b57e0 00000000000000e8 t st_get_drawpix_shader
00000000004b58d0 0000000000000860 t st_DrawTex
00000000004b6130 0000000000000010 t st_init_drawtex_functions
00000000004b6140 0000000000000068 t st_destroy_drawtex
00000000004b61b0 0000000000000358 t st_get_egl_image
00000000004b6510 0000000000000360 t st_bind_egl_image
00000000004b6870 00000000000000cc t st_egl_image_target_tex_storage
00000000004b6940 00000000000000cc t st_egl_image_target_texture_2d
00000000004b6a10 00000000000001e8 t st_egl_image_target_renderbuffer_storage
00000000004b6c00 0000000000000028 t st_init_eglimage_functions
00000000004b6c30 0000000000000064 t st_import_memoryobj_fd
00000000004b6ca0 0000000000000004 t st_memoryobj_free
00000000004b6cb0 000000000000004c t st_memoryobj_alloc
00000000004b6d00 0000000000000028 t st_init_memoryobject_functions
00000000004b6d30 00000000000000b8 t st_GetProgrammableSampleCaps
00000000004b6df0 000000000000008c t st_GetSamplePosition
00000000004b6e80 000000000000001c t st_init_msaa_functions
00000000004b6ea0 000000000000008c t st_EndPerfMonitor
00000000004b6f30 00000000000000c4 t st_IsPerfMonitorResultAvailable
00000000004b7000 00000000000001c4 t st_GetPerfMonitorResult
00000000004b71d0 00000000000000a4 t reset_perf_monitor
00000000004b7280 000000000000002c t st_DeletePerfMonitor
00000000004b72b0 000000000000000c t st_NewPerfMonitor
00000000004b72c0 0000000000000308 t st_InitPerfMonitorGroups
00000000004b75d0 000000000000034c t st_BeginPerfMonitor
00000000004b7920 000000000000007c t st_ResetPerfMonitor
00000000004b79a0 0000000000000044 t st_have_perfmon
00000000004b79f0 0000000000000080 t st_destroy_perfmon
00000000004b7a70 0000000000000064 t st_init_perfmon_functions
00000000004b7ae0 0000000000000018 t st_InitPerfQueryInfo
00000000004b7b00 0000000000000018 t st_GetPerfQueryInfo
00000000004b7b20 0000000000000018 t st_DeletePerfQuery
00000000004b7b40 0000000000000028 t st_BeginPerfQuery
00000000004b7b70 0000000000000018 t st_EndPerfQuery
00000000004b7b90 0000000000000018 t st_WaitPerfQuery
00000000004b7bb0 0000000000000028 t st_IsPerfQueryReady
00000000004b7be0 000000000000001c t st_GetPerfQueryData
00000000004b7c00 0000000000000018 t st_NewPerfQueryObject
00000000004b7c20 000000000000006c t st_GetPerfCounterInfo
00000000004b7c90 0000000000000068 t st_have_perfquery
00000000004b7d00 000000000000007c t st_init_perfquery_functions
00000000004b7d80 0000000000000038 t st_new_ati_fs
00000000004b7dc0 0000000000000024 t st_max_shader_compiler_threads
00000000004b7df0 00000000000000a8 t st_get_shader_program_completion_status
00000000004b7ea0 00000000000000dc t st_program_string_notify
00000000004b7f80 0000000000000048 t st_delete_program
00000000004b7fd0 0000000000000064 t st_new_program
00000000004b8040 0000000000000050 t st_init_program_functions
00000000004b8090 0000000000000030 t st_GetTimestamp
00000000004b80c0 000000000000016c t st_StoreQueryResult
00000000004b8230 00000000000001dc t get_query_result
00000000004b8410 0000000000000034 t st_CheckQuery
00000000004b8450 0000000000000050 t st_WaitQuery
00000000004b84a0 00000000000000cc t st_EndQuery
00000000004b8570 0000000000000044 t st_NewQueryObject
00000000004b85c0 000000000000006c t st_DeleteQuery
00000000004b8630 0000000000000420 t st_BeginQuery
00000000004b8a50 0000000000000064 t st_init_query_functions
00000000004b8ac0 0000000000000218 t blit_to_staging
00000000004b8ce0 0000000000000e24 t st_ReadPixels
00000000004b9b10 0000000000000010 t st_init_readpixels_functions
00000000004b9b20 0000000000000048 t st_get_string
00000000004b9b70 0000000000000010 t st_init_string_functions
00000000004b9b80 0000000000000020 t st_import_semaphoreobj_fd
00000000004b9ba0 00000000000000c0 t st_server_signal_semaphore
00000000004b9c60 00000000000000b8 t st_server_wait_semaphore
00000000004b9d20 0000000000000004 t st_semaphoreobj_free
00000000004b9d30 000000000000004c t st_semaphoreobj_alloc
00000000004b9d80 0000000000000040 t st_init_semaphoreobject_functions
00000000004b9dc0 0000000000000034 t st_fence_sync
00000000004b9e00 00000000000000bc t st_server_wait_sync
00000000004b9ec0 00000000000000e8 t st_client_wait_sync
00000000004b9fb0 000000000000000c t st_check_sync
00000000004b9fc0 0000000000000050 t st_delete_sync_object
00000000004ba010 0000000000000038 t st_new_sync_object
00000000004ba050 000000000000004c t st_init_syncobj_functions
00000000004ba0a0 000000000000001c t st_TextureBarrier
00000000004ba0c0 000000000000001c t st_FramebufferFetchBarrier
00000000004ba0e0 00000000000000cc t st_MemoryBarrier
00000000004ba1b0 0000000000000028 t st_init_texture_barrier_functions
00000000004ba1e0 0000000000000114 t st_viewport
00000000004ba300 0000000000000010 t st_init_viewport_functions
00000000004ba310 0000000000000034 t st_resume_transform_feedback
00000000004ba350 000000000000001c t st_pause_transform_feedback
00000000004ba370 000000000000003c t st_new_transform_feedback
00000000004ba3b0 00000000000000cc t st_end_transform_feedback
00000000004ba480 00000000000000c0 t st_delete_transform_feedback
00000000004ba540 0000000000000154 t st_begin_transform_feedback
00000000004ba6a0 0000000000000018 t st_transform_feedback_draw_init
00000000004ba6c0 000000000000004c t st_init_xformfb_functions
00000000004ba710 0000000000000318 T st_link_shader
00000000004baa30 0000000000000004 T glsl_to_tgsi_visitor::visit(ir_function_signature*)
00000000004baa40 000000000000016c t shrink_array_declarations(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*)
00000000004babb0 0000000000000024 W ir_control_flow_info_visitor::visit_enter(ir_call*)
00000000004babe0 0000000000000024 W ir_control_flow_info_visitor::visit_enter(ir_return*)
00000000004bac10 00000000000000c0 t add_buffer_to_load_and_stores(glsl_to_tgsi_instruction*, st_src_reg*, exec_list*, ir_constant*)
00000000004bacd0 000000000000015c T glsl_to_tgsi_visitor::visit(ir_swizzle*)
00000000004bae30 000000000000002c W ir_control_flow_info_visitor::visit_enter(ir_function*)
00000000004bae60 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004bae60 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004baeb0 0000000000000010 t var_destroy(hash_entry*)
00000000004baec0 0000000000000094 T glsl_to_tgsi_visitor::visit(ir_function*)
00000000004baf60 0000000000000088 t fail_link(gl_shader_program*, char const*, ...) [clone .constprop.0]
00000000004baff0 000000000000008c t mark_array_io(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*) [clone .isra.0]
00000000004bb080 0000000000000098 t type_has_array_or_matrix(glsl_type const*)
00000000004bb120 0000000000000050 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004bb170 00000000000000b8 t is_inout_array(unsigned int, ir_variable*, bool*)
00000000004bb230 00000000000000a4 t emit_immediate(st_translate*, gl_constant_value*, unsigned int, int) [clone .isra.0]
00000000004bb2e0 000000000000023c t dst_register(st_translate*, gl_register_file, unsigned int, unsigned int)
00000000004bb520 0000000000000b9c t emit_wpos(st_context*, st_translate*, gl_program const*, ureg_program*, int)
00000000004bc0c0 0000000000000c9c t translate_src(st_translate*, st_src_reg const*)
00000000004bcd60 00000000000000bc t translate_addr(st_translate*, st_src_reg const*, unsigned int)
00000000004bce20 0000000000000014 t swizzle_for_size(int)
00000000004bce40 0000000000000820 t glsl_to_tgsi_visitor::get_opcode(tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004bd660 0000000000000220 t glsl_to_tgsi_visitor::add_constant(gl_register_file, gl_constant_value*, int, unsigned int, unsigned short*)
00000000004bd880 000000000000006c t glsl_to_tgsi_visitor::st_src_reg_for_float(float)
00000000004bd8f0 00000000000000cc t glsl_to_tgsi_visitor::st_src_reg_for_type(glsl_base_type, int)
00000000004bd9c0 000000000000015c t glsl_to_tgsi_visitor::get_temp(glsl_type const*)
00000000004bdb20 00000000000001a4 t glsl_to_tgsi_visitor::reladdr_to_temp(ir_instruction*, st_src_reg*, int*)
00000000004bdcd0 0000000000000a24 t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004be700 00000000000000dc t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004be7e0 00000000000000b4 t glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)
00000000004be8a0 00000000000001b8 t glsl_to_tgsi_visitor::emit_scalar(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004bea60 0000000000000100 t glsl_to_tgsi_visitor::emit_arl(ir_instruction*, st_dst_reg, st_src_reg)
00000000004beb60 00000000000002d8 t glsl_to_tgsi_visitor::visit(ir_variable*) [clone .part.0]
00000000004bee40 0000000000000040 T glsl_to_tgsi_visitor::visit(ir_variable*)
00000000004bee80 0000000000000104 T glsl_to_tgsi_visitor::visit(ir_loop*)
00000000004bef90 000000000000015c T glsl_to_tgsi_visitor::visit(ir_loop_jump*)
00000000004bf0f0 00000000000001e8 t glsl_to_tgsi_visitor::try_emit_mad(ir_expression*, int)
00000000004bf2e0 00000000000001a4 t glsl_to_tgsi_visitor::try_emit_mad_for_and_not(ir_expression*, int)
00000000004bf490 0000000000000b28 T glsl_to_tgsi_visitor::visit(ir_constant*)
00000000004bffc0 00000000000000a8 T glsl_to_tgsi_visitor::visit(ir_return*)
00000000004c0070 000000000000025c T glsl_to_tgsi_visitor::visit(ir_discard*)
00000000004c02d0 00000000000000a8 T glsl_to_tgsi_visitor::visit(ir_demote*)
00000000004c0380 00000000000001e0 T glsl_to_tgsi_visitor::visit(ir_if*)
00000000004c0560 00000000000000c0 T glsl_to_tgsi_visitor::visit(ir_emit_vertex*)
00000000004c0620 00000000000000c0 T glsl_to_tgsi_visitor::visit(ir_end_primitive*)
00000000004c06e0 00000000000000a8 T glsl_to_tgsi_visitor::visit(ir_barrier*)
00000000004c0790 0000000000005324 t glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)
00000000004c5ac0 0000000000000198 T glsl_to_tgsi_visitor::visit(ir_expression*)
00000000004c5c60 0000000000000218 t glsl_to_tgsi_visitor::process_move_condition(ir_rvalue*)
00000000004c5e80 0000000000000420 t glsl_to_tgsi_visitor::emit_block_mov(ir_assignment*, glsl_type const*, st_dst_reg*, st_src_reg*, st_src_reg*, bool)
00000000004c62a0 00000000000003c8 T glsl_to_tgsi_visitor::visit(ir_assignment*)
00000000004c6670 000000000000063c t glsl_to_tgsi_visitor::visit_ssbo_intrinsic(ir_call*)
00000000004c6cb0 000000000000024c t glsl_to_tgsi_visitor::visit_membar_intrinsic(ir_call*)
00000000004c6f00 0000000000000490 t glsl_to_tgsi_visitor::visit_shared_intrinsic(ir_call*)
00000000004c7390 00000000000001d8 t glsl_to_tgsi_visitor::visit_generic_intrinsic(ir_call*, tgsi_opcode)
00000000004c7570 00000000000003fc t glsl_to_tgsi_visitor::calc_deref_offsets(ir_dereference*, unsigned int*, unsigned short*, st_src_reg*, unsigned int*)
00000000004c7970 0000000000000184 t glsl_to_tgsi_visitor::get_deref_offsets(ir_dereference*, unsigned int*, unsigned int*, unsigned short*, st_src_reg*, bool)
00000000004c7b00 00000000000009a4 t glsl_to_tgsi_visitor::visit_atomic_counter_intrinsic(ir_call*)
00000000004c84b0 0000000000000bb4 t glsl_to_tgsi_visitor::visit_image_intrinsic(ir_call*)
00000000004c9070 0000000000000084 T glsl_to_tgsi_visitor::visit(ir_call*)
00000000004c9100 000000000000012c t glsl_to_tgsi_visitor::canonicalize_gather_offset(st_src_reg)
00000000004c9230 00000000000015bc T glsl_to_tgsi_visitor::visit(ir_texture*)
00000000004ca7f0 00000000000002a0 t glsl_to_tgsi_visitor::handle_bound_deref(ir_dereference*)
00000000004caa90 00000000000006f0 T glsl_to_tgsi_visitor::visit(ir_dereference_variable*)
00000000004cb180 0000000000000544 T glsl_to_tgsi_visitor::visit(ir_dereference_array*)
00000000004cb6d0 000000000000014c T glsl_to_tgsi_visitor::visit(ir_dereference_record*)
00000000004cb820 00000000000000e8 t glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004cb820 00000000000000e8 T glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004cb910 0000000000000080 t free_glsl_to_tgsi_visitor
00000000004cb990 0000000000000238 t glsl_to_tgsi_visitor::simplify_cmp()
00000000004cbbd0 0000000000000340 t glsl_to_tgsi_visitor::rename_temp_registers(rename_reg_pair*)
00000000004cbf10 00000000000000b8 t glsl_to_tgsi_visitor::get_first_temp_write(int*)
00000000004cbfd0 000000000000053c t glsl_to_tgsi_visitor::copy_propagate()
00000000004cc510 00000000000006dc t glsl_to_tgsi_visitor::eliminate_dead_code()
00000000004ccbf0 00000000000001a4 t glsl_to_tgsi_visitor::merge_two_dsts()
00000000004ccda0 0000000000000178 t glsl_to_tgsi_visitor::merge_registers()
00000000004ccf20 00000000000000ec t glsl_to_tgsi_visitor::renumber_registers()
00000000004cd010 00000000000000a4 t void test_indirect_access<st_src_reg>(st_src_reg const&, bool*)
00000000004cd0c0 0000000000000098 t void remap_array<st_src_reg>(st_src_reg&, int const*, bool const*)
00000000004cd160 00000000000004b0 t glsl_to_tgsi_visitor::split_arrays()
00000000004cd610 0000000000000968 t st_link_tgsi
00000000004cdf80 0000000000000060 t void std::__unguarded_linear_insert<inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls> >(inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls>)
00000000004cdfe0 00000000000000c8 t void std::__insertion_sort<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce0b0 000000000000016c t void std::__adjust_heap<inout_decl*, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, long, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce220 0000000000000104 t void std::__heap_select<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce330 0000000000000228 t void std::__introsort_loop<inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce560 00000000000022e4 t st_translate_program
00000000004d0850 0000000000000014 t tgsi_array_merge::sort_by_begin(array_live_range const&, array_live_range const&)
00000000004d0870 0000000000000018 t array_live_range::array_live_range()
00000000004d0870 0000000000000018 T array_live_range::array_live_range()
00000000004d0890 0000000000000020 t array_live_range::array_live_range(unsigned int, unsigned int)
00000000004d0890 0000000000000020 T array_live_range::array_live_range(unsigned int, unsigned int)
00000000004d08b0 0000000000000008 t array_live_range::set_live_range(int, int)
00000000004d08c0 0000000000000018 t array_live_range::set_access_mask(int)
00000000004d08e0 0000000000000060 t array_live_range::merge(array_live_range*, array_live_range*)
00000000004d0940 00000000000000c0 t array_live_range::interleave_into(array_live_range*)
00000000004d0a00 0000000000000064 t tgsi_array_merge::array_remapping::init_from(array_live_range const&)
00000000004d0a70 000000000000056c t tgsi_array_merge::remap_arrays(int, unsigned int*, exec_list*, tgsi_array_merge::array_remapping*)
00000000004d0fe0 0000000000000134 t void std::__move_median_to_first<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1120 000000000000007c t void std::__unguarded_linear_insert<array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d11a0 00000000000000e0 t void std::__insertion_sort<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1280 00000000000001cc t void std::__adjust_heap<array_live_range*, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, long, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1450 000000000000014c t void std::__heap_select<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d15a0 00000000000001a4 t void std::__introsort_loop<array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1750 00000000000003bc t tgsi_array_merge::get_array_remapping(int, array_live_range*, tgsi_array_merge::array_remapping*)
00000000004d1b10 0000000000000104 t merge_arrays(int, unsigned int*, exec_list*, array_live_range*)
00000000004d1c20 00000000000000b8 t dup_reladdr(st_src_reg const*)
00000000004d1ce0 0000000000000140 t st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004d1ce0 0000000000000140 T st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004d1e20 000000000000004c t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004d1e20 000000000000004c T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004d1e70 0000000000000034 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004d1e70 0000000000000034 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004d1eb0 0000000000000020 t st_src_reg::reset()
00000000004d1ed0 0000000000000010 t st_src_reg::st_src_reg()
00000000004d1ed0 0000000000000010 T st_src_reg::st_src_reg()
00000000004d1ee0 00000000000000dc t st_src_reg::operator=(st_src_reg const&)
00000000004d1fc0 00000000000000f0 t st_src_reg::st_src_reg(st_src_reg const&)
00000000004d1fc0 00000000000000f0 T st_src_reg::st_src_reg(st_src_reg const&)
00000000004d20b0 0000000000000118 t st_src_reg::st_src_reg(st_dst_reg)
00000000004d20b0 0000000000000118 T st_src_reg::st_src_reg(st_dst_reg)
00000000004d21d0 0000000000000130 t st_src_reg::get_abs()
00000000004d2300 0000000000000100 t st_dst_reg::st_dst_reg(st_src_reg)
00000000004d2300 0000000000000100 T st_dst_reg::st_dst_reg(st_src_reg)
00000000004d2400 000000000000003c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d2400 000000000000003c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d2440 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d2440 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d2470 0000000000000010 t st_dst_reg::st_dst_reg()
00000000004d2470 0000000000000010 T st_dst_reg::st_dst_reg()
00000000004d2480 00000000000000f0 t st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d2480 00000000000000f0 T st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d2570 0000000000000110 t st_dst_reg::operator=(st_dst_reg const&)
00000000004d2680 00000000000000cc t (anonymous namespace)::temp_comp_access::record_read(int, (anonymous namespace)::prog_scope*)
00000000004d2750 000000000000007c t (anonymous namespace)::array_access::record_access(int, (anonymous namespace)::prog_scope*, int)
00000000004d27d0 0000000000000160 t (anonymous namespace)::access_recorder::record_read(st_src_reg const&, int, (anonymous namespace)::prog_scope*)
00000000004d2930 000000000000012c t void std::__adjust_heap<(anonymous namespace)::register_merge_record*, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, long, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.0]
00000000004d2a60 0000000000000110 t void std::__insertion_sort<(anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.0]
00000000004d2b70 00000000000001ec t void std::__introsort_loop<(anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.0]
00000000004d2d60 000000000000018c t (anonymous namespace)::temp_comp_access::record_ifelse_write((anonymous namespace)::prog_scope const&)
00000000004d2ef0 00000000000000f4 t (anonymous namespace)::temp_comp_access::record_write(int, (anonymous namespace)::prog_scope*)
00000000004d2ff0 0000000000000e14 t get_temp_registers_required_live_ranges(void*, exec_list*, int, register_live_range*, int, array_live_range*)
00000000004d3e10 0000000000000248 t get_temp_registers_remapping(void*, int, register_live_range const*, rename_reg_pair*)
00000000004d4060 00000000000002b4 t src_register
00000000004d4320 00000000000001b0 t translate_src
00000000004d44d0 0000000000000bc4 t emit_wpos
00000000004d50a0 0000000000000090 t st_translate_texture_target
00000000004d5130 0000000000000020 t st_translate_texture_type
00000000004d5150 0000000000001adc t st_translate_mesa_program
00000000004d6c30 0000000000000088 T ast_array_specifier::print() const
00000000004d6cc0 00000000000008d4 t _mesa_ast_array_index_to_hir(void*, _mesa_glsl_parse_state*, ir_rvalue*, ir_rvalue*, YYLTYPE&, YYLTYPE&)
00000000004d75a0 0000000000000058 T ast_expression_bin::print() const
00000000004d7600 0000000000000010 t ast_expression::operator_string(ast_operators)
00000000004d7610 0000000000000030 t ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d7610 0000000000000030 T ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d7640 0000000000000074 T ast_function_expression::has_sequence_subexpression() const
00000000004d76c0 0000000000000a38 t convert_component(ir_rvalue*, glsl_type const*)
00000000004d8100 00000000000000d4 t implicitly_convert_component(ir_rvalue*&, glsl_base_type, _mesa_glsl_parse_state*)
00000000004d81e0 0000000000000078 t function_exists(_mesa_glsl_parse_state*, glsl_symbol_table*, char const*)
00000000004d8260 0000000000000158 t copy_index_derefs_to_temps(ir_instruction*, void*)
00000000004d83c0 000000000000018c t match_subroutine_by_name(char const*, exec_list*, _mesa_glsl_parse_state*, ir_variable**) [clone .constprop.0]
00000000004d8550 0000000000000158 t generate_array_index(void*, exec_list*, _mesa_glsl_parse_state*, YYLTYPE, ast_expression const*, ast_expression*, char const**, exec_list*)
00000000004d86b0 0000000000000104 t process_parameters(exec_list*, exec_list*, exec_list*, _mesa_glsl_parse_state*) [clone .constprop.0] [clone .isra.0]
00000000004d87c0 000000000000038c t process_array_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d8b50 00000000000002d8 t process_record_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d8e30 00000000000005a0 T ast_aggregate_initializer::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d93d0 0000000000000058 t glsl_type::column_type() const
00000000004d9430 00000000000000c0 t prototype_string(glsl_type const*, char const*, exec_list*)
00000000004d94f0 00000000000000b4 t print_function_prototypes(_mesa_glsl_parse_state*, YYLTYPE*, ir_function*)
00000000004d95b0 00000000000002b4 t ast_function_expression::handle_method(exec_list*, _mesa_glsl_parse_state*)
00000000004d9870 0000000000002698 T ast_function_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dbf10 0000000000000010 W read_from_write_only_variable_visitor::visit_enter(ir_expression*)
00000000004dbf20 0000000000000008 T ast_node::has_sequence_subexpression() const
00000000004dbf30 0000000000000004 T ast_node::set_is_lhs(bool)
00000000004dbf40 00000000000000fc T ast_expression::has_sequence_subexpression() const
00000000004dc040 0000000000000064 t is_varying_var(ir_variable*, gl_shader_stage)
00000000004dc0b0 0000000000000014 t compare_case_value(void const*, void const*)
00000000004dc0d0 0000000000000008 t key_contents(void const*)
00000000004dc0e0 0000000000000070 t ast_case_label_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dc150 0000000000000048 W interface_block_usage_visitor::visit(ir_dereference_variable*)
00000000004dc1a0 0000000000000010 T ast_warnings_toggle::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dc1b0 000000000000008c t validate_storage_for_sampler_image_types(ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dc240 00000000000001d0 t remove_per_vertex_blocks(exec_list*, _mesa_glsl_parse_state*, ir_variable_mode)
00000000004dc410 00000000000000c0 t validate_layout_qualifier_vertex_count(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*, unsigned int, unsigned int*, char const*)
00000000004dc4d0 00000000000000a4 t handle_tess_shader_input_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004dc580 00000000000000f0 t get_scalar_boolean_operand(exec_list*, _mesa_glsl_parse_state*, ast_expression*, int, char const*, bool*)
00000000004dc670 0000000000000128 t ast_case_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dc7a0 00000000000000a4 t ast_compound_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dc850 00000000000001b0 t validate_xfb_offset_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, int, glsl_type const*, unsigned int)
00000000004dca00 000000000000013c T ast_gs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dcb40 00000000000000f4 t handle_tess_ctrl_shader_output_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004dcc40 000000000000013c T ast_tcs_output_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dcd80 00000000000002d0 T ast_cs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dd050 0000000000000044 t validate_memory_qualifier_for_type(_mesa_glsl_parse_state*, YYLTYPE*, ast_type_qualifier const*, glsl_type const*) [clone .part.0]
00000000004dd0a0 000000000000026c t process_array_type(YYLTYPE*, glsl_type const*, ast_array_specifier*, _mesa_glsl_parse_state*)
00000000004dd310 0000000000000104 t constant_one_for_inc_dec(void*, glsl_type const*) [clone .isra.0]
00000000004dd420 000000000000028c t apply_implicit_conversion(glsl_type const*, ir_rvalue*&, _mesa_glsl_parse_state*) [clone .isra.0]
00000000004dd6b0 00000000000002b0 t validate_assignment(_mesa_glsl_parse_state*, YYLTYPE, ir_rvalue*, ir_rvalue*, bool)
00000000004dd960 00000000000001c8 t arithmetic_result_type(ir_rvalue*&, ir_rvalue*&, bool, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004ddb30 000000000000019c t modulus_result_type(ir_rvalue*&, ir_rvalue*&, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004ddcd0 00000000000000a4 W read_from_write_only_variable_visitor::visit(ir_dereference_variable*)
00000000004ddd80 0000000000000054 t validate_matrix_layout_for_type(_mesa_glsl_parse_state*, YYLTYPE*, glsl_type const*, ir_variable*) [clone .part.0]
00000000004ddde0 0000000000000308 t validate_interpolation_qualifier(_mesa_glsl_parse_state*, YYLTYPE*, glsl_interp_mode, ast_type_qualifier const*, glsl_type const*, ir_variable_mode)
00000000004de0f0 000000000000009c t validate_identifier(char const*, YYLTYPE, _mesa_glsl_parse_state*)
00000000004de190 0000000000000168 t shift_result_type(glsl_type const*, glsl_type const*, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004de300 0000000000000234 t bit_logic_result_type(ir_rvalue*&, ir_rvalue*&, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004de540 00000000000003fc t select_gles_precision(unsigned int, glsl_type const*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004de940 0000000000000928 t apply_type_qualifier_to_variable(ast_type_qualifier const*, ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*, bool)
00000000004df270 000000000000037c t ast_case_statement_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004df5f0 000000000000024c t apply_explicit_binding(_mesa_glsl_parse_state*, YYLTYPE*, ir_variable*, glsl_type const*, ast_type_qualifier const*)
00000000004df840 00000000000000ac t is_allowed_invariant(ir_variable*, _mesa_glsl_parse_state*) [clone .isra.0]
00000000004df8f0 00000000000003c4 t do_comparison(void*, int, ir_rvalue*, ir_rvalue*)
00000000004dfcc0 0000000000000468 t do_assignment(exec_list*, _mesa_glsl_parse_state*, char const*, ir_rvalue*, ir_rvalue*, ir_rvalue**, bool, bool, YYLTYPE)
00000000004e0130 0000000000000088 t ast_expression::set_is_lhs(bool)
00000000004e01c0 00000000000004ec t _mesa_ast_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e06b0 0000000000000008 T ast_node::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e06c0 0000000000000010 T ast_function_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e06d0 0000000000000010 T ast_aggregate_initializer::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e06e0 0000000000000108 t check_builtin_array_max_size(char const*, unsigned int, YYLTYPE, _mesa_glsl_parse_state*)
00000000004e07f0 0000000000000494 t get_variable_being_redeclared(ir_variable**, YYLTYPE, _mesa_glsl_parse_state*, bool, bool*)
00000000004e0c90 0000000000002180 t ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)
00000000004e2e10 0000000000000008 T ast_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2e20 0000000000000008 T ast_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e2e30 0000000000000030 T ast_expression_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2e60 0000000000000084 t ast_type_specifier::glsl_type(char const**, _mesa_glsl_parse_state*) const
00000000004e2ef0 0000000000001038 t ast_process_struct_or_iface_block_members(exec_list*, _mesa_glsl_parse_state*, exec_list*, glsl_struct_field**, bool, glsl_matrix_layout, bool, ir_variable_mode, ast_type_qualifier*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000004e3f30 0000000000000218 t ast_struct_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e4150 0000000000000190 t ast_type_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e42e0 00000000000013f4 T ast_interface_block::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e56e0 00000000000002b8 t ast_parameter_declarator::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e59a0 0000000000002aac T ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8450 0000000000000120 t ast_parameter_declarator::parameters_to_hir(exec_list*, bool, exec_list*, _mesa_glsl_parse_state*)
00000000004e8570 0000000000000b20 t ast_function::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9090 00000000000001b4 T ast_function_definition::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9250 0000000000000098 T ast_demote_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e92f0 0000000000000164 T ast_selection_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9460 00000000000001dc t ast_switch_statement::test_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9640 0000000000000044 T ast_switch_body::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9690 00000000000003fc T ast_case_label::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9a90 000000000000017c t ast_iteration_statement::condition_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9c10 00000000000004b0 T ast_jump_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea0c0 0000000000000488 T ast_switch_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea550 0000000000000150 T ast_iteration_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea6a0 0000000000000064 T ast_type_specifier::print() const
00000000004ea710 000000000000009c t ast_fully_specified_type::has_qualifiers(_mesa_glsl_parse_state*) const
00000000004ea7b0 0000000000000010 t ast_type_qualifier::has_interpolation() const
00000000004ea7c0 0000000000000040 t ast_type_qualifier::has_layout() const
00000000004ea800 0000000000000014 t ast_type_qualifier::has_storage() const
00000000004ea820 0000000000000010 t ast_type_qualifier::has_auxiliary_storage() const
00000000004ea830 0000000000000010 t ast_type_qualifier::has_memory() const
00000000004ea840 0000000000000020 t ast_type_qualifier::is_subroutine_decl() const
00000000004ea860 0000000000000990 t ast_type_qualifier::merge_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, bool, bool)
00000000004eb1f0 0000000000000158 t ast_type_qualifier::validate_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004eb350 00000000000000d0 t ast_type_qualifier::merge_into_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004eb420 0000000000000290 t ast_type_qualifier::validate_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004eb6b0 0000000000000344 t ast_type_qualifier::merge_into_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004eba00 0000000000000688 t ast_type_qualifier::validate_flags(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, char const*, char const*)
00000000004ec090 00000000000001bc t ast_layout_expression::process_qualifier_constant(_mesa_glsl_parse_state*, char const*, unsigned int*, bool)
00000000004ec250 00000000000000fc t process_qualifier_constant(_mesa_glsl_parse_state*, YYLTYPE*, char const*, ast_expression*, unsigned int*)
00000000004ec350 00000000000001b8 t ast_type_qualifier::push_to_global(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004ec510 0000000000000c4c t _mesa_glsl_initialize_types
00000000004ed160 00000000000000f8 t (anonymous namespace)::builtin_variable_generator::add_variable(char const*, glsl_type const*, int, ir_variable_mode, int)
00000000004ed260 00000000000000e8 t (anonymous namespace)::builtin_variable_generator::add_index_variable(char const*, glsl_type const*, int, ir_variable_mode, int, int) [clone .constprop.0] [clone .isra.0]
00000000004ed350 00000000000000c4 t (anonymous namespace)::builtin_variable_generator::add_const_ivec3(char const*, int, int, int) [clone .isra.0]
00000000004ed420 000000000000008c t (anonymous namespace)::builtin_variable_generator::add_const(char const*, int, int) [clone .isra.0]
00000000004ed4b0 00000000000001f0 t (anonymous namespace)::builtin_variable_generator::add_uniform(glsl_type const*, int, char const*) [clone .isra.0]
00000000004ed6a0 000000000000010c t (anonymous namespace)::builtin_variable_generator::add_varying(int, glsl_type const*, int, char const*)
00000000004ed7b0 0000000000002fdc t _mesa_glsl_initialize_variables(exec_list*, _mesa_glsl_parse_state*)
00000000004f0790 0000000000000174 t _mesa_ast_field_selection_to_hir(ast_expression const*, exec_list*, _mesa_glsl_parse_state*)
00000000004f0910 0000000000000044 t free_entry(hash_entry*)
00000000004f0960 0000000000000020 T ir_array_refcount_visitor::visit_enter(ir_function_signature*)
00000000004f0980 000000000000004c t ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004f0980 000000000000004c T ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004f09d0 000000000000003c t ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004f09d0 000000000000003c T ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004f0a10 00000000000000d8 t ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004f0a10 00000000000000d8 T ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004f0af0 00000000000000b0 T ir_array_refcount_visitor::visit(ir_dereference_variable*)
00000000004f0ba0 00000000000001ac T ir_array_refcount_visitor::visit_enter(ir_dereference_array*)
00000000004f0d50 0000000000000074 t ir_array_refcount_visitor::get_variable_entry(ir_variable*)
00000000004f0dd0 000000000000016c t call_for_basic_blocks(exec_list*, void (*)(ir_instruction*, ir_instruction*, void*), void*)
00000000004f0f40 0000000000000014 T ir_function_can_inline_visitor::visit_enter(ir_return*)
00000000004f0f60 00000000000000ac t can_inline(ir_call*)
00000000004f1010 000000000000000c t (anonymous namespace)::has_recursion_visitor::visit_leave(ir_function_signature*)
00000000004f1020 0000000000000110 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_call*)
00000000004f1130 0000000000000088 t destroy_links(exec_list*, (anonymous namespace)::function*) [clone .isra.0]
00000000004f11c0 00000000000000dc t remove_unlinked_functions(void const*, void*, void*)
00000000004f12a0 0000000000000098 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_function_signature*)
00000000004f1340 000000000000015c t detect_recursion_unlinked(_mesa_glsl_parse_state*, exec_list*)
00000000004f14a0 0000000000000144 t detect_recursion_linked(gl_shader_program*, exec_list*)
00000000004f15f0 000000000000006c t ir_rvalue_visitor::visit_leave(ir_expression*)
00000000004f1660 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_swizzle*)
00000000004f1660 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_dereference_record*)
00000000004f1690 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_discard*)
00000000004f1690 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_emit_vertex*)
00000000004f1690 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_end_primitive*)
00000000004f1690 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_if*)
00000000004f1690 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_return*)
00000000004f16c0 000000000000006c T ir_rvalue_enter_visitor::visit_enter(ir_expression*)
00000000004f1730 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_swizzle*)
00000000004f1730 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_dereference_record*)
00000000004f1760 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_discard*)
00000000004f1760 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_emit_vertex*)
00000000004f1760 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_end_primitive*)
00000000004f1760 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_if*)
00000000004f1760 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_return*)
00000000004f1790 0000000000000048 t ir_rvalue_visitor::visit_leave(ir_assignment*)
00000000004f17e0 0000000000000048 t ir_rvalue_enter_visitor::visit_enter(ir_assignment*)
00000000004f1830 000000000000005c T ir_rvalue_visitor::visit_leave(ir_dereference_array*)
00000000004f1890 000000000000005c T ir_rvalue_enter_visitor::visit_enter(ir_dereference_array*)
00000000004f18f0 000000000000006c t ir_rvalue_base_visitor::rvalue_visit(ir_expression*)
00000000004f1960 0000000000000100 t ir_rvalue_base_visitor::rvalue_visit(ir_texture*)
00000000004f1a60 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_texture*)
00000000004f1a70 0000000000000004 T ir_rvalue_enter_visitor::visit_enter(ir_texture*)
00000000004f1a80 0000000000000048 t ir_rvalue_base_visitor::rvalue_visit(ir_assignment*)
00000000004f1ad0 00000000000000b4 t ir_rvalue_base_visitor::rvalue_visit(ir_call*)
00000000004f1b90 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_call*)
00000000004f1ba0 0000000000000004 t ir_rvalue_enter_visitor::visit_enter(ir_call*)
00000000004f1bb0 0000000000000180 t mark(gl_program*, ir_variable*, int, int, gl_shader_stage)
00000000004f1d30 0000000000000018 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_discard*)
00000000004f1d50 0000000000000024 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_texture*)
00000000004f1d80 0000000000000020 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_function_signature*)
00000000004f1da0 00000000000000f8 t (anonymous namespace)::ir_set_program_inouts_visitor::mark_whole_variable(ir_variable*)
00000000004f1ea0 0000000000000040 t (anonymous namespace)::ir_set_program_inouts_visitor::visit(ir_dereference_variable*)
00000000004f1ee0 00000000000001d8 t (anonymous namespace)::ir_set_program_inouts_visitor::try_mark_partial_variable(ir_variable*, ir_rvalue*)
00000000004f20c0 0000000000000130 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_dereference_array*)
00000000004f21f0 0000000000000084 t do_set_program_inouts(exec_list*, gl_program*, gl_shader_stage)
00000000004f2280 000000000000005c t free_entry(hash_entry*)
00000000004f22e0 0000000000000020 T ir_variable_refcount_visitor::visit_enter(ir_function_signature*)
00000000004f2300 0000000000000088 T ir_variable_refcount_visitor::visit(ir_variable*)
00000000004f2390 0000000000000044 t ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f2390 0000000000000044 T ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f23e0 000000000000003c t ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f23e0 000000000000003c T ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f2420 0000000000000088 t ir_variable_refcount_visitor::get_variable_entry(ir_variable*)
00000000004f24b0 0000000000000064 T ir_variable_refcount_visitor::visit(ir_dereference_variable*)
00000000004f2520 0000000000000090 T ir_variable_refcount_visitor::visit_leave(ir_assignment*)
00000000004f25b0 0000000000000164 t process_block(void*, hash_table*, ir_variable*)
00000000004f2720 0000000000000080 T link_uniform_block_active_visitor::visit(ir_dereference_variable*)
00000000004f27a0 00000000000001d8 t process_arrays(void*, ir_dereference_array*, link_uniform_block_active*)
00000000004f2980 000000000000010c T link_uniform_block_active_visitor::visit_enter(ir_dereference_array*)
00000000004f2a90 0000000000000150 T link_uniform_block_active_visitor::visit(ir_variable*)
00000000004f2be0 00000000000000a4 t deref_output(ir_variable*)
00000000004f2c90 0000000000000068 t is_mode(ir_variable*, gl_advanced_blend_mode)
00000000004f2d00 0000000000000098 t lumv3(ir_variable*)
00000000004f2da0 00000000000000a0 t minv3(ir_variable*)
00000000004f2e40 00000000000000a0 t maxv3(ir_variable*)
00000000004f2ee0 00000000000004d8 t set_lum(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*)
00000000004f33c0 000000000000022c t set_lum_sat(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*, ir_variable*)
00000000004f35f0 0000000000001850 t calc_blend_result(ir_builder::ir_factory, ir_variable*, ir_variable*, ir_rvalue*, unsigned int)
00000000004f4e40 000000000000047c t lower_blend_equation_advanced(gl_linked_shader*, bool)
00000000004f52c0 00000000000005a8 t lower_buffer_access::lower_buffer_access::emit_access(void*, bool, ir_dereference*, ir_variable*, unsigned int, bool, glsl_type const*, glsl_interface_packing, unsigned int)
00000000004f5870 000000000000015c t lower_buffer_access::lower_buffer_access::is_dereferenced_thing_row_major(ir_rvalue const*)
00000000004f59d0 000000000000042c t lower_buffer_access::lower_buffer_access::setup_buffer_access(void*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_struct_field const**, glsl_interface_packing)
00000000004f5e00 00000000000000ac t replace_discard(void*, ir_variable*, ir_discard*)
00000000004f5eb0 0000000000000224 t (anonymous namespace)::lower_discard_visitor::visit_leave(ir_if*)
00000000004f60e0 0000000000000040 t lower_discard(exec_list*)
00000000004f6120 0000000000000014 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004f6140 00000000000001e8 t move_block_to_cond_assign(void*, ir_if*, ir_rvalue*, exec_list*, set*) [clone .isra.0]
00000000004f6330 00000000000002f0 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_leave(ir_if*)
00000000004f6620 000000000000013c t check_ir_node(ir_instruction*, void*)
00000000004f6760 00000000000000ac t lower_if_to_cond_assign(gl_shader_stage, exec_list*, unsigned int, unsigned int)
00000000004f6810 0000000000000170 t lower_64bit_integer_instructions(exec_list*, unsigned int)
00000000004f6980 000000000000018c t lower_64bit::expand_source(ir_builder::ir_factory&, ir_rvalue*, ir_variable**)
00000000004f6b10 0000000000000108 t lower_64bit::compact_destination(ir_builder::ir_factory&, glsl_type const*, ir_variable**)
00000000004f6c20 00000000000002cc t lower_64bit::lower_op_to_function_call(ir_instruction*, ir_expression*, ir_function_signature*)
00000000004f6ef0 000000000000012c t (anonymous namespace)::lower_64bit_visitor::handle_op(ir_expression*, char const*, ir_function_signature* (*)(void*, bool (*)(_mesa_glsl_parse_state const*)))
00000000004f7020 0000000000000164 t (anonymous namespace)::lower_64bit_visitor::handle_rvalue(ir_rvalue**)
00000000004f7190 0000000000000064 t mat_op_to_vec_predicate(ir_instruction*)
00000000004f7200 00000000000000b0 t (anonymous namespace)::ir_mat_op_to_vec_visitor::get_column(ir_dereference*, int)
00000000004f72b0 0000000000000108 t (anonymous namespace)::ir_mat_op_to_vec_visitor::do_mul_mat_scalar(ir_dereference*, ir_dereference*, ir_dereference*)
00000000004f73c0 0000000000000b34 t (anonymous namespace)::ir_mat_op_to_vec_visitor::visit_leave(ir_assignment*)
00000000004f7f00 000000000000005c t do_mat_op_to_vec(exec_list*)
00000000004f7f60 00000000000001f0 T lower_offset_array_visitor::handle_rvalue(ir_rvalue**)
00000000004f8150 0000000000000040 t lower_offset_arrays(exec_list*)
00000000004f8190 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f8190 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f81a0 0000000000000008 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f81b0 00000000000001bc t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec2(ir_rvalue*)
00000000004f8370 000000000000020c t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec2_to_uint(ir_rvalue*)
00000000004f8580 0000000000000410 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_half_1x16_nosign(ir_rvalue*, ir_rvalue*)
00000000004f8990 00000000000004f8 t (anonymous namespace)::lower_packing_builtins_visitor::pack_half_1x16_nosign(ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000004f8e90 00000000000003e8 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec4_to_uint(ir_rvalue*)
00000000004f9280 0000000000000450 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec4(ir_rvalue*)
00000000004f96d0 0000000000001460 t (anonymous namespace)::lower_packing_builtins_visitor::handle_rvalue(ir_rvalue**)
00000000004fab30 000000000000006c t lower_packing_builtins(exec_list*, int)
00000000004faba0 0000000000000074 t (anonymous namespace)::deref_replacer::handle_rvalue(ir_rvalue**)
00000000004fac20 000000000000005c t (anonymous namespace)::find_variable_index::visit_enter(ir_dereference_array*)
00000000004fac80 0000000000000128 t compare_index_block(ir_builder::ir_factory&, ir_variable*, unsigned int, unsigned int)
00000000004fadb0 0000000000000538 t (anonymous namespace)::switch_generator::generate(unsigned int, unsigned int, ir_builder::ir_factory&)
00000000004fb2f0 00000000000002ac t (anonymous namespace)::variable_index_to_cond_assign_visitor::convert_dereference_array(ir_dereference_array*, ir_assignment*, ir_dereference*)
00000000004fb5a0 00000000000001a0 t (anonymous namespace)::variable_index_to_cond_assign_visitor::handle_rvalue(ir_rvalue**)
00000000004fb740 0000000000000170 t (anonymous namespace)::variable_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004fb8b0 0000000000000078 t lower_variable_index_to_cond_assign(gl_shader_stage, exec_list*, bool, bool, bool, bool)
00000000004fb930 0000000000000250 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vec_index_to_cond_assign(void*, ir_rvalue*, ir_rvalue*, glsl_type const*) [clone .isra.0]
00000000004fbb80 00000000000000f4 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vector_extract_to_cond_assign(ir_rvalue*)
00000000004fbc80 000000000000002c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004fbcb0 0000000000000038 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_return*)
00000000004fbcf0 0000000000000138 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_call*)
00000000004fbe30 0000000000000044 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004fbe80 000000000000002c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_swizzle*)
00000000004fbeb0 0000000000000064 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_expression*)
00000000004fbf20 0000000000000040 t do_vec_index_to_cond_assign(exec_list*)
00000000004fbf60 00000000000003ac t (anonymous namespace)::lower_vector_visitor::handle_rvalue(ir_rvalue**)
00000000004fc310 0000000000000058 t lower_quadop_vector(exec_list*, bool)
00000000004fc370 0000000000000008 t hash_table_var_hash(void const*)
00000000004fc380 000000000000007c t copy(void*, ir_variable*, ir_variable*)
00000000004fc400 0000000000000120 t (anonymous namespace)::output_read_remover::visit(ir_dereference_variable*)
00000000004fc520 0000000000000078 t (anonymous namespace)::output_read_remover::visit_leave(ir_emit_vertex*)
00000000004fc520 0000000000000078 t (anonymous namespace)::output_read_remover::visit_leave(ir_return*)
00000000004fc5a0 00000000000000b4 t (anonymous namespace)::output_read_remover::visit_leave(ir_function_signature*)
00000000004fc660 0000000000000098 t lower_output_reads(unsigned int, exec_list*)
00000000004fc700 0000000000000194 t write_uniform_remap_table(blob*, unsigned int, gl_uniform_storage*, gl_uniform_storage**)
00000000004fc8a0 0000000000000044 t write_hash_table_entry(char const*, unsigned int, void*)
00000000004fc8f0 00000000000000d0 t write_buffer_block(blob*, gl_uniform_block*)
00000000004fc9c0 000000000000010c t read_uniform_remap_table(blob_reader*, gl_shader_program*, unsigned int*, gl_uniform_storage*)
00000000004fcad0 0000000000000144 t read_buffer_block(blob_reader*, gl_uniform_block*, gl_shader_program*)
00000000004fcc20 00000000000000ac t write_hash_table(blob*, string_to_uint_map*)
00000000004fccd0 00000000000000ac t read_hash_table(blob_reader*, string_to_uint_map*)
00000000004fcd80 0000000000000eec t serialize_glsl_program
00000000004fdc70 00000000000010f0 t deserialize_glsl_program
00000000004fed60 00000000000000f8 t sanitize_cb
00000000004fee60 000000000000002c t cso_construct_key
00000000004fee90 0000000000000068 t cso_insert_state
00000000004fef00 00000000000000d0 t cso_hash_find_data_from_template
00000000004fefd0 00000000000000e8 t cso_find_state_template
00000000004ff0c0 0000000000000064 t cso_cache_create
00000000004ff130 00000000000001f0 t cso_cache_delete
00000000004ff320 0000000000000008 t cso_cache_set_sanitize_callback
00000000004ff330 0000000000000040 t eat_opt_white
00000000004ff370 0000000000000090 t str_match_nocase_whole
00000000004ff400 00000000000000b4 t parse_int
00000000004ff4c0 00000000000000d4 t parse_register_file_bracket
00000000004ff5a0 00000000000000fc t parse_optional_swizzle
00000000004ff6a0 0000000000000190 t parse_opt_writemask
00000000004ff830 00000000000004a4 t parse_register_bracket
00000000004ffce0 0000000000000214 t parse_register_dcl_bracket
00000000004fff00 0000000000000e80 t parse_instruction
0000000000500d80 0000000000001bd4 t tgsi_text_translate
0000000000502960 0000000000000004 t translate_create
0000000000502970 0000000000000030 t translate_cache_create
00000000005029a0 0000000000000074 t translate_cache_destroy
0000000000502a20 0000000000000098 t translate_cache_find
0000000000502ac0 0000000000000014 t emit_R64G64B64A64_FLOAT
0000000000502ae0 000000000000001c t emit_R64G64B64_FLOAT
0000000000502b00 0000000000000010 t emit_R64G64_FLOAT
0000000000502b10 0000000000000010 t emit_R64_FLOAT
0000000000502b20 000000000000001c t emit_R32G32B32A32_FLOAT
0000000000502b40 000000000000001c t emit_R32G32B32_FLOAT
0000000000502b60 0000000000000014 t emit_R32G32_FLOAT
0000000000502b80 000000000000000c t emit_R32_FLOAT
0000000000502b90 0000000000000010 t emit_R32G32B32A32_USCALED
0000000000502ba0 000000000000001c t emit_R32G32B32_USCALED
0000000000502bc0 0000000000000010 t emit_R32G32_USCALED
0000000000502bd0 0000000000000010 t emit_R32_USCALED
0000000000502be0 0000000000000010 t emit_R32G32B32A32_SSCALED
0000000000502bf0 000000000000001c t emit_R32G32B32_SSCALED
0000000000502c10 0000000000000010 t emit_R32G32_SSCALED
0000000000502c20 0000000000000010 t emit_R32_SSCALED
0000000000502c30 0000000000000010 t emit_R32G32B32A32_UNORM
0000000000502c40 000000000000002c t emit_R32G32B32_UNORM
0000000000502c70 0000000000000010 t emit_R32G32_UNORM
0000000000502c80 000000000000001c t emit_R32_UNORM
0000000000502ca0 0000000000000010 t emit_R32G32B32A32_SNORM
0000000000502cb0 0000000000000020 t emit_R32G32B32_SNORM
0000000000502cd0 0000000000000010 t emit_R32G32_SNORM
0000000000502ce0 0000000000000010 t emit_R32_SNORM
0000000000502cf0 0000000000000014 t emit_R16G16B16A16_USCALED
0000000000502d10 0000000000000024 t emit_R16G16B16_USCALED
0000000000502d40 0000000000000018 t emit_R16G16_USCALED
0000000000502d60 0000000000000010 t emit_R16_USCALED
0000000000502d70 0000000000000014 t emit_R16G16B16A16_SSCALED
0000000000502d90 0000000000000024 t emit_R16G16B16_SSCALED
0000000000502dc0 0000000000000018 t emit_R16G16_SSCALED
0000000000502de0 0000000000000010 t emit_R16_SSCALED
0000000000502df0 0000000000000020 t emit_R16G16B16A16_UNORM
0000000000502e10 0000000000000040 t emit_R16G16B16_UNORM
0000000000502e50 0000000000000030 t emit_R16G16_UNORM
0000000000502e80 0000000000000020 t emit_R16_UNORM
0000000000502ea0 0000000000000020 t emit_R16G16B16A16_SNORM
0000000000502ec0 0000000000000040 t emit_R16G16B16_SNORM
0000000000502f00 0000000000000030 t emit_R16G16_SNORM
0000000000502f30 0000000000000020 t emit_R16_SNORM
0000000000502f50 0000000000000020 t emit_R8G8B8A8_USCALED
0000000000502f70 0000000000000028 t emit_R8G8B8_USCALED
0000000000502fa0 000000000000001c t emit_R8G8_USCALED
0000000000502fc0 0000000000000010 t emit_R8_USCALED
0000000000502fd0 0000000000000020 t emit_R8G8B8A8_SSCALED
0000000000502ff0 0000000000000028 t emit_R8G8B8_SSCALED
0000000000503020 000000000000001c t emit_R8G8_SSCALED
0000000000503040 0000000000000010 t emit_R8_SSCALED
0000000000503050 000000000000002c t emit_R8G8B8A8_UNORM
0000000000503080 000000000000002c t emit_R8G8B8_UNORM
00000000005030b0 000000000000002c t emit_R8G8_UNORM
00000000005030e0 000000000000001c t emit_R8_UNORM
0000000000503100 000000000000002c t emit_R8G8B8A8_SNORM
0000000000503130 000000000000002c t emit_R8G8B8_SNORM
0000000000503160 000000000000002c t emit_R8G8_SNORM
0000000000503190 000000000000001c t emit_R8_SNORM
00000000005031b0 000000000000001c t emit_R32G32B32A32_UINT
00000000005031d0 000000000000001c t emit_R32G32B32_UINT
00000000005031f0 0000000000000014 t emit_R32G32_UINT
0000000000503210 000000000000000c t emit_R32_UINT
0000000000503220 0000000000000010 t emit_R16G16B16A16_UINT
0000000000503230 0000000000000018 t emit_R16G16B16_UINT
0000000000503250 0000000000000010 t emit_R16G16_UINT
0000000000503260 000000000000000c t emit_R16_UINT
0000000000503270 000000000000001c t emit_R8G8B8A8_UINT
0000000000503290 000000000000001c t emit_R8G8B8_UINT
00000000005032b0 0000000000000014 t emit_R8G8_UINT
00000000005032d0 000000000000000c t emit_R8_UINT
00000000005032e0 000000000000001c t emit_R32G32B32A32_SINT
0000000000503300 000000000000001c t emit_R32G32B32_SINT
0000000000503320 0000000000000014 t emit_R32G32_SINT
0000000000503340 000000000000000c t emit_R32_SINT
0000000000503350 0000000000000010 t emit_R16G16B16A16_SINT
0000000000503360 0000000000000018 t emit_R16G16B16_SINT
0000000000503380 0000000000000010 t emit_R16G16_SINT
0000000000503390 000000000000000c t emit_R16_SINT
00000000005033a0 000000000000001c t emit_R8G8B8A8_SINT
00000000005033c0 000000000000001c t emit_R8G8B8_SINT
00000000005033e0 0000000000000014 t emit_R8G8_SINT
0000000000503400 000000000000000c t emit_R8_SINT
0000000000503410 000000000000004c t emit_A8R8G8B8_UNORM
0000000000503460 000000000000004c t emit_B8G8R8A8_UNORM
00000000005034b0 0000000000000104 t emit_B10G10R10A2_UNORM
00000000005035c0 00000000000000d0 t emit_B10G10R10A2_USCALED
0000000000503690 0000000000000104 t emit_B10G10R10A2_SNORM
00000000005037a0 00000000000000e0 t emit_B10G10R10A2_SSCALED
0000000000503880 0000000000000104 t emit_R10G10B10A2_UNORM
0000000000503990 00000000000000d0 t emit_R10G10B10A2_USCALED
0000000000503a60 0000000000000104 t emit_R10G10B10A2_SNORM
0000000000503b70 00000000000000e0 t emit_R10G10B10A2_SSCALED
0000000000503c50 0000000000000004 t emit_NULL
0000000000503c60 0000000000000044 t generic_set_buffer
0000000000503cb0 0000000000000004 t generic_release
0000000000503cc0 0000000000000140 t generic_run
0000000000503e00 000000000000014c t generic_run_elts8
0000000000503f50 000000000000014c t generic_run_elts16
00000000005040a0 000000000000014c t generic_run_elts
00000000005041f0 0000000000000044 t emit_R16G16B16A16_FLOAT
0000000000504240 0000000000000044 t emit_R16G16B16_FLOAT
0000000000504290 0000000000000038 t emit_R16G16_FLOAT
00000000005042d0 0000000000000028 t emit_R16_FLOAT
0000000000504300 00000000000006f0 t translate_generic_create
00000000005049f0 00000000000000bc t util_draw_vertex_buffer
0000000000504ab0 00000000000000a4 T u_default_buffer_subdata
0000000000504b60 00000000000000bc T u_default_texture_subdata
0000000000504c20 0000000000000008 T u_default_resource_get_handle
0000000000504c30 0000000000000004 T u_default_transfer_flush_region
0000000000504c40 0000000000000018 T u_resource_get_handle_vtbl
0000000000504c60 0000000000000010 T u_resource_destroy_vtbl
0000000000504c70 0000000000000010 T u_transfer_map_vtbl
0000000000504c80 0000000000000014 T u_transfer_flush_region_vtbl
0000000000504ca0 0000000000000014 T u_transfer_unmap_vtbl
0000000000504cc0 0000000000000008 t vl_create_decoder
0000000000504cd0 0000000000000008 t vl_video_buffer_is_format_supported
0000000000504ce0 0000000000000008 t vl_video_buffer_create
0000000000504cf0 0000000000000024 t nv50_miptree_get_handle
0000000000504d20 00000000000000a4 T nv50_miptree_destroy
0000000000504dd0 00000000000000a8 t nv50_tex_choose_tile_dims_helper
0000000000504e80 0000000000000114 t nv50_miptree_init_layout_linear
0000000000504fa0 00000000000000fc t nv50_miptree_from_handle
00000000005050a0 000000000000015c t nv50_surface_from_miptree
0000000000505200 0000000000000010 T nv50_invalidate_resource
0000000000505210 000000000000006c T nv50_surface_destroy
0000000000505280 0000000000000158 t nv50_surface_from_buffer
00000000005053e0 00000000000003a4 T nv50_sampler_state_create
0000000000505790 0000000000000004 W nv50_ir::Iterator::reset()
00000000005057a0 0000000000000008 W nv50_ir::Value::isUniform() const
00000000005057b0 0000000000000050 W nv50_ir::Target::parseDriverInfo(nv50_ir_prog_info const*)
0000000000505800 0000000000000018 T nv50_ir::Symbol::isUniform() const
0000000000505820 00000000000000b8 t nv50_ir::Value::interfers(nv50_ir::Value const*) const
00000000005058e0 0000000000000028 T nv50_ir::ImmediateValue::equals(nv50_ir::Value const*, bool) const
0000000000505910 0000000000000068 t _debug_printf
0000000000505980 000000000000008c T nv50_ir::Symbol::equals(nv50_ir::Value const*, bool) const
0000000000505a10 0000000000000064 T nv50_ir::Value::equals(nv50_ir::Value const*, bool) const
0000000000505a80 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
0000000000505b20 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000505ce0 0000000000000094 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::insert(void const*, void*)
0000000000505d80 0000000000000084 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::lookup(void*)
0000000000505e10 00000000000000a4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000505e10 00000000000000a4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000505ec0 00000000000000a4 W nv50_ir::Symbol::~Symbol()
0000000000505ec0 00000000000000a4 W nv50_ir::Symbol::~Symbol()
0000000000505f70 00000000000000a4 W nv50_ir::LValue::~LValue()
0000000000505f70 00000000000000a4 W nv50_ir::LValue::~LValue()
0000000000506020 00000000000000a0 W nv50_ir::ImmediateValue::~ImmediateValue()
00000000005060c0 00000000000000a0 W nv50_ir::Symbol::~Symbol()
0000000000506160 00000000000000a0 W nv50_ir::LValue::~LValue()
0000000000506200 000000000000031c T nv50_ir::Symbol::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000506520 000000000000030c T nv50_ir::ImmediateValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000506830 0000000000000320 T nv50_ir::LValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000506b50 0000000000000198 T nv50_ir::LValue::isUniform() const
0000000000506cf0 000000000000004c t nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000506cf0 000000000000004c T nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000506d40 0000000000000034 t nv50_ir::Modifier::operator*(nv50_ir::Modifier) const
0000000000506d80 00000000000001f0 t nv50_ir::ValueRef::getImmediate(nv50_ir::ImmediateValue&) const
0000000000506f70 000000000000005c t nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000506f70 000000000000005c T nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000506fd0 0000000000000058 t nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000506fd0 0000000000000058 T nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000507030 00000000000000f8 t nv50_ir::ValueDef::set(nv50_ir::Value*)
0000000000507130 0000000000000008 t nv50_ir::ValueDef::~ValueDef()
0000000000507130 0000000000000008 T nv50_ir::ValueDef::~ValueDef()
0000000000507140 000000000000010c t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
0000000000507250 00000000000001ec t nv50_ir::ValueDef::mayReplace(nv50_ir::ValueRef const&)
0000000000507440 000000000000005c T nv50_ir::Value::Value()
0000000000507440 000000000000005c t nv50_ir::Value::Value()
00000000005074a0 000000000000013c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
00000000005074a0 000000000000013c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
00000000005075e0 000000000000013c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
00000000005075e0 000000000000013c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000507720 000000000000012c t nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000507720 000000000000012c T nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000507850 000000000000012c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000507850 000000000000012c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000507980 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
0000000000507980 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
0000000000507ac0 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000507ac0 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000507c00 00000000000000e0 t nv50_ir::ImmediateValue::isInteger(int) const
0000000000507ce0 000000000000006c t nv50_ir::ImmediateValue::isNegative() const
0000000000507d50 0000000000000038 t nv50_ir::ImmediateValue::isPow2() const
0000000000507d90 00000000000000ac t nv50_ir::ImmediateValue::applyLog2()
0000000000507e40 000000000000010c t nv50_ir::ImmediateValue::compare(nv50_ir::CondCode, float) const
0000000000507f50 000000000000031c t nv50_ir::Instruction::defCount(unsigned int, bool) const
0000000000508270 000000000000031c t nv50_ir::Instruction::srcCount(unsigned int, bool) const
0000000000508590 00000000000003fc t nv50_ir::Instruction::canCommuteDefSrc(nv50_ir::Instruction const*) const
0000000000508990 00000000000003fc t nv50_ir::Instruction::canCommuteDefDef(nv50_ir::Instruction const*) const
0000000000508d90 0000000000000050 t nv50_ir::Instruction::isCommutationLegal(nv50_ir::Instruction const*) const
0000000000508de0 0000000000000210 t nv50_ir::TexInstruction::translateImgFormat(pipe_format)
0000000000508ff0 0000000000000120 t nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000508ff0 0000000000000120 T nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000509110 00000000000000b0 t nv50_ir::Program::releaseInstruction(nv50_ir::Instruction*)
00000000005091c0 000000000000008c t nv50_ir::Program::releaseValue(nv50_ir::Value*)
0000000000509250 0000000000000114 t std::_Deque_base<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_initialize_map(unsigned long)
0000000000509370 0000000000000114 t std::_Deque_base<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_initialize_map(unsigned long)
0000000000509490 0000000000000154 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000509490 0000000000000154 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
00000000005095f0 0000000000000038 t nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005095f0 0000000000000038 T nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000509630 0000000000000098 t nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
0000000000509630 0000000000000098 T nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
00000000005096d0 00000000000000e8 t nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005096d0 00000000000000e8 T nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005097c0 00000000000001b8 t std::_Hashtable<nv50_ir::ValueRef*, nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*>, std::__detail::_Identity, std::equal_to<nv50_ir::ValueRef*>, std::hash<nv50_ir::ValueRef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::ValueRef*, false>*, unsigned long)
0000000000509980 0000000000000244 t nv50_ir::ValueRef::set(nv50_ir::Value*)
0000000000509bd0 0000000000000010 t nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000509bd0 0000000000000010 T nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000509be0 0000000000000008 t nv50_ir::ValueRef::~ValueRef()
0000000000509be0 0000000000000008 T nv50_ir::ValueRef::~ValueRef()
0000000000509bf0 0000000000000040 t nv50_ir::ValueRef::set(nv50_ir::ValueRef const&)
0000000000509c30 00000000000000cc t nv50_ir::ValueDef::replace(nv50_ir::ValueRef const&, bool)
0000000000509d00 000000000000010c t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
0000000000509e10 000000000000004c t nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
0000000000509e10 000000000000004c T nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
0000000000509e60 00000000000001a0 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_reallocate_map(unsigned long, bool)
000000000050a000 0000000000000224 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_default_append(unsigned long)
000000000050a230 0000000000000368 t nv50_ir::Instruction::setDef(int, nv50_ir::Value*)
000000000050a5a0 00000000000001a0 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_reallocate_map(unsigned long, bool)
000000000050a740 0000000000000234 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_default_append(unsigned long)
000000000050a980 0000000000000368 t nv50_ir::Instruction::setSrc(int, nv50_ir::Value*)
000000000050acf0 0000000000000480 t nv50_ir::Instruction::~Instruction()
000000000050acf0 0000000000000480 t nv50_ir::Instruction::~Instruction()
000000000050b170 0000000000000020 T nv50_ir::Instruction::~Instruction()
000000000050b190 0000000000000100 t nv50_ir::TexInstruction::~TexInstruction()
000000000050b190 0000000000000100 T nv50_ir::TexInstruction::~TexInstruction()
000000000050b290 0000000000000020 T nv50_ir::TexInstruction::~TexInstruction()
000000000050b2b0 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050b2b0 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050b2c0 0000000000000034 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050b300 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050b300 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050b310 0000000000000034 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050b350 00000000000000e0 t nv50_ir::Instruction::setSrc(int, nv50_ir::ValueRef const&)
000000000050b430 00000000000007f8 t nv50_ir::Instruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050bc30 000000000000026c T nv50_ir::TexInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050bea0 00000000000001b0 T nv50_ir::CmpInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050c050 00000000000002c4 T nv50_ir::FlowInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050c320 0000000000000354 t nv50_ir::Instruction::setIndirect(int, int, nv50_ir::Value*)
000000000050c680 00000000000003a8 t nv50_ir::Instruction::takeExtraSources(int, nv50_ir::Value**)
000000000050ca30 0000000000000218 t nv50_ir::Instruction::setPredicate(nv50_ir::CondCode, nv50_ir::Value*)
000000000050cc50 0000000000000070 t nv50_ir::Instruction::putExtraSources(int, nv50_ir::Value**)
000000000050ccc0 0000000000000154 t nv50_ir::TexInstruction::setIndirectR(nv50_ir::Value*)
000000000050ce20 0000000000000154 t nv50_ir::TexInstruction::setIndirectS(nv50_ir::Value*)
000000000050cf80 0000000000000360 t nv50_ir::Instruction::swapSources(int, int)
000000000050d2e0 0000000000000748 t nv50_ir::Instruction::moveSources(int, int)
000000000050da30 0000000000000418 t nv50_ir::Program::~Program()
000000000050da30 0000000000000418 T nv50_ir::Program::~Program()
000000000050de50 0000000000000254 t nv50_ir_generate_code
000000000050e0b0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Function*)
000000000050e0c0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::BasicBlock*)
000000000050e0d0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Instruction*)
000000000050e0e0 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
000000000050e180 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050e340 00000000000000f8 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000050e440 00000000000000f8 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
000000000050e540 0000000000000204 t nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050e540 0000000000000204 T nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050e750 0000000000000120 t nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050e750 0000000000000120 T nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050e870 0000000000000028 t nv50_ir::BasicBlock::idom() const
000000000050e8a0 0000000000000068 t nv50_ir::BasicBlock::insertBefore(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050e910 00000000000000a8 t nv50_ir::BasicBlock::insertHead(nv50_ir::Instruction*)
000000000050e9c0 00000000000000bc t nv50_ir::BasicBlock::insertTail(nv50_ir::Instruction*)
000000000050ea80 0000000000000230 t nv50_ir::BasicBlock::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050ecb0 000000000000005c t nv50_ir::BasicBlock::insertAfter(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050ed10 00000000000000e0 t nv50_ir::BasicBlock::remove(nv50_ir::Instruction*)
000000000050edf0 0000000000000088 t nv50_ir::BasicBlock::permuteAdjacent(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050ee80 0000000000000108 t nv50_ir::BasicBlock::splitCommon(nv50_ir::Instruction*, nv50_ir::BasicBlock*, bool)
000000000050ef90 0000000000000064 t nv50_ir::BasicBlock::splitBefore(nv50_ir::Instruction*, bool)
000000000050f000 000000000000006c t nv50_ir::BasicBlock::splitAfter(nv50_ir::Instruction*, bool)
000000000050f070 000000000000003c t nv50_ir::BasicBlock::dominatedBy(nv50_ir::BasicBlock*)
000000000050f0b0 0000000000000090 t nv50_ir::BasicBlock::initiatesSimpleConditional() const
000000000050f140 000000000000002c t nv50_ir::Function::setEntry(nv50_ir::BasicBlock*)
000000000050f170 000000000000001c t nv50_ir::Function::setExit(nv50_ir::BasicBlock*)
000000000050f190 000000000000019c t nv50_ir::Function::orderInstructions(nv50_ir::ArrayList&)
000000000050f330 00000000000000e4 t nv50_ir::Function::buildLiveSets()
000000000050f420 00000000000000e4 t nv50_ir::Function::buildDefSets()
000000000050f510 0000000000000170 t nv50_ir::Pass::doRun(nv50_ir::Function*, bool, bool)
000000000050f680 0000000000000010 t nv50_ir::Pass::run(nv50_ir::Function*, bool, bool)
000000000050f690 00000000000000e0 t nv50_ir::Pass::doRun(nv50_ir::Program*, bool, bool)
000000000050f770 000000000000000c t nv50_ir::Pass::run(nv50_ir::Program*, bool, bool)
000000000050f780 00000000000004e4 t nv50_ir::Function::~Function()
000000000050f780 00000000000004e4 T nv50_ir::Function::~Function()
000000000050fc70 0000000000000008 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::BasicBlock*)
000000000050fc80 0000000000000068 t _debug_printf
000000000050fcf0 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
000000000050fd90 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050ff50 00000000000000a0 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_unique_pos(int const&) [clone .isra.0]
000000000050fff0 000000000000006c t (anonymous namespace)::Converter::adjustTempIndex(int, int&, int&) const [clone .isra.0]
0000000000510060 00000000000000f0 t void std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::emplace_back<nv50_ir::Value*>(nv50_ir::Value*&&) [clone .isra.0]
0000000000510150 000000000000003c t tgsi::Instruction::SrcRegister::getIndirect(int) const [clone .isra.0]
0000000000510190 0000000000000180 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::pair<int, int> > >*) [clone .isra.0]
0000000000510310 0000000000000180 t std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*) [clone .isra.0]
0000000000510490 0000000000000180 t std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [clone .isra.0]
0000000000510610 0000000000000180 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::_M_erase(std::_Rb_tree_node<nv50_ir::BuildUtil::Location>*) [clone .isra.0]
0000000000510790 0000000000000180 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000510910 0000000000000180 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
0000000000510a90 0000000000000094 t std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >*) [clone .isra.0]
0000000000510b30 0000000000000180 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000510cb0 000000000000024c t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000510f00 00000000000001a8 t (anonymous namespace)::Converter::shiftAddress(nv50_ir::Value*)
00000000005110b0 00000000000002e4 t (anonymous namespace)::Converter::makeSym(unsigned int, int, int, int, unsigned int)
00000000005113a0 000000000000008c t (anonymous namespace)::Converter::srcToSym(tgsi::Instruction::SrcRegister, int)
0000000000511430 0000000000000270 t (anonymous namespace)::Converter::storeDst(tgsi::Instruction::DstRegister, int, nv50_ir::Value*, nv50_ir::Value*)
00000000005116a0 0000000000000720 t (anonymous namespace)::Converter::handleFBFETCH(nv50_ir::Value**)
0000000000511dc0 0000000000000f4c t (anonymous namespace)::Converter::fetchSrc(tgsi::Instruction::SrcRegister, int, nv50_ir::Value*)
0000000000512d10 0000000000000b64 t (anonymous namespace)::Converter::fetchSrc(int, int)
0000000000513880 0000000000000208 t (anonymous namespace)::Converter::buildDot(int)
0000000000513a90 000000000000054c t (anonymous namespace)::Converter::handleLIT(nv50_ir::Value**)
0000000000513fe0 0000000000000100 t (anonymous namespace)::Converter::getImageCoords(std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >&, int)
00000000005140e0 0000000000000cd0 t (anonymous namespace)::Converter::handleINTERP(nv50_ir::Value**)
0000000000514db0 0000000000000504 t (anonymous namespace)::Converter::handleATOM(nv50_ir::Value**, nv50_ir::DataType, unsigned short)
00000000005152c0 00000000000005cc t (anonymous namespace)::Converter::handleSTORE()
0000000000515890 0000000000000134 t nv50_ir::MemoryPool::allocate()
00000000005159d0 0000000000000198 t nv50_ir::BuildUtil::getScratch(int, nv50_ir::DataFile)
0000000000515b70 0000000000000194 t nv50_ir::BuildUtil::getSSA(int, nv50_ir::DataFile)
0000000000515d10 00000000000001e8 t nv50_ir::BuildUtil::mkOp(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*)
0000000000515f00 0000000000000054 t tgsi::Instruction::texOffsetMask() const
0000000000515f60 00000000000001d4 t tgsi::Instruction::srcMask(unsigned int) const
0000000000516140 0000000000000194 t tgsi::Instruction::inferDstType() const
00000000005162e0 0000000000000098 t tgsi::Instruction::getSetCond() const
0000000000516380 0000000000000058 t tgsi::Instruction::checkDstSrcAliasing() const
00000000005163e0 0000000000000148 t tgsi::Source::~Source()
00000000005163e0 0000000000000148 T tgsi::Source::~Source()
0000000000516530 0000000000000184 t tgsi::Source::scanProperty(tgsi_full_property const*)
00000000005166c0 0000000000000a64 t tgsi::Source::scanDeclaration(tgsi_full_declaration const*)
0000000000517130 0000000000000384 t tgsi::Source::scanInstructionSrc(tgsi::Instruction const&, tgsi::Instruction::SrcRegister const&, unsigned int)
00000000005174c0 000000000000054c t tgsi::Source::scanInstruction(tgsi_full_instruction const*)
0000000000517a10 0000000000000088 t tgsi::Instruction::getTexture(tgsi::Source const*, int) const
0000000000517aa0 00000000000001e4 t (anonymous namespace)::Converter::setTexRS(nv50_ir::TexInstruction*, unsigned int&, int, int)
0000000000517c90 00000000000001ec t (anonymous namespace)::Converter::handleTXQ(nv50_ir::Value**, nv50_ir::TexQuery, int)
0000000000517e80 0000000000000dc8 t (anonymous namespace)::Converter::handleTEX(nv50_ir::Value**, int, int, int, int, int, int)
0000000000518c50 0000000000000384 t (anonymous namespace)::Converter::handleTXF(nv50_ir::Value**, int, int) [clone .constprop.0]
0000000000518fe0 00000000000000e0 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::find(nv50_ir::BuildUtil::Location const&) const
00000000005190c0 000000000000062c t (anonymous namespace)::Converter::exportOutputs() [clone .constprop.0]
00000000005196f0 0000000000000170 t std::vector<tgsi::Source::TextureView, std::allocator<tgsi::Source::TextureView> >::_M_default_append(unsigned long)
0000000000519860 000000000000017c W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
00000000005199e0 0000000000000170 t std::vector<tgsi::Source::MemoryFile, std::allocator<tgsi::Source::MemoryFile> >::_M_default_append(unsigned long)
0000000000519b50 000000000000017c t std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_default_append(unsigned long)
0000000000519cd0 00000000000005e0 t (anonymous namespace)::Converter::handleLOAD(nv50_ir::Value**)
000000000051a2b0 0000000000005ed4 t (anonymous namespace)::Converter::handleInstruction(tgsi_full_instruction const*) [clone .isra.0]
0000000000520190 0000000000000620 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
00000000005207b0 000000000000074c t tgsi::Source::scanSource()
0000000000520f00 0000000000000b90 t nv50_ir::Program::makeFromTGSI(nv50_ir_prog_info*)
0000000000521a90 00000000000000e0 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::find(nv50_ir::BuildUtil::Location const&) const
0000000000521b70 00000000000009d4 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::Function*)
0000000000522550 0000000000000010 W nv50_ir::DFSIterator::end() const
0000000000522560 0000000000000018 W nv50_ir::DFSIterator::next()
0000000000522580 0000000000000010 W nv50_ir::DFSIterator::get() const
0000000000522590 0000000000000008 W nv50_ir::DFSIterator::reset()
00000000005225a0 0000000000000010 W nv50_ir::CFGIterator::get() const
00000000005225b0 0000000000000010 W nv50_ir::CFGIterator::end() const
00000000005225c0 0000000000000018 W nv50_ir::CFGIterator::next()
00000000005225e0 0000000000000008 W nv50_ir::CFGIterator::reset()
00000000005225f0 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
00000000005225f0 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000522600 000000000000003c W nv50_ir::CFGIterator::~CFGIterator()
0000000000522640 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000522640 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000522650 000000000000003c W nv50_ir::DFSIterator::~DFSIterator()
0000000000522690 0000000000000070 t _debug_printf.constprop.0
0000000000522700 0000000000000014 t nv50_ir::Graph::Graph()
0000000000522700 0000000000000014 t nv50_ir::Graph::Graph()
0000000000522720 0000000000000034 t nv50_ir::Graph::insert(nv50_ir::Graph::Node*)
0000000000522760 0000000000000090 t nv50_ir::Graph::Edge::unlink()
00000000005227f0 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
00000000005227f0 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000522800 000000000000006c t nv50_ir::Graph::Node::detach(nv50_ir::Graph::Node*)
0000000000522870 0000000000000088 t nv50_ir::Graph::Node::cut()
0000000000522900 00000000000005c4 t nv50_ir::DFSIterator::search(nv50_ir::Graph::Node*, bool, int)
0000000000522ed0 000000000000013c t nv50_ir::Graph::iteratorDFS(bool)
0000000000523010 000000000000007c t nv50_ir::Graph::~Graph()
0000000000523010 000000000000007c t nv50_ir::Graph::~Graph()
0000000000523090 0000000000000020 T nv50_ir::Graph::~Graph()
00000000005230b0 0000000000000208 t nv50_ir::CFGIterator::search(nv50_ir::Graph::Node*, int)
00000000005232c0 00000000000000d8 t nv50_ir::Graph::iteratorCFG()
00000000005233a0 000000000000011c t nv50_ir::Graph::classifyDFS(nv50_ir::Graph::Node*, int&)
00000000005234c0 000000000000009c t nv50_ir::Graph::classifyEdges()
0000000000523560 0000000000000114 t nv50_ir::Graph::Node::attach(nv50_ir::Graph::Node*, nv50_ir::Graph::Edge::Type)
0000000000523680 00000000000002f0 t nv50_ir::Graph::findLightestPathWeight(nv50_ir::Graph::Node*, nv50_ir::Graph::Node*, std::vector<int, std::allocator<int> > const&)
0000000000523970 0000000000000008 W nv50_ir::Target::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000523980 000000000000003c T nv50_ir::FlatteningPass::visit(nv50_ir::Function*)
00000000005239c0 0000000000000008 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::lookup(void*)
00000000005239d0 0000000000000004 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::insert(void const*, void*)
00000000005239e0 0000000000000070 t _debug_printf.constprop.0
0000000000523a50 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
0000000000523af0 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000523cb0 0000000000000180 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000523e30 0000000000000118 t nv50_ir::post_ra_dead(nv50_ir::Instruction*)
0000000000523f50 0000000000000178 t nv50_ir::ConstantFolding::unary(nv50_ir::Instruction*, nv50_ir::ImmediateValue const&) [clone .part.0] [clone .isra.0]
00000000005240d0 00000000000000a4 W nv50_ir::Value::~Value()
00000000005240d0 00000000000000a4 t nv50_ir::Value::~Value()
0000000000524180 00000000000000a0 W nv50_ir::Value::~Value()
0000000000524220 00000000000000f8 t nv50_ir::Instruction::defExists(unsigned int) const
0000000000524320 00000000000000f8 t nv50_ir::Instruction::srcExists(unsigned int) const
0000000000524420 000000000000005c t nv50_ir::Value::getUniqueInsn() const
0000000000524480 00000000000000b4 t nv50_ir::Instruction::getPredicate() const
0000000000524540 0000000000000160 t nv50_ir::Instruction::isDead() const
00000000005246a0 000000000000010c t nv50_ir::Modifier::applyTo(nv50_ir::ImmediateValue&) const
00000000005247b0 00000000000000a4 t nv50_ir::ConstantFolding::opnd3(nv50_ir::Instruction*, nv50_ir::ImmediateValue&)
0000000000524860 0000000000000078 t nv50_ir::MemoryOpt::reset()
00000000005248e0 000000000000014c t nv50_ir::MemoryOpt::getList(nv50_ir::Instruction const*)
0000000000524a30 000000000000018c t nv50_ir::FlatteningPass::tryPropagateBranch(nv50_ir::BasicBlock*)
0000000000524bc0 00000000000001ac t nv50_ir::Instruction::isActionEqual(nv50_ir::Instruction const*) const
0000000000524d70 000000000000053c t nv50_ir::Program::optimizeSSA(int)
00000000005252b0 0000000000000078 t nv50_ir::Program::optimizePostRA(int)
0000000000525330 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>::operator[](long) const
00000000005253d0 00000000000001f0 t nv50_ir::AlgebraicOpt::handleSLCT(nv50_ir::Instruction*)
00000000005255c0 00000000000003d0 t nv50_ir::MemoryOpt::findRecord(nv50_ir::Instruction const*, bool, bool&) const
0000000000525990 000000000000006c t nv50_ir::LoadPropagation::isAttribOrSharedLoad(nv50_ir::Instruction*)
0000000000525a00 000000000000029c t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000525ca0 0000000000000444 t nv50_ir::ConstantFolding::createMul(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, long, nv50_ir::Value*)
00000000005260f0 00000000000002f4 t nv50_ir::AlgebraicOpt::handleABS(nv50_ir::Instruction*)
00000000005263f0 00000000000001f4 t nv50_ir::AlgebraicOpt::handleRCP(nv50_ir::Instruction*)
00000000005265f0 00000000000001dc t nv50_ir::AlgebraicOpt::handleCVT_CVT(nv50_ir::Instruction*)
00000000005267d0 000000000000014c t nv50_ir::LoadPropagation::isImmdLoad(nv50_ir::Instruction*)
0000000000526920 00000000000001d0 t nv50_ir::ConstantFolding::findOriginForTestWithZero(nv50_ir::Value*)
0000000000526af0 0000000000000518 t nv50_ir::AlgebraicOpt::tryADDToMADOrSAD(nv50_ir::Instruction*, nv50_ir::operation)
0000000000527010 00000000000001e8 t nv50_ir::AlgebraicOpt::handleADD(nv50_ir::Instruction*)
0000000000527200 00000000000006a0 t nv50_ir::AlgebraicOpt::handleCVT_EXTBF(nv50_ir::Instruction*)
00000000005278a0 0000000000000348 t nv50_ir::AlgebraicOpt::handleSUCLAMP(nv50_ir::Instruction*)
0000000000527bf0 0000000000000324 t nv50_ir::LateAlgebraicOpt::tryADDToSHLADD(nv50_ir::Instruction*)
0000000000527f20 0000000000000184 t nv50_ir::LateAlgebraicOpt::handleADD(nv50_ir::Instruction*)
00000000005280b0 000000000000051c t nv50_ir::MemoryOpt::replaceLdFromLd(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
00000000005285d0 0000000000000288 t nv50_ir::PostRaLoadPropagation::handleMADforNVC0(nv50_ir::Instruction*)
0000000000528860 000000000000094c T nv50_ir::IndirectPropagation::visit(nv50_ir::BasicBlock*)
00000000005291b0 00000000000004a8 t nv50_ir::MemoryOpt::replaceLdFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000529660 00000000000006d8 t nv50_ir::MemoryOpt::replaceStFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000529d40 0000000000000238 t nv50_ir::MemoryOpt::addRecord(nv50_ir::Instruction*)
0000000000529f80 0000000000000258 t nv50_ir::MemoryOpt::Record::overlaps(nv50_ir::Instruction const*) const
000000000052a1e0 00000000000000f4 t nv50_ir::MemoryOpt::lockStores(nv50_ir::Instruction*)
000000000052a2e0 0000000000000188 t nv50_ir::MemoryOpt::purgeRecords(nv50_ir::Instruction*, nv50_ir::DataFile)
000000000052a470 00000000000005d8 t nv50_ir::MemoryOpt::combineSt(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
000000000052aa50 0000000000000130 t nv50_ir::FlatteningPass::removeFlow(nv50_ir::Instruction*)
000000000052ab80 00000000000008fc t nv50_ir::DeadCodeElim::checkSplitLoad(nv50_ir::Instruction*)
000000000052b480 000000000000029c t nv50_ir::LateAlgebraicOpt::handleMULMAD(nv50_ir::Instruction*) [clone .part.0]
000000000052b720 000000000000007c T nv50_ir::LateAlgebraicOpt::visit(nv50_ir::Instruction*)
000000000052b7a0 0000000000000340 t nv50_ir::LoadPropagation::checkSwapSrc01(nv50_ir::Instruction*)
000000000052bae0 00000000000004a4 T nv50_ir::LoadPropagation::visit(nv50_ir::BasicBlock*)
000000000052bf90 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>::operator[](long) const
000000000052c030 00000000000002a4 t nv50_ir::AlgebraicOpt::handleCVT_NEG(nv50_ir::Instruction*)
000000000052c2e0 0000000000000374 t nv50_ir::Split64BitOpPreRA::split64MulMad(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::DataType)
000000000052c660 0000000000000078 T nv50_ir::Split64BitOpPreRA::visit(nv50_ir::BasicBlock*)
000000000052c6e0 0000000000000564 t nv50_ir::MemoryOpt::combineLd(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
000000000052cc50 0000000000000480 t nv50_ir::MemoryOpt::runOpt(nv50_ir::BasicBlock*)
000000000052d0d0 000000000000002c T nv50_ir::MemoryOpt::visit(nv50_ir::BasicBlock*)
000000000052d100 0000000000000268 T nv50_ir::CopyPropagation::visit(nv50_ir::BasicBlock*)
000000000052d370 00000000000001f0 T nv50_ir::MergeSplits::visit(nv50_ir::BasicBlock*)
000000000052d560 00000000000001ec t nv50_ir::AlgebraicOpt::handleMINMAX(nv50_ir::Instruction*)
000000000052d750 0000000000000480 t nv50_ir::ConstantFolding::tryCollapseChainedMULs(nv50_ir::Instruction*, int, nv50_ir::ImmediateValue&)
000000000052dbd0 00000000000002ac t nv50_ir::AlgebraicOpt::handleNEG(nv50_ir::Instruction*)
000000000052de80 0000000000000288 t nv50_ir::AlgebraicOpt::handleEXTBF_RDSV(nv50_ir::Instruction*)
000000000052e110 00000000000001dc t nv50_ir::Instruction::isNop() const
000000000052e2f0 000000000000017c t nv50_ir::FlatteningPass::predicateInstructions(nv50_ir::BasicBlock*, nv50_ir::Value*, nv50_ir::CondCode)
000000000052e470 0000000000000724 t nv50_ir::FlatteningPass::tryPredicateConditional(nv50_ir::BasicBlock*)
000000000052eba0 000000000000014c T nv50_ir::FlatteningPass::visit(nv50_ir::BasicBlock*)
000000000052ecf0 0000000000000344 t nv50_ir::PostRaLoadPropagation::handleMADforNV50(nv50_ir::Instruction*)
000000000052f040 0000000000000054 T nv50_ir::PostRaLoadPropagation::visit(nv50_ir::Instruction*)
000000000052f0a0 00000000000002d4 T nv50_ir::DeadCodeElim::visit(nv50_ir::BasicBlock*)
000000000052f380 0000000000002d7c t nv50_ir::ConstantFolding::opnd(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, int)
0000000000532100 000000000000048c T nv50_ir::ModifierFolding::visit(nv50_ir::BasicBlock*)
0000000000532590 00000000000004cc t nv50_ir::AlgebraicOpt::handleLOGOP(nv50_ir::Instruction*)
0000000000532a60 00000000000001a4 T nv50_ir::AlgebraicOpt::visit(nv50_ir::BasicBlock*)
0000000000532c10 00000000000009c8 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
00000000005335e0 00000000000006d0 T nv50_ir::ConstantFolding::visit(nv50_ir::BasicBlock*)
0000000000533cb0 000000000000044c t nv50_ir::Instruction::isResultEqual(nv50_ir::Instruction const*) const
0000000000534100 0000000000000390 T nv50_ir::GlobalCSE::visit(nv50_ir::BasicBlock*)
0000000000534490 0000000000000744 T nv50_ir::LocalCSE::visit(nv50_ir::BasicBlock*)
0000000000534be0 0000000000000068 t _debug_printf
0000000000534c50 0000000000000188 t nv50_ir::Modifier::print(char*, unsigned long) const
0000000000534de0 00000000000001a0 T nv50_ir::LValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000534f80 00000000000001dc T nv50_ir::ImmediateValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000535160 00000000000002c0 t nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType) const
0000000000535420 0000000000000010 T nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::DataType) const
0000000000535430 00000000000012c0 t nv50_ir::Instruction::print() const
00000000005366f0 0000000000000040 t nv50_ir::value_cmp(nv50_ir::ValueRef*, nv50_ir::ValueRef*)
0000000000536730 0000000000000068 t _debug_printf
00000000005367a0 0000000000000168 t nv50_ir::RegAlloc::InsertConstraintsPass::isScalarTexGM107(nv50_ir::TexInstruction*) [clone .part.0]
0000000000536910 0000000000000078 t std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const&, unsigned long) const [clone .isra.0]
0000000000536990 00000000000002a0 t std::pair<std::__detail::_Node_iterator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, false, true>, bool> std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace_uniq<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*> >(std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*>&&) [clone .isra.0]
0000000000536c30 00000000000001d0 t nv50_ir::GCRA::checkInterference(nv50_ir::GCRA::RIG_Node const*, nv50_ir::Graph::EdgeIterator&) [clone .isra.0]
0000000000536e00 0000000000000114 t nv50_ir::isShortRegOp(nv50_ir::Instruction*)
0000000000536f20 000000000000009c t nv50_ir::RegisterSet::init(nv50_ir::Target const*)
0000000000536fc0 0000000000000068 t nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000536fc0 0000000000000068 T nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000537030 000000000000007c t nv50_ir::RegisterSet::testOccupy(nv50_ir::DataFile, int, unsigned int)
00000000005370b0 00000000000000a4 t nv50_ir::RegAlloc::BuildIntervalsPass::addLiveRange(nv50_ir::Value*, nv50_ir::BasicBlock const*, int)
0000000000537160 0000000000000820 t nv50_ir::RegAlloc::PhiMovesPass::splitEdges(nv50_ir::BasicBlock*)
0000000000537980 000000000000061c T nv50_ir::RegAlloc::PhiMovesPass::visit(nv50_ir::BasicBlock*)
0000000000537fa0 0000000000000560 t nv50_ir::RegAlloc::buildLiveSets(nv50_ir::BasicBlock*)
0000000000538500 00000000000000d4 t nv50_ir::RegAlloc::BuildIntervalsPass::collectLiveValues(nv50_ir::BasicBlock*)
00000000005385e0 00000000000007c8 T nv50_ir::RegAlloc::BuildIntervalsPass::visit(nv50_ir::BasicBlock*)
0000000000538db0 000000000000013c t nv50_ir::GCRA::RIG_Node::init(nv50_ir::RegisterSet const&, nv50_ir::LValue*)
0000000000538ef0 000000000000033c t nv50_ir::GCRA::coalesceValues(nv50_ir::Value*, nv50_ir::Value*, bool)
0000000000539230 0000000000000440 t nv50_ir::GCRA::makeCompound(nv50_ir::Instruction*, bool)
0000000000539670 0000000000000fc0 t nv50_ir::GCRA::doCoalesce(nv50_ir::ArrayList&, unsigned int)
000000000053a630 00000000000000dc t nv50_ir::GCRA::coalesce(nv50_ir::ArrayList&)
000000000053a710 0000000000000128 t nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
000000000053a710 0000000000000128 T nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
000000000053a840 0000000000000534 t nv50_ir::GCRA::buildRIG(nv50_ir::ArrayList&)
000000000053ad80 0000000000000184 t nv50_ir::GCRA::calculateSpillWeights()
000000000053af10 000000000000008c t nv50_ir::GCRA::simplifyEdge(nv50_ir::GCRA::RIG_Node*, nv50_ir::GCRA::RIG_Node*)
000000000053afa0 0000000000000374 t nv50_ir::SpillCodeInserter::assignSlot(nv50_ir::Interval const&, unsigned int)
000000000053b320 0000000000000328 t nv50_ir::GCRA::selectRegisters()
000000000053b650 0000000000000084 t nv50_ir::SpillCodeInserter::offsetSlot(nv50_ir::Value*, nv50_ir::LValue const*)
000000000053b6e0 0000000000000840 t nv50_ir::SpillCodeInserter::spill(nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::LValue*)
000000000053bf20 0000000000000874 t nv50_ir::SpillCodeInserter::unspill(nv50_ir::Instruction*, nv50_ir::LValue*, nv50_ir::Value*)
000000000053c7a0 000000000000056c t nv50_ir::GCRA::resolveSplitsAndMerges()
000000000053cd10 0000000000000338 t nv50_ir::GCRA::cleanup(bool)
000000000053d050 0000000000000164 t nv50_ir::RegAlloc::InsertConstraintsPass::textureMask(nv50_ir::TexInstruction*)
000000000053d1c0 000000000000018c t nv50_ir::RegAlloc::InsertConstraintsPass::addHazard(nv50_ir::Instruction*, nv50_ir::ValueRef const*)
000000000053d350 0000000000000744 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*, int, int)
000000000053daa0 0000000000000118 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*)
000000000053dbc0 00000000000004fc t nv50_ir::RegAlloc::InsertConstraintsPass::condenseSrcs(nv50_ir::Instruction*, int, int)
000000000053e0c0 0000000000000114 t nv50_ir::RegAlloc::InsertConstraintsPass::handleScalarTexGM107(nv50_ir::TexInstruction*)
000000000053e1e0 0000000000000558 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintGM107(nv50_ir::TexInstruction*)
000000000053e740 00000000000003b4 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVE0(nv50_ir::TexInstruction*)
000000000053eb00 00000000000001d8 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVC0(nv50_ir::TexInstruction*)
000000000053ece0 0000000000000ad4 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMove(nv50_ir::Instruction*, int)
000000000053f7c0 0000000000000798 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNV50(nv50_ir::TexInstruction*)
000000000053ff60 0000000000000574 T nv50_ir::RegAlloc::InsertConstraintsPass::visit(nv50_ir::BasicBlock*)
00000000005404e0 0000000000000418 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMoves()
0000000000540900 00000000000000d0 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005409d0 00000000000001a0 t std::deque<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_reallocate_map(unsigned long, bool)
0000000000540b70 00000000000011c8 T nv50_ir::RegAlloc::ArgumentMovesPass::visit(nv50_ir::BasicBlock*)
0000000000541d40 00000000000001a0 W std::deque<unsigned int, std::allocator<unsigned int> >::_M_reallocate_map(unsigned long, bool)
0000000000541ee0 0000000000000180 t nv50_ir::GCRA::simplifyNode(nv50_ir::GCRA::RIG_Node*)
0000000000542060 0000000000000114 t nv50_ir::GCRA::simplify()
0000000000542180 0000000000000164 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005422f0 0000000000000200 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005424f0 0000000000000704 t nv50_ir::SpillCodeInserter::run(std::__cxx11::list<std::pair<nv50_ir::Value*, nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value*, nv50_ir::Value*> > > const&)
0000000000542c00 0000000000000740 t nv50_ir::GCRA::allocateRegisters(nv50_ir::ArrayList&)
0000000000543340 0000000000000230 t nv50_ir::GCRA::~GCRA()
0000000000543340 0000000000000230 T nv50_ir::GCRA::~GCRA()
0000000000543570 000000000000043c t nv50_ir::RegAlloc::execFunc()
00000000005439b0 00000000000000e8 t nv50_ir::RegAlloc::exec()
0000000000543aa0 0000000000000054 t nv50_ir::Program::registerAllocation()
0000000000543b00 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000543b00 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000543b10 0000000000000034 W nv50_ir::DominatorTree::~DominatorTree()
0000000000543b50 0000000000000090 t nv50_ir::DominatorTree::buildDFS(nv50_ir::Graph::Node*)
0000000000543be0 00000000000000ac t nv50_ir::DominatorTree::squash(int)
0000000000543c90 00000000000003b0 t nv50_ir::DominatorTree::build()
0000000000544040 0000000000000168 t nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
0000000000544040 0000000000000168 T nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
00000000005441b0 0000000000000184 t nv50_ir::DominatorTree::findDominanceFrontiers()
0000000000544340 0000000000000410 t nv50_ir::Function::buildLiveSetsPreSSA(nv50_ir::BasicBlock*, int)
0000000000544750 00000000000001d4 t nv50_ir::Function::buildDefSetsPreSSA(nv50_ir::BasicBlock*, int)
0000000000544930 0000000000000090 t nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
0000000000544930 0000000000000090 T nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
00000000005449c0 000000000000007c t nv50_ir::RenamePass::~RenamePass()
00000000005449c0 000000000000007c T nv50_ir::RenamePass::~RenamePass()
0000000000544a40 0000000000000320 t nv50_ir::RenamePass::mkUndefined(nv50_ir::Value*)
0000000000544d60 0000000000000bf4 t nv50_ir::RenamePass::search(nv50_ir::BasicBlock*)
0000000000545960 0000000000000508 t nv50_ir::Function::convertToSSA()
0000000000545e70 00000000000000c4 t nv50_ir::Program::convertToSSA()
0000000000545f40 0000000000000068 t _debug_printf
0000000000545fb0 00000000000000b4 t nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Function*)
0000000000546070 0000000000000454 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::BasicBlock*)
00000000005464d0 000000000000015c T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Program*)
0000000000546630 0000000000000048 t nv50_ir::Target::create(unsigned int)
0000000000546680 0000000000000018 t nv50_ir::Target::destroy(nv50_ir::Target*)
00000000005466a0 0000000000000014 T nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
00000000005466a0 0000000000000014 t nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
00000000005466c0 00000000000000f8 t nv50_ir::Program::emitSymbolTable(nv50_ir_prog_info*)
00000000005467c0 000000000000022c t nv50_ir::Program::emitBinary(nv50_ir_prog_info*)
00000000005469f0 0000000000000100 t nv50_ir::CodeEmitter::addReloc(nv50_ir::RelocEntry::Type, int, unsigned int, unsigned int, int)
0000000000546af0 00000000000000e0 t nv50_ir::CodeEmitter::addInterp(int, int, void (*)(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&))
0000000000546bd0 00000000000000bc t nv50_ir_relocate_code
0000000000546c90 0000000000000074 t nv50_ir_apply_fixups
0000000000546d10 000000000000007c t nv50_ir_get_target_library
0000000000546d90 000000000000000c W nv50_ir::DLList::Iterator::get() const
0000000000546da0 0000000000000010 W nv50_ir::DLList::Iterator::end() const
0000000000546db0 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000546db0 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000546dc0 0000000000000034 t nv50_ir::DLList::Iterator::erase()
0000000000546e00 0000000000000008 W nv50_ir::DLList::Iterator::~Iterator()
0000000000546e10 0000000000000068 t nv50_ir::DLList::Iterator::insert(void*)
0000000000546e80 0000000000000068 t _debug_printf
0000000000546ef0 000000000000007c W nv50_ir::DLList::Iterator::next()
0000000000546f70 0000000000000048 t nv50_ir::DLList::clear()
0000000000546fc0 0000000000000090 t nv50_ir::Stack::moveTo(nv50_ir::Stack&)
0000000000547050 0000000000000038 t nv50_ir::Interval::~Interval()
0000000000547050 0000000000000038 T nv50_ir::Interval::~Interval()
0000000000547090 000000000000003c t nv50_ir::Interval::clear()
00000000005470d0 0000000000000174 t nv50_ir::Interval::extend(int, int)
0000000000547250 0000000000000040 t nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000547250 0000000000000040 T nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000547290 0000000000000060 t nv50_ir::Interval::overlaps(nv50_ir::Interval const&) const
00000000005472f0 0000000000000038 t nv50_ir::Interval::insert(nv50_ir::Interval const&)
0000000000547330 0000000000000058 t nv50_ir::Interval::unify(nv50_ir::Interval&)
0000000000547390 000000000000006c t nv50_ir::Interval::print() const
0000000000547400 0000000000000048 t nv50_ir::BitSet::andNot(nv50_ir::BitSet const&)
0000000000547450 0000000000000048 t nv50_ir::BitSet::operator|=(nv50_ir::BitSet const&)
00000000005474a0 00000000000000e8 t nv50_ir::BitSet::allocate(unsigned int, bool)
0000000000547590 000000000000004c t nv50_ir::BitSet::popCount() const
00000000005475e0 0000000000000050 t nv50_ir::BitSet::fill(unsigned int)
0000000000547630 0000000000000068 t nv50_ir::BitSet::setOr(nv50_ir::BitSet*, nv50_ir::BitSet*)
00000000005476a0 00000000000001f0 t nv50_ir::BitSet::findFreeRange(unsigned int, unsigned int) const
0000000000547890 0000000000000018 T nv50_ir::TargetGM107::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005478b0 0000000000000010 T nv50_ir::TargetGM107::getBuiltinOffset(int) const
00000000005478c0 0000000000000080 T nv50_ir::TargetGM107::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000547940 0000000000000058 T nv50_ir::TargetGM107::isReuseSupported(nv50_ir::Instruction const*) const
00000000005479a0 0000000000000008 T nv50_ir::TargetGM107::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
00000000005479b0 000000000000000c T nv50_ir::TargetGM107::isCS2RSV(nv50_ir::SVSemantic) const
00000000005479c0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000005479c0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000005479d0 0000000000000004 T nv50_ir::TargetGM107::getCodeEmitter(nv50_ir::Program::Type)
00000000005479e0 0000000000000008 W nv50_ir::TargetGM107::~TargetGM107()
00000000005479f0 00000000000000c4 T nv50_ir::TargetGM107::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000547ac0 00000000000002bc T nv50_ir::TargetGM107::getReadLatency(nv50_ir::Instruction const*) const
0000000000547d80 0000000000000348 T nv50_ir::TargetGM107::isBarrierRequired(nv50_ir::Instruction const*) const
00000000005480d0 0000000000000328 T nv50_ir::TargetGM107::getLatency(nv50_ir::Instruction const*) const
0000000000548400 0000000000000040 t nv50_ir::getTargetGM107(unsigned int)
0000000000548440 000000000000006c T nv50_ir::TargetNVC0::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005484b0 0000000000000054 T nv50_ir::TargetNVC0::getBuiltinOffset(int) const
0000000000548510 000000000000014c t nv50_ir::TargetNVC0::initProps(nv50_ir::opProperties const*, int)
0000000000548660 00000000000002e8 t nv50_ir::TargetNVC0::initOpInfo()
0000000000548950 0000000000000034 T nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000548950 0000000000000034 t nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000548990 00000000000000c4 T nv50_ir::TargetNVC0::getFileSize(nv50_ir::DataFile) const
0000000000548a60 0000000000000018 T nv50_ir::TargetNVC0::getFileUnit(nv50_ir::DataFile) const
0000000000548a80 00000000000000e4 T nv50_ir::TargetNVC0::getSVAddress(nv50_ir::DataFile, nv50_ir::Symbol const*) const
0000000000548b70 00000000000003f8 T nv50_ir::TargetNVC0::insnCanLoad(nv50_ir::Instruction const*, int, nv50_ir::Instruction const*) const
0000000000548f70 00000000000000e8 T nv50_ir::TargetNVC0::insnCanLoadOffset(nv50_ir::Instruction const*, int, int) const
0000000000549060 0000000000000084 T nv50_ir::TargetNVC0::isAccessSupported(nv50_ir::DataFile, nv50_ir::DataType) const
00000000005490f0 0000000000000040 T nv50_ir::TargetNVC0::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000549130 0000000000000270 T nv50_ir::TargetNVC0::isModSupported(nv50_ir::Instruction const*, int, nv50_ir::Modifier) const
00000000005493a0 00000000000000cc T nv50_ir::TargetNVC0::mayPredicate(nv50_ir::Instruction const*, nv50_ir::Value const*) const
0000000000549470 0000000000000120 T nv50_ir::TargetNVC0::isSatSupported(nv50_ir::Instruction const*) const
0000000000549590 0000000000000070 T nv50_ir::TargetNVC0::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000549600 0000000000000178 T nv50_ir::TargetNVC0::getLatency(nv50_ir::Instruction const*) const
0000000000549780 0000000000000090 T nv50_ir::TargetNVC0::getThroughput(nv50_ir::Instruction const*) const
0000000000549810 0000000000000304 T nv50_ir::TargetNVC0::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
0000000000549b20 000000000000005c t nvc0_decoder_bsp_begin
0000000000549b80 00000000000001d4 t nvc0_decoder_bsp_next
0000000000549d60 0000000000000398 t nvc0_decoder_bsp_end
000000000054a100 0000000000000040 t util_hash_crc32
000000000054a140 00000000000001e0 t _mesa_parse_arb_fragment_program
000000000054a320 000000000000013c t _mesa_parse_arb_vertex_program
000000000054a460 00000000000000e4 t clear_cache
000000000054a550 0000000000000094 t rehash
000000000054a5f0 000000000000005c t _mesa_new_program_cache
000000000054a650 0000000000000030 t _mesa_delete_program_cache
000000000054a680 0000000000000030 t _mesa_delete_shader_cache
000000000054a6b0 00000000000000e8 t _mesa_search_program_cache
000000000054a7a0 0000000000000110 t _mesa_program_cache_insert
000000000054a8b0 0000000000000110 t _mesa_shader_cache_insert
000000000054a9c0 00000000000000ac t _mesa_init_instructions
000000000054aa70 000000000000001c t _mesa_copy_instructions
000000000054aa90 000000000000001c t _mesa_num_inst_src_regs
000000000054aab0 000000000000001c t _mesa_num_inst_dst_regs
000000000054aad0 000000000000005c t _mesa_opcode_string
000000000054ab30 0000000000000084 t get_value.isra.0
000000000054abc0 0000000000000034 t src_regs_are_same.isra.0
000000000054ac00 00000000000005ec t _mesa_constant_fold
000000000054b1f0 000000000000007c t add_state_reference
000000000054b270 00000000000000dc t make_error_string
000000000054b350 00000000000000a4 t yyerror
000000000054b400 0000000000000088 t validate_inputs
000000000054b490 000000000000013c t declare_variable
000000000054b5d0 00000000000000f4 t initialize_symbol_from_param.isra.0
000000000054b6d0 00000000000000fc t initialize_symbol_from_state.isra.0
000000000054b7d0 0000000000000094 t asm_instruction_ctor.constprop.0
000000000054b870 00000000000000f0 t asm_instruction_copy_ctor
000000000054b960 000000000000039c t yysyntax_error
000000000054bd00 0000000000002b78 t yyparse.isra.0
000000000054e880 000000000000034c t _mesa_parse_arb_program
000000000054ebd0 00000000000000b4 t init_velement_64bit
000000000054ec90 00000000000004f0 T st_update_array
000000000054f180 0000000000000134 t st_bind_atomics
000000000054f2c0 00000000000000dc t st_bind_hw_atomic_buffers.part.0
000000000054f3a0 0000000000000018 T st_bind_vs_atomics
000000000054f3c0 0000000000000018 T st_bind_fs_atomics
000000000054f3e0 0000000000000018 T st_bind_gs_atomics
000000000054f400 0000000000000018 T st_bind_tcs_atomics
000000000054f420 0000000000000018 T st_bind_tes_atomics
000000000054f440 0000000000000024 T st_bind_cs_atomics
000000000054f470 0000000000000010 T st_bind_hw_atomic_buffers
000000000054f480 000000000000017c t translate_blend
000000000054f600 00000000000004dc T st_update_blend
000000000054fae0 0000000000000030 T st_update_blend_color
000000000054fb10 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054fb10 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054fb20 0000000000000008 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054fb30 0000000000000124 T ir_expression_flattening_visitor::handle_rvalue(ir_rvalue**)
000000000054fc60 0000000000000074 t do_expression_flattening(exec_list*, bool (*)(ir_instruction*))
000000000054fce0 0000000000000024 t prolog
000000000054fd10 0000000000000088 t report_error
000000000054fda0 00000000000000b4 t iter_immediate
000000000054fe60 000000000000006c t regs_hash_destroy
000000000054fed0 0000000000000074 t iter_property
000000000054ff50 000000000000008c t report_warning.constprop.0
000000000054ffe0 00000000000001d8 t check_register_usage.isra.0
00000000005501c0 00000000000002cc t iter_instruction
0000000000550490 0000000000000098 t check_and_declare
0000000000550530 00000000000001d8 t iter_declaration
0000000000550710 00000000000000dc t epilog
00000000005507f0 00000000000000fc t tgsi_sanity_check
00000000005508f0 0000000000000074 t nouveau_vp3_bsp_begin
0000000000550970 0000000000000094 t nouveau_vp3_bsp_next
0000000000550a10 0000000000000348 t nouveau_vp3_bsp_end
0000000000550d60 0000000000000104 t nouveau_vp3_handle_references
0000000000550e70 00000000000001a0 t nouveau_vp3_fill_picparm_mpeg4_vp.isra.0
0000000000551010 0000000000000448 t nouveau_vp3_fill_picparm_h264_vp.isra.0
0000000000551460 000000000000062c t nouveau_vp3_vp_caps
0000000000551a90 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
0000000000551b30 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000551cf0 0000000000000180 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000551e70 0000000000000038 t nv50_ir::BuildUtil::BuildUtil()
0000000000551e70 0000000000000038 T nv50_ir::BuildUtil::BuildUtil()
0000000000551eb0 0000000000000038 T nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
0000000000551eb0 0000000000000038 t nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
0000000000551ef0 0000000000000210 t nv50_ir::BuildUtil::mkOp1(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*)
0000000000552100 0000000000000238 t nv50_ir::BuildUtil::mkOp2(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000552340 000000000000024c t nv50_ir::BuildUtil::mkOp3(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000552590 0000000000000234 t nv50_ir::BuildUtil::mkLoad(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Symbol*, nv50_ir::Value*)
00000000005527d0 0000000000000240 t nv50_ir::BuildUtil::mkStore(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Symbol*, nv50_ir::Value*, nv50_ir::Value*)
0000000000552a10 0000000000000370 t nv50_ir::BuildUtil::mkFetch(nv50_ir::Value*, nv50_ir::DataType, nv50_ir::DataFile, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000552d80 0000000000000364 t nv50_ir::BuildUtil::mkInterp(unsigned int, nv50_ir::Value*, int, nv50_ir::Value*)
00000000005530f0 00000000000001fc t nv50_ir::BuildUtil::mkMov(nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType)
00000000005532f0 0000000000000438 t nv50_ir::BuildUtil::mkMovToReg(int, nv50_ir::Value*)
0000000000553730 0000000000000408 t nv50_ir::BuildUtil::mkMovFromReg(nv50_ir::Value*, int)
0000000000553b40 0000000000000220 t nv50_ir::BuildUtil::mkCvt(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*)
0000000000553d60 0000000000000288 t nv50_ir::BuildUtil::mkCmp(nv50_ir::operation, nv50_ir::CondCode, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000553ff0 00000000000002a8 t nv50_ir::BuildUtil::mkTex(nv50_ir::operation, nv50_ir::TexTarget, unsigned short, unsigned short, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&)
00000000005542a0 0000000000000040 t nv50_ir::BuildUtil::mkQuadop(unsigned char, nv50_ir::Value*, unsigned char, nv50_ir::Value*, nv50_ir::Value*)
00000000005542e0 00000000000005ac t nv50_ir::BuildUtil::mkSplit(nv50_ir::Value**, unsigned char, nv50_ir::Value*)
0000000000554890 0000000000000220 t nv50_ir::BuildUtil::mkFlow(nv50_ir::operation, void*, nv50_ir::CondCode, nv50_ir::Value*)
0000000000554ab0 00000000000004ac t nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)
0000000000554f60 000000000000022c t nv50_ir::BuildUtil::mkImm(unsigned int)
0000000000555190 0000000000000008 t nv50_ir::BuildUtil::mkImm(float)
00000000005551a0 0000000000000178 t nv50_ir::BuildUtil::mkImm(double)
0000000000555320 0000000000000198 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, float)
00000000005554c0 0000000000000290 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, double)
0000000000555750 0000000000000190 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, unsigned int)
00000000005558e0 00000000000001cc t nv50_ir::BuildUtil::mkSymbol(nv50_ir::DataFile, signed char, nv50_ir::DataType, unsigned int)
0000000000555ab0 0000000000000198 t nv50_ir::BuildUtil::mkSysVal(nv50_ir::SVSemantic, unsigned int)
0000000000555c50 00000000000001ec t nv50_ir::BuildUtil::DataArray::setup(unsigned int, unsigned int, unsigned int, int, int, int, nv50_ir::DataFile, signed char)
0000000000555e40 00000000000001e4 t nv50_ir::BuildUtil::DataArray::mkSymbol(int, int)
0000000000556030 00000000000008f4 t nv50_ir::BuildUtil::split64BitOpPostRA(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::Value*)
0000000000556930 00000000000001bc t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_get_insert_unique_pos(nv50_ir::BuildUtil::Location const&)
0000000000556af0 00000000000001fc t nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>::insert(nv50_ir::BuildUtil::Location const&, nv50_ir::Value* const&)
0000000000556cf0 0000000000000440 t nv50_ir::BuildUtil::DataArray::acquire(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int)
0000000000557130 00000000000005c4 t nv50_ir::BuildUtil::DataArray::load(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*)
0000000000557700 0000000000000290 t nv50_ir::BuildUtil::DataArray::store(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000557990 00000000000000c8 t std::_Rb_tree_node_base* std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_copy<false, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node&) [clone .isra.0]
0000000000557a60 00000000000000d8 t std::_Rb_tree_node_base* std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_copy<false, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node&) [clone .isra.0]
0000000000557b40 0000000000000180 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000557cc0 0000000000000180 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
0000000000557e40 0000000000000038 T nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
0000000000557e40 0000000000000038 t nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
0000000000557e80 0000000000000080 t nv50_ir::ConverterCommon::translateInterpMode(nv50_ir_varying const*, nv50_ir::operation&)
0000000000557f00 0000000000000400 t nv50_ir::ConverterCommon::handleUserClipPlanes()
0000000000558300 0000000000000254 t std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, bool> std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_emplace_unique<std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine> >(std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine>&&)
0000000000558560 0000000000000130 t nv50_ir::ConverterCommon::getSubroutine(unsigned int)
0000000000558690 0000000000000104 t nv50_ir::ConverterCommon::getSubroutine(nv50_ir::Function*)
00000000005587a0 000000000000001c t nv50_ir::isSignedType(nv50_ir::DataType)
00000000005587c0 000000000000002c t nv50_ir::selpFlip(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
00000000005587f0 00000000000000a8 t nv50_ir::interpApply(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
00000000005588a0 0000000000000008 T nv50_ir::CodeEmitterGM107::getMinEncodingSize(nv50_ir::Instruction const*) const
00000000005588b0 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
00000000005588b0 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
00000000005588c0 0000000000000068 t _debug_printf
0000000000558930 0000000000000008 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000558940 0000000000000054 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Function*)
00000000005589a0 0000000000000158 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Program*)
0000000000558b00 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueDef const&) [clone .isra.0]
0000000000558b50 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000558ba0 00000000000000c0 t nv50_ir::CodeEmitterGM107::emitIMMD(int, int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000558c60 00000000000000cc t nv50_ir::CodeEmitterGM107::emitLDSTs(int, nv50_ir::DataType)
0000000000558d30 000000000000006c t nv50_ir::CodeEmitterGM107::emitSUTarget()
0000000000558da0 000000000000011c t nv50_ir::CodeEmitterGM107::emitSUHandle(int)
0000000000558ec0 000000000000006c t nv50_ir::SchedDataCalculatorGM107::recordWr(nv50_ir::Value const*, int, int)
0000000000558f30 00000000000000ac t nv50_ir::SchedDataCalculatorGM107::checkRd(nv50_ir::Value const*, int, int&) const
0000000000558fe0 0000000000000150 t nv50_ir::SchedDataCalculatorGM107::commitInsn(nv50_ir::Instruction const*, int)
0000000000559130 0000000000000134 t nv50_ir::SchedDataCalculatorGM107::calcDelay(nv50_ir::Instruction const*, int) const
0000000000559270 0000000000000164 t nv50_ir::SchedDataCalculatorGM107::setDelay(nv50_ir::Instruction*, int, nv50_ir::Instruction const*)
00000000005593e0 000000000000013c t nv50_ir::SchedDataCalculatorGM107::needWrDepBar(nv50_ir::Instruction const*) const
0000000000559520 0000000000000160 t nv50_ir::SchedDataCalculatorGM107::doesInsnWriteTo(nv50_ir::Instruction const*, nv50_ir::Value const*) const
0000000000559680 0000000000000064 t nv50_ir::TargetGM107::createCodeEmitterGM107(nv50_ir::Program::Type)
00000000005596f0 0000000000000074 t nv50_ir::CodeEmitterGM107::emitPred()
0000000000559770 0000000000000054 t nv50_ir::CodeEmitterGM107::emitDEPBAR()
00000000005597d0 00000000000001a8 t nv50_ir::CodeEmitterGM107::emitISBERD()
0000000000559980 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSUSTx()
0000000000559ab0 0000000000000148 t nv50_ir::CodeEmitterGM107::emitPIXLD()
0000000000559c00 00000000000003d8 t nv50_ir::SchedDataCalculatorGM107::setReuseFlag(nv50_ir::Instruction*)
0000000000559fe0 00000000000000f0 t nv50_ir::CodeEmitterGM107::emitCBUF(int, int, int, int, int, nv50_ir::ValueRef const&) [clone .isra.0]
000000000055a0d0 0000000000000140 t nv50_ir::CodeEmitterGM107::emitLDC()
000000000055a210 0000000000000174 t nv50_ir::CodeEmitterGM107::emitSTS()
000000000055a390 0000000000000174 t nv50_ir::CodeEmitterGM107::emitLDS()
000000000055a510 0000000000000154 t nv50_ir::CodeEmitterGM107::emitTEXs(int)
000000000055a670 000000000000011c t nv50_ir::CodeEmitterGM107::emitSTL()
000000000055a790 0000000000000128 t nv50_ir::CodeEmitterGM107::emitPCNT()
000000000055a8c0 0000000000000128 t nv50_ir::CodeEmitterGM107::emitPBK()
000000000055a9f0 0000000000000128 t nv50_ir::CodeEmitterGM107::emitPRET()
000000000055ab20 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSSY()
000000000055ac50 0000000000000164 t nv50_ir::CodeEmitterGM107::emitRED()
000000000055adc0 000000000000016c t nv50_ir::CodeEmitterGM107::emitST()
000000000055af30 0000000000000180 t nv50_ir::CodeEmitterGM107::emitAST()
000000000055b0b0 0000000000000160 t nv50_ir::CodeEmitterGM107::emitCCTL()
000000000055b210 00000000000001c4 t nv50_ir::CodeEmitterGM107::emitCAL()
000000000055b3e0 000000000000017c t nv50_ir::SchedDataCalculatorGM107::findFirstDef(nv50_ir::Instruction const*) const
000000000055b560 00000000000001d8 t nv50_ir::CodeEmitterGM107::emitBRA()
000000000055b740 0000000000000204 t nv50_ir::CodeEmitterGM107::emitBAR()
000000000055b950 0000000000000070 t nv50_ir::CodeEmitterGM107::emitEXIT()
000000000055b9c0 0000000000000070 t nv50_ir::CodeEmitterGM107::emitCONT()
000000000055ba30 0000000000000070 t nv50_ir::CodeEmitterGM107::emitBRK()
000000000055baa0 0000000000000070 t nv50_ir::CodeEmitterGM107::emitRET()
000000000055bb10 0000000000000070 t nv50_ir::CodeEmitterGM107::emitSYNC()
000000000055bb80 0000000000000070 t nv50_ir::CodeEmitterGM107::emitKIL()
000000000055bbf0 0000000000000080 t nv50_ir::CodeEmitterGM107::emitMEMBAR()
000000000055bc70 0000000000000148 t nv50_ir::CodeEmitterGM107::emitPSETP()
000000000055bdc0 0000000000000314 t nv50_ir::CodeEmitterGM107::emitMOV()
000000000055c0e0 0000000000000148 t nv50_ir::CodeEmitterGM107::emitS2R()
000000000055c230 0000000000000148 t nv50_ir::CodeEmitterGM107::emitCS2R()
000000000055c380 0000000000000318 t nv50_ir::CodeEmitterGM107::emitF2F()
000000000055c6a0 0000000000000308 t nv50_ir::CodeEmitterGM107::emitF2I()
000000000055c9b0 00000000000002e0 t nv50_ir::CodeEmitterGM107::emitI2F()
000000000055cc90 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitI2I()
000000000055cf70 000000000000020c t nv50_ir::CodeEmitterGM107::emitSEL()
000000000055d180 0000000000000224 t nv50_ir::CodeEmitterGM107::emitDADD()
000000000055d3b0 000000000000020c t nv50_ir::CodeEmitterGM107::emitDMUL()
000000000055d5c0 00000000000002e4 t nv50_ir::CodeEmitterGM107::emitDFMA()
000000000055d8b0 000000000000022c t nv50_ir::CodeEmitterGM107::emitDMNMX()
000000000055dae0 00000000000002a0 t nv50_ir::CodeEmitterGM107::emitDSET()
000000000055dd80 0000000000000318 t nv50_ir::CodeEmitterGM107::emitFADD()
000000000055e0a0 00000000000002fc t nv50_ir::CodeEmitterGM107::emitFMUL()
000000000055e3a0 00000000000003c4 t nv50_ir::CodeEmitterGM107::emitFFMA()
000000000055e770 000000000000017c t nv50_ir::CodeEmitterGM107::emitMUFU()
000000000055e8f0 0000000000000224 t nv50_ir::CodeEmitterGM107::emitFMNMX()
000000000055eb20 00000000000001a0 t nv50_ir::CodeEmitterGM107::emitRRO()
000000000055ecc0 00000000000002dc t nv50_ir::CodeEmitterGM107::emitFCMP()
000000000055efa0 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitFSET()
000000000055f280 000000000000016c t nv50_ir::CodeEmitterGM107::emitFSWZADD()
000000000055f3f0 00000000000002b0 t nv50_ir::CodeEmitterGM107::emitLOP()
000000000055f6a0 00000000000001fc t nv50_ir::CodeEmitterGM107::emitNOT()
000000000055f8a0 00000000000002bc t nv50_ir::CodeEmitterGM107::emitIADD()
000000000055fb60 0000000000000290 t nv50_ir::CodeEmitterGM107::emitIMUL()
000000000055fdf0 0000000000000314 t nv50_ir::CodeEmitterGM107::emitIMAD()
0000000000560110 0000000000000210 t nv50_ir::CodeEmitterGM107::emitISCADD()
0000000000560320 00000000000002e0 t nv50_ir::CodeEmitterGM107::emitXMAD()
0000000000560600 00000000000001d0 t nv50_ir::CodeEmitterGM107::emitIMNMX()
00000000005607d0 00000000000002ec t nv50_ir::CodeEmitterGM107::emitICMP()
0000000000560ac0 0000000000000264 t nv50_ir::CodeEmitterGM107::emitISET()
0000000000560d30 00000000000001b8 t nv50_ir::CodeEmitterGM107::emitSHL()
0000000000560ef0 00000000000001d8 t nv50_ir::CodeEmitterGM107::emitSHR()
00000000005610d0 00000000000001e8 t nv50_ir::CodeEmitterGM107::emitSHF()
00000000005612c0 0000000000000184 t nv50_ir::CodeEmitterGM107::emitPOPC()
0000000000561450 0000000000000258 t nv50_ir::CodeEmitterGM107::emitBFI()
00000000005616b0 00000000000001c8 t nv50_ir::CodeEmitterGM107::emitBFE()
0000000000561880 00000000000001ac t nv50_ir::CodeEmitterGM107::emitFLO()
0000000000561a30 0000000000000118 t nv50_ir::CodeEmitterGM107::emitLDL()
0000000000561b50 0000000000000168 t nv50_ir::CodeEmitterGM107::emitLD()
0000000000561cc0 0000000000000294 t nv50_ir::CodeEmitterGM107::emitIPA()
0000000000561f60 00000000000001d8 t nv50_ir::CodeEmitterGM107::emitATOM()
0000000000562140 0000000000000190 t nv50_ir::CodeEmitterGM107::emitATOMS()
00000000005622d0 0000000000000144 t nv50_ir::CodeEmitterGM107::emitTXQ()
0000000000562420 00000000000001b0 t nv50_ir::CodeEmitterGM107::emitOUT()
00000000005625d0 0000000000000148 t nv50_ir::CodeEmitterGM107::emitSULDx()
0000000000562720 00000000000001c0 t nv50_ir::CodeEmitterGM107::emitSUREDx()
00000000005628e0 000000000000019c t nv50_ir::CodeEmitterGM107::emitALD()
0000000000562a80 0000000000000140 t nv50_ir::CodeEmitterGM107::emitAL2P()
0000000000562bc0 000000000000027c t nv50_ir::CodeEmitterGM107::emitVOTE()
0000000000562e40 00000000000001e4 t nv50_ir::CodeEmitterGM107::emitTEX()
0000000000563030 00000000000001a4 t nv50_ir::CodeEmitterGM107::emitTLD()
00000000005631e0 00000000000001d4 t nv50_ir::CodeEmitterGM107::emitTLD4()
00000000005633c0 0000000000000180 t nv50_ir::CodeEmitterGM107::emitTXD()
0000000000563540 000000000000017c t nv50_ir::CodeEmitterGM107::emitTMML()
00000000005636c0 00000000000003a0 t nv50_ir::SchedDataCalculatorGM107::needRdDepBar(nv50_ir::Instruction const*) const
0000000000563a60 00000000000002ec t nv50_ir::SchedDataCalculatorGM107::findFirstUse(nv50_ir::Instruction const*) const
0000000000563d50 0000000000000490 t nv50_ir::SchedDataCalculatorGM107::insertBarriers(nv50_ir::BasicBlock*)
00000000005641e0 00000000000004fc T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::BasicBlock*)
00000000005646e0 0000000000000210 t nv50_ir::CodeEmitterGM107::emitSHFL()
00000000005648f0 00000000000002e0 t nv50_ir::CodeEmitterGM107::emitISETP()
0000000000564bd0 00000000000003ac t nv50_ir::CodeEmitterGM107::emitTEXS()
0000000000564f80 0000000000000318 t nv50_ir::CodeEmitterGM107::emitDSETP()
00000000005652a0 0000000000000324 t nv50_ir::CodeEmitterGM107::emitFSETP()
00000000005655d0 0000000000000e64 T nv50_ir::CodeEmitterGM107::emitInstruction(nv50_ir::Instruction*)
0000000000566440 00000000000001f0 t std::vector<nv50_ir::SchedDataCalculatorGM107::RegScores, std::allocator<nv50_ir::SchedDataCalculatorGM107::RegScores> >::_M_default_append(unsigned long)
0000000000566630 0000000000000134 T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::Function*)
0000000000566770 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
0000000000566810 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005669d0 0000000000000180 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000566b50 0000000000001bbc T nv50_ir::GM107LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000568710 0000000000000590 t nv50_ir::GM107LegalizeSSA::handlePFETCH(nv50_ir::Instruction*)
0000000000568ca0 00000000000000d4 t nv50_ir::GM107LegalizeSSA::handleLOAD(nv50_ir::Instruction*)
0000000000568d80 0000000000000048 T nv50_ir::GM107LegalizeSSA::visit(nv50_ir::Instruction*)
0000000000568dd0 00000000000003a4 t nv50_ir::GM107LoweringPass::handleDFDX(nv50_ir::Instruction*)
0000000000569180 00000000000005ec t nv50_ir::GM107LoweringPass::handlePFETCH(nv50_ir::Instruction*)
0000000000569770 00000000000002b0 t nv50_ir::GM107LoweringPass::handlePOPCNT(nv50_ir::Instruction*)
0000000000569a20 00000000000005fc t nv50_ir::GM107LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
000000000056a020 0000000000000118 T nv50_ir::GM107LoweringPass::visit(nv50_ir::Instruction*)
000000000056a140 0000000000000010 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::Function*)
000000000056a150 0000000000000008 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::BasicBlock*)
000000000056a160 00000000000000c8 t nv50_ir::getSrcType(nv50_ir::TexInstruction::ImgFormatDesc const*, int)
000000000056a230 0000000000000068 t _debug_printf
000000000056a2a0 00000000000000c4 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::Function*)
000000000056a370 00000000000000f4 T nv50_ir::TargetNVC0::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
000000000056a470 0000000000000098 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&) [clone .isra.0]
000000000056a510 00000000000001b8 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000056a6d0 00000000000002ac t std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&) [clone .isra.0]
000000000056a980 0000000000000180 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
000000000056ab00 000000000000024c t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
000000000056ad50 0000000000000130 t nv50_ir::Instruction::getIndirect(int, int) const
000000000056ae80 00000000000000b4 t nv50_ir::TexInstruction::getIndirectR() const
000000000056af40 000000000000041c t nv50_ir::NVC0LegalizeSSA::handleDIV(nv50_ir::Instruction*)
000000000056b360 000000000000030c t nv50_ir::NVC0LegalizeSSA::handleRCPRSQLib(nv50_ir::Instruction*, nv50_ir::Value**)
000000000056b670 0000000000000270 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQ(nv50_ir::Instruction*)
000000000056b8e0 0000000000000288 t nv50_ir::NVC0LegalizeSSA::handleTEXLOD(nv50_ir::TexInstruction*)
000000000056bb70 00000000000003a4 t nv50_ir::NVC0LegalizeSSA::handleSET(nv50_ir::CmpInstruction*)
000000000056bf20 0000000000000030 t nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
000000000056bf20 0000000000000030 T nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
000000000056bf50 0000000000000140 t nv50_ir::NVC0LegalizePostRA::addTexUse(std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, nv50_ir::Instruction*, nv50_ir::Instruction const*)
000000000056c090 00000000000000f8 t nv50_ir::NVC0LegalizePostRA::propagateJoin(nv50_ir::BasicBlock*)
000000000056c190 000000000000003c T nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
000000000056c190 000000000000003c t nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
000000000056c1d0 0000000000000220 t nv50_ir::NVC0LoweringPass::loadTexHandle(nv50_ir::Value*, unsigned int)
000000000056c3f0 0000000000000370 t nv50_ir::NVC0LoweringPass::handleBUFQ(nv50_ir::Instruction*)
000000000056c760 0000000000000210 t nv50_ir::NVC0LoweringPass::loadResInfo64(nv50_ir::Value*, unsigned int, unsigned short)
000000000056c970 0000000000000214 t nv50_ir::NVC0LoweringPass::loadResLength32(nv50_ir::Value*, unsigned int, unsigned short)
000000000056cb90 00000000000002f4 t nv50_ir::NVC0LoweringPass::loadSuInfo32(nv50_ir::Value*, int, unsigned int, bool)
000000000056ce90 00000000000007f0 t nv50_ir::NVC0LoweringPass::convertSurfaceFormat(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
000000000056d680 00000000000002ec t nv50_ir::NVC0LoweringPass::readTessCoord(nv50_ir::LValue*, int)
000000000056d970 00000000000001f8 t nv50_ir::NVC0LoweringPass::handleDIV(nv50_ir::Instruction*)
000000000056db70 00000000000002b4 t nv50_ir::NVC0LoweringPass::handleMOD(nv50_ir::Instruction*)
000000000056de30 00000000000002f4 t nv50_ir::NVC0LoweringPass::handlePOW(nv50_ir::Instruction*)
000000000056e130 0000000000000324 t nv50_ir::NVC0LoweringPass::calculateSampleOffset(nv50_ir::Value*)
000000000056e460 00000000000001b8 t nv50_ir::NVC0LoweringPass::handlePIXLD(nv50_ir::Instruction*)
000000000056e620 0000000000000154 t nv50_ir::NVC0LoweringPass::checkPredicate(nv50_ir::Instruction*)
000000000056e780 0000000000000200 t nv50_ir::NVC0LegalizePostRA::replaceCvt(nv50_ir::Instruction*)
000000000056e980 00000000000000ec t nv50_ir::NVC0LegalizePostRA::tryReplaceContWithBra(nv50_ir::BasicBlock*)
000000000056ea70 0000000000000674 t nv50_ir::NVC0LegalizeSSA::handleShift(nv50_ir::Instruction*)
000000000056f0f0 00000000000001e8 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::BasicBlock*)
000000000056f2e0 000000000000023c t nv50_ir::NVC0LoweringPass::handleSQRT(nv50_ir::Instruction*) [clone .part.0]
000000000056f520 000000000000027c t nv50_ir::NVC0LoweringPass::handleOUT(nv50_ir::Instruction*)
000000000056f7a0 0000000000000288 t nv50_ir::NVC0LegalizePostRA::replaceZero(nv50_ir::Instruction*)
000000000056fa30 0000000000000364 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::BasicBlock*)
000000000056fda0 0000000000000638 t nv50_ir::NVC0LoweringPass::insertOOBSurfaceOpResult(nv50_ir::TexInstruction*)
00000000005703e0 0000000000000310 t nv50_ir::NVC0LoweringPass::handleTXQ(nv50_ir::TexInstruction*)
00000000005706f0 00000000000002b0 t nv50_ir::NVC0LoweringPass::handleWRSV(nv50_ir::Instruction*)
00000000005709a0 0000000000000330 t nv50_ir::NVC0LoweringPass::handleCasExch(nv50_ir::Instruction*, bool)
0000000000570cd0 0000000000000c4c t nv50_ir::NVC0LoweringPass::handleTEX(nv50_ir::TexInstruction*)
0000000000571920 000000000000035c t nv50_ir::NVC0LoweringPass::handleTXD(nv50_ir::TexInstruction*)
0000000000571c80 00000000000005f4 t nv50_ir::NVC0LoweringPass::handleSharedATOMNVE4(nv50_ir::Instruction*)
0000000000572280 0000000000000558 t nv50_ir::NVC0LoweringPass::handleSharedATOM(nv50_ir::Instruction*)
00000000005727e0 00000000000002a4 t nv50_ir::NVC0LoweringPass::loadMsAdjInfo32(nv50_ir::TexInstruction::Target, unsigned int, int, nv50_ir::Value*, bool)
0000000000572a90 0000000000000484 t nv50_ir::NVC0LoweringPass::adjustCoordinatesMS(nv50_ir::TexInstruction*)
0000000000572f20 00000000000003ec t nv50_ir::NVC0LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
0000000000573310 0000000000000d80 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVE4(nv50_ir::TexInstruction*)
0000000000574090 0000000000000558 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVC0(nv50_ir::TexInstruction*)
00000000005745f0 00000000000001e4 t nv50_ir::NVC0LoweringPass::handleEXPORT(nv50_ir::Instruction*)
00000000005747e0 0000000000000320 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVE4(nv50_ir::TexInstruction*)
0000000000574b00 00000000000003a4 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVC0(nv50_ir::TexInstruction*)
0000000000574eb0 00000000000008a8 t nv50_ir::NVC0LoweringPass::handleLDST(nv50_ir::Instruction*)
0000000000575760 00000000000003cc t nv50_ir::NVC0LoweringPass::handleTXLQ(nv50_ir::TexInstruction*)
0000000000575b30 0000000000000980 t nv50_ir::NVC0LoweringPass::handleRDSV(nv50_ir::Instruction*)
00000000005764b0 00000000000011ac T nv50_ir::NVC0LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000577660 0000000000001120 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsGM107(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000578780 0000000000000098 t nv50_ir::NVC0LoweringPass::handleSurfaceOpGM107(nv50_ir::TexInstruction*)
0000000000578820 000000000000065c t nv50_ir::NVC0LoweringPass::handleATOM(nv50_ir::Instruction*)
0000000000578e80 000000000000043c t nv50_ir::NVC0LoweringPass::visit(nv50_ir::Instruction*)
00000000005792c0 00000000000002b4 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_fill_insert(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::Limits*, std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> > >, unsigned long, nv50_ir::NVC0LegalizePostRA::Limits const&)
0000000000579580 00000000000001b8 t std::_Hashtable<nv50_ir::BasicBlock const*, nv50_ir::BasicBlock const*, std::allocator<nv50_ir::BasicBlock const*>, std::__detail::_Identity, std::equal_to<nv50_ir::BasicBlock const*>, std::hash<nv50_ir::BasicBlock const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::BasicBlock const*, false>*, unsigned long)
0000000000579740 00000000000003f4 t nv50_ir::NVC0LegalizePostRA::findFirstUsesBB(int, int, nv50_ir::Instruction*, nv50_ir::Instruction const*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >&)
0000000000579b40 0000000000000120 t nv50_ir::NVC0LegalizePostRA::findFirstUses(nv50_ir::Instruction*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&)
0000000000579c60 0000000000000f58 t nv50_ir::NVC0LegalizePostRA::insertTextureBarriers(nv50_ir::Function*)
000000000057abc0 00000000000003b0 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::Function*)
000000000057af70 0000000000000044 t _mesa_combine_swizzles
000000000057afc0 0000000000000444 t _mesa_layout_parameters
000000000057b410 000000000000007c t _mesa_parse_instruction_suffix
000000000057b490 0000000000000050 t _mesa_ARBvp_parse_option
000000000057b4e0 00000000000002c4 t _mesa_ARBfp_parse_option
000000000057b7b0 00000000000000e0 t yy_get_previous_state
000000000057b890 0000000000000030 t yy_fatal_error.isra.0
000000000057b8c0 00000000000000ac t _mesa_program_lexer_ensure_buffer_stack
000000000057b970 00000000000000b4 t _mesa_program_lexer__switch_to_buffer
000000000057ba30 0000000000000068 t _mesa_program_lexer__delete_buffer
000000000057baa0 0000000000000070 t _mesa_program_lexer__flush_buffer
000000000057bb10 0000000000000094 t _mesa_program_lexer__init_buffer
000000000057bbb0 000000000000007c t _mesa_program_lexer__create_buffer
000000000057bc30 00000000000000b0 t _mesa_program_lexer_restart
000000000057bce0 00000000000003c0 t yy_get_next_buffer
000000000057c0a0 0000000000003bf8 t _mesa_program_lexer_lex
000000000057fca0 000000000000008c t _mesa_program_lexer_pop_buffer_state
000000000057fd30 000000000000009c t _mesa_program_lexer__scan_buffer
000000000057fdd0 00000000000000a0 t _mesa_program_lexer__scan_bytes
000000000057fe70 0000000000000084 t _mesa_program_lexer_lex_init_extra
000000000057ff00 0000000000000074 t _mesa_program_lexer_lex_destroy
000000000057ff80 0000000000000044 t _mesa_program_lexer_ctor
000000000057ffd0 0000000000000004 t _mesa_program_lexer_dtor
000000000057ffe0 0000000000000004 T operator delete(void*, unsigned long)
0000000000580000 0000000000000004 T operator delete[](void*)
0000000000580020 0000000000000004 T operator delete[](void*, unsigned long)
0000000000580040 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000580060 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000580080 000000000000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
00000000005800a0 000000000000000c W __gnu_cxx::__concurrence_wait_error::what() const
00000000005800c0 000000000000001c t (anonymous namespace)::init()
00000000005800e0 000000000000001c t (anonymous namespace)::init_static_cond()
0000000000580100 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000580100 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000580120 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000580160 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000580160 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000580180 0000000000000038 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
00000000005801c0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000005801c0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000005801e0 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000580220 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000580220 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000580240 0000000000000038 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000580280 000000000000014c T __cxa_guard_acquire
00000000005803e0 0000000000000088 T __cxa_guard_release
0000000000580480 0000000000000068 T operator new(unsigned long)
0000000000580500 0000000000000004 T operator new[](unsigned long)
0000000000580520 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000580520 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000580540 0000000000000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000580560 0000000000000194 T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000580700 00000000000000a8 T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005807c0 0000000000000064 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000580840 0000000000000004 T std::type_info::~type_info()
0000000000580840 0000000000000004 T std::type_info::~type_info()
0000000000580860 0000000000000008 T std::type_info::__is_pointer_p() const
0000000000580860 0000000000000008 T std::type_info::__is_function_p() const
0000000000580880 0000000000000034 T std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
00000000005808c0 0000000000000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
00000000005808e0 0000000000000010 T std::__detail::_List_node_base::_M_unhook()
0000000000580900 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0000000000580960 0000000000000064 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00000000005809e0 000000000000029c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0000000000580c80 00000000000000bc T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
0000000000580d40 00000000000000a0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
0000000000580de0 000000000000000c T std::bad_alloc::what() const
0000000000580e00 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000580e00 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000580e20 0000000000000020 T std::bad_alloc::~bad_alloc()
0000000000580e40 000000000000000c T std::bad_array_new_length::what() const
0000000000580e60 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
0000000000580e60 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
0000000000580e80 0000000000000020 T std::bad_array_new_length::~bad_array_new_length()
0000000000580ea0 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0000000000580f20 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000580f40 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000580f40 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000580f60 0000000000000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000580f80 0000000000000090 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000581020 00000000000000a8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00000000005810e0 00000000000000ec T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005811e0 0000000000000004 T operator delete(void*)
0000000000581200 0000000000000110 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0000000000581320 00000000000000cc t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.0]
0000000000581400 0000000000000058 T __cxa_allocate_exception
0000000000581460 0000000000000028 T __cxa_free_exception
00000000005814a0 0000000000000004 T std::exception::~exception()
00000000005814a0 0000000000000004 T std::exception::~exception()
00000000005814c0 000000000000007c t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
0000000000581540 0000000000000138 t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
0000000000581680 0000000000000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0000000000581700 0000000000000108 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
0000000000581820 00000000000000f8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0000000000581920 0000000000000630 T __gxx_personality_v0
0000000000581f60 0000000000000018 T __cxxabiv1::__terminate(void (*)())
0000000000581f80 0000000000000010 T std::get_terminate()
0000000000581fa0 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
0000000000581fc0 0000000000000010 T std::get_unexpected()
0000000000581fe0 0000000000000058 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
0000000000582040 0000000000000054 T __cxa_init_primary_exception
00000000005820a0 000000000000005c T __cxa_throw
0000000000582100 0000000000000010 T std::get_new_handler()
0000000000582120 0000000000000008 T std::logic_error::what() const
0000000000582120 0000000000000008 T std::runtime_error::what() const
0000000000582140 0000000000000074 T std::logic_error::~logic_error()
0000000000582140 0000000000000074 T std::logic_error::~logic_error()
00000000005821c0 000000000000001c T std::logic_error::~logic_error()
00000000005821e0 0000000000000014 T std::length_error::~length_error()
00000000005821e0 0000000000000014 T std::length_error::~length_error()
0000000000582200 000000000000001c T std::length_error::~length_error()
0000000000582220 0000000000000014 T std::out_of_range::~out_of_range()
0000000000582220 0000000000000014 T std::out_of_range::~out_of_range()
0000000000582240 000000000000001c T std::out_of_range::~out_of_range()
0000000000582260 00000000000000f8 T std::logic_error::logic_error(char const*)
0000000000582260 00000000000000f8 T std::logic_error::logic_error(char const*)
0000000000582360 0000000000000030 T std::length_error::length_error(char const*)
0000000000582360 0000000000000030 T std::length_error::length_error(char const*)
00000000005823a0 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005823a0 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005823e0 0000000000000080 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
0000000000582460 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0000000000582480 000000000000009c T __cxa_begin_catch
0000000000582520 0000000000000044 t eh_globals_dtor(void*)
0000000000582580 0000000000000080 T __cxa_get_globals
0000000000582600 0000000000000004 T _glapi_check_multithread
0000000000582610 0000000000000004 T _glapi_set_context
0000000000582620 0000000000000004 T _glapi_set_dispatch
0000000000582630 0000000000000008 T _glapi_get_dispatch_table_size
0000000000582640 0000000000000174 T _glapi_add_dispatch
00000000005827c0 000000000000006c T _glapi_get_proc_address
0000000000582830 0000000000000014 t stub_compare
0000000000582850 0000000000000014 t stub_init_once
0000000000582870 000000000000001c t stub_find_public
0000000000582890 0000000000000100 t stub_find_dynamic
0000000000582990 0000000000000058 t stub_fix_dynamic
00000000005829f0 0000000000000008 t stub_get_slot
0000000000582a00 0000000000000018 t stub_get_addr
0000000000582a20 00000000000000a8 t noop_generic
0000000000582ad0 0000000000000004 t u_current_init
0000000000582ae0 0000000000000024 t u_current_set_context
0000000000582b10 0000000000000020 T _glapi_get_context
0000000000582b30 000000000000003c t u_current_set_table
0000000000582b70 0000000000000030 T shared_dispatch_stub_0
0000000000582ba0 0000000000000028 T shared_dispatch_stub_1
0000000000582bd0 0000000000000030 T shared_dispatch_stub_2
0000000000582c00 0000000000000030 T shared_dispatch_stub_3
0000000000582c30 0000000000000030 T shared_dispatch_stub_4
0000000000582c60 0000000000000030 T shared_dispatch_stub_5
0000000000582c90 0000000000000030 T shared_dispatch_stub_6
0000000000582cc0 0000000000000030 T shared_dispatch_stub_7
0000000000582cf0 0000000000000030 T shared_dispatch_stub_8
0000000000582d20 0000000000000030 T shared_dispatch_stub_9
0000000000582d50 0000000000000030 T shared_dispatch_stub_10
0000000000582d80 0000000000000028 T shared_dispatch_stub_11
0000000000582db0 0000000000000030 T shared_dispatch_stub_12
0000000000582de0 0000000000000028 T shared_dispatch_stub_13
0000000000582e10 0000000000000030 T shared_dispatch_stub_14
0000000000582e40 0000000000000030 T shared_dispatch_stub_15
0000000000582e70 0000000000000030 T shared_dispatch_stub_16
0000000000582ea0 0000000000000030 T shared_dispatch_stub_17
0000000000582ed0 0000000000000030 T shared_dispatch_stub_18
0000000000582f00 0000000000000030 T shared_dispatch_stub_19
0000000000582f30 0000000000000030 T shared_dispatch_stub_20
0000000000582f60 0000000000000030 T shared_dispatch_stub_21
0000000000582f90 0000000000000030 T shared_dispatch_stub_22
0000000000582fc0 0000000000000030 T shared_dispatch_stub_23
0000000000582ff0 0000000000000030 T shared_dispatch_stub_24
0000000000583020 0000000000000030 T shared_dispatch_stub_25
0000000000583050 0000000000000030 T shared_dispatch_stub_26
0000000000583080 0000000000000028 T shared_dispatch_stub_27
00000000005830b0 0000000000000030 T shared_dispatch_stub_28
00000000005830e0 0000000000000028 T shared_dispatch_stub_29
0000000000583110 0000000000000030 T shared_dispatch_stub_30
0000000000583140 0000000000000030 T shared_dispatch_stub_31
0000000000583170 0000000000000030 T shared_dispatch_stub_32
00000000005831a0 0000000000000030 T shared_dispatch_stub_33
00000000005831d0 0000000000000030 T shared_dispatch_stub_34
0000000000583200 0000000000000030 T shared_dispatch_stub_35
0000000000583230 0000000000000030 T shared_dispatch_stub_36
0000000000583260 0000000000000030 T shared_dispatch_stub_37
0000000000583290 0000000000000030 T shared_dispatch_stub_38
00000000005832c0 0000000000000030 T shared_dispatch_stub_39
00000000005832f0 0000000000000030 T shared_dispatch_stub_40
0000000000583320 0000000000000030 T shared_dispatch_stub_41
0000000000583350 0000000000000030 T shared_dispatch_stub_42
0000000000583380 0000000000000028 T shared_dispatch_stub_43
00000000005833b0 0000000000000028 T shared_dispatch_stub_44
00000000005833e0 0000000000000030 T shared_dispatch_stub_45
0000000000583410 0000000000000028 T shared_dispatch_stub_46
0000000000583440 0000000000000030 T shared_dispatch_stub_47
0000000000583470 0000000000000030 T shared_dispatch_stub_48
00000000005834a0 0000000000000030 T shared_dispatch_stub_49
00000000005834d0 0000000000000030 T shared_dispatch_stub_50
0000000000583500 0000000000000030 T shared_dispatch_stub_51
0000000000583530 0000000000000030 T shared_dispatch_stub_52
0000000000583560 0000000000000030 T shared_dispatch_stub_53
0000000000583590 0000000000000028 T shared_dispatch_stub_54
00000000005835c0 0000000000000030 T shared_dispatch_stub_55
00000000005835f0 0000000000000028 T shared_dispatch_stub_56
0000000000583620 0000000000000030 T shared_dispatch_stub_57
0000000000583650 0000000000000030 T shared_dispatch_stub_58
0000000000583680 0000000000000030 T shared_dispatch_stub_59
00000000005836b0 0000000000000030 T shared_dispatch_stub_60
00000000005836e0 0000000000000030 T shared_dispatch_stub_61
0000000000583710 0000000000000028 T shared_dispatch_stub_62
0000000000583740 0000000000000030 T shared_dispatch_stub_63
0000000000583770 0000000000000028 T shared_dispatch_stub_64
00000000005837a0 0000000000000030 T shared_dispatch_stub_65
00000000005837d0 0000000000000030 T shared_dispatch_stub_66
0000000000583800 0000000000000030 T shared_dispatch_stub_67
0000000000583830 0000000000000030 T shared_dispatch_stub_68
0000000000583860 0000000000000030 T shared_dispatch_stub_69
0000000000583890 0000000000000028 T shared_dispatch_stub_70
00000000005838c0 0000000000000030 T shared_dispatch_stub_71
00000000005838f0 0000000000000028 T shared_dispatch_stub_72
0000000000583920 0000000000000030 T shared_dispatch_stub_73
0000000000583950 0000000000000030 T shared_dispatch_stub_74
0000000000583980 0000000000000030 T shared_dispatch_stub_75
00000000005839b0 0000000000000030 T shared_dispatch_stub_76
00000000005839e0 0000000000000030 T shared_dispatch_stub_77
0000000000583a10 0000000000000028 T shared_dispatch_stub_78
0000000000583a40 0000000000000030 T shared_dispatch_stub_79
0000000000583a70 0000000000000028 T shared_dispatch_stub_80
0000000000583aa0 0000000000000030 T shared_dispatch_stub_81
0000000000583ad0 0000000000000030 T shared_dispatch_stub_82
0000000000583b00 0000000000000030 T shared_dispatch_stub_83
0000000000583b30 0000000000000030 T shared_dispatch_stub_84
0000000000583b60 0000000000000030 T shared_dispatch_stub_85
0000000000583b90 0000000000000028 T shared_dispatch_stub_86
0000000000583bc0 0000000000000030 T shared_dispatch_stub_87
0000000000583bf0 0000000000000028 T shared_dispatch_stub_88
0000000000583c20 0000000000000030 T shared_dispatch_stub_89
0000000000583c50 0000000000000030 T shared_dispatch_stub_90
0000000000583c80 0000000000000030 T shared_dispatch_stub_91
0000000000583cb0 0000000000000030 T shared_dispatch_stub_92
0000000000583ce0 0000000000000030 T shared_dispatch_stub_93
0000000000583d10 0000000000000028 T shared_dispatch_stub_94
0000000000583d40 0000000000000030 T shared_dispatch_stub_95
0000000000583d70 0000000000000028 T shared_dispatch_stub_96
0000000000583da0 0000000000000030 T shared_dispatch_stub_97
0000000000583dd0 0000000000000030 T shared_dispatch_stub_98
0000000000583e00 0000000000000030 T shared_dispatch_stub_99
0000000000583e30 0000000000000030 T shared_dispatch_stub_100
0000000000583e60 0000000000000030 T shared_dispatch_stub_101
0000000000583e90 0000000000000028 T shared_dispatch_stub_102
0000000000583ec0 0000000000000030 T shared_dispatch_stub_103
0000000000583ef0 0000000000000028 T shared_dispatch_stub_104
0000000000583f20 0000000000000030 T shared_dispatch_stub_105
0000000000583f50 0000000000000030 T shared_dispatch_stub_106
0000000000583f80 0000000000000030 T shared_dispatch_stub_107
0000000000583fb0 0000000000000030 T shared_dispatch_stub_108
0000000000583fe0 0000000000000030 T shared_dispatch_stub_109
0000000000584010 0000000000000028 T shared_dispatch_stub_110
0000000000584040 0000000000000030 T shared_dispatch_stub_111
0000000000584070 0000000000000028 T shared_dispatch_stub_112
00000000005840a0 0000000000000030 T shared_dispatch_stub_113
00000000005840d0 0000000000000030 T shared_dispatch_stub_114
0000000000584100 0000000000000030 T shared_dispatch_stub_115
0000000000584130 0000000000000030 T shared_dispatch_stub_116
0000000000584160 0000000000000030 T shared_dispatch_stub_117
0000000000584190 0000000000000028 T shared_dispatch_stub_118
00000000005841c0 0000000000000030 T shared_dispatch_stub_119
00000000005841f0 0000000000000028 T shared_dispatch_stub_120
0000000000584220 0000000000000030 T shared_dispatch_stub_121
0000000000584250 0000000000000030 T shared_dispatch_stub_122
0000000000584280 0000000000000030 T shared_dispatch_stub_123
00000000005842b0 0000000000000030 T shared_dispatch_stub_124
00000000005842e0 0000000000000030 T shared_dispatch_stub_125
0000000000584310 0000000000000028 T shared_dispatch_stub_126
0000000000584340 0000000000000030 T shared_dispatch_stub_127
0000000000584370 0000000000000028 T shared_dispatch_stub_128
00000000005843a0 0000000000000030 T shared_dispatch_stub_129
00000000005843d0 0000000000000030 T shared_dispatch_stub_130
0000000000584400 0000000000000030 T shared_dispatch_stub_131
0000000000584430 0000000000000030 T shared_dispatch_stub_132
0000000000584460 0000000000000030 T shared_dispatch_stub_133
0000000000584490 0000000000000028 T shared_dispatch_stub_134
00000000005844c0 0000000000000030 T shared_dispatch_stub_135
00000000005844f0 0000000000000028 T shared_dispatch_stub_136
0000000000584520 0000000000000030 T shared_dispatch_stub_137
0000000000584550 0000000000000030 T shared_dispatch_stub_138
0000000000584580 0000000000000030 T shared_dispatch_stub_139
00000000005845b0 0000000000000030 T shared_dispatch_stub_140
00000000005845e0 0000000000000030 T shared_dispatch_stub_141
0000000000584610 0000000000000028 T shared_dispatch_stub_142
0000000000584640 0000000000000030 T shared_dispatch_stub_143
0000000000584670 0000000000000028 T shared_dispatch_stub_144
00000000005846a0 0000000000000030 T shared_dispatch_stub_145
00000000005846d0 0000000000000030 T shared_dispatch_stub_146
0000000000584700 0000000000000030 T shared_dispatch_stub_147
0000000000584730 0000000000000030 T shared_dispatch_stub_148
0000000000584760 0000000000000030 T shared_dispatch_stub_149
0000000000584790 0000000000000030 T shared_dispatch_stub_150
00000000005847c0 0000000000000030 T shared_dispatch_stub_151
00000000005847f0 0000000000000030 T shared_dispatch_stub_152
0000000000584820 0000000000000030 T shared_dispatch_stub_153
0000000000584850 0000000000000030 T shared_dispatch_stub_154
0000000000584880 0000000000000030 T shared_dispatch_stub_155
00000000005848b0 0000000000000030 T shared_dispatch_stub_156
00000000005848e0 0000000000000030 T shared_dispatch_stub_157
0000000000584910 0000000000000030 T shared_dispatch_stub_158
0000000000584940 0000000000000030 T shared_dispatch_stub_159
0000000000584970 0000000000000030 T shared_dispatch_stub_160
00000000005849a0 0000000000000030 T shared_dispatch_stub_161
00000000005849d0 0000000000000030 T shared_dispatch_stub_162
0000000000584a00 0000000000000030 T shared_dispatch_stub_163
0000000000584a30 0000000000000030 T shared_dispatch_stub_164
0000000000584a60 0000000000000030 T shared_dispatch_stub_165
0000000000584a90 0000000000000030 T shared_dispatch_stub_166
0000000000584ac0 0000000000000030 T shared_dispatch_stub_167
0000000000584af0 0000000000000028 T shared_dispatch_stub_168
0000000000584b20 0000000000000030 T shared_dispatch_stub_169
0000000000584b50 0000000000000030 T shared_dispatch_stub_170
0000000000584b80 0000000000000030 T shared_dispatch_stub_171
0000000000584bb0 0000000000000030 T shared_dispatch_stub_172
0000000000584be0 0000000000000028 T shared_dispatch_stub_173
0000000000584c10 0000000000000030 T shared_dispatch_stub_174
0000000000584c40 0000000000000030 T shared_dispatch_stub_175
0000000000584c70 0000000000000030 T shared_dispatch_stub_176
0000000000584ca0 0000000000000030 T shared_dispatch_stub_177
0000000000584cd0 0000000000000030 T shared_dispatch_stub_178
0000000000584d00 0000000000000030 T shared_dispatch_stub_179
0000000000584d30 0000000000000030 T shared_dispatch_stub_180
0000000000584d60 0000000000000030 T shared_dispatch_stub_181
0000000000584d90 0000000000000030 T shared_dispatch_stub_182
0000000000584dc0 0000000000000030 T shared_dispatch_stub_183
0000000000584df0 0000000000000030 T shared_dispatch_stub_184
0000000000584e20 0000000000000030 T shared_dispatch_stub_185
0000000000584e50 0000000000000030 T shared_dispatch_stub_186
0000000000584e80 0000000000000030 T shared_dispatch_stub_187
0000000000584eb0 0000000000000030 T shared_dispatch_stub_188
0000000000584ee0 0000000000000030 T shared_dispatch_stub_189
0000000000584f10 0000000000000030 T shared_dispatch_stub_190
0000000000584f40 0000000000000030 T shared_dispatch_stub_191
0000000000584f70 0000000000000030 T shared_dispatch_stub_192
0000000000584fa0 0000000000000030 T shared_dispatch_stub_193
0000000000584fd0 0000000000000030 T shared_dispatch_stub_194
0000000000585000 0000000000000030 T shared_dispatch_stub_195
0000000000585030 0000000000000030 T shared_dispatch_stub_196
0000000000585060 0000000000000028 T shared_dispatch_stub_197
0000000000585090 0000000000000030 T shared_dispatch_stub_198
00000000005850c0 0000000000000028 T shared_dispatch_stub_199
00000000005850f0 0000000000000028 T shared_dispatch_stub_200
0000000000585120 0000000000000030 T shared_dispatch_stub_201
0000000000585150 0000000000000030 T shared_dispatch_stub_202
0000000000585180 0000000000000030 T shared_dispatch_stub_203
00000000005851b0 0000000000000028 T shared_dispatch_stub_204
00000000005851e0 0000000000000028 T shared_dispatch_stub_205
0000000000585210 0000000000000028 T shared_dispatch_stub_206
0000000000585240 0000000000000030 T shared_dispatch_stub_207
0000000000585270 0000000000000028 T shared_dispatch_stub_208
00000000005852a0 0000000000000030 T shared_dispatch_stub_209
00000000005852d0 0000000000000030 T shared_dispatch_stub_210
0000000000585300 0000000000000030 T shared_dispatch_stub_211
0000000000585330 0000000000000030 T shared_dispatch_stub_212
0000000000585360 0000000000000030 T shared_dispatch_stub_213
0000000000585390 0000000000000030 T shared_dispatch_stub_214
00000000005853c0 0000000000000030 T shared_dispatch_stub_215
00000000005853f0 0000000000000028 T shared_dispatch_stub_216
0000000000585420 0000000000000028 T shared_dispatch_stub_217
0000000000585450 0000000000000028 T shared_dispatch_stub_218
0000000000585480 0000000000000030 T shared_dispatch_stub_219
00000000005854b0 0000000000000030 T shared_dispatch_stub_220
00000000005854e0 0000000000000030 T shared_dispatch_stub_221
0000000000585510 0000000000000030 T shared_dispatch_stub_222
0000000000585540 0000000000000030 T shared_dispatch_stub_223
0000000000585570 0000000000000030 T shared_dispatch_stub_224
00000000005855a0 0000000000000030 T shared_dispatch_stub_225
00000000005855d0 0000000000000030 T shared_dispatch_stub_226
0000000000585600 0000000000000030 T shared_dispatch_stub_227
0000000000585630 0000000000000028 T shared_dispatch_stub_228
0000000000585660 0000000000000030 T shared_dispatch_stub_229
0000000000585690 0000000000000028 T shared_dispatch_stub_230
00000000005856c0 0000000000000030 T shared_dispatch_stub_231
00000000005856f0 0000000000000028 T shared_dispatch_stub_232
0000000000585720 0000000000000030 T shared_dispatch_stub_233
0000000000585750 0000000000000028 T shared_dispatch_stub_234
0000000000585780 0000000000000030 T shared_dispatch_stub_235
00000000005857b0 0000000000000030 T shared_dispatch_stub_236
00000000005857e0 0000000000000030 T shared_dispatch_stub_237
0000000000585810 0000000000000030 T shared_dispatch_stub_238
0000000000585840 0000000000000030 T shared_dispatch_stub_239
0000000000585870 0000000000000030 T shared_dispatch_stub_240
00000000005858a0 0000000000000030 T shared_dispatch_stub_241
00000000005858d0 0000000000000030 T shared_dispatch_stub_242
0000000000585900 0000000000000030 T shared_dispatch_stub_243
0000000000585930 0000000000000030 T shared_dispatch_stub_244
0000000000585960 0000000000000030 T shared_dispatch_stub_245
0000000000585990 0000000000000028 T shared_dispatch_stub_246
00000000005859c0 0000000000000030 T shared_dispatch_stub_247
00000000005859f0 0000000000000030 T shared_dispatch_stub_248
0000000000585a20 0000000000000030 T shared_dispatch_stub_249
0000000000585a50 0000000000000030 T shared_dispatch_stub_250
0000000000585a80 0000000000000030 T shared_dispatch_stub_251
0000000000585ab0 0000000000000030 T shared_dispatch_stub_252
0000000000585ae0 0000000000000030 T shared_dispatch_stub_253
0000000000585b10 0000000000000030 T shared_dispatch_stub_254
0000000000585b40 0000000000000030 T shared_dispatch_stub_255
0000000000585b70 0000000000000030 T shared_dispatch_stub_256
0000000000585ba0 0000000000000030 T shared_dispatch_stub_257
0000000000585bd0 0000000000000030 T shared_dispatch_stub_258
0000000000585c00 0000000000000030 T shared_dispatch_stub_259
0000000000585c30 0000000000000030 T shared_dispatch_stub_260
0000000000585c60 0000000000000028 T shared_dispatch_stub_261
0000000000585c90 0000000000000030 T shared_dispatch_stub_262
0000000000585cc0 0000000000000030 T shared_dispatch_stub_263
0000000000585cf0 0000000000000030 T shared_dispatch_stub_264
0000000000585d20 0000000000000030 T shared_dispatch_stub_265
0000000000585d50 0000000000000030 T shared_dispatch_stub_266
0000000000585d80 0000000000000030 T shared_dispatch_stub_267
0000000000585db0 0000000000000030 T shared_dispatch_stub_268
0000000000585de0 0000000000000030 T shared_dispatch_stub_269
0000000000585e10 0000000000000030 T shared_dispatch_stub_270
0000000000585e40 0000000000000030 T shared_dispatch_stub_271
0000000000585e70 0000000000000030 T shared_dispatch_stub_272
0000000000585ea0 0000000000000030 T shared_dispatch_stub_273
0000000000585ed0 0000000000000030 T shared_dispatch_stub_274
0000000000585f00 0000000000000030 T shared_dispatch_stub_275
0000000000585f30 0000000000000030 T shared_dispatch_stub_276
0000000000585f60 0000000000000030 T shared_dispatch_stub_277
0000000000585f90 0000000000000030 T shared_dispatch_stub_278
0000000000585fc0 0000000000000030 T shared_dispatch_stub_279
0000000000585ff0 0000000000000030 T shared_dispatch_stub_280
0000000000586020 0000000000000030 T shared_dispatch_stub_281
0000000000586050 0000000000000030 T shared_dispatch_stub_282
0000000000586080 0000000000000030 T shared_dispatch_stub_283
00000000005860b0 0000000000000030 T shared_dispatch_stub_284
00000000005860e0 0000000000000030 T shared_dispatch_stub_285
0000000000586110 0000000000000030 T shared_dispatch_stub_286
0000000000586140 0000000000000030 T shared_dispatch_stub_287
0000000000586170 0000000000000028 T shared_dispatch_stub_288
00000000005861a0 0000000000000028 T shared_dispatch_stub_289
00000000005861d0 0000000000000028 T shared_dispatch_stub_290
0000000000586200 0000000000000030 T shared_dispatch_stub_291
0000000000586230 0000000000000030 T shared_dispatch_stub_292
0000000000586260 0000000000000030 T shared_dispatch_stub_293
0000000000586290 0000000000000030 T shared_dispatch_stub_294
00000000005862c0 0000000000000030 T shared_dispatch_stub_295
00000000005862f0 0000000000000028 T shared_dispatch_stub_296
0000000000586320 0000000000000028 T shared_dispatch_stub_297
0000000000586350 0000000000000028 T shared_dispatch_stub_298
0000000000586380 0000000000000028 T shared_dispatch_stub_299
00000000005863b0 0000000000000028 T shared_dispatch_stub_300
00000000005863e0 0000000000000028 T shared_dispatch_stub_301
0000000000586410 0000000000000028 T shared_dispatch_stub_302
0000000000586440 0000000000000028 T shared_dispatch_stub_303
0000000000586470 0000000000000028 T shared_dispatch_stub_304
00000000005864a0 0000000000000030 T shared_dispatch_stub_305
00000000005864d0 0000000000000030 T shared_dispatch_stub_306
0000000000586500 0000000000000030 T shared_dispatch_stub_307
0000000000586530 0000000000000030 T shared_dispatch_stub_308
0000000000586560 0000000000000030 T shared_dispatch_stub_309
0000000000586590 0000000000000030 T shared_dispatch_stub_310
00000000005865c0 0000000000000030 T shared_dispatch_stub_311
00000000005865f0 0000000000000030 T shared_dispatch_stub_312
0000000000586620 0000000000000030 T shared_dispatch_stub_313
0000000000586650 0000000000000030 T shared_dispatch_stub_314
0000000000586680 0000000000000030 T shared_dispatch_stub_315
00000000005866b0 0000000000000030 T shared_dispatch_stub_316
00000000005866e0 0000000000000030 T shared_dispatch_stub_317
0000000000586710 0000000000000030 T shared_dispatch_stub_318
0000000000586740 0000000000000028 T shared_dispatch_stub_319
0000000000586770 0000000000000030 T shared_dispatch_stub_320
00000000005867a0 0000000000000030 T shared_dispatch_stub_321
00000000005867d0 0000000000000030 T shared_dispatch_stub_322
0000000000586800 0000000000000030 T shared_dispatch_stub_323
0000000000586830 0000000000000030 T shared_dispatch_stub_324
0000000000586860 0000000000000030 T shared_dispatch_stub_325
0000000000586890 0000000000000030 T shared_dispatch_stub_326
00000000005868c0 0000000000000030 T shared_dispatch_stub_327
00000000005868f0 0000000000000030 T shared_dispatch_stub_328
0000000000586920 0000000000000030 T shared_dispatch_stub_329
0000000000586950 0000000000000030 T shared_dispatch_stub_330
0000000000586980 0000000000000030 T shared_dispatch_stub_331
00000000005869b0 0000000000000030 T shared_dispatch_stub_332
00000000005869e0 0000000000000030 T shared_dispatch_stub_333
0000000000586a10 0000000000000028 T shared_dispatch_stub_334
0000000000586a40 0000000000000030 T shared_dispatch_stub_335
0000000000586a70 0000000000000028 T shared_dispatch_stub_336
0000000000586aa0 0000000000000030 T shared_dispatch_stub_337
0000000000586ad0 0000000000000030 T shared_dispatch_stub_338
0000000000586b00 0000000000000030 T shared_dispatch_stub_339
0000000000586b30 0000000000000030 T shared_dispatch_stub_340
0000000000586b60 0000000000000030 T shared_dispatch_stub_341
0000000000586b90 0000000000000030 T shared_dispatch_stub_342
0000000000586bc0 0000000000000030 T shared_dispatch_stub_343
0000000000586bf0 0000000000000030 T shared_dispatch_stub_344
0000000000586c20 0000000000000030 T shared_dispatch_stub_345
0000000000586c50 0000000000000030 T shared_dispatch_stub_346
0000000000586c80 0000000000000030 T shared_dispatch_stub_347
0000000000586cb0 0000000000000030 T shared_dispatch_stub_348
0000000000586ce0 0000000000000030 T shared_dispatch_stub_349
0000000000586d10 0000000000000030 T shared_dispatch_stub_350
0000000000586d40 0000000000000030 T shared_dispatch_stub_351
0000000000586d70 0000000000000030 T shared_dispatch_stub_352
0000000000586da0 0000000000000030 T shared_dispatch_stub_353
0000000000586dd0 0000000000000030 T shared_dispatch_stub_354
0000000000586e00 0000000000000030 T shared_dispatch_stub_355
0000000000586e30 0000000000000030 T shared_dispatch_stub_356
0000000000586e60 0000000000000030 T shared_dispatch_stub_357
0000000000586e90 0000000000000030 T shared_dispatch_stub_358
0000000000586ec0 0000000000000030 T shared_dispatch_stub_359
0000000000586ef0 0000000000000030 T shared_dispatch_stub_360
0000000000586f20 0000000000000030 T shared_dispatch_stub_361
0000000000586f50 0000000000000030 T shared_dispatch_stub_362
0000000000586f80 0000000000000030 T shared_dispatch_stub_363
0000000000586fb0 0000000000000030 T shared_dispatch_stub_364
0000000000586fe0 0000000000000030 T shared_dispatch_stub_365
0000000000587010 0000000000000030 T shared_dispatch_stub_366
0000000000587040 0000000000000030 T shared_dispatch_stub_367
0000000000587070 0000000000000030 T shared_dispatch_stub_368
00000000005870a0 0000000000000030 T shared_dispatch_stub_369
00000000005870d0 0000000000000030 T shared_dispatch_stub_370
0000000000587100 0000000000000030 T shared_dispatch_stub_371
0000000000587130 0000000000000030 T shared_dispatch_stub_372
0000000000587160 0000000000000030 T shared_dispatch_stub_373
0000000000587190 0000000000000030 T shared_dispatch_stub_374
00000000005871c0 0000000000000030 T shared_dispatch_stub_375
00000000005871f0 0000000000000030 T shared_dispatch_stub_376
0000000000587220 0000000000000030 T shared_dispatch_stub_377
0000000000587250 0000000000000030 T shared_dispatch_stub_378
0000000000587280 0000000000000030 T shared_dispatch_stub_379
00000000005872b0 0000000000000030 T shared_dispatch_stub_380
00000000005872e0 0000000000000030 T shared_dispatch_stub_381
0000000000587310 0000000000000030 T shared_dispatch_stub_382
0000000000587340 0000000000000030 T shared_dispatch_stub_383
0000000000587370 0000000000000030 T shared_dispatch_stub_384
00000000005873a0 0000000000000030 T shared_dispatch_stub_385
00000000005873d0 0000000000000030 T shared_dispatch_stub_386
0000000000587400 0000000000000030 T shared_dispatch_stub_387
0000000000587430 0000000000000030 T shared_dispatch_stub_388
0000000000587460 0000000000000030 T shared_dispatch_stub_389
0000000000587490 0000000000000030 T shared_dispatch_stub_390
00000000005874c0 0000000000000030 T shared_dispatch_stub_391
00000000005874f0 0000000000000030 T shared_dispatch_stub_392
0000000000587520 0000000000000030 T shared_dispatch_stub_393
0000000000587550 0000000000000030 T shared_dispatch_stub_394
0000000000587580 0000000000000030 T shared_dispatch_stub_395
00000000005875b0 0000000000000030 T shared_dispatch_stub_396
00000000005875e0 0000000000000030 T shared_dispatch_stub_397
0000000000587610 0000000000000030 T shared_dispatch_stub_398
0000000000587640 0000000000000030 T shared_dispatch_stub_399
0000000000587670 0000000000000030 T shared_dispatch_stub_400
00000000005876a0 0000000000000030 T shared_dispatch_stub_401
00000000005876d0 0000000000000030 T shared_dispatch_stub_402
0000000000587700 0000000000000030 T shared_dispatch_stub_403
0000000000587730 0000000000000030 T shared_dispatch_stub_404
0000000000587760 0000000000000030 T shared_dispatch_stub_405
0000000000587790 0000000000000030 T shared_dispatch_stub_406
00000000005877c0 0000000000000030 T shared_dispatch_stub_407
00000000005877f0 0000000000000030 T shared_dispatch_stub_408
0000000000587820 0000000000000030 T shared_dispatch_stub_409
0000000000587850 0000000000000030 T shared_dispatch_stub_410
0000000000587880 0000000000000030 T shared_dispatch_stub_411
00000000005878b0 0000000000000030 T shared_dispatch_stub_412
00000000005878e0 0000000000000030 T shared_dispatch_stub_413
0000000000587910 0000000000000030 T shared_dispatch_stub_414
0000000000587940 0000000000000030 T shared_dispatch_stub_415
0000000000587970 0000000000000030 T shared_dispatch_stub_416
00000000005879a0 0000000000000030 T shared_dispatch_stub_417
00000000005879d0 0000000000000030 T shared_dispatch_stub_418
0000000000587a00 0000000000000030 T shared_dispatch_stub_419
0000000000587a30 0000000000000030 T shared_dispatch_stub_420
0000000000587a60 0000000000000030 T shared_dispatch_stub_421
0000000000587a90 0000000000000028 T shared_dispatch_stub_422
0000000000587ac0 0000000000000030 T shared_dispatch_stub_423
0000000000587af0 0000000000000030 T shared_dispatch_stub_424
0000000000587b20 0000000000000030 T shared_dispatch_stub_425
0000000000587b50 0000000000000030 T shared_dispatch_stub_426
0000000000587b80 0000000000000030 T shared_dispatch_stub_427
0000000000587bb0 0000000000000030 T shared_dispatch_stub_428
0000000000587be0 0000000000000030 T shared_dispatch_stub_429
0000000000587c10 0000000000000030 T shared_dispatch_stub_430
0000000000587c40 0000000000000028 T shared_dispatch_stub_431
0000000000587c70 0000000000000030 T shared_dispatch_stub_432
0000000000587ca0 0000000000000030 T shared_dispatch_stub_433
0000000000587cd0 0000000000000030 T shared_dispatch_stub_434
0000000000587d00 0000000000000030 T shared_dispatch_stub_435
0000000000587d30 0000000000000030 T shared_dispatch_stub_436
0000000000587d60 0000000000000030 T shared_dispatch_stub_437
0000000000587d90 0000000000000030 T shared_dispatch_stub_438
0000000000587dc0 0000000000000030 T shared_dispatch_stub_439
0000000000587df0 0000000000000030 T shared_dispatch_stub_440
0000000000587e20 0000000000000030 T shared_dispatch_stub_441
0000000000587e50 0000000000000030 T shared_dispatch_stub_442
0000000000587e80 0000000000000030 T shared_dispatch_stub_443
0000000000587eb0 0000000000000028 T shared_dispatch_stub_444
0000000000587ee0 0000000000000030 T shared_dispatch_stub_445
0000000000587f10 0000000000000028 T shared_dispatch_stub_446
0000000000587f40 0000000000000030 T shared_dispatch_stub_447
0000000000587f70 0000000000000030 T shared_dispatch_stub_448
0000000000587fa0 0000000000000030 T shared_dispatch_stub_449
0000000000587fd0 0000000000000030 T shared_dispatch_stub_450
0000000000588000 0000000000000030 T shared_dispatch_stub_451
0000000000588030 0000000000000028 T shared_dispatch_stub_452
0000000000588060 0000000000000030 T shared_dispatch_stub_453
0000000000588090 0000000000000028 T shared_dispatch_stub_454
00000000005880c0 0000000000000030 T shared_dispatch_stub_455
00000000005880f0 0000000000000030 T shared_dispatch_stub_456
0000000000588120 0000000000000030 T shared_dispatch_stub_457
0000000000588150 0000000000000030 T shared_dispatch_stub_458
0000000000588180 0000000000000030 T shared_dispatch_stub_459
00000000005881b0 0000000000000030 T shared_dispatch_stub_460
00000000005881e0 0000000000000030 T shared_dispatch_stub_461
0000000000588210 0000000000000030 T shared_dispatch_stub_462
0000000000588240 0000000000000030 T shared_dispatch_stub_463
0000000000588270 0000000000000030 T shared_dispatch_stub_464
00000000005882a0 0000000000000030 T shared_dispatch_stub_465
00000000005882d0 0000000000000030 T shared_dispatch_stub_466
0000000000588300 0000000000000030 T shared_dispatch_stub_467
0000000000588330 0000000000000030 T shared_dispatch_stub_468
0000000000588360 0000000000000030 T shared_dispatch_stub_469
0000000000588390 0000000000000030 T shared_dispatch_stub_470
00000000005883c0 0000000000000030 T shared_dispatch_stub_471
00000000005883f0 0000000000000030 T shared_dispatch_stub_472
0000000000588420 0000000000000030 T shared_dispatch_stub_473
0000000000588450 0000000000000030 T shared_dispatch_stub_474
0000000000588480 0000000000000030 T shared_dispatch_stub_475
00000000005884b0 0000000000000030 T shared_dispatch_stub_476
00000000005884e0 0000000000000030 T shared_dispatch_stub_477
0000000000588510 0000000000000030 T shared_dispatch_stub_478
0000000000588540 0000000000000030 T shared_dispatch_stub_479
0000000000588570 0000000000000030 T shared_dispatch_stub_480
00000000005885a0 0000000000000030 T shared_dispatch_stub_481
00000000005885d0 0000000000000030 T shared_dispatch_stub_482
0000000000588600 0000000000000028 T shared_dispatch_stub_483
0000000000588630 0000000000000030 T shared_dispatch_stub_484
0000000000588660 0000000000000030 T shared_dispatch_stub_485
0000000000588690 0000000000000030 T shared_dispatch_stub_486
00000000005886c0 0000000000000030 T shared_dispatch_stub_487
00000000005886f0 0000000000000030 T shared_dispatch_stub_488
0000000000588720 0000000000000030 T shared_dispatch_stub_489
0000000000588750 0000000000000030 T shared_dispatch_stub_490
0000000000588780 0000000000000030 T shared_dispatch_stub_491
00000000005887b0 0000000000000030 T shared_dispatch_stub_492
00000000005887e0 0000000000000030 T shared_dispatch_stub_493
0000000000588810 0000000000000030 T shared_dispatch_stub_494
0000000000588840 0000000000000030 T shared_dispatch_stub_495
0000000000588870 0000000000000030 T shared_dispatch_stub_496
00000000005888a0 0000000000000030 T shared_dispatch_stub_497
00000000005888d0 0000000000000030 T shared_dispatch_stub_498
0000000000588900 0000000000000030 T shared_dispatch_stub_499
0000000000588930 0000000000000030 T shared_dispatch_stub_500
0000000000588960 0000000000000030 T shared_dispatch_stub_501
0000000000588990 0000000000000030 T shared_dispatch_stub_502
00000000005889c0 0000000000000030 T shared_dispatch_stub_503
00000000005889f0 0000000000000030 T shared_dispatch_stub_504
0000000000588a20 0000000000000030 T shared_dispatch_stub_505
0000000000588a50 0000000000000030 T shared_dispatch_stub_506
0000000000588a80 0000000000000030 T shared_dispatch_stub_507
0000000000588ab0 0000000000000030 T shared_dispatch_stub_508
0000000000588ae0 0000000000000030 T shared_dispatch_stub_509
0000000000588b10 0000000000000030 T shared_dispatch_stub_510
0000000000588b40 0000000000000030 T shared_dispatch_stub_511
0000000000588b70 0000000000000030 T shared_dispatch_stub_512
0000000000588ba0 0000000000000030 T shared_dispatch_stub_513
0000000000588bd0 0000000000000030 T shared_dispatch_stub_514
0000000000588c00 0000000000000030 T shared_dispatch_stub_515
0000000000588c30 0000000000000030 T shared_dispatch_stub_516
0000000000588c60 0000000000000030 T shared_dispatch_stub_517
0000000000588c90 0000000000000030 T shared_dispatch_stub_518
0000000000588cc0 0000000000000030 T shared_dispatch_stub_519
0000000000588cf0 0000000000000030 T shared_dispatch_stub_520
0000000000588d20 0000000000000030 T shared_dispatch_stub_521
0000000000588d50 0000000000000030 T shared_dispatch_stub_522
0000000000588d80 0000000000000030 T shared_dispatch_stub_523
0000000000588db0 0000000000000030 T shared_dispatch_stub_524
0000000000588de0 0000000000000030 T shared_dispatch_stub_525
0000000000588e10 0000000000000030 T shared_dispatch_stub_526
0000000000588e40 0000000000000030 T shared_dispatch_stub_527
0000000000588e70 0000000000000030 T shared_dispatch_stub_528
0000000000588ea0 0000000000000030 T shared_dispatch_stub_529
0000000000588ed0 0000000000000030 T shared_dispatch_stub_530
0000000000588f00 0000000000000030 T shared_dispatch_stub_531
0000000000588f30 0000000000000030 T shared_dispatch_stub_532
0000000000588f60 0000000000000030 T shared_dispatch_stub_533
0000000000588f90 0000000000000030 T shared_dispatch_stub_534
0000000000588fc0 0000000000000030 T shared_dispatch_stub_535
0000000000588ff0 0000000000000030 T shared_dispatch_stub_536
0000000000589020 0000000000000030 T shared_dispatch_stub_537
0000000000589050 0000000000000030 T shared_dispatch_stub_538
0000000000589080 0000000000000030 T shared_dispatch_stub_539
00000000005890b0 0000000000000030 T shared_dispatch_stub_540
00000000005890e0 0000000000000030 T shared_dispatch_stub_541
0000000000589110 0000000000000030 T shared_dispatch_stub_542
0000000000589140 0000000000000030 T shared_dispatch_stub_543
0000000000589170 0000000000000030 T shared_dispatch_stub_544
00000000005891a0 0000000000000030 T shared_dispatch_stub_545
00000000005891d0 0000000000000030 T shared_dispatch_stub_546
0000000000589200 0000000000000030 T shared_dispatch_stub_547
0000000000589230 0000000000000030 T shared_dispatch_stub_548
0000000000589260 0000000000000030 T shared_dispatch_stub_549
0000000000589290 0000000000000030 T shared_dispatch_stub_550
00000000005892c0 0000000000000030 T shared_dispatch_stub_551
00000000005892f0 0000000000000030 T shared_dispatch_stub_552
0000000000589320 0000000000000030 T shared_dispatch_stub_553
0000000000589350 0000000000000030 T shared_dispatch_stub_554
0000000000589380 0000000000000030 T shared_dispatch_stub_555
00000000005893b0 0000000000000030 T shared_dispatch_stub_556
00000000005893e0 0000000000000030 T shared_dispatch_stub_557
0000000000589410 0000000000000030 T shared_dispatch_stub_558
0000000000589440 0000000000000030 T shared_dispatch_stub_559
0000000000589470 0000000000000030 T shared_dispatch_stub_560
00000000005894a0 0000000000000030 T shared_dispatch_stub_561
00000000005894d0 0000000000000030 T shared_dispatch_stub_562
0000000000589500 0000000000000030 T shared_dispatch_stub_563
0000000000589530 0000000000000030 T shared_dispatch_stub_564
0000000000589560 0000000000000030 T shared_dispatch_stub_565
0000000000589590 0000000000000030 T shared_dispatch_stub_566
00000000005895c0 0000000000000030 T shared_dispatch_stub_567
00000000005895f0 0000000000000030 T shared_dispatch_stub_568
0000000000589620 0000000000000030 T shared_dispatch_stub_569
0000000000589650 0000000000000030 T shared_dispatch_stub_570
0000000000589680 0000000000000030 T shared_dispatch_stub_571
00000000005896b0 0000000000000030 T shared_dispatch_stub_572
00000000005896e0 0000000000000030 T shared_dispatch_stub_573
0000000000589710 0000000000000030 T shared_dispatch_stub_574
0000000000589740 0000000000000030 T shared_dispatch_stub_575
0000000000589770 0000000000000030 T shared_dispatch_stub_576
00000000005897a0 0000000000000030 T shared_dispatch_stub_577
00000000005897d0 0000000000000030 T shared_dispatch_stub_578
0000000000589800 0000000000000030 T shared_dispatch_stub_579
0000000000589830 0000000000000030 T shared_dispatch_stub_580
0000000000589860 0000000000000030 T shared_dispatch_stub_581
0000000000589890 0000000000000030 T shared_dispatch_stub_582
00000000005898c0 0000000000000028 T shared_dispatch_stub_583
00000000005898f0 0000000000000028 T shared_dispatch_stub_584
0000000000589920 0000000000000030 T shared_dispatch_stub_585
0000000000589950 0000000000000030 T shared_dispatch_stub_586
0000000000589980 0000000000000030 T shared_dispatch_stub_587
00000000005899b0 0000000000000030 T shared_dispatch_stub_588
00000000005899e0 0000000000000030 T shared_dispatch_stub_589
0000000000589a10 0000000000000030 T shared_dispatch_stub_590
0000000000589a40 0000000000000030 T shared_dispatch_stub_591
0000000000589a70 0000000000000030 T shared_dispatch_stub_592
0000000000589aa0 0000000000000030 T shared_dispatch_stub_593
0000000000589ad0 0000000000000030 T shared_dispatch_stub_594
0000000000589b00 0000000000000030 T shared_dispatch_stub_595
0000000000589b30 0000000000000030 T shared_dispatch_stub_596
0000000000589b60 0000000000000030 T shared_dispatch_stub_597
0000000000589b90 0000000000000030 T shared_dispatch_stub_598
0000000000589bc0 0000000000000030 T shared_dispatch_stub_599
0000000000589bf0 0000000000000030 T shared_dispatch_stub_600
0000000000589c20 0000000000000030 T shared_dispatch_stub_601
0000000000589c50 0000000000000030 T shared_dispatch_stub_602
0000000000589c80 0000000000000030 T shared_dispatch_stub_603
0000000000589cb0 0000000000000030 T shared_dispatch_stub_604
0000000000589ce0 0000000000000030 T shared_dispatch_stub_605
0000000000589d10 0000000000000030 T shared_dispatch_stub_606
0000000000589d40 0000000000000030 T shared_dispatch_stub_607
0000000000589d70 0000000000000030 T shared_dispatch_stub_608
0000000000589da0 0000000000000030 T shared_dispatch_stub_609
0000000000589dd0 0000000000000030 T shared_dispatch_stub_610
0000000000589e00 0000000000000030 T shared_dispatch_stub_611
0000000000589e30 0000000000000030 T shared_dispatch_stub_612
0000000000589e60 0000000000000030 T shared_dispatch_stub_613
0000000000589e90 0000000000000030 T shared_dispatch_stub_614
0000000000589ec0 0000000000000030 T shared_dispatch_stub_615
0000000000589ef0 0000000000000030 T shared_dispatch_stub_616
0000000000589f20 0000000000000030 T shared_dispatch_stub_617
0000000000589f50 0000000000000030 T shared_dispatch_stub_618
0000000000589f80 0000000000000030 T shared_dispatch_stub_619
0000000000589fb0 0000000000000028 T shared_dispatch_stub_620
0000000000589fe0 0000000000000030 T shared_dispatch_stub_621
000000000058a010 0000000000000030 T shared_dispatch_stub_622
000000000058a040 0000000000000030 T shared_dispatch_stub_623
000000000058a070 0000000000000030 T shared_dispatch_stub_624
000000000058a0a0 0000000000000030 T shared_dispatch_stub_625
000000000058a0d0 0000000000000030 T shared_dispatch_stub_626
000000000058a100 0000000000000030 T shared_dispatch_stub_627
000000000058a130 0000000000000030 T shared_dispatch_stub_628
000000000058a160 0000000000000030 T shared_dispatch_stub_629
000000000058a190 0000000000000030 T shared_dispatch_stub_630
000000000058a1c0 0000000000000030 T shared_dispatch_stub_631
000000000058a1f0 0000000000000030 T shared_dispatch_stub_632
000000000058a220 0000000000000030 T shared_dispatch_stub_633
000000000058a250 0000000000000030 T shared_dispatch_stub_634
000000000058a280 0000000000000030 T shared_dispatch_stub_635
000000000058a2b0 0000000000000030 T shared_dispatch_stub_636
000000000058a2e0 0000000000000030 T shared_dispatch_stub_637
000000000058a310 0000000000000030 T shared_dispatch_stub_638
000000000058a340 0000000000000030 T shared_dispatch_stub_639
000000000058a370 0000000000000030 T shared_dispatch_stub_640
000000000058a3a0 0000000000000030 T shared_dispatch_stub_641
000000000058a3d0 0000000000000030 T shared_dispatch_stub_642
000000000058a400 0000000000000030 T shared_dispatch_stub_643
000000000058a430 0000000000000030 T shared_dispatch_stub_644
000000000058a460 0000000000000030 T shared_dispatch_stub_645
000000000058a490 0000000000000030 T shared_dispatch_stub_646
000000000058a4c0 0000000000000030 T shared_dispatch_stub_647
000000000058a4f0 0000000000000030 T shared_dispatch_stub_648
000000000058a520 0000000000000030 T shared_dispatch_stub_649
000000000058a550 0000000000000028 T shared_dispatch_stub_650
000000000058a580 0000000000000030 T shared_dispatch_stub_651
000000000058a5b0 0000000000000030 T shared_dispatch_stub_652
000000000058a5e0 0000000000000030 T shared_dispatch_stub_653
000000000058a610 0000000000000030 T shared_dispatch_stub_654
000000000058a640 0000000000000030 T shared_dispatch_stub_655
000000000058a670 0000000000000030 T shared_dispatch_stub_656
000000000058a6a0 0000000000000030 T shared_dispatch_stub_657
000000000058a6d0 0000000000000030 T shared_dispatch_stub_658
000000000058a700 0000000000000030 T shared_dispatch_stub_659
000000000058a730 0000000000000030 T shared_dispatch_stub_660
000000000058a760 0000000000000030 T shared_dispatch_stub_661
000000000058a790 0000000000000030 T shared_dispatch_stub_662
000000000058a7c0 0000000000000030 T shared_dispatch_stub_663
000000000058a7f0 0000000000000030 T shared_dispatch_stub_664
000000000058a820 0000000000000030 T shared_dispatch_stub_665
000000000058a850 0000000000000030 T shared_dispatch_stub_666
000000000058a880 0000000000000030 T shared_dispatch_stub_667
000000000058a8b0 0000000000000030 T shared_dispatch_stub_668
000000000058a8e0 0000000000000030 T shared_dispatch_stub_669
000000000058a910 0000000000000030 T shared_dispatch_stub_670
000000000058a940 0000000000000030 T shared_dispatch_stub_671
000000000058a970 0000000000000030 T shared_dispatch_stub_672
000000000058a9a0 0000000000000030 T shared_dispatch_stub_673
000000000058a9d0 0000000000000030 T shared_dispatch_stub_674
000000000058aa00 0000000000000030 T shared_dispatch_stub_675
000000000058aa30 0000000000000030 T shared_dispatch_stub_676
000000000058aa60 0000000000000030 T shared_dispatch_stub_677
000000000058aa90 0000000000000030 T shared_dispatch_stub_678
000000000058aac0 0000000000000030 T shared_dispatch_stub_679
000000000058aaf0 0000000000000030 T shared_dispatch_stub_680
000000000058ab20 0000000000000030 T shared_dispatch_stub_681
000000000058ab50 0000000000000030 T shared_dispatch_stub_682
000000000058ab80 0000000000000030 T shared_dispatch_stub_683
000000000058abb0 0000000000000030 T shared_dispatch_stub_684
000000000058abe0 0000000000000030 T shared_dispatch_stub_685
000000000058ac10 0000000000000030 T shared_dispatch_stub_686
000000000058ac40 0000000000000030 T shared_dispatch_stub_687
000000000058ac70 0000000000000030 T shared_dispatch_stub_688
000000000058aca0 0000000000000030 T shared_dispatch_stub_689
000000000058acd0 0000000000000030 T shared_dispatch_stub_690
000000000058ad00 0000000000000030 T shared_dispatch_stub_691
000000000058ad30 0000000000000030 T shared_dispatch_stub_692
000000000058ad60 0000000000000030 T shared_dispatch_stub_693
000000000058ad90 0000000000000030 T shared_dispatch_stub_694
000000000058adc0 0000000000000030 T shared_dispatch_stub_695
000000000058adf0 0000000000000030 T shared_dispatch_stub_696
000000000058ae20 0000000000000030 T shared_dispatch_stub_697
000000000058ae50 0000000000000030 T shared_dispatch_stub_698
000000000058ae80 0000000000000030 T shared_dispatch_stub_699
000000000058aeb0 0000000000000030 T shared_dispatch_stub_700
000000000058aee0 0000000000000030 T shared_dispatch_stub_701
000000000058af10 0000000000000030 T shared_dispatch_stub_702
000000000058af40 0000000000000030 T shared_dispatch_stub_703
000000000058af70 0000000000000030 T shared_dispatch_stub_704
000000000058afa0 0000000000000030 T shared_dispatch_stub_705
000000000058afd0 0000000000000030 T shared_dispatch_stub_706
000000000058b000 0000000000000030 T shared_dispatch_stub_707
000000000058b030 0000000000000030 T shared_dispatch_stub_708
000000000058b060 0000000000000030 T shared_dispatch_stub_709
000000000058b090 0000000000000030 T shared_dispatch_stub_710
000000000058b0c0 0000000000000030 T shared_dispatch_stub_711
000000000058b0f0 0000000000000030 T shared_dispatch_stub_712
000000000058b120 0000000000000030 T shared_dispatch_stub_713
000000000058b150 0000000000000030 T shared_dispatch_stub_714
000000000058b180 0000000000000030 T shared_dispatch_stub_715
000000000058b1b0 0000000000000030 T shared_dispatch_stub_716
000000000058b1e0 0000000000000030 T shared_dispatch_stub_717
000000000058b210 0000000000000030 T shared_dispatch_stub_718
000000000058b240 0000000000000030 T shared_dispatch_stub_719
000000000058b270 0000000000000030 T shared_dispatch_stub_720
000000000058b2a0 0000000000000030 T shared_dispatch_stub_721
000000000058b2d0 0000000000000030 T shared_dispatch_stub_722
000000000058b300 0000000000000030 T shared_dispatch_stub_723
000000000058b330 0000000000000030 T shared_dispatch_stub_724
000000000058b360 0000000000000030 T shared_dispatch_stub_725
000000000058b390 0000000000000030 T shared_dispatch_stub_726
000000000058b3c0 0000000000000030 T shared_dispatch_stub_727
000000000058b3f0 0000000000000030 T shared_dispatch_stub_728
000000000058b420 0000000000000030 T shared_dispatch_stub_729
000000000058b450 0000000000000030 T shared_dispatch_stub_730
000000000058b480 0000000000000030 T shared_dispatch_stub_731
000000000058b4b0 0000000000000030 T shared_dispatch_stub_732
000000000058b4e0 0000000000000030 T shared_dispatch_stub_733
000000000058b510 0000000000000030 T shared_dispatch_stub_734
000000000058b540 0000000000000030 T shared_dispatch_stub_735
000000000058b570 0000000000000030 T shared_dispatch_stub_736
000000000058b5a0 0000000000000030 T shared_dispatch_stub_737
000000000058b5d0 0000000000000030 T shared_dispatch_stub_738
000000000058b600 0000000000000030 T shared_dispatch_stub_739
000000000058b630 0000000000000030 T shared_dispatch_stub_740
000000000058b660 0000000000000030 T shared_dispatch_stub_741
000000000058b690 0000000000000030 T shared_dispatch_stub_742
000000000058b6c0 0000000000000030 T shared_dispatch_stub_743
000000000058b6f0 0000000000000030 T shared_dispatch_stub_744
000000000058b720 0000000000000030 T shared_dispatch_stub_745
000000000058b750 0000000000000030 T shared_dispatch_stub_746
000000000058b780 0000000000000030 T shared_dispatch_stub_747
000000000058b7b0 0000000000000030 T shared_dispatch_stub_748
000000000058b7e0 0000000000000030 T shared_dispatch_stub_749
000000000058b810 0000000000000030 T shared_dispatch_stub_750
000000000058b840 0000000000000030 T shared_dispatch_stub_751
000000000058b870 0000000000000030 T shared_dispatch_stub_752
000000000058b8a0 0000000000000030 T shared_dispatch_stub_753
000000000058b8d0 0000000000000030 T shared_dispatch_stub_754
000000000058b900 0000000000000030 T shared_dispatch_stub_755
000000000058b930 0000000000000030 T shared_dispatch_stub_756
000000000058b960 0000000000000030 T shared_dispatch_stub_757
000000000058b990 0000000000000030 T shared_dispatch_stub_758
000000000058b9c0 0000000000000030 T shared_dispatch_stub_759
000000000058b9f0 0000000000000030 T shared_dispatch_stub_760
000000000058ba20 0000000000000030 T shared_dispatch_stub_761
000000000058ba50 0000000000000030 T shared_dispatch_stub_762
000000000058ba80 0000000000000030 T shared_dispatch_stub_763
000000000058bab0 0000000000000030 T shared_dispatch_stub_764
000000000058bae0 0000000000000030 T shared_dispatch_stub_765
000000000058bb10 0000000000000030 T shared_dispatch_stub_766
000000000058bb40 0000000000000030 T shared_dispatch_stub_767
000000000058bb70 0000000000000030 T shared_dispatch_stub_768
000000000058bba0 0000000000000030 T shared_dispatch_stub_769
000000000058bbd0 0000000000000030 T shared_dispatch_stub_770
000000000058bc00 0000000000000030 T shared_dispatch_stub_771
000000000058bc30 0000000000000030 T shared_dispatch_stub_772
000000000058bc60 0000000000000030 T shared_dispatch_stub_773
000000000058bc90 0000000000000030 T shared_dispatch_stub_774
000000000058bcc0 0000000000000030 T shared_dispatch_stub_775
000000000058bcf0 0000000000000030 T shared_dispatch_stub_776
000000000058bd20 0000000000000030 T shared_dispatch_stub_777
000000000058bd50 0000000000000030 T shared_dispatch_stub_778
000000000058bd80 0000000000000030 T shared_dispatch_stub_779
000000000058bdb0 0000000000000030 T shared_dispatch_stub_780
000000000058bde0 0000000000000030 T shared_dispatch_stub_781
000000000058be10 0000000000000030 T shared_dispatch_stub_782
000000000058be40 0000000000000030 T shared_dispatch_stub_783
000000000058be70 0000000000000030 T shared_dispatch_stub_784
000000000058bea0 0000000000000030 T shared_dispatch_stub_785
000000000058bed0 0000000000000030 T shared_dispatch_stub_786
000000000058bf00 0000000000000030 T shared_dispatch_stub_787
000000000058bf30 0000000000000030 T shared_dispatch_stub_788
000000000058bf60 0000000000000030 T shared_dispatch_stub_789
000000000058bf90 0000000000000030 T shared_dispatch_stub_790
000000000058bfc0 0000000000000030 T shared_dispatch_stub_791
000000000058bff0 0000000000000030 T shared_dispatch_stub_792
000000000058c020 0000000000000030 T shared_dispatch_stub_793
000000000058c050 0000000000000030 T shared_dispatch_stub_794
000000000058c080 0000000000000030 T shared_dispatch_stub_795
000000000058c0b0 0000000000000030 T shared_dispatch_stub_796
000000000058c0e0 0000000000000030 T shared_dispatch_stub_797
000000000058c110 0000000000000030 T shared_dispatch_stub_798
000000000058c140 0000000000000030 T shared_dispatch_stub_799
000000000058c170 0000000000000030 T shared_dispatch_stub_800
000000000058c1a0 0000000000000030 T shared_dispatch_stub_801
000000000058c1d0 0000000000000030 T shared_dispatch_stub_802
000000000058c200 0000000000000030 T shared_dispatch_stub_803
000000000058c230 0000000000000030 T shared_dispatch_stub_804
000000000058c260 0000000000000030 T shared_dispatch_stub_805
000000000058c290 0000000000000030 T shared_dispatch_stub_806
000000000058c2c0 0000000000000028 T shared_dispatch_stub_807
000000000058c2f0 0000000000000028 T shared_dispatch_stub_808
000000000058c320 0000000000000030 T shared_dispatch_stub_809
000000000058c350 0000000000000030 T shared_dispatch_stub_810
000000000058c380 0000000000000030 T shared_dispatch_stub_811
000000000058c3b0 0000000000000030 T shared_dispatch_stub_812
000000000058c3e0 0000000000000028 T shared_dispatch_stub_813
000000000058c410 0000000000000028 T shared_dispatch_stub_814
000000000058c440 0000000000000030 T shared_dispatch_stub_815
000000000058c470 0000000000000028 T shared_dispatch_stub_816
000000000058c4a0 0000000000000030 T shared_dispatch_stub_817
000000000058c4d0 0000000000000030 T shared_dispatch_stub_818
000000000058c500 0000000000000030 T shared_dispatch_stub_819
000000000058c530 0000000000000030 T shared_dispatch_stub_820
000000000058c560 0000000000000030 T shared_dispatch_stub_821
000000000058c590 0000000000000030 T shared_dispatch_stub_822
000000000058c5c0 0000000000000030 T shared_dispatch_stub_823
000000000058c5f0 0000000000000030 T shared_dispatch_stub_824
000000000058c620 0000000000000030 T shared_dispatch_stub_825
000000000058c650 0000000000000030 T shared_dispatch_stub_826
000000000058c680 0000000000000030 T shared_dispatch_stub_827
000000000058c6b0 0000000000000030 T shared_dispatch_stub_828
000000000058c6e0 0000000000000030 T shared_dispatch_stub_829
000000000058c710 0000000000000030 T shared_dispatch_stub_830
000000000058c740 0000000000000030 T shared_dispatch_stub_831
000000000058c770 0000000000000030 T shared_dispatch_stub_832
000000000058c7a0 0000000000000030 T shared_dispatch_stub_833
000000000058c7d0 0000000000000030 T shared_dispatch_stub_834
000000000058c800 0000000000000030 T shared_dispatch_stub_835
000000000058c830 0000000000000030 T shared_dispatch_stub_836
000000000058c860 0000000000000030 T shared_dispatch_stub_837
000000000058c890 0000000000000030 T shared_dispatch_stub_838
000000000058c8c0 0000000000000030 T shared_dispatch_stub_839
000000000058c8f0 0000000000000030 T shared_dispatch_stub_840
000000000058c920 0000000000000028 T shared_dispatch_stub_841
000000000058c950 0000000000000030 T shared_dispatch_stub_842
000000000058c980 0000000000000030 T shared_dispatch_stub_843
000000000058c9b0 0000000000000030 T shared_dispatch_stub_844
000000000058c9e0 0000000000000030 T shared_dispatch_stub_845
000000000058ca10 0000000000000030 T shared_dispatch_stub_846
000000000058ca40 0000000000000030 T shared_dispatch_stub_847
000000000058ca70 0000000000000030 T shared_dispatch_stub_848
000000000058caa0 0000000000000030 T shared_dispatch_stub_849
000000000058cad0 0000000000000030 T shared_dispatch_stub_850
000000000058cb00 0000000000000030 T shared_dispatch_stub_851
000000000058cb30 0000000000000030 T shared_dispatch_stub_852
000000000058cb60 0000000000000030 T shared_dispatch_stub_853
000000000058cb90 0000000000000030 T shared_dispatch_stub_854
000000000058cbc0 0000000000000030 T shared_dispatch_stub_855
000000000058cbf0 0000000000000030 T shared_dispatch_stub_856
000000000058cc20 0000000000000030 T shared_dispatch_stub_857
000000000058cc50 0000000000000030 T shared_dispatch_stub_858
000000000058cc80 0000000000000030 T shared_dispatch_stub_859
000000000058ccb0 0000000000000030 T shared_dispatch_stub_860
000000000058cce0 0000000000000030 T shared_dispatch_stub_861
000000000058cd10 0000000000000030 T shared_dispatch_stub_862
000000000058cd40 0000000000000030 T shared_dispatch_stub_863
000000000058cd70 0000000000000030 T shared_dispatch_stub_864
000000000058cda0 0000000000000030 T shared_dispatch_stub_865
000000000058cdd0 0000000000000030 T shared_dispatch_stub_866
000000000058ce00 0000000000000030 T shared_dispatch_stub_867
000000000058ce30 0000000000000030 T shared_dispatch_stub_868
000000000058ce60 0000000000000030 T shared_dispatch_stub_869
000000000058ce90 0000000000000030 T shared_dispatch_stub_870
000000000058cec0 0000000000000030 T shared_dispatch_stub_871
000000000058cef0 0000000000000030 T shared_dispatch_stub_872
000000000058cf20 0000000000000030 T shared_dispatch_stub_873
000000000058cf50 0000000000000030 T shared_dispatch_stub_874
000000000058cf80 0000000000000030 T shared_dispatch_stub_875
000000000058cfb0 0000000000000030 T shared_dispatch_stub_876
000000000058cfe0 0000000000000030 T shared_dispatch_stub_877
000000000058d010 0000000000000030 T shared_dispatch_stub_878
000000000058d040 0000000000000030 T shared_dispatch_stub_879
000000000058d070 0000000000000030 T shared_dispatch_stub_880
000000000058d0a0 0000000000000030 T shared_dispatch_stub_881
000000000058d0d0 0000000000000030 T shared_dispatch_stub_882
000000000058d100 0000000000000030 T shared_dispatch_stub_883
000000000058d130 0000000000000030 T shared_dispatch_stub_884
000000000058d160 0000000000000030 T shared_dispatch_stub_885
000000000058d190 0000000000000030 T shared_dispatch_stub_886
000000000058d1c0 0000000000000030 T shared_dispatch_stub_887
000000000058d1f0 0000000000000030 T shared_dispatch_stub_888
000000000058d220 0000000000000030 T shared_dispatch_stub_889
000000000058d250 0000000000000030 T shared_dispatch_stub_890
000000000058d280 0000000000000030 T shared_dispatch_stub_891
000000000058d2b0 0000000000000030 T shared_dispatch_stub_892
000000000058d2e0 0000000000000030 T shared_dispatch_stub_893
000000000058d310 0000000000000030 T shared_dispatch_stub_894
000000000058d340 0000000000000030 T shared_dispatch_stub_895
000000000058d370 0000000000000030 T shared_dispatch_stub_896
000000000058d3a0 0000000000000030 T shared_dispatch_stub_897
000000000058d3d0 0000000000000030 T shared_dispatch_stub_898
000000000058d400 0000000000000030 T shared_dispatch_stub_899
000000000058d430 0000000000000030 T shared_dispatch_stub_900
000000000058d460 0000000000000030 T shared_dispatch_stub_901
000000000058d490 0000000000000030 T shared_dispatch_stub_902
000000000058d4c0 0000000000000030 T shared_dispatch_stub_903
000000000058d4f0 0000000000000030 T shared_dispatch_stub_904
000000000058d520 0000000000000030 T shared_dispatch_stub_905
000000000058d550 0000000000000030 T shared_dispatch_stub_906
000000000058d580 0000000000000030 T shared_dispatch_stub_907
000000000058d5b0 0000000000000030 T shared_dispatch_stub_908
000000000058d5e0 0000000000000030 T shared_dispatch_stub_909
000000000058d610 0000000000000030 T shared_dispatch_stub_910
000000000058d640 0000000000000030 T shared_dispatch_stub_911
000000000058d670 0000000000000030 T shared_dispatch_stub_912
000000000058d6a0 0000000000000030 T shared_dispatch_stub_913
000000000058d6d0 0000000000000030 T shared_dispatch_stub_914
000000000058d700 0000000000000030 T shared_dispatch_stub_915
000000000058d730 0000000000000030 T shared_dispatch_stub_916
000000000058d760 0000000000000030 T shared_dispatch_stub_917
000000000058d790 0000000000000030 T shared_dispatch_stub_918
000000000058d7c0 0000000000000030 T shared_dispatch_stub_919
000000000058d7f0 0000000000000030 T shared_dispatch_stub_920
000000000058d820 0000000000000030 T shared_dispatch_stub_921
000000000058d850 0000000000000030 T shared_dispatch_stub_922
000000000058d880 0000000000000030 T shared_dispatch_stub_923
000000000058d8b0 0000000000000030 T shared_dispatch_stub_924
000000000058d8e0 0000000000000030 T shared_dispatch_stub_925
000000000058d910 0000000000000030 T shared_dispatch_stub_926
000000000058d940 0000000000000030 T shared_dispatch_stub_927
000000000058d970 0000000000000030 T shared_dispatch_stub_928
000000000058d9a0 0000000000000030 T shared_dispatch_stub_929
000000000058d9d0 0000000000000030 T shared_dispatch_stub_930
000000000058da00 0000000000000030 T shared_dispatch_stub_931
000000000058da30 0000000000000030 T shared_dispatch_stub_932
000000000058da60 0000000000000030 T shared_dispatch_stub_933
000000000058da90 0000000000000030 T shared_dispatch_stub_934
000000000058dac0 0000000000000030 T shared_dispatch_stub_935
000000000058daf0 0000000000000030 T shared_dispatch_stub_936
000000000058db20 0000000000000030 T shared_dispatch_stub_937
000000000058db50 0000000000000030 T shared_dispatch_stub_938
000000000058db80 0000000000000030 T shared_dispatch_stub_939
000000000058dbb0 0000000000000030 T shared_dispatch_stub_940
000000000058dbe0 0000000000000030 T shared_dispatch_stub_941
000000000058dc10 0000000000000030 T shared_dispatch_stub_942
000000000058dc40 0000000000000030 T shared_dispatch_stub_943
000000000058dc70 0000000000000030 T shared_dispatch_stub_944
000000000058dca0 0000000000000030 T shared_dispatch_stub_945
000000000058dcd0 0000000000000030 T shared_dispatch_stub_946
000000000058dd00 0000000000000030 T shared_dispatch_stub_947
000000000058dd30 0000000000000030 T shared_dispatch_stub_948
000000000058dd60 0000000000000030 T shared_dispatch_stub_949
000000000058dd90 0000000000000030 T shared_dispatch_stub_950
000000000058ddc0 0000000000000030 T shared_dispatch_stub_951
000000000058ddf0 0000000000000030 T shared_dispatch_stub_952
000000000058de20 0000000000000030 T shared_dispatch_stub_953
000000000058de50 0000000000000030 T shared_dispatch_stub_954
000000000058de80 0000000000000030 T shared_dispatch_stub_955
000000000058deb0 0000000000000030 T shared_dispatch_stub_956
000000000058dee0 0000000000000030 T shared_dispatch_stub_957
000000000058df10 0000000000000030 T shared_dispatch_stub_958
000000000058df40 0000000000000030 T shared_dispatch_stub_959
000000000058df70 0000000000000030 T shared_dispatch_stub_960
000000000058dfa0 0000000000000030 T shared_dispatch_stub_961
000000000058dfd0 0000000000000030 T shared_dispatch_stub_962
000000000058e000 0000000000000030 T shared_dispatch_stub_963
000000000058e030 0000000000000030 T shared_dispatch_stub_964
000000000058e060 0000000000000030 T shared_dispatch_stub_965
000000000058e090 0000000000000030 T shared_dispatch_stub_966
000000000058e0c0 0000000000000030 T shared_dispatch_stub_967
000000000058e0f0 0000000000000030 T shared_dispatch_stub_968
000000000058e120 0000000000000030 T shared_dispatch_stub_969
000000000058e150 0000000000000030 T shared_dispatch_stub_970
000000000058e180 0000000000000030 T shared_dispatch_stub_971
000000000058e1b0 0000000000000030 T shared_dispatch_stub_972
000000000058e1e0 0000000000000030 T shared_dispatch_stub_973
000000000058e210 0000000000000030 T shared_dispatch_stub_974
000000000058e240 0000000000000030 T shared_dispatch_stub_975
000000000058e270 0000000000000030 T shared_dispatch_stub_976
000000000058e2a0 0000000000000030 T shared_dispatch_stub_977
000000000058e2d0 0000000000000030 T shared_dispatch_stub_978
000000000058e300 0000000000000030 T shared_dispatch_stub_979
000000000058e330 0000000000000030 T shared_dispatch_stub_980
000000000058e360 0000000000000030 T shared_dispatch_stub_981
000000000058e390 0000000000000030 T shared_dispatch_stub_982
000000000058e3c0 0000000000000030 T shared_dispatch_stub_983
000000000058e3f0 0000000000000030 T shared_dispatch_stub_984
000000000058e420 0000000000000030 T shared_dispatch_stub_985
000000000058e450 0000000000000030 T shared_dispatch_stub_986
000000000058e480 0000000000000030 T shared_dispatch_stub_987
000000000058e4b0 0000000000000030 T shared_dispatch_stub_988
000000000058e4e0 0000000000000030 T shared_dispatch_stub_989
000000000058e510 0000000000000030 T shared_dispatch_stub_990
000000000058e540 0000000000000030 T shared_dispatch_stub_991
000000000058e570 0000000000000030 T shared_dispatch_stub_992
000000000058e5a0 0000000000000030 T shared_dispatch_stub_993
000000000058e5d0 0000000000000030 T shared_dispatch_stub_994
000000000058e600 0000000000000030 T shared_dispatch_stub_995
000000000058e630 0000000000000030 T shared_dispatch_stub_996
000000000058e660 0000000000000030 T shared_dispatch_stub_997
000000000058e690 0000000000000030 T shared_dispatch_stub_998
000000000058e6c0 0000000000000030 T shared_dispatch_stub_999
000000000058e6f0 0000000000000030 T shared_dispatch_stub_1000
000000000058e720 0000000000000030 T shared_dispatch_stub_1001
000000000058e750 0000000000000030 T shared_dispatch_stub_1002
000000000058e780 0000000000000030 T shared_dispatch_stub_1003
000000000058e7b0 0000000000000030 T shared_dispatch_stub_1004
000000000058e7e0 0000000000000030 T shared_dispatch_stub_1005
000000000058e810 0000000000000030 T shared_dispatch_stub_1006
000000000058e840 0000000000000030 T shared_dispatch_stub_1007
000000000058e870 0000000000000030 T shared_dispatch_stub_1008
000000000058e8a0 0000000000000030 T shared_dispatch_stub_1009
000000000058e8d0 0000000000000030 T shared_dispatch_stub_1010
000000000058e900 0000000000000030 T shared_dispatch_stub_1011
000000000058e930 0000000000000030 T shared_dispatch_stub_1012
000000000058e960 0000000000000030 T shared_dispatch_stub_1013
000000000058e990 0000000000000030 T shared_dispatch_stub_1014
000000000058e9c0 0000000000000030 T shared_dispatch_stub_1015
000000000058e9f0 0000000000000030 T shared_dispatch_stub_1016
000000000058ea20 0000000000000030 T shared_dispatch_stub_1017
000000000058ea50 0000000000000030 T shared_dispatch_stub_1018
000000000058ea80 0000000000000030 T shared_dispatch_stub_1019
000000000058eab0 0000000000000030 T shared_dispatch_stub_1020
000000000058eae0 0000000000000030 T shared_dispatch_stub_1021
000000000058eb10 0000000000000030 T shared_dispatch_stub_1022
000000000058eb40 0000000000000030 T shared_dispatch_stub_1023
000000000058eb70 0000000000000030 T shared_dispatch_stub_1024
000000000058eba0 0000000000000030 T shared_dispatch_stub_1025
000000000058ebd0 0000000000000030 T shared_dispatch_stub_1026
000000000058ec00 0000000000000030 T shared_dispatch_stub_1027
000000000058ec30 0000000000000030 T shared_dispatch_stub_1028
000000000058ec60 0000000000000030 T shared_dispatch_stub_1029
000000000058ec90 0000000000000030 T shared_dispatch_stub_1030
000000000058ecc0 0000000000000030 T shared_dispatch_stub_1031
000000000058ecf0 0000000000000030 T shared_dispatch_stub_1032
000000000058ed20 0000000000000030 T shared_dispatch_stub_1033
000000000058ed50 0000000000000030 T shared_dispatch_stub_1034
000000000058ed80 0000000000000030 T shared_dispatch_stub_1035
000000000058edb0 0000000000000030 T shared_dispatch_stub_1036
000000000058ede0 0000000000000030 T shared_dispatch_stub_1037
000000000058ee10 0000000000000030 T shared_dispatch_stub_1038
000000000058ee40 0000000000000030 T shared_dispatch_stub_1039
000000000058ee70 0000000000000030 T shared_dispatch_stub_1040
000000000058eea0 0000000000000030 T shared_dispatch_stub_1041
000000000058eed0 0000000000000030 T shared_dispatch_stub_1042
000000000058ef00 0000000000000030 T shared_dispatch_stub_1043
000000000058ef30 0000000000000030 T shared_dispatch_stub_1044
000000000058ef60 0000000000000030 T shared_dispatch_stub_1045
000000000058ef90 0000000000000030 T shared_dispatch_stub_1046
000000000058efc0 0000000000000030 T shared_dispatch_stub_1047
000000000058eff0 0000000000000030 T shared_dispatch_stub_1048
000000000058f020 0000000000000030 T shared_dispatch_stub_1049
000000000058f050 0000000000000030 T shared_dispatch_stub_1050
000000000058f080 0000000000000030 T shared_dispatch_stub_1051
000000000058f0b0 0000000000000030 T shared_dispatch_stub_1052
000000000058f0e0 0000000000000030 T shared_dispatch_stub_1053
000000000058f110 0000000000000030 T shared_dispatch_stub_1054
000000000058f140 0000000000000030 T shared_dispatch_stub_1055
000000000058f170 0000000000000030 T shared_dispatch_stub_1056
000000000058f1a0 0000000000000030 T shared_dispatch_stub_1057
000000000058f1d0 0000000000000030 T shared_dispatch_stub_1058
000000000058f200 0000000000000030 T shared_dispatch_stub_1059
000000000058f230 0000000000000030 T shared_dispatch_stub_1060
000000000058f260 0000000000000030 T shared_dispatch_stub_1061
000000000058f290 0000000000000030 T shared_dispatch_stub_1062
000000000058f2c0 0000000000000030 T shared_dispatch_stub_1063
000000000058f2f0 0000000000000030 T shared_dispatch_stub_1064
000000000058f320 0000000000000030 T shared_dispatch_stub_1065
000000000058f350 0000000000000030 T shared_dispatch_stub_1066
000000000058f380 0000000000000030 T shared_dispatch_stub_1067
000000000058f3b0 0000000000000030 T shared_dispatch_stub_1068
000000000058f3e0 0000000000000028 T shared_dispatch_stub_1069
000000000058f410 0000000000000030 T shared_dispatch_stub_1070
000000000058f440 0000000000000030 T shared_dispatch_stub_1071
000000000058f470 0000000000000030 T shared_dispatch_stub_1072
000000000058f4a0 0000000000000030 T shared_dispatch_stub_1073
000000000058f4d0 0000000000000030 T shared_dispatch_stub_1074
000000000058f500 0000000000000030 T shared_dispatch_stub_1075
000000000058f530 0000000000000030 T shared_dispatch_stub_1076
000000000058f560 0000000000000030 T shared_dispatch_stub_1077
000000000058f590 0000000000000030 T shared_dispatch_stub_1078
000000000058f5c0 0000000000000028 T shared_dispatch_stub_1079
000000000058f5f0 0000000000000030 T shared_dispatch_stub_1080
000000000058f620 0000000000000030 T shared_dispatch_stub_1081
000000000058f650 0000000000000030 T shared_dispatch_stub_1082
000000000058f680 0000000000000030 T shared_dispatch_stub_1083
000000000058f6b0 0000000000000030 T shared_dispatch_stub_1084
000000000058f6e0 0000000000000030 T shared_dispatch_stub_1085
000000000058f710 0000000000000030 T shared_dispatch_stub_1086
000000000058f740 0000000000000030 T shared_dispatch_stub_1087
000000000058f770 0000000000000030 T shared_dispatch_stub_1088
000000000058f7a0 0000000000000030 T shared_dispatch_stub_1089
000000000058f7d0 0000000000000030 T shared_dispatch_stub_1090
000000000058f800 0000000000000030 T shared_dispatch_stub_1091
000000000058f830 0000000000000030 T shared_dispatch_stub_1092
000000000058f860 0000000000000030 T shared_dispatch_stub_1093
000000000058f890 0000000000000030 T shared_dispatch_stub_1094
000000000058f8c0 0000000000000030 T shared_dispatch_stub_1095
000000000058f8f0 0000000000000030 T shared_dispatch_stub_1096
000000000058f920 0000000000000030 T shared_dispatch_stub_1097
000000000058f950 0000000000000030 T shared_dispatch_stub_1098
000000000058f980 0000000000000030 T shared_dispatch_stub_1099
000000000058f9b0 0000000000000030 T shared_dispatch_stub_1100
000000000058f9e0 0000000000000030 T shared_dispatch_stub_1101
000000000058fa10 0000000000000030 T shared_dispatch_stub_1102
000000000058fa40 0000000000000030 T shared_dispatch_stub_1103
000000000058fa70 0000000000000030 T shared_dispatch_stub_1104
000000000058faa0 0000000000000030 T shared_dispatch_stub_1105
000000000058fad0 0000000000000030 T shared_dispatch_stub_1106
000000000058fb00 0000000000000030 T shared_dispatch_stub_1107
000000000058fb30 0000000000000030 T shared_dispatch_stub_1108
000000000058fb60 0000000000000030 T shared_dispatch_stub_1109
000000000058fb90 0000000000000030 T shared_dispatch_stub_1110
000000000058fbc0 0000000000000030 T shared_dispatch_stub_1111
000000000058fbf0 0000000000000030 T shared_dispatch_stub_1112
000000000058fc20 0000000000000030 T shared_dispatch_stub_1113
000000000058fc50 0000000000000030 T shared_dispatch_stub_1114
000000000058fc80 0000000000000030 T shared_dispatch_stub_1115
000000000058fcb0 0000000000000030 T shared_dispatch_stub_1116
000000000058fce0 0000000000000030 T shared_dispatch_stub_1117
000000000058fd10 0000000000000030 T shared_dispatch_stub_1118
000000000058fd40 0000000000000030 T shared_dispatch_stub_1119
000000000058fd70 0000000000000030 T shared_dispatch_stub_1120
000000000058fda0 0000000000000030 T shared_dispatch_stub_1121
000000000058fdd0 0000000000000030 T shared_dispatch_stub_1122
000000000058fe00 0000000000000030 T shared_dispatch_stub_1123
000000000058fe30 0000000000000030 T shared_dispatch_stub_1124
000000000058fe60 0000000000000030 T shared_dispatch_stub_1125
000000000058fe90 0000000000000030 T shared_dispatch_stub_1126
000000000058fec0 0000000000000030 T shared_dispatch_stub_1127
000000000058fef0 0000000000000030 T shared_dispatch_stub_1128
000000000058ff20 0000000000000030 T shared_dispatch_stub_1129
000000000058ff50 0000000000000030 T shared_dispatch_stub_1130
000000000058ff80 0000000000000030 T shared_dispatch_stub_1131
000000000058ffb0 0000000000000030 T shared_dispatch_stub_1132
000000000058ffe0 0000000000000030 T shared_dispatch_stub_1133
0000000000590010 0000000000000030 T shared_dispatch_stub_1134
0000000000590040 0000000000000030 T shared_dispatch_stub_1135
0000000000590070 0000000000000030 T shared_dispatch_stub_1136
00000000005900a0 0000000000000030 T shared_dispatch_stub_1137
00000000005900d0 0000000000000030 T shared_dispatch_stub_1138
0000000000590100 0000000000000030 T shared_dispatch_stub_1139
0000000000590130 0000000000000030 T shared_dispatch_stub_1140
0000000000590160 0000000000000030 T shared_dispatch_stub_1141
0000000000590190 0000000000000030 T shared_dispatch_stub_1142
00000000005901c0 0000000000000030 T shared_dispatch_stub_1143
00000000005901f0 0000000000000030 T shared_dispatch_stub_1144
0000000000590220 0000000000000030 T shared_dispatch_stub_1145
0000000000590250 0000000000000030 T shared_dispatch_stub_1146
0000000000590280 0000000000000030 T shared_dispatch_stub_1147
00000000005902b0 0000000000000030 T shared_dispatch_stub_1148
00000000005902e0 0000000000000030 T shared_dispatch_stub_1149
0000000000590310 0000000000000030 T shared_dispatch_stub_1150
0000000000590340 0000000000000030 T shared_dispatch_stub_1151
0000000000590370 0000000000000030 T shared_dispatch_stub_1152
00000000005903a0 0000000000000030 T shared_dispatch_stub_1153
00000000005903d0 0000000000000030 T shared_dispatch_stub_1154
0000000000590400 0000000000000030 T shared_dispatch_stub_1155
0000000000590430 0000000000000030 T shared_dispatch_stub_1156
0000000000590460 0000000000000028 T shared_dispatch_stub_1157
0000000000590490 0000000000000030 T shared_dispatch_stub_1158
00000000005904c0 0000000000000030 T shared_dispatch_stub_1159
00000000005904f0 0000000000000030 T shared_dispatch_stub_1160
0000000000590520 0000000000000030 T shared_dispatch_stub_1161
0000000000590550 0000000000000030 T shared_dispatch_stub_1162
0000000000590580 0000000000000030 T shared_dispatch_stub_1163
00000000005905b0 0000000000000030 T shared_dispatch_stub_1164
00000000005905e0 0000000000000030 T shared_dispatch_stub_1165
0000000000590610 0000000000000030 T shared_dispatch_stub_1166
0000000000590640 0000000000000030 T shared_dispatch_stub_1167
0000000000590670 0000000000000030 T shared_dispatch_stub_1168
00000000005906a0 0000000000000028 T shared_dispatch_stub_1169
00000000005906d0 0000000000000030 T shared_dispatch_stub_1170
0000000000590700 0000000000000028 T shared_dispatch_stub_1171
0000000000590730 0000000000000030 T shared_dispatch_stub_1172
0000000000590760 0000000000000030 T shared_dispatch_stub_1173
0000000000590790 0000000000000028 T shared_dispatch_stub_1174
00000000005907c0 0000000000000030 T shared_dispatch_stub_1175
00000000005907f0 0000000000000028 T shared_dispatch_stub_1176
0000000000590820 0000000000000028 T shared_dispatch_stub_1177
0000000000590850 0000000000000030 T shared_dispatch_stub_1178
0000000000590880 0000000000000028 T shared_dispatch_stub_1179
00000000005908b0 0000000000000030 T shared_dispatch_stub_1180
00000000005908e0 0000000000000030 T shared_dispatch_stub_1181
0000000000590910 0000000000000030 T shared_dispatch_stub_1182
0000000000590940 0000000000000030 T shared_dispatch_stub_1183
0000000000590970 0000000000000030 T shared_dispatch_stub_1184
00000000005909a0 0000000000000030 T shared_dispatch_stub_1185
00000000005909d0 0000000000000030 T shared_dispatch_stub_1186
0000000000590a00 0000000000000030 T shared_dispatch_stub_1187
0000000000590a30 0000000000000030 T shared_dispatch_stub_1188
0000000000590a60 0000000000000030 T shared_dispatch_stub_1189
0000000000590a90 0000000000000030 T shared_dispatch_stub_1190
0000000000590ac0 0000000000000030 T shared_dispatch_stub_1191
0000000000590af0 0000000000000030 T shared_dispatch_stub_1192
0000000000590b20 0000000000000030 T shared_dispatch_stub_1193
0000000000590b50 0000000000000030 T shared_dispatch_stub_1194
0000000000590b80 0000000000000030 T shared_dispatch_stub_1195
0000000000590bb0 0000000000000030 T shared_dispatch_stub_1196
0000000000590be0 0000000000000030 T shared_dispatch_stub_1197
0000000000590c10 0000000000000030 T shared_dispatch_stub_1198
0000000000590c40 0000000000000030 T shared_dispatch_stub_1199
0000000000590c70 0000000000000030 T shared_dispatch_stub_1200
0000000000590ca0 0000000000000030 T shared_dispatch_stub_1201
0000000000590cd0 0000000000000030 T shared_dispatch_stub_1202
0000000000590d00 0000000000000030 T shared_dispatch_stub_1203
0000000000590d30 0000000000000030 T shared_dispatch_stub_1204
0000000000590d60 0000000000000030 T shared_dispatch_stub_1205
0000000000590d90 0000000000000030 T shared_dispatch_stub_1206
0000000000590dc0 0000000000000030 T shared_dispatch_stub_1207
0000000000590df0 0000000000000030 T shared_dispatch_stub_1208
0000000000590e20 0000000000000030 T shared_dispatch_stub_1209
0000000000590e50 0000000000000030 T shared_dispatch_stub_1210
0000000000590e80 0000000000000030 T shared_dispatch_stub_1211
0000000000590eb0 0000000000000030 T shared_dispatch_stub_1212
0000000000590ee0 0000000000000030 T shared_dispatch_stub_1213
0000000000590f10 0000000000000030 T shared_dispatch_stub_1214
0000000000590f40 0000000000000030 T shared_dispatch_stub_1215
0000000000590f70 0000000000000030 T shared_dispatch_stub_1216
0000000000590fa0 0000000000000030 T shared_dispatch_stub_1217
0000000000590fd0 0000000000000030 T shared_dispatch_stub_1218
0000000000591000 0000000000000030 T shared_dispatch_stub_1219
0000000000591030 0000000000000030 T shared_dispatch_stub_1220
0000000000591060 0000000000000030 T shared_dispatch_stub_1221
0000000000591090 0000000000000030 T shared_dispatch_stub_1222
00000000005910c0 0000000000000030 T shared_dispatch_stub_1223
00000000005910f0 0000000000000030 T shared_dispatch_stub_1224
0000000000591120 0000000000000030 T shared_dispatch_stub_1225
0000000000591150 0000000000000030 T shared_dispatch_stub_1226
0000000000591180 0000000000000030 T shared_dispatch_stub_1227
00000000005911b0 0000000000000030 T shared_dispatch_stub_1228
00000000005911e0 0000000000000030 T shared_dispatch_stub_1229
0000000000591210 0000000000000030 T shared_dispatch_stub_1230
0000000000591240 0000000000000030 T shared_dispatch_stub_1231
0000000000591270 0000000000000030 T shared_dispatch_stub_1232
00000000005912a0 0000000000000030 T shared_dispatch_stub_1233
00000000005912d0 0000000000000030 T shared_dispatch_stub_1234
0000000000591300 0000000000000030 T shared_dispatch_stub_1235
0000000000591330 0000000000000030 T shared_dispatch_stub_1236
0000000000591360 0000000000000030 T shared_dispatch_stub_1237
0000000000591390 0000000000000030 T shared_dispatch_stub_1238
00000000005913c0 0000000000000030 T shared_dispatch_stub_1239
00000000005913f0 0000000000000030 T shared_dispatch_stub_1240
0000000000591420 0000000000000030 T shared_dispatch_stub_1241
0000000000591450 0000000000000030 T shared_dispatch_stub_1242
0000000000591480 0000000000000030 T shared_dispatch_stub_1243
00000000005914b0 0000000000000030 T shared_dispatch_stub_1244
00000000005914e0 0000000000000030 T shared_dispatch_stub_1245
0000000000591510 0000000000000030 T shared_dispatch_stub_1246
0000000000591540 0000000000000030 T shared_dispatch_stub_1247
0000000000591570 0000000000000030 T shared_dispatch_stub_1248
00000000005915a0 0000000000000028 T shared_dispatch_stub_1249
00000000005915d0 0000000000000030 T shared_dispatch_stub_1250
0000000000591600 0000000000000030 T shared_dispatch_stub_1251
0000000000591630 0000000000000030 T shared_dispatch_stub_1252
0000000000591660 0000000000000030 T shared_dispatch_stub_1253
0000000000591690 0000000000000030 T shared_dispatch_stub_1254
00000000005916c0 0000000000000028 T shared_dispatch_stub_1255
00000000005916f0 0000000000000030 T shared_dispatch_stub_1256
0000000000591720 0000000000000030 T shared_dispatch_stub_1257
0000000000591750 0000000000000030 T shared_dispatch_stub_1258
0000000000591780 0000000000000030 T shared_dispatch_stub_1259
00000000005917b0 0000000000000030 T shared_dispatch_stub_1260
00000000005917e0 0000000000000030 T shared_dispatch_stub_1261
0000000000591810 0000000000000030 T shared_dispatch_stub_1262
0000000000591840 0000000000000030 T shared_dispatch_stub_1263
0000000000591870 0000000000000030 T shared_dispatch_stub_1264
00000000005918a0 0000000000000030 T shared_dispatch_stub_1265
00000000005918d0 0000000000000030 T shared_dispatch_stub_1266
0000000000591900 0000000000000030 T shared_dispatch_stub_1267
0000000000591930 0000000000000030 T shared_dispatch_stub_1268
0000000000591960 0000000000000028 T shared_dispatch_stub_1269
0000000000591990 0000000000000030 T shared_dispatch_stub_1270
00000000005919c0 0000000000000030 T shared_dispatch_stub_1271
00000000005919f0 0000000000000030 T shared_dispatch_stub_1272
0000000000591a20 0000000000000028 T shared_dispatch_stub_1273
0000000000591a50 0000000000000030 T shared_dispatch_stub_1274
0000000000591a80 0000000000000030 T shared_dispatch_stub_1275
0000000000591ab0 0000000000000030 T shared_dispatch_stub_1276
0000000000591ae0 0000000000000030 T shared_dispatch_stub_1277
0000000000591b10 0000000000000030 T shared_dispatch_stub_1278
0000000000591b40 0000000000000030 T shared_dispatch_stub_1279
0000000000591b70 0000000000000030 T shared_dispatch_stub_1280
0000000000591ba0 0000000000000030 T shared_dispatch_stub_1281
0000000000591bd0 0000000000000030 T shared_dispatch_stub_1282
0000000000591c00 0000000000000030 T shared_dispatch_stub_1283
0000000000591c30 0000000000000030 T shared_dispatch_stub_1284
0000000000591c60 0000000000000030 T shared_dispatch_stub_1285
0000000000591c90 0000000000000030 T shared_dispatch_stub_1286
0000000000591cc0 0000000000000030 T shared_dispatch_stub_1287
0000000000591cf0 0000000000000030 T shared_dispatch_stub_1288
0000000000591d20 0000000000000030 T shared_dispatch_stub_1289
0000000000591d50 0000000000000030 T shared_dispatch_stub_1290
0000000000591d80 0000000000000030 T shared_dispatch_stub_1291
0000000000591db0 0000000000000030 T shared_dispatch_stub_1292
0000000000591de0 0000000000000030 T shared_dispatch_stub_1293
0000000000591e10 0000000000000030 T shared_dispatch_stub_1294
0000000000591e40 0000000000000030 T shared_dispatch_stub_1295
0000000000591e70 0000000000000030 T shared_dispatch_stub_1296
0000000000591ea0 0000000000000030 T shared_dispatch_stub_1297
0000000000591ed0 0000000000000030 T shared_dispatch_stub_1298
0000000000591f00 0000000000000030 T shared_dispatch_stub_1299
0000000000591f30 0000000000000030 T shared_dispatch_stub_1300
0000000000591f60 0000000000000030 T shared_dispatch_stub_1301
0000000000591f90 0000000000000030 T shared_dispatch_stub_1302
0000000000591fc0 0000000000000030 T shared_dispatch_stub_1303
0000000000591ff0 0000000000000030 T shared_dispatch_stub_1304
0000000000592020 0000000000000030 T shared_dispatch_stub_1305
0000000000592050 0000000000000030 T shared_dispatch_stub_1306
0000000000592080 0000000000000030 T shared_dispatch_stub_1307
00000000005920b0 0000000000000030 T shared_dispatch_stub_1308
00000000005920e0 0000000000000030 T shared_dispatch_stub_1309
0000000000592110 0000000000000030 T shared_dispatch_stub_1310
0000000000592140 0000000000000030 T shared_dispatch_stub_1311
0000000000592170 0000000000000030 T shared_dispatch_stub_1312
00000000005921a0 0000000000000028 T shared_dispatch_stub_1313
00000000005921d0 0000000000000028 T shared_dispatch_stub_1314
0000000000592200 0000000000000030 T shared_dispatch_stub_1315
0000000000592230 0000000000000030 T shared_dispatch_stub_1316
0000000000592260 0000000000000030 T shared_dispatch_stub_1317
0000000000592290 0000000000000030 T shared_dispatch_stub_1318
00000000005922c0 0000000000000030 T shared_dispatch_stub_1319
00000000005922f0 0000000000000030 T shared_dispatch_stub_1320
0000000000592320 0000000000000030 T shared_dispatch_stub_1321
0000000000592350 0000000000000030 T shared_dispatch_stub_1322
0000000000592380 0000000000000030 T shared_dispatch_stub_1323
00000000005923b0 0000000000000030 T shared_dispatch_stub_1324
00000000005923e0 0000000000000030 T shared_dispatch_stub_1325
0000000000592410 0000000000000030 T shared_dispatch_stub_1326
0000000000592440 0000000000000030 T shared_dispatch_stub_1327
0000000000592470 0000000000000030 T shared_dispatch_stub_1328
00000000005924a0 0000000000000030 T shared_dispatch_stub_1329
00000000005924d0 0000000000000030 T shared_dispatch_stub_1330
0000000000592500 0000000000000030 T shared_dispatch_stub_1331
0000000000592530 0000000000000030 T shared_dispatch_stub_1332
0000000000592560 0000000000000030 T shared_dispatch_stub_1333
0000000000592590 0000000000000028 T shared_dispatch_stub_1334
00000000005925c0 0000000000000030 T shared_dispatch_stub_1335
00000000005925f0 0000000000000030 T shared_dispatch_stub_1336
0000000000592620 0000000000000030 T shared_dispatch_stub_1337
0000000000592650 0000000000000030 T shared_dispatch_stub_1338
0000000000592680 0000000000000030 T shared_dispatch_stub_1339
00000000005926b0 0000000000000030 T shared_dispatch_stub_1340
00000000005926e0 0000000000000030 T shared_dispatch_stub_1341
0000000000592710 0000000000000030 T shared_dispatch_stub_1342
0000000000592740 0000000000000030 T shared_dispatch_stub_1343
0000000000592770 0000000000000030 T shared_dispatch_stub_1344
00000000005927a0 0000000000000030 T shared_dispatch_stub_1345
00000000005927d0 0000000000000030 T shared_dispatch_stub_1346
0000000000592800 0000000000000030 T shared_dispatch_stub_1347
0000000000592830 0000000000000030 T shared_dispatch_stub_1348
0000000000592860 0000000000000030 T shared_dispatch_stub_1349
0000000000592890 0000000000000030 T shared_dispatch_stub_1350
00000000005928c0 0000000000000030 T shared_dispatch_stub_1351
00000000005928f0 0000000000000030 T shared_dispatch_stub_1352
0000000000592920 0000000000000030 T shared_dispatch_stub_1353
0000000000592950 0000000000000030 T shared_dispatch_stub_1354
0000000000592980 0000000000000030 T shared_dispatch_stub_1355
00000000005929b0 0000000000000030 T shared_dispatch_stub_1356
00000000005929e0 0000000000000030 T shared_dispatch_stub_1357
0000000000592a10 0000000000000030 T shared_dispatch_stub_1358
0000000000592a40 0000000000000030 T shared_dispatch_stub_1359
0000000000592a70 0000000000000030 T shared_dispatch_stub_1360
0000000000592aa0 0000000000000030 T shared_dispatch_stub_1361
0000000000592ad0 0000000000000030 T shared_dispatch_stub_1362
0000000000592b00 0000000000000030 T shared_dispatch_stub_1363
0000000000592b30 0000000000000030 T shared_dispatch_stub_1364
0000000000592b60 0000000000000030 T shared_dispatch_stub_1365
0000000000592b90 0000000000000030 T shared_dispatch_stub_1366
0000000000592bc0 0000000000000028 T shared_dispatch_stub_1367
0000000000592bf0 0000000000000030 T shared_dispatch_stub_1368
0000000000592c20 0000000000000030 T shared_dispatch_stub_1369
0000000000592c50 0000000000000030 T shared_dispatch_stub_1370
0000000000592c80 0000000000000030 T shared_dispatch_stub_1371
0000000000592cb0 0000000000000030 T shared_dispatch_stub_1372
0000000000592ce0 0000000000000030 T shared_dispatch_stub_1373
0000000000592d10 0000000000000030 T shared_dispatch_stub_1374
0000000000592d40 0000000000000030 T shared_dispatch_stub_1375
0000000000592d70 0000000000000030 T shared_dispatch_stub_1376
0000000000592da0 0000000000000030 T shared_dispatch_stub_1377
0000000000592dd0 0000000000000030 T shared_dispatch_stub_1378
0000000000592e00 0000000000000030 T shared_dispatch_stub_1379
0000000000592e30 0000000000000030 T shared_dispatch_stub_1380
0000000000592e60 0000000000000030 T shared_dispatch_stub_1381
0000000000592e90 0000000000000028 T shared_dispatch_stub_1382
0000000000592ec0 0000000000000030 T shared_dispatch_stub_1383
0000000000592ef0 0000000000000030 T shared_dispatch_stub_1384
0000000000592f20 0000000000000030 T shared_dispatch_stub_1385
0000000000592f50 0000000000000030 T shared_dispatch_stub_1386
0000000000592f80 0000000000000030 T shared_dispatch_stub_1387
0000000000592fb0 0000000000000030 T shared_dispatch_stub_1388
0000000000592fe0 0000000000000030 T shared_dispatch_stub_1389
0000000000593010 0000000000000030 T shared_dispatch_stub_1390
0000000000593040 0000000000000030 T shared_dispatch_stub_1391
0000000000593070 0000000000000030 T shared_dispatch_stub_1392
00000000005930a0 0000000000000030 T shared_dispatch_stub_1393
00000000005930d0 0000000000000030 T shared_dispatch_stub_1394
0000000000593100 0000000000000028 T shared_dispatch_stub_1395
0000000000593130 0000000000000030 T shared_dispatch_stub_1396
0000000000593160 0000000000000030 T shared_dispatch_stub_1397
0000000000593190 0000000000000030 T shared_dispatch_stub_1398
00000000005931c0 0000000000000030 T shared_dispatch_stub_1399
00000000005931f0 0000000000000030 T shared_dispatch_stub_1400
0000000000593220 0000000000000030 T shared_dispatch_stub_1401
0000000000593250 0000000000000030 T shared_dispatch_stub_1402
0000000000593280 0000000000000030 T shared_dispatch_stub_1403
00000000005932b0 0000000000000030 T shared_dispatch_stub_1404
00000000005932e0 0000000000000030 T shared_dispatch_stub_1405
0000000000593310 0000000000000030 T shared_dispatch_stub_1406
0000000000593340 0000000000000030 T shared_dispatch_stub_1407
0000000000593370 0000000000000030 T shared_dispatch_stub_1408
00000000005933a0 0000000000000030 T shared_dispatch_stub_1409
00000000005933d0 0000000000000030 T shared_dispatch_stub_1410
0000000000593400 0000000000000030 T shared_dispatch_stub_1411
0000000000593430 0000000000000030 T shared_dispatch_stub_1412
0000000000593460 0000000000000030 T shared_dispatch_stub_1413
0000000000593490 0000000000000030 T shared_dispatch_stub_1414
00000000005934c0 0000000000000030 T shared_dispatch_stub_1415
00000000005934f0 0000000000000030 T shared_dispatch_stub_1416
0000000000593520 0000000000000030 T shared_dispatch_stub_1417
0000000000593550 0000000000000028 T shared_dispatch_stub_1418
0000000000593580 0000000000000028 T shared_dispatch_stub_1419
00000000005935b0 0000000000000030 T shared_dispatch_stub_1420
00000000005935e0 0000000000000030 T shared_dispatch_stub_1421
0000000000593610 0000000000000030 T shared_dispatch_stub_1422
0000000000593640 0000000000000030 T shared_dispatch_stub_1423
0000000000593670 0000000000000030 T shared_dispatch_stub_1424
00000000005936a0 0000000000000030 T shared_dispatch_stub_1425
00000000005936d0 0000000000000030 T shared_dispatch_stub_1426
0000000000593700 0000000000000030 T shared_dispatch_stub_1427
0000000000593730 0000000000000030 T shared_dispatch_stub_1428
0000000000593760 0000000000000030 T shared_dispatch_stub_1429
0000000000593790 0000000000000030 T shared_dispatch_stub_1430
00000000005937c0 0000000000000030 T shared_dispatch_stub_1431
00000000005937f0 0000000000000030 T shared_dispatch_stub_1432
0000000000593820 0000000000000030 T shared_dispatch_stub_1433
0000000000593850 0000000000000030 T shared_dispatch_stub_1434
0000000000593880 0000000000000030 T shared_dispatch_stub_1435
00000000005938b0 0000000000000030 T shared_dispatch_stub_1436
00000000005938e0 0000000000000030 T shared_dispatch_stub_1437
0000000000593910 0000000000000030 T shared_dispatch_stub_1438
0000000000593940 0000000000000030 T shared_dispatch_stub_1439
0000000000593970 0000000000000030 T shared_dispatch_stub_1440
00000000005939a0 0000000000000030 T shared_dispatch_stub_1441
00000000005939d0 0000000000000030 T shared_dispatch_stub_1442
0000000000593a00 0000000000000030 T shared_dispatch_stub_1443
0000000000593a30 0000000000000030 T shared_dispatch_stub_1444
0000000000593a60 0000000000000030 T shared_dispatch_stub_1445
0000000000593a90 0000000000000030 T shared_dispatch_stub_1446
0000000000593ac0 0000000000000030 T shared_dispatch_stub_1447
0000000000593af0 0000000000000030 T shared_dispatch_stub_1448
0000000000593b20 0000000000000030 T shared_dispatch_stub_1449
0000000000593b50 0000000000000030 T shared_dispatch_stub_1450
0000000000593b80 0000000000000030 T shared_dispatch_stub_1451
0000000000593bb0 0000000000000030 T shared_dispatch_stub_1452
0000000000593be0 0000000000000030 T shared_dispatch_stub_1453
0000000000593c10 0000000000000030 T shared_dispatch_stub_1454
0000000000593c40 0000000000000030 T shared_dispatch_stub_1455
0000000000593c70 0000000000000030 T shared_dispatch_stub_1456
0000000000593ca0 0000000000000030 T shared_dispatch_stub_1457
0000000000593cd0 0000000000000030 T shared_dispatch_stub_1458
0000000000593d00 0000000000000030 T shared_dispatch_stub_1459
0000000000593d30 0000000000000030 T shared_dispatch_stub_1460
0000000000593d60 0000000000000030 T shared_dispatch_stub_1461
0000000000593d90 0000000000000030 T shared_dispatch_stub_1462
0000000000593dc0 0000000000000030 T shared_dispatch_stub_1463
0000000000593df0 0000000000000030 T shared_dispatch_stub_1464
0000000000593e20 0000000000000030 T shared_dispatch_stub_1465
0000000000593e50 0000000000000030 T shared_dispatch_stub_1466
0000000000593e80 0000000000000030 T shared_dispatch_stub_1467
0000000000593eb0 0000000000000030 T shared_dispatch_stub_1468
0000000000593ee0 0000000000000030 T shared_dispatch_stub_1469
0000000000593f10 0000000000000030 T shared_dispatch_stub_1470
0000000000593f40 0000000000000030 T shared_dispatch_stub_1471
0000000000593f70 0000000000000030 T shared_dispatch_stub_1472
0000000000593fa0 0000000000000030 T shared_dispatch_stub_1473
0000000000593fd0 0000000000000030 T shared_dispatch_stub_1474
0000000000594000 0000000000000030 T shared_dispatch_stub_1475
0000000000594030 0000000000000030 T shared_dispatch_stub_1476
0000000000594060 0000000000000030 T shared_dispatch_stub_1477
0000000000594090 0000000000000030 T shared_dispatch_stub_1478
00000000005940c0 0000000000000030 T shared_dispatch_stub_1479
00000000005940f0 0000000000000030 T shared_dispatch_stub_1480
0000000000594120 0000000000000030 T shared_dispatch_stub_1481
0000000000594150 0000000000000030 T shared_dispatch_stub_1482
0000000000594180 0000000000000030 T shared_dispatch_stub_1483
00000000005941b0 0000000000000030 T shared_dispatch_stub_1484
00000000005941e0 0000000000000030 T shared_dispatch_stub_1485
0000000000594210 0000000000000030 T shared_dispatch_stub_1486
0000000000594240 0000000000000030 T shared_dispatch_stub_1487
0000000000594270 0000000000000030 T shared_dispatch_stub_1488
00000000005942a0 0000000000000030 T shared_dispatch_stub_1489
00000000005942d0 0000000000000030 T shared_dispatch_stub_1490
0000000000594300 0000000000000030 T shared_dispatch_stub_1491
0000000000594330 0000000000000030 T shared_dispatch_stub_1492
0000000000594360 0000000000000030 T shared_dispatch_stub_1493
0000000000594390 0000000000000030 T shared_dispatch_stub_1494
00000000005943c0 0000000000000030 T shared_dispatch_stub_1495
00000000005943f0 0000000000000030 T shared_dispatch_stub_1496
0000000000594420 0000000000000030 T shared_dispatch_stub_1497
0000000000594450 0000000000000030 T shared_dispatch_stub_1498
0000000000594480 0000000000000030 T shared_dispatch_stub_1499
00000000005944b0 0000000000000030 T shared_dispatch_stub_1500
00000000005944e0 0000000000000030 T shared_dispatch_stub_1501
0000000000594510 0000000000000030 T shared_dispatch_stub_1502
0000000000594540 0000000000000030 T shared_dispatch_stub_1503
0000000000594570 0000000000000030 T shared_dispatch_stub_1504
00000000005945a0 0000000000000030 T shared_dispatch_stub_1505
00000000005945d0 0000000000000030 T shared_dispatch_stub_1506
0000000000594600 0000000000000030 T shared_dispatch_stub_1507
0000000000594630 0000000000000030 T shared_dispatch_stub_1508
0000000000594660 0000000000000030 T shared_dispatch_stub_1509
0000000000594690 0000000000000030 T shared_dispatch_stub_1510
00000000005946c0 0000000000000030 T shared_dispatch_stub_1511
00000000005946f0 0000000000000030 T shared_dispatch_stub_1512
0000000000594720 0000000000000030 T shared_dispatch_stub_1513
0000000000594750 0000000000000030 T shared_dispatch_stub_1514
0000000000594780 0000000000000030 T shared_dispatch_stub_1515
00000000005947b0 0000000000000030 T shared_dispatch_stub_1516
00000000005947e0 0000000000000030 T shared_dispatch_stub_1517
0000000000594810 0000000000000030 T shared_dispatch_stub_1518
0000000000594840 0000000000000030 T shared_dispatch_stub_1519
0000000000594870 0000000000000030 T shared_dispatch_stub_1520
00000000005948a0 0000000000000030 T shared_dispatch_stub_1521
00000000005948d0 0000000000000030 T shared_dispatch_stub_1522
0000000000594900 0000000000000030 T shared_dispatch_stub_1523
0000000000594930 0000000000000030 T shared_dispatch_stub_1524
0000000000594960 0000000000000030 T shared_dispatch_stub_1525
0000000000594990 0000000000000030 T shared_dispatch_stub_1526
00000000005949c0 0000000000000030 T shared_dispatch_stub_1527
00000000005949f0 0000000000000030 T shared_dispatch_stub_1528
0000000000594a20 0000000000000030 T shared_dispatch_stub_1529
0000000000594a50 0000000000000030 T shared_dispatch_stub_1530
0000000000594a80 0000000000000030 T shared_dispatch_stub_1531
0000000000594ab0 0000000000000030 T shared_dispatch_stub_1532
0000000000594ae0 0000000000000030 T shared_dispatch_stub_1533
0000000000594b10 0000000000000030 T shared_dispatch_stub_1534
0000000000594b40 0000000000000030 T shared_dispatch_stub_1535
0000000000594b70 0000000000000030 T shared_dispatch_stub_1536
0000000000594ba0 0000000000000030 T shared_dispatch_stub_1537
0000000000594bd0 0000000000000030 T shared_dispatch_stub_1538
0000000000594c00 0000000000000030 T shared_dispatch_stub_1539
0000000000594c30 0000000000000030 T shared_dispatch_stub_1540
0000000000594c60 0000000000000030 T shared_dispatch_stub_1541
0000000000594c90 0000000000000030 T shared_dispatch_stub_1542
0000000000594cc0 0000000000000030 T shared_dispatch_stub_1543
0000000000594cf0 0000000000000030 T shared_dispatch_stub_1544
0000000000594d20 0000000000000030 T shared_dispatch_stub_1545
0000000000594d50 0000000000000030 T shared_dispatch_stub_1546
0000000000594d80 0000000000000030 T shared_dispatch_stub_1547
0000000000594db0 0000000000000030 T shared_dispatch_stub_1548
0000000000594de0 0000000000000030 T shared_dispatch_stub_1549
0000000000594e10 0000000000000030 T shared_dispatch_stub_1550
0000000000594e40 0000000000000030 T shared_dispatch_stub_1551
0000000000594e70 0000000000000030 T shared_dispatch_stub_1552
0000000000594ea0 0000000000000030 T shared_dispatch_stub_1553
0000000000594ed0 0000000000000030 T shared_dispatch_stub_1554
0000000000594f00 0000000000000030 T shared_dispatch_stub_1555
0000000000594f30 0000000000000030 T shared_dispatch_stub_1556
0000000000594f60 0000000000000030 T shared_dispatch_stub_1557
0000000000594f90 0000000000000030 T shared_dispatch_stub_1558
0000000000594fc0 0000000000000030 T shared_dispatch_stub_1559
0000000000594ff0 0000000000000030 T shared_dispatch_stub_1560
0000000000595020 0000000000000030 T shared_dispatch_stub_1561
0000000000595050 0000000000000030 T shared_dispatch_stub_1562
0000000000595080 0000000000000030 T shared_dispatch_stub_1563
00000000005950b0 0000000000000030 T shared_dispatch_stub_1564
00000000005950e0 0000000000000030 T shared_dispatch_stub_1565
0000000000595110 0000000000000030 T shared_dispatch_stub_1566
0000000000595140 0000000000000030 T shared_dispatch_stub_1567
0000000000595170 0000000000000030 T shared_dispatch_stub_1568
00000000005951a0 0000000000000030 T shared_dispatch_stub_1569
00000000005951d0 0000000000000030 T shared_dispatch_stub_1570
0000000000595200 0000000000000030 T shared_dispatch_stub_1571
0000000000595230 0000000000000030 T shared_dispatch_stub_1572
0000000000595260 0000000000000030 T shared_dispatch_stub_1573
0000000000595290 0000000000000030 T shared_dispatch_stub_1574
00000000005952c0 0000000000000030 T shared_dispatch_stub_1575
00000000005952f0 0000000000000030 T shared_dispatch_stub_1576
0000000000595320 0000000000000030 T shared_dispatch_stub_1577
0000000000595350 0000000000000030 T shared_dispatch_stub_1578
0000000000595380 0000000000000030 T shared_dispatch_stub_1579
00000000005953b0 0000000000000030 T shared_dispatch_stub_1580
00000000005953e0 0000000000000030 T shared_dispatch_stub_1581
0000000000595410 0000000000000030 T shared_dispatch_stub_1582
0000000000595440 0000000000000030 T shared_dispatch_stub_1583
0000000000595470 0000000000000030 T shared_dispatch_stub_1584
00000000005954a0 0000000000000030 T shared_dispatch_stub_1585
00000000005954d0 0000000000000030 T shared_dispatch_stub_1586
0000000000595500 0000000000000030 T shared_dispatch_stub_1587
0000000000595530 0000000000000030 T shared_dispatch_stub_1588
0000000000595560 0000000000000030 T shared_dispatch_stub_1589
0000000000595590 0000000000000030 T shared_dispatch_stub_1590
00000000005955c0 0000000000000030 T shared_dispatch_stub_1591
00000000005955f0 0000000000000030 T shared_dispatch_stub_1592
0000000000595620 0000000000000030 T shared_dispatch_stub_1593
0000000000595650 0000000000000030 T shared_dispatch_stub_1594
0000000000595680 0000000000000030 T shared_dispatch_stub_1595
00000000005956b0 0000000000000030 T shared_dispatch_stub_1596
00000000005956e0 0000000000000030 T shared_dispatch_stub_1597
0000000000595710 0000000000000030 T shared_dispatch_stub_1598
0000000000595740 0000000000000030 T shared_dispatch_stub_1599
0000000000595770 0000000000000030 T shared_dispatch_stub_1600
00000000005957a0 0000000000000030 T shared_dispatch_stub_1601
00000000005957d0 0000000000000030 T shared_dispatch_stub_1602
0000000000595800 0000000000000030 T shared_dispatch_stub_1603
0000000000595830 0000000000000030 T shared_dispatch_stub_1604
0000000000595860 0000000000000030 T shared_dispatch_stub_1605
0000000000595890 0000000000000030 T shared_dispatch_stub_1606
00000000005958c0 0000000000000030 T shared_dispatch_stub_1607
00000000005958f0 0000000000000030 T shared_dispatch_stub_1608
0000000000595920 0000000000000030 T shared_dispatch_stub_1609
0000000000595950 0000000000000004 T entry_patch_public
0000000000595960 0000000000000010 t entry_get_public
0000000000595970 0000000000000008 t entry_generate
0000000000595980 0000000000000004 t entry_patch
0000000000595990 0000000000000078 T nouveau_bufctx_new
0000000000595a10 000000000000005c T nouveau_bufctx_reset
0000000000595a70 0000000000000074 T nouveau_bufctx_del
0000000000595af0 0000000000000090 T nouveau_bufctx_refn
0000000000595b80 0000000000000008 T nouveau_object_mclass
0000000000595b90 0000000000000098 T nouveau_object_new
0000000000595c30 0000000000000044 T nouveau_object_del
0000000000595c80 0000000000000028 T nouveau_drm_del
0000000000595cb0 0000000000000050 T nouveau_drm_new
0000000000595d00 0000000000000100 T nouveau_device_new
0000000000595e00 0000000000000050 T nouveau_device_del
0000000000595e50 0000000000000034 T nouveau_getparam
0000000000595e90 000000000000011c T nouveau_client_new
0000000000595fb0 0000000000000088 T nouveau_client_del
0000000000596040 0000000000000184 T nouveau_bo_new
00000000005961d0 0000000000000104 T nouveau_bo_name_ref
00000000005962e0 0000000000000010 T nouveau_bo_name_get
00000000005962f0 00000000000000d0 T nouveau_bo_ref
00000000005963c0 0000000000000008 T nouveau_bo_prime_handle_ref
00000000005963d0 0000000000000008 T nouveau_bo_set_prime
00000000005963e0 0000000000000014 T nouveau_bo_get_syncpoint
0000000000596400 000000000000009c T nouveau_bo_wait
00000000005964a0 000000000000000c T nouveau_bo_map
00000000005964b0 0000000000000008 T nouveau_bo_unmap
00000000005964c0 0000000000000098 t pushbuf_refn_fail
0000000000596560 0000000000000118 T nouveau_pushbuf_del
0000000000596680 0000000000000280 T nouveau_pushbuf_new
0000000000596900 0000000000000010 T nouveau_pushbuf_bufctx
0000000000596910 00000000000000c4 T nouveau_pushbuf_data
0000000000596910 00000000000000c4 t nouveau_pushbuf_data.localalias
00000000005969e0 0000000000000254 t pushbuf_submit.isra.0
0000000000596c40 000000000000012c t pushbuf_flush.isra.0
0000000000596d70 0000000000000128 t pushbuf_kref
0000000000596ea0 00000000000001b0 t pushbuf_validate
0000000000597050 0000000000000238 T nouveau_pushbuf_space
0000000000597290 00000000000000cc T nouveau_pushbuf_refn
0000000000597360 0000000000000008 T nouveau_pushbuf_validate
0000000000597370 0000000000000040 T nouveau_pushbuf_kick
00000000005973b0 000000000000004c T cli_map_free
0000000000597400 0000000000000058 T cli_kref_get
0000000000597460 0000000000000058 T cli_push_get
00000000005974c0 0000000000000110 T cli_kref_set
00000000005975d0 00000000000000c8 T mutexLock
00000000005976a0 0000000000000068 T mutexUnlock
0000000000597710 000000000000001c T mutexIsLockedByCurrentThread
0000000000597730 0000000000000058 T rmutexLock
0000000000597790 000000000000001c T rmutexUnlock
00000000005977b0 0000000000000018 t _appletInfiniteSleepLoop
00000000005977d0 0000000000000108 t _appletCmdGetSession
00000000005978e0 00000000000000cc t _appletCmdInU8NoOut
00000000005979b0 00000000000000d0 t _appletCmdInSession
0000000000597a80 00000000000000cc t _appletCmdInU32NoOut
0000000000597b50 000000000000011c t _appletCreateLibraryApplet
0000000000597c70 0000000000000114 t _appletCmdGetSessionInU64
0000000000597d90 000000000000012c t _appletGetSessionProxy.constprop.0
0000000000597ec0 0000000000000148 t _appletOpenLibraryAppletProxy.constprop.0
0000000000598010 00000000000000f8 t _appletCmdGetEvent
0000000000598110 0000000000000284 t _appletStorageRW.part.0
00000000005983a0 00000000000000d4 t _appletCmdNoInOutU8.isra.0
0000000000598480 00000000000000d4 t _appletCmdNoInOutU32.isra.0
0000000000598560 00000000000000d4 t _appletCmdNoInOutU64.isra.0
0000000000598640 00000000000000c0 t _appletCmdNoIO.isra.0
0000000000598700 0000000000000010 T appletGetAppletType
0000000000598710 000000000000000c T appletGetThemeColorType
0000000000598720 00000000000001b8 T appletSetFocusHandlingMode
00000000005988e0 000000000000005c T appletSetCpuBoostMode
0000000000598940 000000000000002c T appletCreateManagedDisplayLayer
0000000000598970 000000000000000c T appletGetAppletResourceUserId
0000000000598980 0000000000000138 t _appletHolderCreateState
0000000000598ac0 00000000000000a4 T appletCreateLibraryApplet
0000000000598b70 00000000000000b0 T appletHolderClose
0000000000598c20 0000000000000010 T appletHolderActive
0000000000598c30 00000000000000a0 T appletHolderStart
0000000000598cd0 0000000000000144 T appletHolderJump
0000000000598e20 0000000000000084 T appletHolderJoin
0000000000598eb0 0000000000000024 T appletHolderCheckFinished
0000000000598ee0 0000000000000008 T appletHolderGetExitReason
0000000000598ef0 0000000000000050 T appletHolderPresetLibraryAppletGpuTimeSliceZero
0000000000598f40 0000000000000028 T appletHolderPopOutData
0000000000598f70 0000000000000028 T appletHolderPopInteractiveOutData
0000000000598fa0 0000000000000024 T appletHolderGetLibraryAppletInfo
0000000000598fd0 0000000000000028 T appletCreateStorage
0000000000599000 0000000000000090 T appletStorageClose
0000000000599090 000000000000005c T appletHolderPushInData
00000000005990f0 000000000000005c T appletHolderPushInteractiveInData
0000000000599150 0000000000000008 T appletStorageCloseTmem
0000000000599160 00000000000000e0 T appletStorageGetSize
0000000000599240 0000000000000018 T appletStorageWrite
0000000000599260 0000000000000018 T appletStorageRead
0000000000599280 0000000000000090 T appletNotifyRunning
0000000000599310 0000000000000078 T appletSetGamePlayRecordingState
0000000000599390 0000000000000ad4 t _appletCleanup
0000000000599e70 0000000000000048 T appletExit
0000000000599ec0 0000000000000040 T appletGetLibraryAppletInfo
0000000000599f00 0000000000000c14 T appletInitialize
000000000059ab20 0000000000000024 t _appletExitProcess
000000000059ab50 000000000000000c T appletGetOperationMode
000000000059ab60 0000000000000074 T appletGetMessage
000000000059abe0 0000000000000264 T appletProcessMessage
000000000059ae50 0000000000000034 T appletMainLoop
000000000059ae90 0000000000000088 t _audrenCleanup
000000000059af20 00000000000000bc t _audrenCmdNoIO.constprop.0
000000000059afe0 0000000000000510 T audrenInitialize
000000000059b4f0 0000000000000048 T audrenExit
000000000059b540 0000000000000010 T audrenWaitFrame
000000000059b550 0000000000000350 T audrenRequestUpdateAudioRenderer
000000000059b8a0 0000000000000008 T audrenStartAudioRenderer
000000000059b8b0 00000000000001c4 t _fatalCmd
000000000059ba80 000000000000000c T fatalThrowWithPolicy
000000000059ba90 0000000000000014 T fatalThrow
000000000059bab0 000000000000012c t _hidCleanup
000000000059bbe0 00000000000000d4 t _hidCmdInAruidNoOut
000000000059bcc0 00000000000000e0 t _hidCmdInU32AruidNoOut
000000000059bda0 00000000000000e0 t _hidCmdInU64AruidNoOut
000000000059be80 0000000000000194 t _hidGetStates
000000000059c020 00000000000000ec t _hidCmdInAruidOutU64.constprop.0
000000000059c110 000000000000026c T hidInitialize
000000000059c380 0000000000000048 T hidExit
000000000059c3d0 000000000000000c T hidGetSharedmemAddr
000000000059c3e0 0000000000000090 T hidGetNpadStyleSet
000000000059c470 00000000000000a8 T hidGetNpadDeviceType
000000000059c520 0000000000000020 T hidInitializeTouchScreen
000000000059c540 0000000000000088 T hidGetTouchScreenStates
000000000059c5d0 0000000000000020 T hidInitializeMouse
000000000059c5f0 0000000000000058 T hidGetMouseStates
000000000059c650 0000000000000020 T hidInitializeKeyboard
000000000059c670 0000000000000058 T hidGetKeyboardStates
000000000059c6d0 0000000000000084 T hidInitializeNpad
000000000059c760 00000000000000a4 T hidGetNpadStatesFullKey
000000000059c810 00000000000000a4 T hidGetNpadStatesHandheld
000000000059c8c0 00000000000000a4 T hidGetNpadStatesJoyDual
000000000059c970 00000000000000a4 T hidGetNpadStatesJoyLeft
000000000059ca20 00000000000000a4 T hidGetNpadStatesJoyRight
000000000059cad0 0000000000000144 T hidGetNpadStatesGc
000000000059cc20 00000000000000a8 T hidGetNpadStatesSystemExt
000000000059ccd0 0000000000000008 T hidSetSupportedNpadStyleSet
000000000059cce0 00000000000000e4 T hidGetSupportedNpadStyleSet
000000000059cdd0 0000000000000100 T hidSetSupportedNpadIdType
000000000059ced0 000000000000000c T hidSetNpadJoyHoldType
000000000059cee0 0000000000000040 T hidGetNpadJoyHoldType
000000000059cf20 000000000000040c T hidInitializeVibrationDevices
000000000059d330 0000000000000120 T hidSendVibrationValues
000000000059d450 00000000000000d0 t _nvCleanup
000000000059d520 00000000000000d4 t _nvCmdInitialize.constprop.0
000000000059d600 0000000000000018 W __nx_nv_create_tmem
000000000059d620 00000000000003a8 T nvInitialize
000000000059d9d0 0000000000000048 T nvExit
000000000059da20 00000000000000f4 T nvConvertError
000000000059db20 0000000000000114 T nvOpen
000000000059dc40 0000000000000310 T nvIoctl
000000000059df50 00000000000003f4 T nvIoctl2
000000000059e350 00000000000000d4 T nvClose
000000000059e430 000000000000010c T nvQueryEvent
000000000059e540 0000000000000078 t _psmCleanup
000000000059e5c0 0000000000000098 T psmInitialize
000000000059e660 0000000000000048 T psmExit
000000000059e6b0 00000000000000cc t _smCmifCmdInPid
000000000059e780 0000000000000078 t _smCleanup
000000000059e800 0000000000000048 T smAddOverrideHandle
000000000059e850 0000000000000054 T smGetServiceOverride
000000000059e8b0 00000000000001ac T smInitialize
000000000059ea60 0000000000000048 T smExit
000000000059eab0 00000000000000d0 T smGetServiceOriginal
000000000059eb80 0000000000000120 T smGetServiceWrapper
000000000059eca0 0000000000000054 T nvAddressSpaceClose
000000000059ed00 0000000000000088 T nvAddressSpaceCreate
000000000059ed90 0000000000000040 T nvAddressSpaceMap
000000000059edd0 0000000000000008 T nvAddressSpaceUnmap
000000000059ede0 0000000000000074 t _nvFenceCleanup
000000000059ee60 0000000000000098 T nvFenceInit
000000000059ef00 0000000000000048 T nvFenceExit
000000000059ef50 0000000000000290 T nvFenceWait
000000000059f1e0 000000000000007c T nvMultiFenceWait
000000000059f260 0000000000000138 T nvGpuInit
000000000059f3a0 0000000000000074 T nvGpuExit
000000000059f420 000000000000000c T nvGpuGetCharacteristics
000000000059f430 000000000000000c T nvGpuGetZcullCtxSize
000000000059f440 0000000000000054 T nvGpuChannelClose
000000000059f4a0 000000000000010c T nvGpuChannelCreate
000000000059f5b0 000000000000000c T nvGpuChannelZcullBind
000000000059f5c0 00000000000000cc T nvGpuChannelKickoff
000000000059f690 00000000000000a0 T nvGpuChannelAppendEntry
000000000059f730 00000000000000ac T nvMapInit
000000000059f7e0 0000000000000074 T nvMapExit
000000000059f860 000000000000000c T nvMapGetFd
000000000059f870 000000000000008c T nvMapClose
000000000059f900 0000000000000160 T nvMapCreate
000000000059fa60 000000000000009c T nvMapLoadRemote
000000000059fb00 0000000000000024 T nvioctlChannel_SetNvmapFd
000000000059fb30 00000000000000c4 T nvioctlChannel_SubmitGpfifo
000000000059fc00 0000000000000050 T nvioctlChannel_KickoffPb
000000000059fc50 0000000000000050 T nvioctlChannel_AllocObjCtx
000000000059fca0 0000000000000028 T nvioctlChannel_ZCullBind
000000000059fcd0 000000000000002c T nvioctlChannel_SetErrorNotifier
000000000059fd00 0000000000000024 T nvioctlChannel_SetPriority
000000000059fd30 0000000000000054 T nvioctlChannel_AllocGpfifoEx2
000000000059fd90 0000000000000024 T nvioctlNvhostAsGpu_BindChannel
000000000059fdc0 000000000000004c T nvioctlNvhostAsGpu_MapBufferEx
000000000059fe10 0000000000000024 T nvioctlNvhostAsGpu_UnmapBuffer
000000000059fe40 000000000000003c T nvioctlNvhostAsGpu_InitializeEx
000000000059fe80 0000000000000024 T nvioctlNvhostCtrl_EventSignal
000000000059feb0 000000000000003c T nvioctlNvhostCtrl_EventWait
000000000059fef0 0000000000000028 T nvioctlNvhostCtrl_EventWaitAsync
000000000059ff20 0000000000000024 T nvioctlNvhostCtrl_EventRegister
000000000059ff50 0000000000000024 T nvioctlNvhostCtrl_EventUnregister
000000000059ff80 000000000000003c T nvioctlNvhostCtrlGpu_ZCullGetCtxSize
000000000059ffc0 0000000000000054 T nvioctlNvhostCtrlGpu_ZCullGetInfo
00000000005a0020 000000000000008c T nvioctlNvhostCtrlGpu_GetCharacteristics
00000000005a00b0 0000000000000078 T nvioctlNvhostCtrlGpu_GetTpcMasks
00000000005a0130 000000000000003c T nvioctlNvmap_Create
00000000005a0170 000000000000003c T nvioctlNvmap_FromId
00000000005a01b0 0000000000000030 T nvioctlNvmap_Alloc
00000000005a01e0 0000000000000030 T nvioctlNvmap_Free
00000000005a0210 0000000000000040 T nvioctlNvmap_Param
00000000005a0250 000000000000003c T nvioctlNvmap_GetId
00000000005a0290 000000000000000c T nwindowGetDefault
00000000005a02a0 00000000000000a4 T __nx_win_init
00000000005a0350 0000000000000034 T __nx_win_exit
00000000005a0390 0000000000000024 T nwindowIsValid
00000000005a03c0 000000000000007c T nwindowClose
00000000005a0440 00000000000000f8 T nwindowCreate
00000000005a0540 0000000000000038 T nwindowCreateFromLayer
00000000005a0580 0000000000000090 T nwindowGetDimensions
00000000005a0610 0000000000000084 T nwindowSetDimensions
00000000005a06a0 0000000000000040 T nwindowSetSwapInterval
00000000005a06e0 0000000000000180 T nwindowConfigureBuffer
00000000005a0860 00000000000001cc T nwindowDequeueBuffer
00000000005a0a30 00000000000000c4 T nwindowCancelBuffer
00000000005a0b00 000000000000012c T nwindowQueueBuffer
00000000005a0c30 00000000000000bc T nwindowReleaseBuffers
00000000005a0cf0 0000000000000388 T audrvCreate
00000000005a1080 0000000000000144 T audrvUpdate
00000000005a11d0 000000000000004c T audrvClose
00000000005a1220 0000000000000058 T audrvMemPoolAdd
00000000005a1280 000000000000007c T audrvMemPoolAttach
00000000005a1300 00000000000000cc T audrvDeviceSinkAdd
00000000005a13d0 00000000000000c0 t _audrvVoiceQueueWaveBufs
00000000005a1490 00000000000000e8 T audrvVoiceDrop
00000000005a1580 00000000000001ac T audrvVoiceInit
00000000005a1730 000000000000003c T audrvVoiceIsPlaying
00000000005a1770 00000000000000a8 T audrvVoiceAddWaveBuf
00000000005a1820 00000000000000c0 T _audrvVoiceUpdate
00000000005a18e0 0000000000000178 t _hidLaShow.constprop.0
00000000005a1a60 0000000000000128 t _hidLaShowControllerSupportCore
00000000005a1b90 0000000000000034 T hidLaCreateControllerSupportArg
00000000005a1bd0 00000000000000b8 T hidLaShowControllerSupportForSystem
00000000005a1c90 0000000000000040 T libappletArgsCreate
00000000005a1cd0 0000000000000008 T libappletArgsSetPlayStartupSound
00000000005a1ce0 0000000000000068 T libappletCreateWriteStorage
00000000005a1d50 0000000000000080 T libappletReadStorage
00000000005a1dd0 0000000000000044 T libappletArgsPush
00000000005a1e20 0000000000000034 T libappletPushInData
00000000005a1e60 0000000000000068 T libappletPopOutData
00000000005a1ed0 0000000000000064 T libappletStart
00000000005a1f40 00000000000000b4 t _swkbdInitVersion
00000000005a2000 00000000000000d4 t _swkbdSendRequest
00000000005a20e0 0000000000000110 t _swkbdInlineLaunch
00000000005a21f0 00000000000003ec t _swkbdGetReplies
00000000005a25e0 0000000000000150 T swkbdInlineClose
00000000005a2730 0000000000000024 T swkbdInlineLaunchForLibraryApplet
00000000005a2760 0000000000000008 T swkbdInlineSetDecidedCancelCallback
00000000005a2770 0000000000000008 T swkbdInlineSetDecidedEnterCallback
00000000005a2780 00000000000000ec T swkbdInlineAppearEx
00000000005a2870 0000000000000008 T swkbdInlineAppear
00000000005a2880 0000000000000018 T swkbdInlineDisappear
00000000005a28a0 0000000000000030 T swkbdInlineMakeAppearArg
00000000005a28d0 000000000000003c T swkbdInlineAppearArgSetOkButtonText
00000000005a2910 000000000000005c T swkbdInlineSetInputText
00000000005a2970 0000000000000014 T swkbdInlineSetCursorPos
00000000005a2990 0000000000000024 T swkbdInlineSetUtf8Mode
00000000005a29c0 0000000000000114 T swkbdInlineCreate
00000000005a2ae0 0000000000000024 T swkbdInlineSetInputModeFadeType
00000000005a2b10 0000000000000030 T swkbdInlineSetFooterBgAlpha
00000000005a2b40 00000000000000c0 T swkbdInlineUpdate
00000000005a2c00 0000000000000004 W __libnx_alloc
00000000005a2c10 0000000000000014 W __libnx_aligned_alloc
00000000005a2c30 0000000000000004 W __libnx_free
00000000005a2c40 000000000000001c W diagAbortWithResult
00000000005a2c60 0000000000000208 T envSetup
00000000005a2e70 0000000000000020 T envGetMainThreadHandle
00000000005a2e90 000000000000000c T envIsNso
00000000005a2ea0 0000000000000014 T envHasHeapOverride
00000000005a2ec0 000000000000000c T envGetHeapOverrideAddr
00000000005a2ed0 000000000000000c T envGetHeapOverrideSize
00000000005a2ee0 0000000000000014 T envHasArgv
00000000005a2f00 000000000000000c T envGetArgv
00000000005a2f10 000000000000000c T envGetExitFuncPtr
00000000005a2f20 000000000000000c T envSetExitFuncPtr
00000000005a2f30 000000000000000c T envHasRandomSeed
00000000005a2f40 0000000000000010 T envGetRandomSeed
00000000005a2f50 0000000000000014 T hosversionGet
00000000005a2f70 0000000000000010 T hosversionSet
00000000005a2f80 000000000000009c T padConfigureInput
00000000005a3020 0000000000000024 T padInitializeWithMask
00000000005a3050 0000000000000294 T padUpdate
00000000005a32f0 0000000000000008 t romfs_close
00000000005a3300 0000000000000088 t romfs_seek
00000000005a3390 000000000000001c t romfs_dirreset
00000000005a33b0 0000000000000100 t fillDir
00000000005a34b0 00000000000002b0 t romfs_dirnext
00000000005a3760 0000000000000150 t searchForDir
00000000005a38b0 0000000000000150 t searchForFile
00000000005a3a00 0000000000000150 t _romfs_read_safe
00000000005a3b50 00000000000000b8 t _romfs_read
00000000005a3c10 0000000000000080 t romfs_read
00000000005a3c90 00000000000000b4 t romfs_free
00000000005a3d50 00000000000001f4 t navigateToDir.constprop.0
00000000005a3f50 0000000000000108 t romfs_open
00000000005a4060 00000000000001a0 t romfs_stat
00000000005a4200 0000000000000054 t romfs_chdir
00000000005a4260 0000000000000084 t romfs_diropen
00000000005a42f0 0000000000000008 t romfs_dirclose
00000000005a4300 0000000000000150 t romfsFindMount
00000000005a4450 0000000000000070 t romfs_fstat
00000000005a44c0 00000000000001b0 t romfsMountCommon
00000000005a4670 0000000000000068 T romfsMountFromFile
00000000005a46e0 000000000000006c T romfsMountFromStorage
00000000005a4750 0000000000000038 T romfsMountFromCurrentProcess
00000000005a4790 0000000000000188 T romfsMountSelf
00000000005a4920 00000000000000a8 T romfsUnmount
00000000005a49d0 000000000000007c t _socketGetFd
00000000005a4a50 00000000000000a4 t _socketParseBsdResult.part.0
00000000005a4b00 00000000000000bc T fcntl
00000000005a4bc0 0000000000000134 T utf16_to_utf8
00000000005a4d00 0000000000000104 T utf8_to_utf16
00000000005a4e04 T armDCacheFlush
00000000005a4e34 t armDCacheFlush_L0
00000000005a4e50 T svcSetHeapSize
00000000005a4e64 T svcSetMemoryPermission
00000000005a4e6c T svcSetMemoryAttribute
00000000005a4e74 T svcMapMemory
00000000005a4e7c T svcUnmapMemory
00000000005a4e84 T svcQueryMemory
00000000005a4e98 T svcExitProcess
00000000005a4ea0 T svcCreateThread
00000000005a4eb4 T svcStartThread
00000000005a4ebc T svcExitThread
00000000005a4ec4 T svcSleepThread
00000000005a4ecc T svcSetThreadPriority
00000000005a4ed4 T svcSetThreadCoreMask
00000000005a4edc T svcMapSharedMemory
00000000005a4ee4 T svcUnmapSharedMemory
00000000005a4eec T svcCreateTransferMemory
00000000005a4f00 T svcCloseHandle
00000000005a4f08 T svcResetSignal
00000000005a4f10 T svcWaitSynchronization
00000000005a4f24 T svcArbitrateLock
00000000005a4f2c T svcArbitrateUnlock
00000000005a4f34 T svcWaitProcessWideKeyAtomic
00000000005a4f3c T svcSignalProcessWideKey
00000000005a4f44 T svcConnectToNamedPort
00000000005a4f58 T svcSendSyncRequest
00000000005a4f60 T svcBreak
00000000005a4f68 T svcOutputDebugString
00000000005a4f70 T svcReturnFromException
00000000005a4f78 T svcGetInfo
00000000005a4f8c T svcUnmapTransferMemory
00000000005a4f94 T __aarch64_read_tp
00000000005a4fa0 000000000000000c T eventLoadRemote
00000000005a4fb0 0000000000000034 T eventWait
00000000005a4ff0 0000000000000054 T eventClose
00000000005a5050 0000000000000014 T shmemLoadRemote
00000000005a5070 0000000000000070 T shmemMap
00000000005a50e0 0000000000000034 T shmemUnmap
00000000005a5120 000000000000004c T shmemClose
00000000005a5170 00000000000000a8 T tmemCreate
00000000005a5220 0000000000000034 T tmemUnmap
00000000005a5260 0000000000000030 T tmemCloseHandle
00000000005a5290 000000000000009c T tmemWaitForPermission
00000000005a5330 0000000000000050 T tmemClose
00000000005a5380 0000000000000064 t _memregionInitWithInfo
00000000005a53f0 0000000000000004 W __libnx_virtmem_rng
00000000005a5400 0000000000000164 t _memregionFindRandom
00000000005a5570 0000000000000140 T virtmemSetup
00000000005a56b0 000000000000000c T virtmemLock
00000000005a56c0 000000000000000c T virtmemUnlock
00000000005a56d0 0000000000000050 T virtmemFindAslr
00000000005a5720 0000000000000050 T virtmemFindStack
00000000005a5770 000000000000057c T waitObjects
00000000005a5cf0 0000000000000118 T waitHandles
00000000005a5e10 00000000000000d4 t _apmCleanup
00000000005a5ef0 0000000000000194 T apmInitialize
00000000005a6090 0000000000000048 T apmExit
00000000005a60e0 00000000000000c8 T apmSetPerformanceConfiguration
00000000005a61b0 0000000000000178 T bsdFcntl
00000000005a6330 00000000000000b4 t _fsCleanup
00000000005a63f0 00000000000001c0 t _fsCmdNoIO
00000000005a65b0 00000000000001e0 t _fsFsCmdWithInPath
00000000005a6790 00000000000001f8 t _fsFsCmdWithTwoInPaths
00000000005a6990 000000000000028c t _fsFsOpenCommon
00000000005a6c20 00000000000001fc t _fsFsCmdWithInPathAndOutU64
00000000005a6e20 00000000000000f8 t _fsObjectClose
00000000005a6f20 000000000000017c t _fsCmdGetSession.constprop.0
00000000005a70a0 00000000000002f8 T fsInitialize
00000000005a73a0 0000000000000048 T fsExit
00000000005a73f0 0000000000000008 T fsOpenSdCardFileSystem
00000000005a7400 0000000000000008 T fsOpenDataStorageByCurrentProcess
00000000005a7410 00000000000001ec T fsFsCreateFile
00000000005a7600 0000000000000008 T fsFsDeleteFile
00000000005a7610 0000000000000008 T fsFsCreateDirectory
00000000005a7620 0000000000000008 T fsFsDeleteDirectory
00000000005a7630 0000000000000008 T fsFsRenameFile
00000000005a7640 0000000000000008 T fsFsRenameDirectory
00000000005a7650 00000000000001f0 T fsFsGetEntryType
00000000005a7840 0000000000000008 T fsFsOpenFile
00000000005a7850 0000000000000008 T fsFsOpenDirectory
00000000005a7860 0000000000000008 T fsFsGetFreeSpace
00000000005a7870 0000000000000008 T fsFsGetTotalSpace
00000000005a7880 0000000000000230 T fsFsGetFileTimeStampRaw
00000000005a7ab0 0000000000000004 T fsFsClose
00000000005a7ac0 0000000000000214 T fsFileRead
00000000005a7ce0 00000000000001f8 T fsFileWrite
00000000005a7ee0 0000000000000008 T fsFileFlush
00000000005a7ef0 00000000000001c0 T fsFileSetSize
00000000005a7ef0 00000000000001c0 t fsFileSetSize.localalias
00000000005a80b0 00000000000001d4 T fsFileGetSize
00000000005a80b0 00000000000001d4 t fsFileGetSize.localalias
00000000005a8290 0000000000000004 T fsFileClose
00000000005a82a0 0000000000000004 T fsDirClose
00000000005a82b0 0000000000000204 T fsDirRead
00000000005a84c0 00000000000001e8 T fsStorageRead
00000000005a86b0 0000000000000004 T fsStorageClose
00000000005a86c0 0000000000000230 t _viCleanup
00000000005a88f0 0000000000000100 t _viCmdGetSessionNoParams.constprop.0
00000000005a89f0 0000000000000368 T viInitialize
00000000005a8d60 0000000000000048 T viExit
00000000005a8db0 000000000000000c T viGetSession_IHOSBinderDriverRelay
00000000005a8dc0 000000000000010c T viOpenDisplay
00000000005a8ed0 00000000000000ec T viCloseDisplay
00000000005a8fc0 00000000000000f4 T viCloseLayer
00000000005a90c0 0000000000000394 T viCreateLayer
00000000005a9460 00000000000000d8 T viSetLayerScalingMode
00000000005a9540 000000000000004c T nvChannelClose
00000000005a9590 0000000000000070 T nvChannelCreate
00000000005a9600 0000000000000008 T nvChannelSetPriority
00000000005a9610 000000000000001c T binderCreate
00000000005a9630 000000000000035c T binderTransactParcel
00000000005a9990 00000000000000e8 T binderConvertErrorCode
00000000005a9a80 0000000000000124 T binderAdjustRefcount
00000000005a9bb0 000000000000009c T binderInitSession
00000000005a9c50 000000000000005c T binderClose
00000000005a9cb0 0000000000000154 T binderGetNativeHandle
00000000005a9e10 00000000000000c8 T bqRequestBuffer
00000000005a9ee0 0000000000000128 T bqDequeueBuffer
00000000005aa010 00000000000000c8 T bqQueueBuffer
00000000005aa0e0 0000000000000084 T bqCancelBuffer
00000000005aa170 00000000000000d0 T bqConnect
00000000005aa240 0000000000000088 T bqDisconnect
00000000005aa2d0 0000000000000194 T bqSetPreallocatedBuffer
00000000005aa470 0000000000000030 T parcelCreate
00000000005aa4a0 0000000000000174 T parcelTransact
00000000005aa620 0000000000000080 T parcelWriteData
00000000005aa6a0 0000000000000088 T parcelReadData
00000000005aa730 0000000000000020 T parcelWriteInt32
00000000005aa750 0000000000000020 T parcelWriteUInt32
00000000005aa770 000000000000007c T parcelWriteString16
00000000005aa7f0 0000000000000030 T parcelWriteInterfaceToken
00000000005aa820 0000000000000024 T parcelReadInt32
00000000005aa850 0000000000000068 T parcelReadFlattenedObject
00000000005aa8c0 0000000000000044 T parcelWriteFlattenedObject
00000000005aa910 0000000000000314 W argvSetup
00000000005aac30 00000000000001fc T __nx_dynamic
00000000005aae30 00000000000000d0 W __libnx_initheap
00000000005aaf00 00000000000000ec W __appInit
00000000005aaff0 0000000000000044 W __appExit
00000000005ab040 000000000000002c W __libnx_init
00000000005ab070 000000000000001c W __libnx_exit
00000000005ab090 000000000000001c T __syscall_exit
00000000005ab0b0 0000000000000034 T __syscall_getreent
00000000005ab0f0 0000000000000004 T __syscall_lock_acquire
00000000005ab100 0000000000000004 T __syscall_lock_release
00000000005ab110 0000000000000004 T __syscall_lock_acquire_recursive
00000000005ab120 0000000000000004 T __syscall_lock_release_recursive
00000000005ab130 000000000000001c T __syscall_cond_signal
00000000005ab150 000000000000001c T __syscall_cond_broadcast
00000000005ab170 000000000000003c T __syscall_cond_wait
00000000005ab1b0 0000000000000068 T __syscall_cond_wait_recursive
00000000005ab220 0000000000000014 T __syscall_thread_self
00000000005ab240 000000000000002c T __syscall_thread_exit
00000000005ab270 0000000000000054 t __thread_entry
00000000005ab2d0 0000000000000154 T __syscall_thread_create
00000000005ab430 0000000000000058 T __syscall_thread_join
00000000005ab490 0000000000000040 T __syscall_tls_create
00000000005ab4d0 0000000000000018 T __syscall_tls_set
00000000005ab4f0 0000000000000004 T __syscall_tls_get
00000000005ab500 0000000000000018 T __syscall_tls_delete
00000000005ab520 000000000000025c T __libnx_init_time
00000000005ab780 00000000000000e8 T __syscall_clock_gettime
00000000005ab870 0000000000000088 T __syscall_gettod_r
00000000005ab900 0000000000000098 T newlibSetup
00000000005ab9a0 00000000000000e8 T nxlinkSetup
00000000005aba90 0000000000000030 T _convert_errno
00000000005abac0 0000000000000010 t fsdev_link
00000000005abad0 0000000000000010 t fsdev_dirreset
00000000005abae0 0000000000000010 t fsdev_chmod
00000000005abaf0 0000000000000018 t error_cmp
00000000005abb10 0000000000000020 t fsdev_dirclose
00000000005abb30 000000000000001c t fsdev_close
00000000005abb50 0000000000000074 t fsdev_converttimetoutc
00000000005abbd0 00000000000000d4 t fsdevFindDevice.part.0
00000000005abcb0 00000000000001cc t fsdev_fixpath
00000000005abe80 000000000000009c t _fsdevUnmountDeviceStruct.part.0
00000000005abf20 0000000000000010 t fsdev_fchmod
00000000005abf30 0000000000000100 t fsdev_diropen
00000000005ac030 00000000000000f8 t fsdev_statvfs
00000000005ac130 000000000000007c t fsdev_fsync
00000000005ac1b0 00000000000000ec t fsdev_fstat
00000000005ac2a0 0000000000000094 t fsdev_ftruncate
00000000005ac340 00000000000001d8 t fsdev_stat
00000000005ac520 000000000000014c t fsdev_rename
00000000005ac670 000000000000013c t fsdev_chdir
00000000005ac7b0 00000000000000a4 t fsdev_rmdir
00000000005ac860 00000000000000a4 t fsdev_mkdir
00000000005ac910 00000000000000a4 t fsdev_unlink
00000000005ac9c0 000000000000013c t fsdev_write_safe
00000000005acb00 0000000000000134 t fsdev_read_safe
00000000005acc40 0000000000000100 t fsdev_read
00000000005acd40 00000000000001d4 t fsdev_dirnext
00000000005acf20 0000000000000124 t fsdev_write
00000000005ad050 0000000000000110 t fsdev_seek
00000000005ad160 0000000000000230 t fsdev_open
00000000005ad390 0000000000000324 T fsdevMountDevice
00000000005ad6c0 0000000000000040 T fsdevMountSdmc
00000000005ad700 00000000000000bc T __libnx_init_cwd
00000000005ad7c0 0000000000000064 T fsdevUnmountAll
00000000005ad830 0000000000000084 T fsdevTranslatePath
00000000005ad8c0 0000000000000060 T decode_utf16
00000000005ad920 0000000000000128 T decode_utf8
00000000005ada50 0000000000000058 T encode_utf16
00000000005adab0 00000000000000d0 T encode_utf8
00000000005adb80 W __libnx_exception_entry
00000000005adc0c t __libnx_exception_entry_start
00000000005add34 t __libnx_exception_entry_abort
00000000005add38 t __libnx_exception_entry_end
00000000005add40 T __libnx_exception_returnentry
00000000005add60 0000000000000070 T condvarWaitTimeout
00000000005addd0 0000000000000410 T randomGet
00000000005ae1e0 0000000000000020 T randomGet64
00000000005ae200 00000000000000b0 T __libnx_init_thread
00000000005ae2b0 000000000000034c T threadCreate
00000000005ae600 00000000000000a4 T threadExit
00000000005ae6b0 00000000000000ac t _EntryWrap
00000000005ae760 0000000000000008 T threadStart
00000000005ae770 000000000000002c T threadWaitForExit
00000000005ae7a0 00000000000000a4 T threadClose
00000000005ae850 0000000000000010 T threadTlsGet
00000000005ae860 0000000000000010 T threadTlsSet
00000000005ae870 00000000000000d8 T threadTlsAlloc
00000000005ae950 0000000000000044 T threadTlsFree
00000000005ae9a0 0000000000000184 T sessionmgrCreate
00000000005aeb30 0000000000000084 T sessionmgrClose
00000000005aebc0 00000000000000a8 T sessionmgrAttachClient
00000000005aec70 0000000000000060 T sessionmgrDetachClient
00000000005aecd0 00000000000000d0 t _setsysGetFirmwareVersionImpl
00000000005aeda0 0000000000000078 t _setsysCleanup
00000000005aee20 00000000000000a0 T setsysInitialize
00000000005aeec0 0000000000000048 T setsysExit
00000000005aef10 0000000000000048 T setsysGetFirmwareVersion
00000000005aef60 000000000000027c t _timeCleanup
00000000005af1e0 0000000000000100 t _timeCmdGetSession.constprop.0
00000000005af2e0 0000000000000104 t _timeReadClockFromSharedMem
00000000005af3f0 0000000000000300 T timeInitialize
00000000005af6f0 0000000000000048 T timeExit
00000000005af740 0000000000000038 T timeGetServiceSession_SystemClock
00000000005af780 00000000000000fc T timeGetCurrentTime
00000000005af880 0000000000000108 T timeToCalendarTimeWithMyRule
00000000005af990 0000000000000114 T timeToPosixTimeWithMyRule
00000000005afab0 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
00000000005afae0 0000000000000054 T hb_segment_properties_equal
00000000005afb40 000000000000005c T hb_segment_properties_overlay
00000000005afba0 000000000000017c t hb_buffer_t::enlarge(unsigned int)
00000000005afd20 00000000000000cc t hb_buffer_t::make_room_for(unsigned int, unsigned int)
00000000005afdf0 00000000000000f4 t hb_buffer_t::shift_forward(unsigned int)
00000000005afef0 0000000000000034 t hb_buffer_t::clear()
00000000005aff30 000000000000004c t hb_buffer_t::enter()
00000000005aff80 0000000000000014 t hb_buffer_t::leave()
00000000005affa0 0000000000000080 t hb_buffer_t::add(unsigned int, unsigned int)
00000000005b0020 000000000000001c t hb_buffer_t::clear_output()
00000000005b0040 0000000000000038 t hb_buffer_t::clear_positions()
00000000005b0080 000000000000013c t hb_buffer_t::sync()
00000000005b01c0 0000000000000080 t hb_buffer_t::sync_so_far()
00000000005b0240 0000000000000194 t hb_buffer_t::move_to(unsigned int)
00000000005b03e0 0000000000000060 t hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
00000000005b0440 00000000000002a0 t hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
00000000005b06e0 00000000000001b4 t hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
00000000005b08a0 00000000000000e0 t hb_buffer_t::delete_glyph()
00000000005b0980 00000000000001bc t hb_buffer_t::delete_glyphs_inplace(bool (*)(hb_glyph_info_t const*))
00000000005b0b40 0000000000000110 t hb_buffer_t::guess_segment_properties()
00000000005b0c50 000000000000000c T hb_buffer_get_empty
00000000005b0c60 0000000000000088 T hb_buffer_create
00000000005b0cf0 0000000000000050 T hb_buffer_create_similar
00000000005b0d40 0000000000000198 T hb_buffer_destroy
00000000005b0ee0 0000000000000014 T hb_buffer_set_direction
00000000005b0f00 0000000000000008 T hb_buffer_get_direction
00000000005b0f10 0000000000000014 T hb_buffer_set_script
00000000005b0f30 000000000000001c T hb_buffer_set_segment_properties
00000000005b0f50 0000000000000010 T hb_buffer_get_segment_properties
00000000005b0f60 0000000000000014 T hb_buffer_set_flags
00000000005b0f80 0000000000000008 T hb_buffer_get_flags
00000000005b0f90 0000000000000014 T hb_buffer_clear_contents
00000000005b0fb0 00000000000000e0 T hb_buffer_set_length
00000000005b1090 0000000000000008 T hb_buffer_get_length
00000000005b10a0 0000000000000014 T hb_buffer_get_glyph_infos
00000000005b10c0 0000000000000074 T hb_buffer_get_glyph_positions
00000000005b1140 00000000000000f0 T hb_buffer_reverse
00000000005b1230 0000000000000004 T hb_buffer_guess_segment_properties
00000000005b1240 0000000000000600 T hb_buffer_add_utf8
00000000005b1840 000000000000038c T hb_buffer_append
00000000005b1bd0 000000000000014c t hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
00000000005b1d20 00000000000001ec T hb_buffer_diff
00000000005b1f10 00000000000000c4 t hb_buffer_t::message_impl(hb_font_t*, char const*, std::__va_list)
00000000005b1fe0 0000000000000160 t lang_find_or_insert(char const*)
00000000005b2140 00000000000000d4 t _hb_options_init()
00000000005b2220 00000000000000a0 T hb_tag_from_string
00000000005b22c0 0000000000000080 T hb_language_from_string
00000000005b2340 0000000000000004 T hb_language_to_string
00000000005b2350 0000000000000054 T hb_language_get_default
00000000005b23b0 00000000000000ac T hb_language_matches
00000000005b2460 0000000000000344 T hb_script_get_horizontal_direction
00000000005b27b0 000000000000000c t hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005b27c0 000000000000000c t hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005b27d0 0000000000000008 t hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
00000000005b27e0 0000000000000008 t hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
00000000005b27f0 0000000000000010 t hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005b2800 0000000000000010 t hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005b2810 0000000000000008 t hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005b2820 0000000000000010 t hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000005b2830 0000000000000010 t hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005b2840 000000000000000c t hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005b2850 0000000000000004 t hb_font_draw_glyph_nil(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005b2860 0000000000000004 t hb_font_paint_glyph_nil(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005b2870 0000000000000030 t hb_draw_move_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005b28a0 0000000000000044 t hb_draw_line_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005b28f0 0000000000000050 t hb_draw_quadratic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005b2940 000000000000005c t hb_draw_cubic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005b29a0 0000000000000018 t hb_draw_close_path_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000005b29c0 00000000000000a0 t hb_font_draw_glyph_default(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005b2a60 0000000000000110 t hb_font_paint_glyph_default(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005b2b70 000000000000000c t hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005b2b80 0000000000000014 t hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005b2ba0 000000000000008c t _hb_font_funcs_set_middle(hb_font_funcs_t*, void*, void (*)(void*))
00000000005b2c30 00000000000000fc t hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005b2d30 0000000000000008 t hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005b2d40 0000000000000014 t hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005b2d60 0000000000000024 t hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005b2d90 00000000000000f8 t hb_font_get_nominal_glyphs_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000005b2e90 0000000000000060 t hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005b2ef0 0000000000000060 t hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005b2f50 0000000000000154 t hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005b30b0 0000000000000028 t hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005b30e0 00000000000000fc t void hb_object_fini<hb_font_funcs_t>(hb_font_funcs_t*)
00000000005b30e0 00000000000000fc t void hb_object_fini<hb_font_t>(hb_font_t*)
00000000005b31e0 0000000000000058 t hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005b3240 0000000000000098 t hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005b32e0 0000000000000098 t hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005b3380 00000000000000ac t hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
00000000005b3430 0000000000000154 t hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005b3590 00000000000000ac t hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
00000000005b3640 0000000000000080 t hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005b36c0 00000000000000d0 t hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005b3790 00000000000000d0 t hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005b3860 00000000000000d0 t hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000005b3930 0000000000000104 t hb_font_t::mults_changed()
00000000005b3a40 00000000000002d0 t OT::ItemVariationStore::sanitize(hb_sanitize_context_t*) const
00000000005b3d10 00000000000001d0 t OT::avarV2Tail::sanitize(hb_sanitize_context_t*, void const*) const
00000000005b3ee0 00000000000001ac t OT::SegmentMaps::map(int, unsigned int, unsigned int) const
00000000005b4090 0000000000000148 t OT::fvar::sanitize(hb_sanitize_context_t*) const
00000000005b41e0 000000000000000c T hb_font_funcs_get_empty
00000000005b41f0 0000000000000088 T hb_font_funcs_create
00000000005b4280 0000000000000058 T hb_font_funcs_reference
00000000005b42e0 00000000000002ac T hb_font_funcs_destroy
00000000005b4590 0000000000000018 T hb_font_funcs_make_immutable
00000000005b45b0 00000000000000d0 T hb_font_funcs_set_font_h_extents_func
00000000005b4680 00000000000000d0 T hb_font_funcs_set_font_v_extents_func
00000000005b4750 00000000000000d0 T hb_font_funcs_set_nominal_glyph_func
00000000005b4820 00000000000000d0 T hb_font_funcs_set_nominal_glyphs_func
00000000005b48f0 00000000000000d0 T hb_font_funcs_set_variation_glyph_func
00000000005b49c0 00000000000000d0 T hb_font_funcs_set_glyph_v_advance_func
00000000005b4a90 00000000000000d0 T hb_font_funcs_set_glyph_h_advances_func
00000000005b4b60 00000000000000d0 T hb_font_funcs_set_glyph_v_advances_func
00000000005b4c30 00000000000000d0 T hb_font_funcs_set_glyph_v_origin_func
00000000005b4d00 00000000000000d0 T hb_font_funcs_set_glyph_h_kerning_func
00000000005b4dd0 00000000000000d0 T hb_font_funcs_set_glyph_extents_func
00000000005b4ea0 00000000000000d0 T hb_font_funcs_set_glyph_contour_point_func
00000000005b4f70 00000000000000d0 T hb_font_funcs_set_glyph_name_func
00000000005b5040 00000000000000d0 T hb_font_funcs_set_glyph_from_name_func
00000000005b5110 00000000000000d0 T hb_font_funcs_set_draw_glyph_func
00000000005b51e0 00000000000000d0 T hb_font_funcs_set_paint_glyph_func
00000000005b52b0 0000000000000074 t hb_font_t::has_func(unsigned int)
00000000005b5330 000000000000004c T hb_font_get_glyph
00000000005b5380 0000000000000028 T hb_font_get_nominal_glyph
00000000005b53b0 0000000000000020 T hb_font_get_glyph_h_advance
00000000005b53d0 0000000000000028 T hb_font_get_glyph_extents
00000000005b5400 000000000000002c T hb_font_draw_glyph
00000000005b5430 000000000000000c T hb_font_get_empty
00000000005b5440 00000000000000d8 t _hb_font_create(hb_face_t*)
00000000005b5520 00000000000000e4 T hb_font_destroy
00000000005b5610 0000000000000008 T hb_font_get_face
00000000005b5620 000000000000009c T hb_font_set_funcs
00000000005b56c0 000000000000003c T hb_font_set_scale
00000000005b5700 00000000000001ec t hb_table_lazy_loader_t<OT::fvar, 18u, true>::create(hb_face_t*)
00000000005b58f0 000000000000039c t hb_table_lazy_loader_t<OT::avar, 19u, true>::create(hb_face_t*)
00000000005b5c90 000000000000040c T hb_font_set_var_coords_normalized
00000000005b60a0 00000000000002a4 T hb_font_set_variations
00000000005b6350 000000000000003c T hb_font_set_var_named_instance
00000000005b6390 0000000000000054 T hb_font_create
00000000005b63f0 0000000000000350 t hb_parse_double(char const**, char const*, double*, bool)
00000000005b6740 0000000000000018 t int _hb_cmp_operator<unsigned short, unsigned short>(void const*, void const*)
00000000005b6760 0000000000000008 W OT::ColorLine<OT::NoVariable>::static_get_extend(hb_color_line_t*, void*, void*)
00000000005b6770 0000000000000008 W OT::ColorLine<OT::Variable>::static_get_extend(hb_color_line_t*, void*, void*)
00000000005b6780 000000000000002c t _hb_ot_font_destroy(void*)
00000000005b67b0 0000000000000040 W OT::cff1::accelerator_t::gname_t::cmp(void const*, void const*)
00000000005b67f0 0000000000000070 t hb_ot_get_font_v_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005b6860 0000000000000084 t hb_ot_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005b68f0 0000000000000030 t int _hb_cmp_method<unsigned int, OT::CmapSubtableLongGroup const>(void const*, void const*)
00000000005b6920 0000000000000028 t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
00000000005b6950 0000000000000028 t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const [clone .part.0]
00000000005b6980 0000000000000028 t hb_vector_t<CFF::cff2_font_dict_values_t, false>::shrink_vector(unsigned int) [clone .part.0]
00000000005b69b0 0000000000000028 t hb_vector_t<CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>, false>::shrink_vector(unsigned int) [clone .part.0]
00000000005b69e0 0000000000000180 t OT::glyf_impl::CompositeGlyphRecord::get_transformation(float (&) [4], contour_point_t&) const [clone .isra.0]
00000000005b6b60 00000000000000b4 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>(void const*, unsigned int, unsigned int*)
00000000005b6c20 0000000000000408 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
00000000005b7030 0000000000001034 t void sort_r_simple<void*>(void*, unsigned long, unsigned long, int (*)(void const*, void const*, void*), void*) [clone .constprop.0]
00000000005b8070 0000000000000014 t hb_draw_funcs_t::emit_close_path(void*, hb_draw_state_t&)
00000000005b8090 0000000000000070 t hb_draw_funcs_t::start_path(void*, hb_draw_state_t&)
00000000005b8100 0000000000000154 t OT::VarRegionList::evaluate(unsigned int, int const*, unsigned int, float*) const
00000000005b8260 0000000000000218 t OT::VarData::get_delta(unsigned int, int const*, unsigned int, OT::VarRegionList const&, float*) const
00000000005b8480 0000000000000104 t OT::DeltaSetIndexMap::sanitize(hb_sanitize_context_t*) const
00000000005b8590 0000000000000178 t OT::ItemVarStoreInstancer::operator()(unsigned int, unsigned short) const
00000000005b8710 00000000000001ec W OT::ColorLine<OT::Variable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000005b8900 00000000000001e0 W OT::ColorLine<OT::NoVariable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000005b8ae0 00000000000001ec t OT::TupleVariationData::decompile_points(OT::IntType<unsigned char, 1u> const*&, hb_vector_t<unsigned int, false>&, OT::IntType<unsigned char, 1u> const*)
00000000005b8cd0 00000000000018e4 t OT::gvar::accelerator_t::apply_deltas_to_points(unsigned int, hb_array_t<int const>, hb_array_t<contour_point_t>, bool) const [clone .isra.0]
00000000005ba5c0 00000000000000f4 t OT::CmapSubtableFormat4::accelerator_t::get_glyph(unsigned int, unsigned int*) const
00000000005ba6c0 0000000000000004 W OT::CmapSubtableFormat4::accelerator_t::get_glyph_func(void const*, unsigned int, unsigned int*)
00000000005ba6d0 0000000000000144 t OT::VariationSelectorRecord::get_glyph(unsigned int, unsigned int*, void const*) const
00000000005ba820 0000000000000190 t OT::VariationSelectorRecord::sanitize(hb_sanitize_context_t*, void const*) const
00000000005ba9b0 0000000000000298 t OT::CmapSubtable::get_glyph(unsigned int, unsigned int*) const
00000000005bac50 0000000000000014 W bool OT::cmap::accelerator_t::get_glyph_from_ascii<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000005bac70 0000000000000004 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000005bac80 00000000000000c8 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_trad_map(unsigned int))>(void const*, unsigned int, unsigned int*)
00000000005bad50 00000000000000c0 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_simp_map(unsigned int))>(void const*, unsigned int, unsigned int*)
00000000005bae10 0000000000000058 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &OT::_hb_symbol_pua_map>(void const*, unsigned int, unsigned int*)
00000000005bae70 00000000000000d8 W bool OT::cmap::accelerator_t::get_glyph_from_macroman<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000005baf50 000000000000034c t OT::CmapSubtable::sanitize(hb_sanitize_context_t*) const
00000000005bb2a0 00000000000000c0 t OT::cmap::find_subtable(unsigned int, unsigned int) const
00000000005bb360 00000000000003dc t OT::cmap::find_best_subtable(bool*, bool*, bool*) const
00000000005bb740 0000000000000150 t OT::cmap::sanitize(hb_sanitize_context_t*) const
00000000005bb890 00000000000001b4 t OT::HVARVVAR::sanitize(hb_sanitize_context_t*) const
00000000005bba50 000000000000012c t OT::gvar::sanitize_shallow(hb_sanitize_context_t*) const
00000000005bbb80 0000000000000400 W OT::gvar::accelerator_t::accelerator_t(hb_face_t*)
00000000005bbb80 0000000000000400 t OT::gvar::accelerator_t::accelerator_t(hb_face_t*)
00000000005bbf80 00000000000000fc t OT::glyf_impl::SimpleGlyph::trim_padding() const
00000000005bc080 00000000000004ac t OT::glyf_impl::SimpleGlyph::get_contour_points(contour_point_vector_t&, bool) const
00000000005bc530 00000000000001b0 t OT::glyf_accelerator_t::glyph_for_gid(unsigned int, bool) const
00000000005bc6e0 0000000000000260 t OT::glyf_accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const [clone .part.0]
00000000005bc940 00000000000001d0 t CFF::Encoding::sanitize(hb_sanitize_context_t*) const
00000000005bcb10 000000000000014c t CFF::Charset::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005bcc60 000000000000036c W OT::post::accelerator_t::accelerator_t(hb_face_t*)
00000000005bcc60 000000000000036c t OT::post::accelerator_t::accelerator_t(hb_face_t*)
00000000005bcfd0 000000000000025c t OT::post::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
00000000005bd230 0000000000000120 t OT::IndexSubtableRecord::get_image_data(unsigned int, void const*, unsigned int*, unsigned int*, unsigned int*) const
00000000005bd350 00000000000001cc t OT::IndexSubtableArray::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005bd520 000000000000017c t OT::CBLC::sanitize(hb_sanitize_context_t*) const
00000000005bd6a0 0000000000000174 t OT::CBLC::choose_strike(hb_font_t*) const
00000000005bd820 000000000000028c W OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
00000000005bd820 000000000000028c t OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
00000000005bdab0 00000000000003ec t OT::CBDT::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
00000000005bdea0 00000000000001d8 t OT::CBDT::accelerator_t::reference_png(hb_font_t*, unsigned int) const
00000000005be080 0000000000000140 t hb_paint_extents_context_t::hb_paint_extents_context_t()
00000000005be080 0000000000000140 W hb_paint_extents_context_t::hb_paint_extents_context_t()
00000000005be1c0 0000000000000160 t OT::Affine2x3::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005be320 0000000000000184 t OT::ClipList::sanitize(hb_sanitize_context_t*) const
00000000005be4b0 0000000000000244 t OT::ClipList::get_extents(unsigned int, hb_glyph_extents_t*, OT::ItemVarStoreInstancer const&) const
00000000005be700 00000000000000b4 t OT::COLR::get_base_glyph_paint(unsigned int) const
00000000005be7c0 0000000000000130 t OT::SBIXStrike::get_glyph_blob(unsigned int, hb_blob_t*, unsigned int, int*, int*, unsigned int, unsigned int*) const
00000000005be8f0 00000000000001a4 t OT::sbix::accelerator_t::choose_strike(hb_font_t*) const
00000000005beaa0 00000000000002b0 t OT::sbix::accelerator_t::get_png_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
00000000005bed50 000000000000016c t OT::sbix::sanitize(hb_sanitize_context_t*) const
00000000005beec0 0000000000000240 W OT::sbix::accelerator_t::accelerator_t(hb_face_t*)
00000000005beec0 0000000000000240 t OT::sbix::accelerator_t::accelerator_t(hb_face_t*)
00000000005bf100 00000000000000d8 t OT::SVG::accelerator_t::reference_blob_for_glyph(unsigned int) const
00000000005bf1e0 00000000000002b0 T hb_ot_font_set_funcs
00000000005bf490 0000000000000334 t hb_hashmap_t<unsigned int, unsigned int, true>::alloc(unsigned int)
00000000005bf7d0 000000000000013c t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000005bf910 0000000000000264 t CFF::opset_t<CFF::number_t>::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000005bfb80 00000000000002a0 t CFF::dict_opset_t::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000005bfe20 0000000000000714 t CFF::cff1_top_dict_opset_t::process_op(unsigned int, CFF::cff1_top_dict_interp_env_t&, CFF::cff1_top_dict_values_t&)
00000000005c0540 0000000000000234 t CFF::FDSelect3_4<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned char, 1u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005c0780 00000000000001f8 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005c0980 0000000000000134 t CFF::parsed_values_t<CFF::op_str_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::op_str_t const&)
00000000005c0ac0 0000000000000134 t CFF::parsed_values_t<CFF::dict_val_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::dict_val_t const&)
00000000005c0c00 00000000000001b8 t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::operator[](unsigned int) const
00000000005c0dc0 00000000000006ac t OT::cff1::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
00000000005c1470 000000000000024c t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::get_advance_with_var_unscaled(unsigned int, hb_font_t*, float*) const
00000000005c16c0 0000000000000114 t hb_hashmap_t<unsigned int, unsigned int, true>::fini()
00000000005c17e0 000000000000199c t bool OT::glyf_impl::Glyph::get_points<OT::glyf_accelerator_t>(hb_font_t*, OT::glyf_accelerator_t const&, contour_point_vector_t&, contour_point_vector_t*, head_maxp_info_t*, unsigned int*, bool, bool, bool, hb_array_t<int const>, hb_map_t*, unsigned int, unsigned int*) const
00000000005c3180 0000000000000324 t bool OT::glyf_accelerator_t::get_points<OT::glyf_accelerator_t::points_aggregator_t>(hb_font_t*, unsigned int, OT::glyf_accelerator_t::points_aggregator_t, hb_array_t<int const>) const
00000000005c34b0 0000000000000f14 t bool OT::glyf_accelerator_t::get_points<OT::glyf_impl::path_builder_t>(hb_font_t*, unsigned int, OT::glyf_impl::path_builder_t, hb_array_t<int const>) const
00000000005c43d0 00000000000002a8 t CFF::dict_interpreter_t<CFF::cff2_top_dict_opset_t, CFF::cff2_top_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff2_top_dict_values_t&)
00000000005c4680 0000000000000230 t hb_vector_t<CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
00000000005c48b0 00000000000001e0 t hb_vector_t<CFF::cff2_font_dict_values_t, false>::push()
00000000005c4a90 0000000000000ff4 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000005c4a90 0000000000000ff4 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000005c5a90 0000000000000170 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::_fini()
00000000005c5c00 0000000000000134 t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000005c5d40 0000000000000228 t hb_vector_t<CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
00000000005c5f70 00000000000001e8 t hb_vector_t<CFF::cff1_font_dict_values_t, false>::push()
00000000005c6160 000000000000043c t CFF::dict_interpreter_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>&)
00000000005c65a0 000000000000009c t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const
00000000005c6640 0000000000001328 W OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000005c6640 0000000000001328 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000005c7970 0000000000000090 t hb_vector_t<CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>, false>::shrink_vector(unsigned int)
00000000005c7a00 0000000000000300 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::get_stored() const
00000000005c7d00 0000000000000144 t hb_ot_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005c7e50 000000000000040c t hb_ot_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005c8260 0000000000000090 t hb_vector_t<CFF::cff2_font_dict_values_t, false>::shrink_vector(unsigned int)
00000000005c82f0 00000000000001b4 t OT::PaintLinearGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c84b0 00000000000001b4 t OT::PaintLinearGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c8670 00000000000001bc t OT::PaintRadialGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c8830 00000000000001bc t OT::PaintRadialGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c89f0 000000000000018c t OT::PaintSweepGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c8b80 000000000000018c t OT::PaintSweepGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c8d10 0000000000000708 t OT::hb_paint_context_t::return_t OT::Paint::dispatch<OT::hb_paint_context_t>(OT::hb_paint_context_t*) const [clone .isra.0]
00000000005c9420 0000000000000390 t OT::PaintColrLayers::paint_glyph(OT::hb_paint_context_t*) const
00000000005c97b0 0000000000000158 t OT::PaintTranslate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c9910 0000000000000168 t OT::PaintScale::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c9a80 00000000000001a0 t OT::PaintSkew::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005c9c20 0000000000000204 t OT::PaintGlyph::paint_glyph(OT::hb_paint_context_t*) const
00000000005c9e30 00000000000002e0 t OT::PaintScaleUniformAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005ca110 0000000000000360 t OT::PaintRotateAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005ca470 0000000000000318 t OT::PaintScaleAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005ca790 000000000000039c t OT::PaintSkewAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005cab30 00000000000005bc t OT::PaintColrGlyph::paint_glyph(OT::hb_paint_context_t*) const
00000000005cb0f0 0000000000000808 t OT::COLR::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, bool) const
00000000005cb900 00000000000002c4 t OT::COLR::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000005cbbd0 00000000000000e8 t hb_table_lazy_loader_t<OT::OS2, 6u, true>::create(hb_face_t*)
00000000005cbcc0 00000000000004c4 W OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
00000000005cbcc0 00000000000004c4 t OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
00000000005cc190 0000000000000220 t hb_ot_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005cc3b0 0000000000000188 t hb_ot_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005cc540 000000000000022c t hb_ot_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000005cc770 00000000000000c0 t hb_table_lazy_loader_t<OT::head, 1u, true>::create(hb_face_t*)
00000000005cc830 00000000000000f8 t hb_table_lazy_loader_t<OT::VORG, 13u, true>::create(hb_face_t*)
00000000005cc930 000000000000015c t hb_lazy_loader_t<OT::SVG_accelerator_t, hb_face_lazy_loader_t<OT::SVG_accelerator_t, 39u>, hb_face_t, 39u, OT::SVG_accelerator_t>::create(hb_face_t*)
00000000005cca90 00000000000000b8 t hb_table_lazy_loader_t<OT::hhea, 4u, true>::create(hb_face_t*)
00000000005ccb50 0000000000000508 W OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005ccb50 0000000000000508 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005cd060 00000000000003c4 t hb_ot_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005cd430 00000000000000b8 t hb_table_lazy_loader_t<OT::vhea, 11u, true>::create(hb_face_t*)
00000000005cd4f0 0000000000000788 W OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005cd4f0 0000000000000788 t OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005cdc80 0000000000000530 t hb_ot_get_glyph_v_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005ce1b0 00000000000005a8 t OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000005ce1b0 00000000000005a8 W OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000005ce760 000000000000057c t hb_ot_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005cece0 00000000000009ac t hb_ot_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005cf690 0000000000000174 t OT::PaintTransform<OT::Variable>::sanitize(hb_sanitize_context_t*) const
00000000005cf810 0000000000000478 t hb_sanitize_context_t::return_t OT::Paint::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000005cfc90 000000000000016c t OT::BaseGlyphList::sanitize(hb_sanitize_context_t*) const
00000000005cfe00 0000000000000168 t OT::LayerList::sanitize(hb_sanitize_context_t*) const
00000000005cff70 00000000000002ac t OT::COLR::sanitize(hb_sanitize_context_t*) const
00000000005d0220 0000000000000744 t hb_ot_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005d0970 0000000000000834 t hb_ot_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005d11b0 0000000000000160 t OT::PaintTransform<OT::NoVariable>::sanitize(hb_sanitize_context_t*) const
00000000005d1310 0000000000000190 t OT::PaintComposite::sanitize(hb_sanitize_context_t*) const
00000000005d14a0 00000000000000fc t hb_outline_recording_pen_close_path(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000005d15a0 0000000000000110 t hb_outline_recording_pen_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005d16b0 0000000000000110 t hb_outline_recording_pen_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005d17c0 0000000000000200 t hb_outline_recording_pen_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005d19c0 00000000000002ec t hb_outline_recording_pen_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005d1cb0 0000000000000420 t hb_outline_t::replay(hb_draw_funcs_t*, void*) const
00000000005d20d0 00000000000000c8 t hb_outline_t::control_area() const
00000000005d21a0 0000000000000420 t hb_outline_t::embolden(float, float, float, float)
00000000005d25c0 0000000000000114 t hb_outline_recording_pen_get_funcs()
00000000005d26e0 00000000000000dc t OT::MVAR::get_var(unsigned int, int const*, unsigned int) const
00000000005d27c0 000000000000044c t hb_lazy_loader_t<OT::MVAR, hb_table_lazy_loader_t<OT::MVAR, 22u, true>, hb_face_t, 22u, hb_blob_t>::get() const
00000000005d2c10 0000000000000180 t hb_lazy_loader_t<OT::OS2, hb_table_lazy_loader_t<OT::OS2, 6u, true>, hb_face_t, 6u, hb_blob_t>::get() const
00000000005d2d90 0000000000000c64 t _hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, int*)
00000000005d3a00 0000000000000024 t _hb_glyph_info_is_default_ignorable(hb_glyph_info_t const*)
00000000005d3a30 00000000000002e0 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
00000000005d3d10 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000005d3d40 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000005d3d70 0000000000000078 t hb_buffer_t::message(hb_font_t*, char const*, ...)
00000000005d3df0 000000000000046c t hb_bit_set_t::resize(unsigned int, bool, bool)
00000000005d4260 00000000000001a4 t hb_bit_set_t::page_for(unsigned int, bool)
00000000005d4410 00000000000009ec t hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
00000000005d4410 00000000000009ec T hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
00000000005d4e00 00000000000006fc t hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&)
00000000005d5500 0000000000000384 t hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*)
00000000005d5890 00000000000000b0 t hb_ot_shape_plan_t::fini()
00000000005d5940 00000000000000b8 t hb_ot_shape_plan_t::position(hb_font_t*, hb_buffer_t*) const
00000000005d5a00 0000000000000008 t _hb_ot_shaper_face_data_create
00000000005d5a10 0000000000000004 t _hb_ot_shaper_face_data_destroy
00000000005d5a20 0000000000000008 t _hb_ot_shaper_font_data_create
00000000005d5a30 0000000000000004 t _hb_ot_shaper_font_data_destroy
00000000005d5a40 0000000000001f80 t _hb_ot_shape
00000000005d79c0 0000000000000470 t OT::avar::map_coords(int*, unsigned int) const
00000000005d7e30 00000000000001d4 T hb_ot_var_named_instance_get_design_coords
00000000005d8010 00000000000002a8 T hb_ot_var_normalize_coords
00000000005d82c0 0000000000000024 t hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_121>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
00000000005d82f0 0000000000000024 t hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_120>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
00000000005d8320 0000000000000028 t hb_bit_set_t::page_at(unsigned int) [clone .part.0]
00000000005d8350 0000000000000028 t hb_bit_set_t::page_at(unsigned int) const [clone .part.0]
00000000005d8380 0000000000000050 t hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_123>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
00000000005d83d0 0000000000000050 t hb_vector_size_t<unsigned long long, 64u> hb_bit_set_t::op_<._anon_124>(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&)
00000000005d8420 00000000000000fc t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
00000000005d8420 00000000000000fc t void hb_object_fini<hb_set_t>(hb_set_t*)
00000000005d8520 00000000000001e0 t hb_bit_set_t::compact(hb_vector_t<unsigned int, false>&, unsigned int)
00000000005d8700 00000000000001c0 t hb_bit_set_t::del_pages(int, int)
00000000005d88c0 00000000000003a0 t hb_bit_set_t::del_range(unsigned int, unsigned int)
00000000005d8c60 000000000000064c t hb_bit_set_t::process_(hb_vector_size_t<unsigned long long, 64u> (*)(hb_vector_size_t<unsigned long long, 64u> const&, hb_vector_size_t<unsigned long long, 64u> const&), bool, bool, hb_bit_set_t const&)
00000000005d92b0 00000000000002e4 t hb_bit_set_t::next(unsigned int*) const
00000000005d95a0 000000000000000c T hb_set_get_empty
00000000005d95b0 0000000000000080 T hb_set_create
00000000005d9630 00000000000000d0 T hb_set_destroy
00000000005d9700 00000000000001b4 T hb_set_is_empty
00000000005d98c0 00000000000000e0 T hb_set_subtract
00000000005d99a0 00000000000000fc T hb_set_next
00000000005d9aa0 0000000000000368 t hb_shape_plan_key_t::init(bool, hb_face_t*, hb_segment_properties_t const*, hb_feature_t const*, unsigned int, int const*, unsigned int, char const* const*)
00000000005d9e10 0000000000000098 t hb_shape_plan_key_t::user_features_match(hb_shape_plan_key_t const*)
00000000005d9eb0 0000000000000074 t hb_shape_plan_key_t::equal(hb_shape_plan_key_t const*)
00000000005d9f30 000000000000000c T hb_shape_plan_get_empty
00000000005d9f40 000000000000013c T hb_shape_plan_create2
00000000005da080 0000000000000058 T hb_shape_plan_reference
00000000005da0e0 00000000000001f4 T hb_shape_plan_destroy
00000000005da2e0 0000000000000258 T hb_shape_plan_execute
00000000005da540 00000000000001a8 T hb_shape_plan_create_cached2
00000000005da6f0 00000000000001b0 T hb_shape_full
00000000005da8a0 0000000000000008 T hb_shape
00000000005da8b0 000000000000017c t hb_shapers_lazy_loader_t::create()
00000000005daa30 0000000000000090 t _hb_shapers_get()
00000000005daac0 0000000000000174 t hb_lazy_loader_t<OT::maxp, hb_table_lazy_loader_t<OT::maxp, 2u, true>, hb_face_t, 2u, hb_blob_t>::get() const
00000000005dac40 0000000000000038 t hb_face_t::load_num_glyphs() const
00000000005dac80 00000000000000ec t hb_face_t::load_upem() const
00000000005dad70 00000000000002c8 t _glyf_get_advance_with_var_unscaled(hb_font_t*, unsigned int, bool)
00000000005db040 000000000000018c t _glyf_get_leading_bearing_with_var_unscaled(hb_font_t*, unsigned int, bool, int*)
00000000005db1d0 0000000000000008 t hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005db1e0 0000000000000008 t hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005db1f0 0000000000000008 t hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005db200 0000000000000008 t hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005db210 000000000000000c t hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005db220 0000000000000008 t hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
00000000005db230 0000000000000008 t hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
00000000005db240 0000000000000008 t hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
00000000005db250 0000000000000004 T hb_unicode_funcs_get_default
00000000005db260 000000000000000c T hb_unicode_funcs_get_empty
00000000005db270 0000000000000058 T hb_unicode_funcs_reference
00000000005db2d0 00000000000001f4 T hb_unicode_funcs_destroy
00000000005db2d0 00000000000001f4 t hb_unicode_funcs_destroy.localalias
00000000005db4d0 0000000000000018 T hb_unicode_funcs_make_immutable
00000000005db4f0 00000000000000c8 T hb_unicode_funcs_create
00000000005db5c0 00000000000000ac T hb_unicode_funcs_set_combining_class_func
00000000005db670 00000000000000ac T hb_unicode_funcs_set_general_category_func
00000000005db720 00000000000000ac T hb_unicode_funcs_set_mirroring_func
00000000005db7d0 00000000000000ac T hb_unicode_funcs_set_script_func
00000000005db880 00000000000000ac T hb_unicode_funcs_set_compose_func
00000000005db930 00000000000000ac T hb_unicode_funcs_set_decompose_func
00000000005db9e0 0000000000000078 t _hb_unicode_is_emoji_Extended_Pictographic(unsigned int)
00000000005dba60 000000000000001c t _hb_ft_color_line_get_extend(hb_color_line_t*, void*, void*)
00000000005dba80 0000000000000050 t _hb_ft_font_destroy(void*)
00000000005dbad0 0000000000000060 t _hb_ft_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
00000000005dbb30 00000000000000b0 t _hb_ft_reference_table(hb_face_t*, unsigned int, void*)
00000000005dbbe0 00000000000000c4 t hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000005dbcb0 0000000000000084 t hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005dbd40 0000000000000148 t hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005dbe90 0000000000000170 t hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005dc000 0000000000000208 t hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005dc210 0000000000000084 t hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005dc2a0 0000000000000140 t hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
00000000005dc3e0 0000000000000164 t hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005dc550 0000000000000090 t hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005dc5e0 0000000000000098 t hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000005dc680 00000000000001e4 t hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005dc870 00000000000001f4 t _hb_ft_color_line_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000005dca70 000000000000025c t hb_ft_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005dccd0 0000000000000158 t _hb_ft_move_to(FT_Vector_ const*, void*)
00000000005dce30 0000000000000128 t _hb_ft_cubic_to(FT_Vector_ const*, FT_Vector_ const*, FT_Vector_ const*, void*)
00000000005dcf60 00000000000000e4 t _hb_ft_line_to(FT_Vector_ const*, void*)
00000000005dd050 0000000000000104 t _hb_ft_conic_to(FT_Vector_ const*, FT_Vector_ const*, void*)
00000000005dd160 0000000000000028 T hb_ft_font_set_load_flags
00000000005dd190 0000000000000178 t hb_ft_font_funcs_lazy_loader_t::create()
00000000005dd310 0000000000000144 t _hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
00000000005dd460 00000000000000ac T hb_ft_face_create
00000000005dd510 0000000000000178 T hb_ft_font_changed
00000000005dd690 0000000000000058 T hb_ft_font_create
00000000005dd6f0 000000000000186c t _hb_ft_paint(hb_ft_paint_context_t*, FT_Opaque_Paint_)
00000000005def60 00000000000009fc t hb_ft_paint_glyph_colr(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*) [clone .isra.0]
00000000005df960 00000000000001f4 t hb_ft_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005dfb60 0000000000000290 t hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005dfdf0 0000000000000014 t is_deleted_glyph(hb_glyph_info_t const*)
00000000005dfe10 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000005dfe40 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000005dfe70 0000000000000028 t bool hb_buffer_t::replace_glyphs<OT::HBGlyphID16>(unsigned int, unsigned int, OT::HBGlyphID16 const*) [clone .part.0]
00000000005dfea0 00000000000002f8 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::get_value_or_null(unsigned int, unsigned int) const [clone .part.0]
00000000005e01a0 00000000000006d8 t hb_buffer_t::_set_glyph_flags(unsigned int, unsigned int, unsigned int, bool, bool)
00000000005e0880 000000000000013c t hb_font_t::get_glyph_v_origin_with_fallback(unsigned int, int*, int*)
00000000005e09c0 00000000000001d8 t hb_font_t::get_glyph_contour_point_for_origin(unsigned int, unsigned int, hb_direction_t, int*, int*)
00000000005e0ba0 000000000000011c t AAT::ltag::sanitize(hb_sanitize_context_t*) const
00000000005e0cc0 00000000000000e4 t AAT::SubtableGlyphCoverage::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005e0db0 000000000000031c t AAT::ankr::get_anchor(unsigned int, unsigned int, unsigned int) const
00000000005e10d0 00000000000000f4 t OT::ClassDef::sanitize(hb_sanitize_context_t*) const
00000000005e11d0 0000000000000280 t OT::AttachList::sanitize(hb_sanitize_context_t*) const
00000000005e1450 000000000000024c t OT::LigGlyph::sanitize(hb_sanitize_context_t*) const
00000000005e16a0 0000000000000264 t OT::LigCaretList::sanitize(hb_sanitize_context_t*) const
00000000005e1910 0000000000000160 t OT::MarkGlyphSetsFormat1::covers(unsigned int, unsigned int) const
00000000005e1a70 00000000000001d8 t OT::MarkGlyphSetsFormat1::sanitize(hb_sanitize_context_t*) const
00000000005e1c50 0000000000000240 t OT::GDEF::get_glyph_props(unsigned int) const
00000000005e1e90 0000000000000230 t AAT::TrackData::get_tracking(void const*, float) const
00000000005e20c0 000000000000014c t AAT::TrackData::sanitize(hb_sanitize_context_t*, void const*) const
00000000005e2210 0000000000000008 t AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000005e2210 0000000000000008 T AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000005e2220 0000000000000058 t hb_aat_layout_find_feature_mapping(unsigned int)
00000000005e2280 000000000000004c t hb_aat_layout_zero_width_deleted_glyphs(hb_buffer_t*)
00000000005e22d0 000000000000000c t hb_aat_layout_remove_deleted_glyphs(hb_buffer_t*)
00000000005e22e0 0000000000000444 T hb_aat_layout_has_tracking
00000000005e2730 00000000000002c0 t OT::GDEFVersion1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000005e29f0 0000000000000304 t AAT::StateTable<AAT::ObsoleteTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005e2d00 0000000000000200 t AAT::LookupFormat4<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000005e2f00 00000000000001f0 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000005e30f0 0000000000000428 t void OT::MarkGlyphSetsFormat1::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_vector_t<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >, false>&) const
00000000005e3520 000000000000036c W OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000005e3520 000000000000036c t OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000005e3890 00000000000001d4 t AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000005e3890 00000000000001d4 T AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000005e3a70 00000000000006b8 t hb_aat_layout_track(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000005e4130 00000000000004bc t OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000005e4130 00000000000004bc W OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000005e45f0 00000000000001b8 t hb_vector_t<hb_vector_t<hb_aat_map_t::range_flags_t, true>, false>::resize(int, bool, bool)
00000000005e47b0 00000000000003dc t AAT::Chain<AAT::ExtendedTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000005e4b90 00000000000003f0 t AAT::Chain<AAT::ObsoleteTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000005e4f80 00000000000001ec t AAT::LookupFormat2<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000005e5170 00000000000002a8 t AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000005e5420 00000000000001c8 t AAT::LookupFormat6<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000005e55f0 000000000000026c t AAT::Lookup<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000005e5860 00000000000000e8 t AAT::ankr::sanitize(hb_sanitize_context_t*) const
00000000005e5950 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005e5b70 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005e5d90 0000000000000304 t AAT::StateTable<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005e60a0 0000000000000304 t AAT::StateTable<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005e63b0 00000000000001e8 t void AAT::LookupFormat2<OT::IntType<unsigned short, 2u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&) const
00000000005e65a0 000000000000057c t void AAT::Lookup<OT::IntType<unsigned short, 2u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&, unsigned int) const
00000000005e6b20 00000000000001e8 t void AAT::LookupFormat2<OT::IntType<unsigned int, 4u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&) const
00000000005e6d10 000000000000057c t void AAT::Lookup<OT::IntType<unsigned int, 4u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&, unsigned int) const
00000000005e7290 00000000000003c0 t AAT::KerxTable<AAT::kerx>::create_accelerator_data(unsigned int) const
00000000005e7650 00000000000007b4 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000005e7e10 0000000000000200 t AAT::LookupFormat4<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
00000000005e8010 00000000000001f0 t AAT::Lookup<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
00000000005e8200 000000000000018c t hb_sanitize_context_t::return_t AAT::ChainSubtable<AAT::ObsoleteTypes>::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000005e8390 0000000000000260 t AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::sanitize(hb_sanitize_context_t*) const
00000000005e85f0 0000000000000278 W AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::accelerator_t::accelerator_t(hb_face_t*)
00000000005e85f0 0000000000000278 t AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::accelerator_t::accelerator_t(hb_face_t*)
00000000005e8870 00000000000002c8 t AAT::Lookup<OT::HBGlyphID16>::get_value(unsigned int, unsigned int) const
00000000005e8b40 000000000000083c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005e9380 00000000000007ac t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005e9b30 0000000000000890 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005ea3c0 00000000000009e8 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005eadb0 0000000000000984 t AAT::Chain<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*, AAT::hb_aat_layout_chain_accelerator_t const*) const
00000000005eb740 000000000000057c t AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::apply(AAT::hb_aat_apply_context_t*, hb_aat_map_t const&, AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::accelerator_t const&) const
00000000005ebcc0 00000000000002ac t AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t::transition(hb_buffer_t*, AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>*, AAT::Entry<AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData> const&)
00000000005ebf70 0000000000000204 t AAT::LookupFormat4<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000005ec180 00000000000001dc t AAT::Lookup<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000005ec360 0000000000000168 t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::sanitize(hb_sanitize_context_t*) const
00000000005ec4d0 00000000000001c0 t hb_sanitize_context_t::return_t AAT::KerxSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000005ec690 0000000000000234 t AAT::KerxTable<AAT::kerx>::sanitize(hb_sanitize_context_t*) const
00000000005ec8d0 00000000000002ac W AAT::KerxTable<AAT::kerx>::accelerator_t::accelerator_t(hb_face_t*)
00000000005ec8d0 00000000000002ac t AAT::KerxTable<AAT::kerx>::accelerator_t::accelerator_t(hb_face_t*)
00000000005ecb80 0000000000000114 T hb_aat_layout_has_positioning
00000000005ecca0 00000000000002c8 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::get_value(unsigned int, unsigned int) const
00000000005ecf70 000000000000055c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005ed4d0 0000000000000134 t AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000005ed610 00000000000006cc t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000005edce0 0000000000000420 t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000005ee100 00000000000006cc t OT::hb_kern_machine_t<AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000005ee7d0 0000000000000834 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::drive<AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005ef010 00000000000007f8 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::drive<AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005ef810 0000000000000868 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::drive<AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005f0080 0000000000000d58 t hb_aat_layout_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000005f0de0 000000000000081c t void AAT::StateTableDriver<AAT::ExtendedTypes, void>::drive<AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005f1600 00000000000009d0 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000005f1fd0 0000000000000934 t AAT::Chain<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*, AAT::hb_aat_layout_chain_accelerator_t const*) const
00000000005f2910 0000000000000380 t AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::apply(AAT::hb_aat_apply_context_t*, hb_aat_map_t const&, AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t const&) const
00000000005f2c90 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005f2eb0 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005f30d0 0000000000000184 t AAT::ContextualSubtable<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*) const
00000000005f3260 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005f3480 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005f36a0 0000000000000108 t hb_sanitize_context_t::return_t AAT::ChainSubtable<AAT::ExtendedTypes>::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000005f37b0 00000000000001b4 t AAT::Chain<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005f3970 0000000000000354 W AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t::accelerator_t(hb_face_t*)
00000000005f3970 0000000000000354 t AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t::accelerator_t(hb_face_t*)
00000000005f3cd0 0000000000000540 t hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*)
00000000005f4210 0000000000000260 T hb_aat_layout_has_substitution
00000000005f4470 0000000000000488 t hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int)
00000000005f4900 0000000000000060 W hb_aat_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000005f4960 000000000000008c W hb_aat_map_builder_t::feature_event_t::cmp(void const*, void const*)
00000000005f49f0 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000005f4e10 00000000000008a8 t hb_aat_map_builder_t::compile(hb_aat_map_t&)
00000000005f56c0 0000000000000174 t hb_table_lazy_loader_t<AAT::feat, 34u, false>::create(hb_face_t*)
00000000005f5840 00000000000006fc t hb_aat_map_builder_t::add_feature(hb_feature_t const&)
00000000005f5f40 000000000000000c T hb_blob_get_empty
00000000005f5f50 0000000000000058 T hb_blob_reference
00000000005f5fb0 0000000000000180 T hb_blob_destroy
00000000005f6130 0000000000000004 t _hb_blob_destroy(void*)
00000000005f6140 0000000000000018 T hb_blob_make_immutable
00000000005f6160 00000000000000ac t hb_blob_t::try_make_writable()
00000000005f6210 000000000000005c T hb_blob_get_data_writable
00000000005f6270 00000000000000e4 T hb_blob_create_or_fail
00000000005f6360 0000000000000030 T hb_blob_create
00000000005f6390 0000000000000094 T hb_blob_create_sub_blob
00000000005f6430 00000000000000cc t buffer_verify_error(hb_buffer_t*, hb_font_t*, char const*, ...)
00000000005f6500 0000000000000958 t hb_buffer_t::verify(hb_buffer_t*, hb_font_t*, hb_feature_t const*, unsigned int, char const* const*)
00000000005f6e60 0000000000000004 t hb_draw_move_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005f6e70 0000000000000054 t hb_draw_quadratic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005f6ed0 0000000000000004 t hb_draw_cubic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005f6ee0 0000000000000004 t hb_draw_close_path_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000005f6ef0 000000000000008c t _hb_draw_funcs_set_middle(hb_draw_funcs_t*, void*, void (*)(void*))
00000000005f6f80 0000000000000004 t hb_draw_line_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005f6f90 00000000000000d0 T hb_draw_funcs_set_move_to_func
00000000005f7060 00000000000000d0 T hb_draw_funcs_set_line_to_func
00000000005f7130 00000000000000d0 T hb_draw_funcs_set_quadratic_to_func
00000000005f7200 00000000000000d0 T hb_draw_funcs_set_cubic_to_func
00000000005f72d0 00000000000000d0 T hb_draw_funcs_set_close_path_func
00000000005f73a0 000000000000006c T hb_draw_funcs_create
00000000005f7410 000000000000000c T hb_draw_funcs_get_empty
00000000005f7420 000000000000020c T hb_draw_funcs_destroy
00000000005f7630 0000000000000018 T hb_draw_funcs_make_immutable
00000000005f7650 0000000000000014 t hb_paint_extents_pop_transform(hb_paint_funcs_t*, void*, void*)
00000000005f7670 00000000000001ac t hb_paint_extents_push_transform(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
00000000005f7820 00000000000001d8 t hb_paint_extents_pop_group(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
00000000005f7a00 0000000000000018 t hb_paint_extents_pop_clip(hb_paint_funcs_t*, void*, void*)
00000000005f7a20 0000000000000050 t hb_draw_extents_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005f7a70 0000000000000050 t hb_draw_extents_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005f7ac0 000000000000009c t hb_draw_extents_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005f7b60 00000000000000e0 t hb_draw_extents_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005f7c40 0000000000000118 t hb_paint_extents_paint_sweep_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
00000000005f7d60 0000000000000118 t hb_paint_extents_paint_linear_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000005f7e80 0000000000000118 t hb_paint_extents_paint_color(hb_paint_funcs_t*, void*, int, unsigned int, void*)
00000000005f7fa0 0000000000000118 t hb_paint_extents_paint_radial_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000005f80c0 0000000000000130 t hb_paint_extents_push_group(hb_paint_funcs_t*, void*, void*)
00000000005f81f0 0000000000000310 t hb_paint_extents_context_t::push_clip(hb_extents_t)
00000000005f8500 0000000000000050 t hb_paint_extents_push_clip_rectangle(hb_paint_funcs_t*, void*, float, float, float, float, void*)
00000000005f8550 00000000000001ac t hb_paint_extents_paint_image(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000005f8700 0000000000000144 t hb_paint_extents_push_clip_glyph(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
00000000005f8850 00000000000001b8 t hb_paint_extents_get_funcs()
00000000005f8a10 0000000000000028 t _hb_face_for_data_closure_destroy(void*)
00000000005f8a40 00000000000000fc t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
00000000005f8a40 00000000000000fc t void hb_object_fini<hb_face_t>(hb_face_t*)
00000000005f8b40 000000000000015c t OT::TTCHeaderVersion1::sanitize(hb_sanitize_context_t*) const
00000000005f8ca0 0000000000000358 t OT::ResourceForkHeader::sanitize(hb_sanitize_context_t*) const
00000000005f9000 00000000000001e4 t OT::OpenTypeFontFile::get_face(unsigned int, unsigned int*) const
00000000005f91f0 0000000000000144 t _hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
00000000005f9340 00000000000000f4 t _hb_face_for_data_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
00000000005f9440 0000000000000134 t OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
00000000005f9580 000000000000000c T hb_face_get_empty
00000000005f9590 00000000000000e0 T hb_face_create_for_tables
00000000005f9670 0000000000000058 T hb_face_reference
00000000005f96d0 000000000000010c T hb_face_destroy
00000000005f97e0 0000000000000440 T hb_face_set_user_data
00000000005f9c20 00000000000000d4 T hb_face_get_user_data
00000000005f9d00 0000000000000018 T hb_face_make_immutable
00000000005f9d20 0000000000000030 T hb_face_reference_table
00000000005f9d50 0000000000000014 T hb_face_set_index
00000000005f9d70 000000000000001c T hb_face_set_upem
00000000005f9d90 0000000000000018 T hb_face_get_upem
00000000005f9db0 000000000000001c T hb_face_get_glyph_count
00000000005f9dd0 0000000000000064 T hb_face_set_get_table_tags_func
00000000005f9e40 0000000000000384 T hb_face_create
00000000005fa1d0 0000000000000008 t _hb_fallback_shaper_face_data_create
00000000005fa1e0 0000000000000004 t _hb_fallback_shaper_face_data_destroy
00000000005fa1f0 0000000000000008 t _hb_fallback_shaper_font_data_create
00000000005fa200 0000000000000004 t _hb_fallback_shaper_font_data_destroy
00000000005fa210 00000000000004f8 t _hb_fallback_shape
00000000005fa710 0000000000000020 t OT::cff1::lookup_expert_charset_for_sid(unsigned int)
00000000005fa730 0000000000000020 t OT::cff1::lookup_expert_subset_charset_for_sid(unsigned int)
00000000005fa750 0000000000000064 t OT::cff1::lookup_expert_charset_for_glyph(unsigned int)
00000000005fa7c0 0000000000000064 t OT::cff1::lookup_expert_subset_charset_for_glyph(unsigned int)
00000000005fa830 0000000000000174 t cff1_path_param_t::move_to(CFF::point_t const&)
00000000005fa9b0 0000000000000100 t cff1_path_param_t::line_to(CFF::point_t const&)
00000000005faab0 0000000000000160 t cff1_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&)
00000000005fac10 0000000000000424 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fb040 0000000000000428 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fb470 0000000000000380 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rrcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fb7f0 0000000000000588 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fbd80 000000000000056c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fc2f0 0000000000000310 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fc600 0000000000000310 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fc910 0000000000000e64 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fd780 0000000000000e5c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fe5e0 0000000000000374 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005fe960 000000000000129c t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t, cff1_path_procs_extents_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000005ffc00 000000000000040c t _get_bounds(OT::cff1::accelerator_t const*, unsigned int, bounds_t&, bool)
0000000000600010 000000000000018c t OT::cff1::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006001a0 0000000000000610 t cff1_cs_opset_extents_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006007b0 0000000000000304 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000600ac0 00000000000002a8 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000600d70 0000000000000680 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006013f0 0000000000000680 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000601a70 0000000000000134 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000601bb0 000000000000139c t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t, cff1_path_procs_path_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000602f50 000000000000045c t _get_path(OT::cff1::accelerator_t const*, hb_font_t*, unsigned int, hb_draw_session_t&, bool, CFF::point_t*)
00000000006033b0 000000000000000c t OT::cff1::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006033c0 00000000000004cc t cff1_cs_opset_path_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000603890 0000000000000028 t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
00000000006038c0 0000000000000160 t cff2_path_param_t::move_to(CFF::point_t const&) [clone .isra.0]
0000000000603a20 000000000000013c t cff2_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&) [clone .isra.0]
0000000000603b60 00000000000000ec t cff2_path_param_t::line_to(CFF::point_t const&) [clone .isra.0]
0000000000603c50 0000000000000180 t OT::VarData::get_region_scalars(int const*, unsigned int, OT::VarRegionList const&, float*, unsigned int) const
0000000000603dd0 00000000000001ac t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::operator[](unsigned int) const
0000000000603f80 00000000000000b0 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::get_fd(unsigned int) const
0000000000604030 000000000000010c t CFF::CFF2FDSelect::get_fd(unsigned int) const
0000000000604140 0000000000000424 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000604570 0000000000000428 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006049a0 0000000000000388 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rrcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000604d30 0000000000000584 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006052c0 000000000000056c t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000605830 0000000000000310 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000605b40 0000000000000308 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000605e50 0000000000000e44 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000606ca0 0000000000000e38 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000607ae0 0000000000000374 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000607e60 00000000000010d8 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t, cff2_path_procs_extents_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
0000000000608f40 0000000000000220 t CFF::cff2_cs_interp_env_t<CFF::number_t>::process_blend()
0000000000609160 00000000000006d8 t OT::cff2::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
0000000000609840 0000000000000304 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000609b50 00000000000002a8 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000609e00 0000000000000690 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
000000000060a490 0000000000000690 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
000000000060ab20 0000000000000138 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
000000000060ac60 00000000000011b0 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t, cff2_path_procs_path_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
000000000060be10 0000000000000660 t OT::cff2::accelerator_t::get_path_at(hb_font_t*, unsigned int, hb_draw_session_t&, hb_array_t<int const>) const
000000000060c470 000000000000000c t OT::cff2::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
000000000060c480 0000000000000118 t OT::CPALV1Tail::sanitize(hb_sanitize_context_t*, void const*, unsigned int, unsigned int) const
000000000060c5a0 0000000000000108 t OT::CPAL::get_palette_colors(unsigned int, unsigned int, unsigned int*, unsigned int*) const
000000000060c6b0 00000000000000dc t OT::CPAL::sanitize(hb_sanitize_context_t*) const
000000000060c790 0000000000000280 t hb_lazy_loader_t<OT::CPAL, hb_table_lazy_loader_t<OT::CPAL, 36u, true>, hb_face_t, 36u, hb_blob_t>::get() const
000000000060ca10 0000000000000048 T hb_ot_color_palette_get_colors
000000000060ca60 0000000000000008 t hb_ot_face_t::init0(hb_face_t*)
000000000060ca70 0000000000000ce4 t hb_ot_face_t::fini()
000000000060d760 0000000000000008 t OT::match_always(hb_glyph_info_t&, unsigned int, void const*)
000000000060d770 0000000000000010 t OT::match_glyph(hb_glyph_info_t&, unsigned int, void const*)
000000000060d780 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d790 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d7a0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d7b0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d7c0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d7d0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d7e0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d7f0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d800 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d810 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d820 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d830 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d840 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d850 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d860 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d870 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d880 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d890 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060d8a0 00000000000000b8 t OT::Layout::GPOS_impl::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
000000000060d960 00000000000001d4 t OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
000000000060db40 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
000000000060db70 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
000000000060dba0 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
000000000060dbd0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
000000000060dc00 0000000000000088 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060dc90 00000000000000fc t void hb_object_fini<hb_hashmap_t<unsigned int, hb_set_t, false> >(hb_hashmap_t<unsigned int, hb_set_t, false>*)
000000000060dc90 00000000000000fc t void hb_object_fini<hb_hashmap_t<unsigned int, unsigned int, true> >(hb_hashmap_t<unsigned int, unsigned int, true>*)
000000000060dc90 00000000000000fc t void hb_object_fini<hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false> >(hb_hashmap_t<unsigned int, hb::unique_ptr<hb_set_t>, false>*)
000000000060dc90 00000000000000fc t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
000000000060dd90 0000000000000088 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
000000000060de20 0000000000000288 t bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >*) const [clone .isra.0]
000000000060e0b0 00000000000001ec t OT::hb_accelerate_subtables_context_t::return_t OT::Context::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
000000000060e2a0 000000000000021c t OT::hb_accelerate_subtables_context_t::return_t OT::ChainContext::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
000000000060e4c0 0000000000000264 t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
000000000060e730 00000000000000f0 t decltype (({parm#1}.sanitize)(this)) hb_sanitize_context_t::_dispatch<OT::Layout::Common::Coverage>(OT::Layout::Common::Coverage const&, hb_priority<1u>) [clone .isra.0]
000000000060e820 00000000000001fc t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
000000000060ea20 0000000000000108 t OT::match_class(hb_glyph_info_t&, unsigned int, void const*)
000000000060eb30 0000000000000118 t OT::match_class_cached(hb_glyph_info_t&, unsigned int, void const*)
000000000060ec50 0000000000000128 t OT::match_class_cached1(hb_glyph_info_t&, unsigned int, void const*)
000000000060ed80 0000000000000128 t OT::match_class_cached2(hb_glyph_info_t&, unsigned int, void const*)
000000000060eeb0 000000000000041c t OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
000000000060f2d0 00000000000000fc t hb_bit_set_t::get(unsigned int) const
000000000060f3d0 000000000000026c t hb_bit_set_t::add_range(unsigned int, unsigned int)
000000000060f640 00000000000000c8 t OT::collect_glyph(hb_set_t*, unsigned int, void const*)
000000000060f710 0000000000000370 t void OT::chain_context_collect_glyphs_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_collect_glyphs_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ChainContextCollectGlyphsLookupContext&)
000000000060fa80 00000000000001f8 t OT::collect_class(hb_set_t*, unsigned int, void const*)
000000000060fc80 00000000000000c0 t hb_bit_set_invertible_t::add(unsigned int)
000000000060fd40 00000000000000e4 t hb_bit_set_invertible_t::next(unsigned int*) const
000000000060fe30 00000000000003b0 t langsys_collect_features(hb_collect_features_context_t*, OT::LangSys const&)
00000000006101e0 0000000000000200 t script_collect_features(hb_collect_features_context_t*, OT::Script const&, unsigned int const*)
00000000006103e0 0000000000000114 t OT::Layout::Common::Coverage::get_coverage(unsigned int) const
0000000000610500 000000000000016c t OT::hb_ot_apply_context_t::match_properties_mark(unsigned int, unsigned int, unsigned int) const [clone .isra.0]
0000000000610670 0000000000000340 t apply_forward(OT::hb_ot_apply_context_t*, OT::hb_ot_layout_lookup_accelerator_t const&, unsigned int) [clone .isra.0]
00000000006109b0 0000000000000340 t bool apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, OT::hb_ot_layout_lookup_accelerator_t const&) [clone .isra.0]
0000000000610cf0 00000000000004b4 t OT::Rule<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const [clone .isra.0]
00000000006111b0 0000000000000034 t OT::match_coverage(hb_glyph_info_t&, unsigned int, void const*)
00000000006111f0 00000000000000d0 t OT::Layout::Common::Coverage::iter_t::iter_t(OT::Layout::Common::Coverage const&)
00000000006111f0 00000000000000d0 W OT::Layout::Common::Coverage::iter_t::iter_t(OT::Layout::Common::Coverage const&)
00000000006112c0 0000000000000154 t OT::FeatureParams::sanitize(hb_sanitize_context_t*, unsigned int) const
0000000000611420 00000000000000ec t OT::ClassDef::get_class(unsigned int) const
0000000000611510 0000000000000314 t OT::Condition::sanitize(hb_sanitize_context_t*) const
0000000000611830 0000000000000134 t OT::ConditionSet::sanitize(hb_sanitize_context_t*) const
0000000000611970 0000000000000224 t OT::FeatureTableSubstitution::sanitize(hb_sanitize_context_t*) const
0000000000611ba0 00000000000000f4 t OT::FeatureVariationRecord::sanitize(hb_sanitize_context_t*, void const*) const
0000000000611ca0 0000000000000608 t OT::FeatureVariations::collect_lookups(hb_set_t const*, hb_hashmap_t<unsigned int, hb::shared_ptr<hb_set_t>, false> const*, hb_set_t*) const
00000000006122b0 0000000000000114 t OT::FeatureVariations::sanitize(hb_sanitize_context_t*) const
00000000006123d0 0000000000000194 t OT::Device::get_x_delta(hb_font_t*, OT::ItemVariationStore const&, float*) const
0000000000612570 0000000000000194 t OT::Device::get_y_delta(hb_font_t*, OT::ItemVariationStore const&, float*) const
0000000000612710 00000000000000bc t OT::Device::sanitize(hb_sanitize_context_t*) const
00000000006127d0 00000000000001ec t OT::Layout::GPOS_impl::AnchorFormat3::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const [clone .isra.0]
00000000006129c0 0000000000000240 t OT::GDEF::accelerator_t::get_glyph_props(unsigned int) const
0000000000612c00 000000000000016c t OT::hb_ot_apply_context_t::replace_glyph(unsigned int)
0000000000612d70 000000000000011c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000612e90 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000612f80 00000000000003cc t OT::Layout::GSUB_impl::Sequence<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const [clone .isra.0]
0000000000613350 00000000000000c8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000613420 00000000000000c8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006134f0 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006135e0 000000000000011c W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000613700 00000000000004c8 t OT::ContextFormat3::apply(OT::hb_ot_apply_context_t*) const
0000000000613bd0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
0000000000613be0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
0000000000613bf0 00000000000001c8 t OT::ContextFormat3::sanitize(hb_sanitize_context_t*) const
0000000000613dc0 00000000000009bc t OT::ChainContextFormat3::apply(OT::hb_ot_apply_context_t*) const
0000000000614780 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
0000000000614790 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006147a0 000000000000037c t OT::ChainContextFormat3::sanitize(hb_sanitize_context_t*) const
0000000000614b20 0000000000000200 t OT::Layout::GPOS_impl::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, OT::Layout::GPOS_impl::ValueBase const*, OT::IntType<unsigned short, 2u> const*) const
0000000000614d20 00000000000000cc t OT::Layout::GPOS_impl::ValueFormat::get_device(OT::IntType<unsigned short, 2u> const*, bool*, OT::Layout::GPOS_impl::ValueBase const*, hb_sanitize_context_t&)
0000000000614df0 0000000000000400 t OT::Layout::GPOS_impl::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueBase const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
00000000006151f0 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000615300 000000000000012c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
0000000000615430 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000615540 000000000000012c W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
0000000000615670 00000000000001bc t OT::Layout::GPOS_impl::SinglePosFormat1::sanitize(hb_sanitize_context_t*) const
0000000000615830 0000000000000160 t OT::Layout::GPOS_impl::Anchor::sanitize(hb_sanitize_context_t*) const
0000000000615990 0000000000000174 t OT::Layout::GPOS_impl::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
0000000000615b10 0000000000000234 t OT::Layout::GPOS_impl::CursivePosFormat1::sanitize(hb_sanitize_context_t*) const
0000000000615d50 00000000000006ac t OT::Layout::GPOS_impl::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
0000000000616400 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000616410 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000616420 000000000000012c t OT::Layout::GPOS_impl::AnchorMatrix::sanitize(hb_sanitize_context_t*, unsigned int) const
0000000000616550 00000000000004fc t OT::Layout::GPOS_impl::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::Layout::GPOS_impl::AnchorMatrix const&, unsigned int, unsigned int) const
0000000000616a50 00000000000002dc t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::sanitize(hb_sanitize_context_t*) const
0000000000616d30 00000000000006a0 t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006173d0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006173e0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006173f0 0000000000000040 t hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
0000000000617430 0000000000000004 t hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
0000000000617440 00000000000000f8 t hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
0000000000617540 0000000000000004 t hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::Layout::GSUB_impl::SubstLookup const&, OT::hb_ot_layout_lookup_accelerator_t const&)
0000000000617550 0000000000000384 t bool OT::Condition::evaluate<OT::ItemVarStoreInstancer>(int const*, unsigned int, OT::ItemVarStoreInstancer*) const
00000000006178e0 000000000000049c t bool OT::Layout::Common::Coverage::collect_coverage<hb_set_t>(hb_set_t*) const
0000000000617d80 000000000000001c t OT::collect_coverage(hb_set_t*, unsigned int, void const*)
0000000000617da0 0000000000000424 t OT::hb_collect_glyphs_context_t::return_t OT::ChainContext::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) const [clone .isra.0]
00000000006181d0 0000000000000064 t OT::Layout::GSUB_impl::SubstLookupSubTable const& OT::Lookup::get_subtable<OT::Layout::GSUB_impl::SubstLookupSubTable>(unsigned int) const
0000000000618240 000000000000018c t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GPOS_impl::PosLookup>(OT::Layout::GPOS_impl::PosLookup const&)
00000000006183d0 0000000000000488 W OT::hb_ot_apply_context_t::return_t OT::Layout::GPOS_impl::PosLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
0000000000618860 0000000000000238 t void hb_bit_set_invertible_t::add_array<OT::HBGlyphID16>(OT::HBGlyphID16 const*, unsigned int, unsigned int)
0000000000618aa0 00000000000001b4 t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
0000000000618c60 000000000000018c t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GSUB_impl::SubstLookup>(OT::Layout::GSUB_impl::SubstLookup const&)
0000000000618df0 0000000000000488 W OT::hb_ot_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
0000000000619280 0000000000000044 t hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >::may_have(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > const&) const
00000000006192d0 0000000000000300 t OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006195d0 0000000000000504 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
0000000000619ae0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000619af0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000619b00 00000000000003b4 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
0000000000619ec0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000619ed0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000619ee0 00000000000003ac t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000061a290 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061a2a0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061a2b0 0000000000000368 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000061a620 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061a630 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061a640 000000000000020c t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
000000000061a850 00000000000002ec t OT::RecordListOf<OT::Script>::sanitize(hb_sanitize_context_t*) const
000000000061ab40 0000000000000300 t OT::RecordListOf<OT::Feature>::sanitize(hb_sanitize_context_t*) const
000000000061ae40 0000000000000398 t OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
000000000061b1e0 00000000000005b0 t OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
000000000061b790 00000000000005b0 t OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
000000000061bd40 00000000000006f0 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
000000000061c430 0000000000000168 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*) const
000000000061c5a0 00000000000002b8 t OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueFormat const*, unsigned int) const
000000000061c860 000000000000029c t OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000061cb00 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061cb10 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061cb20 0000000000000800 t OT::RuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
000000000061d320 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061d400 0000000000000124 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061d530 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061d610 00000000000000fc W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061d710 0000000000000390 t OT::RuleSet<OT::Layout::SmallTypes>::collect_glyphs(OT::hb_collect_glyphs_context_t*, OT::ContextCollectGlyphsLookupContext&) const
000000000061daa0 00000000000002d8 t OT::hb_collect_glyphs_context_t::return_t OT::Context::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) const [clone .isra.0]
000000000061dd80 0000000000000338 t OT::hb_collect_glyphs_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int) const [clone .isra.0]
000000000061e0c0 00000000000002ac t OT::hb_collect_glyphs_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int) const [clone .isra.0]
000000000061e370 000000000000054c W OT::hb_collect_glyphs_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int)
000000000061e8c0 000000000000078c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernOTSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernOTSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
000000000061f050 000000000000078c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
000000000061f7e0 0000000000000198 t OT::Layout::GSUB_impl::AlternateSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000061f980 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061fa40 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000061fb00 0000000000000178 t OT::ChainRuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
000000000061fc80 000000000000028c t OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
000000000061ff10 0000000000000148 t OT::hb_would_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
0000000000620060 0000000000000a08 t OT::ChainRule<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
0000000000620a70 0000000000000938 t OT::ChainRuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006213b0 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006214a0 0000000000000178 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000621620 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000621710 000000000000012c W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000621840 0000000000000afc t OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
0000000000622340 000000000000042c t OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
0000000000622770 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000622830 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006228f0 00000000000001c0 t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::SinglePos::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
0000000000622ab0 0000000000000238 t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SingleSubst::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
0000000000622cf0 0000000000000444 t AAT::KerxTable<OT::KernOT>::sanitize(hb_sanitize_context_t*) const
0000000000623140 0000000000000268 t hb_sanitize_context_t::return_t OT::KernSubTable<OT::KernAATSubTableHeader>::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006233b0 0000000000000234 t AAT::KerxTable<OT::KernAAT>::sanitize(hb_sanitize_context_t*) const
00000000006235f0 0000000000000bac W OT::kern::accelerator_t::accelerator_t(hb_face_t*)
00000000006235f0 0000000000000bac t OT::kern::accelerator_t::accelerator_t(hb_face_t*)
00000000006241a0 0000000000000114 t hb_ot_layout_has_kerning(hb_face_t*)
00000000006242c0 00000000000001b4 t hb_ot_layout_has_machine_kerning(hb_face_t*)
0000000000624480 00000000000001ac t hb_ot_layout_has_cross_kerning(hb_face_t*)
0000000000624630 0000000000000354 t OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000624990 0000000000000300 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000624c90 00000000000002a0 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000624f30 000000000000037c t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006252b0 00000000000002a0 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000625550 00000000000001c4 t OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000625720 00000000000001c4 t OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006258f0 0000000000000160 t OT::RuleSet<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000625a50 00000000000001dc t OT::ContextFormat2_5<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000625c30 0000000000000184 t OT::ContextFormat1_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000625dc0 00000000000001d0 t OT::ChainRuleSet<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000625f90 0000000000000284 t OT::ChainContextFormat2_5<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000626220 0000000000000184 t OT::ChainContextFormat1_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006263b0 0000000000000224 t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006265e0 00000000000002dc t bool OT::Lookup::sanitize<OT::Layout::GPOS_impl::PosLookupSubTable>(hb_sanitize_context_t*) const
00000000006268c0 00000000000002a8 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GPOS_impl::PosLookup>(hb_sanitize_context_t*) const
0000000000626b70 00000000000002fc W OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
0000000000626b70 00000000000002fc t OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
0000000000626e70 0000000000000108 t hb_lazy_loader_t<OT::GPOS_accelerator_t, hb_face_lazy_loader_t<OT::GPOS_accelerator_t, 26u>, hb_face_t, 26u, OT::GPOS_accelerator_t>::get_stored() const
0000000000626f80 0000000000000130 T hb_ot_layout_has_positioning
00000000006270b0 0000000000000168 t OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000627220 0000000000000184 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006273b0 00000000000001ec t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006275a0 0000000000000278 t bool OT::Lookup::sanitize<OT::Layout::GSUB_impl::SubstLookupSubTable>(hb_sanitize_context_t*) const
0000000000627820 00000000000002a8 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GSUB_impl::SubstLookup>(hb_sanitize_context_t*) const
0000000000627ad0 00000000000002fc W OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
0000000000627ad0 00000000000002fc t OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
0000000000627dd0 0000000000000108 t hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 25u>, hb_face_t, 25u, OT::GSUB_accelerator_t>::get_stored() const
0000000000627ee0 00000000000001a4 t get_gsubgpos_table(hb_face_t*, unsigned int)
0000000000628090 0000000000000354 T hb_ot_layout_table_select_script
00000000006283f0 0000000000000120 t hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
0000000000628510 000000000000021c T hb_ot_layout_script_select_language2
0000000000628730 0000000000000008 T hb_ot_layout_script_select_language
0000000000628740 00000000000001ac T hb_ot_layout_language_get_required_feature
00000000006288f0 0000000000000218 T hb_ot_layout_language_find_feature
0000000000628b10 0000000000000054 T hb_ot_layout_table_get_lookup_count
0000000000628b70 0000000000000800 T hb_ot_layout_collect_features
0000000000629370 0000000000000348 T hb_ot_layout_collect_features_map
00000000006296c0 00000000000007c0 T hb_ot_layout_collect_lookups
0000000000629e80 0000000000000258 T hb_ot_layout_feature_with_variations_get_lookups
000000000062a0e0 0000000000000354 T hb_ot_layout_lookup_collect_glyphs
000000000062a440 0000000000000130 T hb_ot_layout_has_substitution
000000000062a570 0000000000000538 t OT::GDEF::is_blocklisted(hb_blob_t*, hb_face_t*) const
000000000062aab0 0000000000000124 T hb_ot_layout_has_glyph_classes
000000000062abe0 0000000000000148 t hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
000000000062ad30 0000000000000298 T hb_ot_layout_table_find_feature_variations
000000000062afd0 0000000000000628 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000062b600 0000000000000660 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000062bc60 00000000000005c0 t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernOTSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000062c220 0000000000000628 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000062c850 0000000000000660 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000062ceb0 00000000000005c0 t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernAATSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000062d470 00000000000011ec t hb_ot_layout_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000062e660 00000000000006c0 t void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
000000000062ed20 00000000000001d4 t hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
000000000062ef00 00000000000007bc t void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
000000000062f6c0 00000000000001d4 t hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
000000000062f8a0 00000000000003bc T hb_ot_layout_lookup_would_substitute
000000000062fc60 0000000000000018 W hb_ot_map_t::feature_map_t::cmp(void const*, void const*)
000000000062fc80 0000000000000018 W hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
000000000062fca0 0000000000000034 W hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
000000000062fce0 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
0000000000630100 0000000000000124 t hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
0000000000630100 0000000000000124 T hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
0000000000630230 00000000000000d4 t hb_ot_map_builder_t::~hb_ot_map_builder_t()
0000000000630230 00000000000000d4 T hb_ot_map_builder_t::~hb_ot_map_builder_t()
0000000000630310 000000000000016c t hb_ot_map_builder_t::add_feature(unsigned int, hb_ot_map_feature_flags_t, unsigned int)
0000000000630480 0000000000000074 t hb_ot_map_builder_t::has_feature(unsigned int)
0000000000630500 0000000000000258 t hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, unsigned int)
0000000000630760 000000000000012c t hb_ot_map_builder_t::add_pause(unsigned int, bool (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
0000000000630890 0000000000000fe8 t hb_ot_map_builder_t::compile(hb_ot_map_t&, hb_ot_shape_plan_key_t const&)
0000000000631880 0000000000000210 t joining_type(unsigned int)
0000000000631a90 00000000000001f8 t collect_features_arabic(hb_ot_shape_planner_t*)
0000000000631c90 0000000000000070 t record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000631d00 0000000000000070 t arabic_fallback_plan_destroy(arabic_fallback_plan_t*) [clone .part.0]
0000000000631d70 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000631da0 000000000000027c t reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
0000000000632020 0000000000000084 W OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>::cmp_range(void const*, void const*)
00000000006320b0 0000000000000028 t OT::Lookup* hb_serialize_context_t::extend_size<OT::Lookup>(OT::Lookup*, unsigned long, bool) [clone .part.0]
00000000006320e0 0000000000000028 t OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
0000000000632110 0000000000000028 t OT::IntType<unsigned short, 2u>* hb_serialize_context_t::extend_size<OT::IntType<unsigned short, 2u> >(OT::IntType<unsigned short, 2u>*, unsigned long, bool) [clone .part.0]
0000000000632140 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
0000000000632170 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true> >(OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006321a0 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, void, true> >(OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, void, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006321d0 0000000000000028 t hb_serialize_context_t::end_serialize() [clone .part.0]
0000000000632200 0000000000000028 t OT::Layout::Common::Coverage* hb_serialize_context_t::extend_size<OT::Layout::Common::Coverage>(OT::Layout::Common::Coverage*, unsigned long, bool) [clone .part.0]
0000000000632230 0000000000000028 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
0000000000632260 0000000000000028 t OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>* hb_serialize_context_t::extend_size<OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes> >(OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>*, unsigned long, bool) [clone .part.0]
0000000000632290 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006322c0 0000000000000028 t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006322f0 0000000000000028 t OT::Layout::GSUB_impl::SubstLookup* hb_serialize_context_t::start_serialize<OT::Layout::GSUB_impl::SubstLookup>() [clone .part.0]
0000000000632320 00000000000001a0 t fasthash64(void const*, unsigned long, unsigned long) [clone .constprop.0]
00000000006324c0 0000000000000038 t data_destroy_arabic(void*)
0000000000632500 0000000000000024 t deallocate_buffer_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000632530 0000000000000224 t data_create_arabic(hb_ot_shape_plan_t const*)
0000000000632760 00000000000003f8 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
0000000000632b60 000000000000057c t bool hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::set_with_hash<hb_serialize_context_t::object_t const*, unsigned int>(hb_serialize_context_t::object_t const*&&, unsigned int, unsigned int&&, bool) [clone .isra.0]
00000000006330e0 00000000000007cc t postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006338b0 00000000000002ac t hb_serialize_context_t::discard_stale_objects()
0000000000633b60 0000000000000394 t hb_serialize_context_t::resolve_links()
0000000000633f00 0000000000000380 t OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
0000000000634280 00000000000007c8 t setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
0000000000634a50 000000000000000c t setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000634a60 0000000000000114 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::fini()
0000000000634b80 0000000000000208 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::alloc(unsigned int)
0000000000634d90 00000000000009ec t hb_serialize_context_t::pop_pack(bool)
0000000000635780 00000000000001bc t hb_pool_t<hb_serialize_context_t::object_t, 32u>::alloc()
0000000000635940 00000000000005e8 t arabic_fallback_plan_shape(arabic_fallback_plan_t*, hb_font_t*, hb_buffer_t*)
0000000000635f30 00000000000001d4 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
0000000000636110 00000000000001dc t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006362f0 00000000000009d8 t bool OT::Layout::Common::Coverage::serialize<hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_115 const&, (hb_function_sortedness_t)1, (void*)0>, (void*)0>(hb_serialize_context_t*, hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_115 const&, (hb_function_sortedness_t)1, (void*)0>)
0000000000636cd0 0000000000000584 t bool OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
0000000000637260 0000000000000688 t bool OT::Layout::GSUB_impl::SingleSubst::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006378f0 0000000000000ad8 t arabic_fallback_synthesize_lookup_single(hb_ot_shape_plan_t const*, hb_font_t*, unsigned int) [clone .isra.0]
00000000006383d0 00000000000006cc t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true>::serialize_serialize<hb_sorted_array_t<OT::HBGlyphID16 const>&>(hb_serialize_context_t*, hb_sorted_array_t<OT::HBGlyphID16 const>&)
0000000000638aa0 00000000000012ac t OT::Layout::GSUB_impl::SubstLookup::serialize_ligature(hb_serialize_context_t*, unsigned int, hb_sorted_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>) [clone .isra.0]
0000000000639d50 00000000000006b0 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_mark_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_mark_set_t const (&) [1], unsigned int) [clone .constprop.0]
000000000063a400 000000000000083c t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_set_t [18]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_set_t const (&) [18], unsigned int) [clone .constprop.0]
000000000063ac40 00000000000006d8 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_3_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_3_set_t const (&) [1], unsigned int) [clone .constprop.0]
000000000063b320 0000000000000258 t arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000063b580 0000000000000004 t data_destroy_hangul(void*)
000000000063b590 0000000000000060 t collect_features_hangul(hb_ot_shape_planner_t*)
000000000063b5f0 0000000000000018 t override_features_hangul(hb_ot_shape_planner_t*)
000000000063b610 000000000000007c t setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000063b690 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
000000000063b6c0 00000000000000cc t data_create_hangul(hb_ot_shape_plan_t const*)
000000000063b790 00000000000016c4 t preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000063ce60 00000000000000f4 t reorder_marks_hebrew(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
000000000063cf60 0000000000000204 t compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
000000000063d170 00000000000000d8 t compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
000000000063d250 0000000000000014 t preprocess_text_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000063d270 0000000000000004 t data_destroy_indic(void*)
000000000063d280 0000000000000044 t override_features_indic(hb_ot_shape_planner_t*)
000000000063d2d0 00000000000000f0 t collect_features_indic(hb_ot_shape_planner_t*)
000000000063d3c0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
000000000063d3f0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
000000000063d420 0000000000000064 t decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
000000000063d490 0000000000000070 t setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000063d500 00000000000010e8 t initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int) [clone .isra.0]
000000000063e5f0 0000000000000f60 t final_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000063f550 0000000000000590 t initial_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000063fae0 0000000000000650 t find_syllables_indic(hb_buffer_t*)
0000000000640130 0000000000000264 t setup_syllables_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006403a0 0000000000000134 t hb_indic_would_substitute_feature_t::init(hb_ot_map_t const*, unsigned int, bool)
00000000006404e0 000000000000020c t data_create_indic(hb_ot_shape_plan_t const*)
00000000006406f0 0000000000000084 t decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
0000000000640780 00000000000000b0 t compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
0000000000640830 0000000000000004 t data_destroy_khmer(void*)
0000000000640840 00000000000000a0 t override_features_khmer(hb_ot_shape_planner_t*)
00000000006408e0 00000000000000d8 t collect_features_khmer(hb_ot_shape_planner_t*)
00000000006409c0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006409f0 00000000000000c4 t data_create_khmer(hb_ot_shape_plan_t const*)
0000000000640ac0 0000000000000058 t setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000640b20 000000000000044c t reorder_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000640f70 0000000000000460 t find_syllables_khmer(hb_buffer_t*)
00000000006413d0 0000000000000264 t setup_syllables_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000641640 0000000000000010 t compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
0000000000641650 00000000000000f8 t collect_features_myanmar(hb_ot_shape_planner_t*)
0000000000641750 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000641780 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006417b0 0000000000000064 t setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000641820 00000000000006bc t reorder_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000641ee0 00000000000003a8 t find_syllables_myanmar(hb_buffer_t*)
0000000000642290 0000000000000264 t setup_syllables_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000642500 0000000000000368 t hb_syllabic_insert_dotted_circles(hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, int, int)
0000000000642870 0000000000000040 T hb_syllabic_clear_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006428b0 00000000000000f8 t thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)
00000000006429b0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006429e0 00000000000006e4 t preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006430d0 0000000000000034 t _hb_clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000643110 00000000000000b0 t compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006431c0 0000000000000004 t preprocess_text_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006431d0 000000000000002c t data_destroy_use(void*)
0000000000643200 00000000000001d8 t collect_features_use(hb_ot_shape_planner_t*)
00000000006433e0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000643410 00000000000000ec t setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000643500 00000000000001d0 t data_create_use(hb_ot_shape_plan_t const*)
00000000006436d0 0000000000000044 t hb_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, hb_pair_t<unsigned int, hb_glyph_info_t&> >::operator*() const
0000000000643720 00000000000000d8 t record_pref_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000643800 00000000000000d4 t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#1}, ._anon_104 const&, (void*)0>::__prev__()
00000000006438e0 00000000000000f4 t record_rphf_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006439e0 00000000000001b8 t machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#1}, ._anon_104 const&, (void*)0> > >::operator=(machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#1}, ._anon_104 const&, (void*)0> > > const&)
0000000000643ba0 0000000000002560 t find_syllables_use(hb_buffer_t*)
0000000000646100 00000000000005f8 t setup_syllables_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000646700 00000000000003b4 t reorder_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000646ac0 00000000000000e4 t _output_dotted_circle(hb_buffer_t*)
0000000000646bb0 0000000000002030 t _hb_preprocess_text_vowel_constraints(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000648be0 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
0000000000648c10 0000000000000818 t position_around_base(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool)
0000000000649430 00000000000001bc t _hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006495f0 000000000000024c t _hb_ot_shape_fallback_mark_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, bool)
0000000000649840 00000000000002dc t _hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000649b20 0000000000000bac t OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000064a6d0 0000000000000304 t _hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000064a9e0 0000000000000030 W hb_ot_shape_normalize_context_t::decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
000000000064aa10 0000000000000050 t compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
000000000064aa60 0000000000000040 W hb_ot_shape_normalize_context_t::compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
000000000064aaa0 00000000000002e0 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
000000000064ad80 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
000000000064adb0 00000000000003f4 t decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
000000000064b1b0 00000000000003f4 t decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
000000000064b5b0 0000000000000da0 t _hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000064c350 0000000000000020 t TOUPPER(unsigned char)
000000000064c370 0000000000000020 t TOLOWER(unsigned char)
000000000064c390 00000000000001dc t parse_private_use_subtag(char const*, unsigned int*, unsigned int*, char const*, unsigned char (*)(unsigned char))
000000000064c570 000000000000009c t subtag_matches(char const*, char const*, char const*, unsigned int)
000000000064c610 0000000000002860 T hb_ot_tags_from_script_and_language
000000000064ee70 000000000000007c t hb_ucd_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
000000000064eef0 0000000000000070 t hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*)
000000000064ef60 000000000000007c t hb_ucd_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
000000000064efe0 000000000000007c t hb_ucd_script(hb_unicode_funcs_t*, unsigned int, void*)
000000000064f060 00000000000001a8 t hb_ucd_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
000000000064f210 0000000000000160 t hb_ucd_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
000000000064f370 000000000000012c t hb_ucd_get_unicode_funcs
000000000064f4a0 00000000000001cc t _hb_buffer_serialize_unicode_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
000000000064f670 000000000000022c t _hb_buffer_serialize_unicode_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
000000000064f8a0 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
000000000064f8d0 00000000000000c8 T hb_buffer_serialize_unicode
000000000064f9a0 0000000000000004 t hb_paint_push_transform_nil(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
000000000064f9b0 0000000000000004 t hb_paint_pop_transform_nil(hb_paint_funcs_t*, void*, void*)
000000000064f9c0 0000000000000008 t hb_paint_color_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
000000000064f9d0 0000000000000004 t hb_paint_push_clip_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
000000000064f9e0 0000000000000004 t hb_paint_push_clip_rectangle_nil(hb_paint_funcs_t*, void*, float, float, float, float, void*)
000000000064f9f0 0000000000000004 t hb_paint_color_nil(hb_paint_funcs_t*, void*, int, unsigned int, void*)
000000000064fa00 0000000000000008 t hb_paint_image_nil(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
000000000064fa10 0000000000000004 t hb_paint_linear_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
000000000064fa20 0000000000000004 t hb_paint_sweep_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
000000000064fa30 0000000000000004 t hb_paint_pop_group_nil(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
000000000064fa40 000000000000008c t _hb_paint_funcs_set_middle(hb_paint_funcs_t*, void*, void (*)(void*))
000000000064fad0 0000000000000004 t hb_paint_radial_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
000000000064fae0 0000000000000008 t hb_paint_custom_palette_color_nil(hb_paint_funcs_t*, void*, unsigned int, unsigned int*, void*)
000000000064faf0 0000000000000004 t hb_paint_push_group_nil(hb_paint_funcs_t*, void*, void*)
000000000064fb00 0000000000000004 t hb_paint_pop_clip_nil(hb_paint_funcs_t*, void*, void*)
000000000064fb10 00000000000000d0 T hb_paint_funcs_set_push_transform_func
000000000064fbe0 00000000000000d0 T hb_paint_funcs_set_pop_transform_func
000000000064fcb0 00000000000000d0 T hb_paint_funcs_set_push_clip_glyph_func
000000000064fd80 00000000000000d0 T hb_paint_funcs_set_push_clip_rectangle_func
000000000064fe50 00000000000000d0 T hb_paint_funcs_set_pop_clip_func
000000000064ff20 00000000000000d0 T hb_paint_funcs_set_color_func
000000000064fff0 00000000000000d0 T hb_paint_funcs_set_image_func
00000000006500c0 00000000000000d0 T hb_paint_funcs_set_linear_gradient_func
0000000000650190 00000000000000d0 T hb_paint_funcs_set_radial_gradient_func
0000000000650260 00000000000000d0 T hb_paint_funcs_set_sweep_gradient_func
0000000000650330 00000000000000d0 T hb_paint_funcs_set_push_group_func
0000000000650400 00000000000000d0 T hb_paint_funcs_set_pop_group_func
00000000006504d0 0000000000000080 T hb_paint_funcs_create
0000000000650550 000000000000000c T hb_paint_funcs_get_empty
0000000000650560 000000000000030c T hb_paint_funcs_destroy
0000000000650870 0000000000000018 T hb_paint_funcs_make_immutable
0000000000650890 00000000000002e0 t hb_indic_get_categories(unsigned int)
0000000000650b80 000000000000022c T atanf
0000000000650dc0 0000000000000054 T fmodf
0000000000650e20 0000000000000004 T atan2
0000000000650e40 0000000000000008 T fabsf
0000000000650e60 00000000000000dc T log2f
0000000000650f40 0000000000000064 T acosf
0000000000650fc0 0000000000000498 T pow
0000000000651460 0000000000000200 T __ieee754_fmodf
0000000000651660 000000000000007c T ldexpf
00000000006516e0 00000000000000ec T scalbnf
00000000006517e0 00000000000000dc T expf
00000000006518c0 0000000000000328 T __ieee754_acosf
0000000000651c00 0000000000000050 T sqrtf
0000000000651c60 000000000000007c T ldexp
0000000000651ce0 000000000000006c T hypotf
0000000000651d60 0000000000000004 T atan2f
0000000000651d80 0000000000000064 T tanf
0000000000651e00 000000000000007c T frexp
0000000000651e80 0000000000000008 T __ieee754_sqrtf
0000000000651ea0 00000000000001ac T log2
0000000000652060 000000000000000c T nanf
0000000000652080 00000000000000c8 T exp2f
0000000000652160 0000000000000198 T __ieee754_hypotf
0000000000652300 00000000000001b4 T cosf
00000000006524c0 0000000000000238 T __ieee754_atan2
0000000000652700 0000000000000018 T finitef
0000000000652720 00000000000000dc T logf
0000000000652800 0000000000000018 T finite
0000000000652820 0000000000000210 T atan
0000000000652a40 00000000000001c8 T __ieee754_atan2f
0000000000652c20 0000000000000328 T __ieee754_rem_pio2f
0000000000652f60 0000000000000214 T __kernel_tanf
0000000000653180 000000000000000c T nan
00000000006531a0 00000000000008b4 T __kernel_rem_pio2f
0000000000653a60 0000000000000008 T floorf
0000000000653a70 0000000000000064 t FT_GlyphLoader_Adjust_Points
0000000000653ae0 0000000000000028 t hash_str_lookup
0000000000653b10 0000000000000038 t hash_num_lookup
0000000000653b50 0000000000000014 t hash_num_compare
0000000000653b70 000000000000008c t hash_bucket
0000000000653c00 0000000000000074 t destroy_size
0000000000653c80 00000000000000c4 t find_unicode_charmap
0000000000653d50 000000000000005c t memory_stream_close
0000000000653db0 0000000000000010 t ft_raccess_sort_ref_by_id
0000000000653dc0 00000000000000e0 t ft_trig_pseudo_rotate
0000000000653ea0 00000000000000fc t ft_trig_pseudo_polarize
0000000000653fa0 000000000000003c t hash_str_compare
0000000000653fe0 0000000000000140 t ft_property_do
0000000000654120 00000000000000a8 t destroy_charmaps.part.0
00000000006541d0 00000000000000c0 t raccess_guess_darwin_hfsplus
0000000000654290 00000000000000c0 t raccess_guess_darwin_newvfs
0000000000654350 00000000000000dc t raccess_make_file_name
0000000000654430 0000000000000054 t raccess_guess_linux_cap
0000000000654490 0000000000000054 t raccess_guess_vfat
00000000006544f0 0000000000000018 T FT_RoundFix
0000000000654510 00000000000000cc T FT_MulDiv
00000000006545e0 00000000000000b4 t FT_MulDiv_No_Round
00000000006546a0 0000000000000014 T FT_MulFix
00000000006546c0 000000000000007c t ft_recompute_scaled_metrics
0000000000654740 0000000000000080 T FT_DivFix
00000000006547c0 00000000000000e4 T FT_Matrix_Multiply
00000000006548b0 00000000000000a8 T FT_Matrix_Invert
0000000000654960 0000000000000104 t FT_Matrix_Multiply_Scaled
0000000000654a70 00000000000000a8 t FT_Matrix_Check
0000000000654b20 0000000000000098 t FT_Vector_Transform_Scaled
0000000000654bc0 00000000000001b0 t FT_Vector_NormLen
0000000000654d70 000000000000004c t FT_SqrtFixed
0000000000654dc0 000000000000001c t ft_corner_orientation
0000000000654de0 00000000000000d8 t ft_corner_is_flat
0000000000654ec0 000000000000003c t FT_MulAddFix
0000000000654f00 000000000000006c T FT_Palette_Select
0000000000654f70 000000000000002c T FT_Get_Font_Format
0000000000654fa0 0000000000000034 t FT_GlyphLoader_Rewind
0000000000654fe0 00000000000000d0 t FT_GlyphLoader_Reset
00000000006550b0 0000000000000034 t FT_GlyphLoader_Done
00000000006550f0 0000000000000084 t FT_GlyphLoader_Prepare
0000000000655180 00000000000000a4 t FT_GlyphLoader_Add
0000000000655230 0000000000000080 t ft_hash_str_init
00000000006552b0 0000000000000080 t ft_hash_num_init
0000000000655330 0000000000000080 t ft_hash_str_free
00000000006553b0 0000000000000024 t ft_hash_str_lookup
00000000006553e0 0000000000000028 t ft_hash_num_lookup
0000000000655410 00000000000000e0 t ft_lcd_padding
00000000006554f0 0000000000000058 t ft_service_list_lookup
0000000000655550 0000000000000014 t ft_validator_init
0000000000655570 0000000000000014 t ft_validator_error
0000000000655590 0000000000000068 t FT_Stream_Free
0000000000655600 0000000000000070 t ft_glyphslot_free_bitmap
0000000000655670 000000000000010c t ft_glyphslot_done
0000000000655780 000000000000006c t ft_glyphslot_set_bitmap
00000000006557f0 0000000000000094 t FT_Done_GlyphSlot
0000000000655890 0000000000000024 T FT_Get_Transform
00000000006558c0 0000000000000140 t FT_Match_Size
0000000000655a00 0000000000000064 t ft_synthesize_vertical_metrics
0000000000655a70 00000000000000ac t FT_Select_Metrics
0000000000655b20 0000000000000308 t FT_Request_Metrics
0000000000655e30 0000000000000064 T FT_Select_Size
0000000000655ea0 00000000000000b0 T FT_Request_Size
0000000000655f50 0000000000000094 T FT_Set_Char_Size
0000000000655ff0 0000000000000128 T FT_Get_Kerning
0000000000656120 000000000000008c T FT_Select_Charmap
00000000006561b0 0000000000000050 T FT_Get_Char_Index
0000000000656200 0000000000000090 T FT_Get_Next_Char
0000000000656290 00000000000000c4 T FT_Get_Name_Index
0000000000656360 00000000000000ec T FT_Get_Glyph_Name
0000000000656450 0000000000000090 T FT_Load_Sfnt_Table
00000000006564e0 0000000000000090 T FT_Sfnt_Table_Info
0000000000656570 0000000000000074 T FT_Get_CMap_Format
00000000006565f0 00000000000000a4 T FT_Set_Charmap
00000000006566a0 0000000000000074 t find_variant_selector_charmap.isra.0
0000000000656720 0000000000000080 T FT_Face_GetCharVariantIndex
00000000006567a0 0000000000000030 T FT_Activate_Size
00000000006567d0 000000000000004c t FT_Lookup_Renderer
0000000000656820 000000000000009c T FT_Get_Module
00000000006568c0 0000000000000020 t FT_Get_Module_Interface
00000000006568e0 00000000000000b8 t ft_module_get_service
00000000006569a0 000000000000000c t ft_property_string_set
00000000006569b0 0000000000000084 T FT_New_Library
0000000000656a40 0000000000000048 T FT_Get_Color_Glyph_Layer
0000000000656a90 0000000000000030 T FT_Get_Color_Glyph_Paint
0000000000656ac0 0000000000000030 T FT_Get_Color_Glyph_ClipBox
0000000000656af0 0000000000000034 T FT_Get_Paint_Layers
0000000000656b30 0000000000000030 T FT_Get_Paint
0000000000656b60 0000000000000034 T FT_Get_Colorline_Stops
0000000000656ba0 00000000000003a0 T FT_Outline_Decompose
0000000000656f40 000000000000007c T FT_Outline_Check
0000000000656fc0 00000000000000d8 T FT_Outline_Copy
00000000006570a0 00000000000000b8 T FT_Outline_Done
0000000000657160 0000000000000064 T FT_Outline_Get_CBox
00000000006571d0 00000000000002ac t ft_glyphslot_preset_bitmap
0000000000657480 0000000000000038 T FT_Outline_Translate
00000000006574c0 0000000000000084 T FT_Vector_Transform
0000000000657550 0000000000000064 T FT_Outline_Transform
00000000006575c0 00000000000001b0 T FT_Outline_Get_Orientation
0000000000657770 0000000000000384 T FT_Outline_EmboldenXY
0000000000657b00 0000000000000240 T ps_property_set
0000000000657d40 00000000000000cc T ps_property_get
0000000000657e10 00000000000000ec t FT_Raccess_Guess
0000000000657f00 0000000000000014 t FT_Stream_OpenMemory
0000000000657f20 0000000000000018 t FT_Stream_Close
0000000000657f40 0000000000000068 t FT_Stream_Seek
0000000000657fb0 0000000000000074 t FT_Stream_Skip
0000000000658030 0000000000000008 t FT_Stream_Pos
0000000000658040 00000000000000a8 t FT_Stream_Read
00000000006580f0 00000000000000a8 t FT_Stream_ReadAt
00000000006581a0 0000000000000098 t FT_Stream_TryRead
0000000000658240 0000000000000048 t FT_Stream_ReleaseFrame
0000000000658290 0000000000000170 t FT_Stream_EnterFrame
0000000000658400 0000000000000034 t FT_Stream_ExtractFrame
0000000000658440 000000000000004c t FT_Stream_ExitFrame
0000000000658490 0000000000000024 t FT_Stream_GetByte
00000000006584c0 0000000000000030 t FT_Stream_GetUShort
00000000006584f0 000000000000002c t FT_Stream_GetUShortLE
0000000000658520 0000000000000030 t FT_Stream_GetULong
0000000000658550 000000000000002c t FT_Stream_GetULongLE
0000000000658580 0000000000000088 t FT_Stream_ReadByte
0000000000658610 00000000000000c0 t FT_Stream_ReadUShort
00000000006586d0 0000000000000320 t FT_Raccess_Get_HeaderInfo
00000000006589f0 00000000000000b8 t FT_Stream_ReadUShortLE
0000000000658ab0 00000000000000e0 t FT_Stream_ReadUOffset
0000000000658b90 00000000000000c0 t FT_Stream_ReadULong
0000000000658c50 0000000000000440 t FT_Raccess_Get_DataOffsets
0000000000659090 0000000000000174 t raccess_guess_apple_generic.isra.0
0000000000659210 0000000000000024 t raccess_guess_apple_double
0000000000659240 0000000000000024 t raccess_guess_apple_single
0000000000659270 00000000000000b8 t FT_Stream_ReadULongLE
0000000000659330 0000000000000298 t FT_Stream_ReadFields
00000000006595d0 0000000000000028 T FT_Tan
0000000000659600 000000000000008c T FT_Atan2
0000000000659690 0000000000000044 T FT_Vector_Unit
00000000006596e0 0000000000000020 T FT_Cos
0000000000659700 0000000000000020 T FT_Sin
0000000000659720 0000000000000140 T FT_Vector_Rotate
0000000000659860 0000000000000100 T FT_Vector_Length
0000000000659960 000000000000001c t FT_Hypot
0000000000659980 0000000000000014 T FT_Vector_From_Polar
00000000006599a0 0000000000000048 T FT_Angle_Diff
00000000006599f0 000000000000007c t ft_mem_alloc
0000000000659a70 000000000000014c t FT_Stream_New
0000000000659bc0 000000000000008c t ft_glyphslot_alloc_bitmap
0000000000659c50 0000000000000218 t open_face
0000000000659e70 0000000000000200 t FT_New_GlyphSlot
000000000065a070 000000000000027c t FT_Render_Glyph_Internal
000000000065a2f0 0000000000000028 T FT_Render_Glyph
000000000065a320 0000000000000694 T FT_Load_Glyph
000000000065a9c0 00000000000001e8 T FT_Get_Advances
000000000065abb0 0000000000000128 T FT_Get_Advance
000000000065ace0 00000000000000e8 t raccess_guess_linux_double_from_file_name
000000000065add0 00000000000000a8 t raccess_guess_linux_netatalk
000000000065ae80 00000000000000a8 t raccess_guess_linux_double
000000000065af30 00000000000000a8 t raccess_guess_darwin_ufs_export
000000000065afe0 0000000000000050 t ft_mem_qalloc
000000000065b030 00000000000000d4 t ft_mem_qrealloc
000000000065b110 0000000000000164 t FT_CMap_New
000000000065b280 0000000000000094 t ft_mem_realloc
000000000065b320 0000000000000090 t FT_GlyphLoader_CreateExtra
000000000065b3b0 0000000000000268 t FT_GlyphLoader_CheckPoints
000000000065b620 00000000000000a8 t FT_GlyphLoader_CheckSubGlyphs
000000000065b6d0 0000000000000158 T FT_Outline_New
000000000065b830 000000000000013c t hash_insert
000000000065b970 0000000000000004 t ft_hash_str_insert
000000000065b980 0000000000000008 t ft_hash_num_insert
000000000065b990 0000000000000014 t ft_mem_free
000000000065b9b0 0000000000000088 t ft_mem_dup
000000000065ba40 0000000000000098 t ft_mem_strdup
000000000065bae0 0000000000000040 t ft_mem_strcpyn
000000000065bb20 0000000000000028 T FT_List_Find
000000000065bb50 0000000000000030 T FT_List_Add
000000000065bb80 0000000000000170 T FT_New_Size
000000000065bcf0 0000000000000034 T FT_List_Remove
000000000065bd30 00000000000000e8 T FT_Done_Size
000000000065be20 0000000000000060 T FT_List_Iterate
000000000065be80 0000000000000084 T FT_List_Finalize
000000000065bf10 0000000000000100 t destroy_face
000000000065c010 00000000000000a4 T FT_Done_Face
000000000065c0c0 0000000000000950 t ft_open_face_internal
000000000065ca10 000000000000010c t open_face_from_buffer
000000000065cb20 0000000000000394 t open_face_PS_from_sfnt_stream.isra.0
000000000065cec0 00000000000007fc t IsMacResource
000000000065d6c0 0000000000000008 T FT_Open_Face
000000000065d6d0 00000000000001f0 T FT_Remove_Module
000000000065d8c0 00000000000002e0 T FT_Add_Module
000000000065dba0 000000000000014c T FT_Done_Library
000000000065dcf0 0000000000000040 t ft_bitmap_glyph_bbox
000000000065dd30 0000000000000034 t ft_outline_glyph_prepare
000000000065dd70 000000000000001c t ft_bitmap_glyph_copy
000000000065dd90 000000000000000c t ft_bitmap_glyph_done
000000000065dda0 0000000000000088 t ft_bitmap_glyph_init
000000000065de30 0000000000000008 t ft_outline_glyph_bbox
000000000065de40 0000000000000064 t ft_outline_glyph_copy
000000000065deb0 0000000000000074 t ft_outline_glyph_init
000000000065df30 000000000000000c t ft_outline_glyph_done
000000000065df40 00000000000000a4 t ft_svg_glyph_prepare
000000000065dff0 00000000000000d4 t ft_svg_glyph_transform
000000000065e0d0 00000000000000d8 t ft_svg_glyph_copy
000000000065e1b0 00000000000000f4 t ft_svg_glyph_init
000000000065e2b0 0000000000000030 t ft_svg_glyph_done
000000000065e2e0 0000000000000050 t ft_outline_glyph_transform
000000000065e330 00000000000000e4 T FT_New_Glyph
000000000065e420 0000000000000060 T FT_Glyph_Transform
000000000065e480 0000000000000044 T FT_Done_Glyph
000000000065e4d0 00000000000000dc T FT_Glyph_Copy
000000000065e5b0 0000000000000104 T FT_Get_Glyph
000000000065e6c0 00000000000002e4 T FT_Glyph_To_Bitmap
000000000065e9b0 000000000000003c T FT_Add_Default_Modules
000000000065e9f0 0000000000000184 T FT_Set_Default_Properties
000000000065eb80 000000000000006c T FT_Init_FreeType
000000000065ebf0 000000000000003c T FT_Done_FreeType
000000000065ec30 00000000000000a0 t ft_face_get_mvar_service.isra.0
000000000065ecd0 00000000000000c4 T FT_Get_MM_Var
000000000065eda0 0000000000000028 T FT_Done_MM_Var
000000000065edd0 00000000000000d0 T FT_Get_Var_Blend_Coordinates
000000000065eea0 000000000000018c T FT_Set_Named_Instance
000000000065f030 00000000000000fc t ft_stroke_border_close
000000000065f130 00000000000000b8 t ft_stroke_border_grow
000000000065f1f0 00000000000000ec t ft_stroke_border_lineto
000000000065f2e0 0000000000000094 t ft_stroker_cap.part.0.constprop.0
000000000065f380 000000000000008c t ft_stroke_border_get_counts.isra.0
000000000065f410 00000000000000d4 t ft_stroker_subpath_start
000000000065f4f0 00000000000001e4 t ft_stroke_border_arcto
000000000065f6e0 00000000000003e8 t ft_stroker_process_corner
000000000065fad0 00000000000005b8 t FT_Stroker_ConicTo.part.0
0000000000660090 0000000000000854 t FT_Stroker_CubicTo.part.0
00000000006608f0 0000000000000094 T FT_Stroker_New
0000000000660990 0000000000000024 T FT_Stroker_Rewind
00000000006609c0 0000000000000024 T FT_Stroker_Set
00000000006609f0 00000000000000a8 T FT_Stroker_Done
0000000000660aa0 0000000000000124 T FT_Stroker_LineTo
0000000000660bd0 000000000000001c T FT_Stroker_ConicTo
0000000000660bf0 0000000000000024 T FT_Stroker_CubicTo
0000000000660c20 0000000000000064 T FT_Stroker_BeginSubPath
0000000000660c90 0000000000000260 T FT_Stroker_EndSubPath
0000000000660ef0 000000000000008c T FT_Stroker_GetCounts
0000000000660f80 0000000000000144 T FT_Stroker_ExportBorder
00000000006610d0 0000000000000028 T FT_Stroker_Export
0000000000661100 000000000000031c T FT_Stroker_ParseOutline
0000000000661420 0000000000000164 T FT_Glyph_Stroke
0000000000661590 00000000000000c8 t bdf_atol_
0000000000661660 00000000000000c4 t bdf_atos_
0000000000661730 0000000000000018 t by_encoding
0000000000661750 0000000000000008 t bdf_parse_end_
0000000000661760 0000000000000018 t bdf_cmap_init
0000000000661780 0000000000000008 t bdf_cmap_done
0000000000661790 000000000000007c t bdf_cmap_char_index
0000000000661810 00000000000000c4 t bdf_cmap_char_next
00000000006618e0 0000000000000018 t bdf_get_charset_id
0000000000661900 0000000000000050 t BDF_Size_Select
0000000000661950 0000000000000134 t BDF_Glyph_Load
0000000000661a90 0000000000000084 t bdf_list_ensure_
0000000000661b20 0000000000000084 t bdf_add_comment_
0000000000661bb0 000000000000000c t bdf_driver_requester
0000000000661bc0 000000000000007c t bdf_atoul_
0000000000661c40 0000000000000080 t bdf_atous_
0000000000661cc0 00000000000001e4 t bdf_free_font.part.0
0000000000661eb0 00000000000000a4 t BDF_Face_Done
0000000000661f60 0000000000000244 t bdf_list_split_.part.0
00000000006621b0 00000000000000ac t bdf_list_join_.constprop.0
0000000000662260 0000000000000050 t bdf_list_shift_.constprop.0
00000000006622b0 0000000000000538 t bdf_add_property_.isra.0
00000000006627f0 00000000000000e0 t BDF_Size_Request
00000000006628d0 00000000000000c0 t bdf_get_bdf_property
0000000000662990 00000000000003ec t bdf_parse_properties_
0000000000662d80 0000000000000fa4 t BDF_Face_Init
0000000000663d30 0000000000000848 t bdf_parse_start_
0000000000664580 0000000000000cd4 t bdf_parse_glyphs_
0000000000665260 0000000000000018 t cff_cmap_encoding_init
0000000000665280 0000000000000008 t cff_cmap_encoding_done
0000000000665290 000000000000001c t cff_cmap_encoding_char_index
00000000006652b0 0000000000000040 t cff_cmap_encoding_char_next
00000000006652f0 000000000000004c t cff_cmap_unicode_init
0000000000665340 0000000000000018 t cff_cmap_unicode_char_index
0000000000665360 0000000000000018 t cff_cmap_unicode_char_next
0000000000665380 0000000000000040 t cff_get_kerning
00000000006653c0 000000000000000c t cff_ps_has_glyph_names
00000000006653d0 000000000000002c t cff_get_is_cid
0000000000665400 0000000000000048 t cff_get_cid_from_glyph_index
0000000000665450 0000000000000010 t cff_set_mm_blend
0000000000665460 0000000000000010 t cff_get_mm_blend
0000000000665470 0000000000000010 t cff_set_mm_weightvector
0000000000665480 0000000000000010 t cff_get_mm_weightvector
0000000000665490 0000000000000010 t cff_construct_ps_name
00000000006654a0 0000000000000010 t cff_get_mm_var
00000000006654b0 0000000000000010 t cff_set_var_design
00000000006654c0 0000000000000010 t cff_get_var_design
00000000006654d0 0000000000000010 t cff_set_named_instance
00000000006654e0 0000000000000010 t cff_get_default_named_instance
00000000006654f0 0000000000000010 t cff_load_item_variation_store
0000000000665500 0000000000000010 t cff_load_delta_set_index_mapping
0000000000665510 0000000000000010 t cff_get_item_delta
0000000000665520 0000000000000010 t cff_done_item_variation_store
0000000000665530 0000000000000010 t cff_done_delta_set_index_map
0000000000665540 0000000000000010 t cff_hadvance_adjust
0000000000665550 0000000000000010 t cff_metrics_adjust
0000000000665560 00000000000000c8 t cff_parse_integer
0000000000665630 0000000000000020 t cff_get_standard_encoding
0000000000665650 00000000000000a4 t cff_fd_select_get
0000000000665700 0000000000000010 t cff_get_var_blend
0000000000665710 0000000000000018 t cff_done_blend
0000000000665730 0000000000000010 t cff_slot_done
0000000000665740 0000000000000074 t cff_driver_init
00000000006657c0 0000000000000004 t cff_driver_done
00000000006657d0 0000000000000034 t cff_cmap_unicode_done
0000000000665810 00000000000000c4 t cff_vstore_done
00000000006658e0 0000000000000064 t cff_slot_init
0000000000665950 0000000000000304 t cff_make_private_dict
0000000000665c60 0000000000000058 t cff_index_done
0000000000665cc0 000000000000009c t cff_get_cmap_info
0000000000665d60 0000000000000090 t cff_get_ps_name
0000000000665df0 00000000000003e4 t cff_parse_real
00000000006661e0 0000000000000118 t cff_get_name_index
0000000000666300 00000000000000f4 t cff_charset_compute_cids
0000000000666400 000000000000006c t cff_blend_check_vector
0000000000666470 0000000000000280 t cff_blend_build_vector
00000000006666f0 00000000000004bc t cff_index_get_pointers
0000000000666bb0 0000000000000058 t cff_index_get_sid_string
0000000000666c10 00000000000000c4 t cff_get_ros
0000000000666ce0 000000000000011c t cff_ps_get_font_info
0000000000666e00 00000000000000cc t cff_get_glyph_name
0000000000666ed0 000000000000014c t cff_ps_get_font_extra
0000000000667020 0000000000000068 t cff_subfont_done.part.0
0000000000667090 0000000000000078 t cff_get_interface
0000000000667110 0000000000000058 t cff_size_get_globals_funcs.isra.0
0000000000667170 0000000000000160 t cff_size_init
00000000006672d0 00000000000000a0 t cff_size_done
0000000000667370 0000000000000130 t cff_size_select
00000000006674a0 0000000000000174 t cff_size_request
0000000000667620 00000000000001e8 t cff_face_done
0000000000667810 0000000000000318 t cff_parse_font_matrix
0000000000667b30 00000000000000a4 t do_fixed.isra.0
0000000000667be0 00000000000000a8 t cff_parse_font_bbox
0000000000667c90 0000000000000074 t cff_parse_num.isra.0
0000000000667d10 0000000000000078 t cff_parse_private_dict
0000000000667d90 0000000000000074 t cff_parse_multiple_master
0000000000667e10 0000000000000078 t cff_parse_cid_ros
0000000000667e90 0000000000000058 t cff_parse_vsindex
0000000000667ef0 00000000000003a0 t cff_parser_run
0000000000668290 000000000000021c t cff_load_private_dict
00000000006684b0 0000000000000050 t cff_free_glyph_data
0000000000668500 0000000000000310 t cff_parse_blend
0000000000668810 0000000000000244 t cff_index_access_element
0000000000668a60 0000000000000058 t cff_get_glyph_data
0000000000668ac0 00000000000008b4 t cff_slot_load
0000000000669380 0000000000000038 t cff_glyph_load
00000000006693c0 00000000000001fc t cff_get_advances
00000000006695c0 00000000000000e0 t cff_index_get_name
00000000006696a0 00000000000001e0 t cff_index_init
0000000000669880 0000000000000348 t cff_subfont_load
0000000000669bd0 0000000000000060 t cff_sid_to_glyph_name
0000000000669c30 0000000000002100 t cff_face_init
000000000066bd30 00000000000000b0 t cff_parse_maxstack
000000000066bde0 0000000000000054 t parse_expansion_factor
000000000066be40 0000000000000004 t parse_font_name
000000000066be50 0000000000000010 t cid_slot_done
000000000066be60 0000000000000074 t cid_driver_init
000000000066bee0 0000000000000004 t cid_driver_done
000000000066bef0 0000000000000018 t cid_get_postscript_name
000000000066bf10 0000000000000024 t cid_ps_get_font_info
000000000066bf40 0000000000000010 t cid_ps_get_font_extra
000000000066bf50 000000000000002c t cid_get_ros
000000000066bf80 0000000000000014 t cid_get_is_cid
000000000066bfa0 0000000000000060 t cid_slot_init
000000000066c000 0000000000000154 t cid_face_done
000000000066c160 0000000000000174 t cid_compute_fd_and_offsets
000000000066c2e0 00000000000003a8 t cid_load_glyph
000000000066c690 00000000000003d0 t cid_slot_load_glyph
000000000066ca60 000000000000003c t cid_get_cid_from_glyph_index
000000000066caa0 0000000000000160 t cid_parse_font_matrix
000000000066cc00 0000000000000100 t parse_fd_array
000000000066cd00 000000000000000c t cid_get_interface
000000000066cd10 0000000000000058 t cid_size_get_globals_funcs.isra.0
000000000066cd70 0000000000000070 t cid_size_init
000000000066cde0 0000000000000050 t cid_size_done
000000000066ce30 0000000000000068 t cid_size_request
000000000066cea0 0000000000000dd0 t cid_face_open
000000000066dc70 00000000000002a4 t cid_face_init
000000000066df20 0000000000000014 t pcf_cmap_init
000000000066df40 0000000000000008 t pcf_cmap_done
000000000066df50 0000000000000058 t pcf_cmap_char_index
000000000066dfb0 00000000000000e8 t pcf_cmap_char_next
000000000066e0a0 0000000000000018 t pcf_get_charset_id
000000000066e0c0 0000000000000008 t pcf_property_set
000000000066e0d0 0000000000000008 t pcf_property_get
000000000066e0e0 0000000000000008 t pcf_driver_init
000000000066e0f0 0000000000000004 t pcf_driver_done
000000000066e100 0000000000000054 t PCF_Size_Select
000000000066e160 00000000000003b4 t PCF_Glyph_Load
000000000066e520 000000000000000c t pcf_driver_requester
000000000066e530 0000000000000168 t PCF_Face_Done.part.0
000000000066e6a0 000000000000000c t PCF_Face_Done
000000000066e6b0 0000000000000078 t pcf_find_property.isra.0
000000000066e730 000000000000006c t pcf_get_bdf_property
000000000066e7a0 00000000000000e0 t PCF_Size_Request
000000000066e880 0000000000000214 t pcf_get_accel
000000000066eaa0 0000000000001584 t pcf_load_font
0000000000670030 0000000000000268 t PCF_Face_Init
00000000006702a0 0000000000000060 t pfr_cmap_init
0000000000670300 000000000000000c t pfr_cmap_done
0000000000670310 0000000000000070 t pfr_cmap_char_index
0000000000670380 00000000000000b4 t pfr_cmap_char_next
0000000000670440 0000000000000048 t pfr_get_advance
0000000000670490 00000000000000a8 t pfr_glyph_close_contour
0000000000670540 00000000000001f4 t pfr_face_get_kerning
0000000000670740 0000000000000224 t pfr_extra_item_load_bitmap_info
0000000000670970 0000000000000050 t pfr_slot_done
00000000006709c0 0000000000000034 t pfr_slot_init
0000000000670a00 00000000000000f4 t pfr_extra_item_load_stem_snaps
0000000000670b00 000000000000014c t pfr_extra_item_load_kerning_pairs
0000000000670c50 0000000000000084 t pfr_extra_item_load_font_id
0000000000670ce0 00000000000000e4 t pfr_aux_name_load
0000000000670dd0 000000000000000c t pfr_get_service
0000000000670de0 00000000000000a0 t pfr_get_metrics
0000000000670e80 000000000000007c t pfr_get_kerning
0000000000670f00 00000000000000f8 t pfr_face_done
0000000000671000 0000000000000090 t pfr_glyph_line_to.isra.0
0000000000671090 0000000000000a50 t pfr_glyph_load_rec
0000000000671ae0 0000000000000a50 t pfr_slot_load
0000000000672530 0000000000000cb8 t pfr_face_init
00000000006731f0 0000000000000020 t afm_compare_kern_pairs
0000000000673210 000000000000011c t PS_Conv_Strtol
0000000000673330 000000000000008c t PS_Conv_ToInt
00000000006733c0 0000000000000080 t skip_spaces
0000000000673440 0000000000000108 t skip_literal_string
0000000000673550 0000000000000098 t skip_string
00000000006735f0 0000000000000008 t ps_parser_skip_spaces
0000000000673600 0000000000000018 t ps_parser_to_int
0000000000673620 000000000000017c t ps_parser_to_bytes
00000000006737a0 0000000000000044 t ps_parser_init
00000000006737f0 0000000000000004 t ps_parser_done
0000000000673800 0000000000000024 t t1_builder_done
0000000000673830 0000000000000128 t t1_builder_close_contour
0000000000673960 0000000000000024 t cff_builder_done
0000000000673990 0000000000000050 t cff_builder_add_point
00000000006739e0 0000000000000128 t cff_builder_close_contour
0000000000673b10 0000000000000024 t ps_builder_done
0000000000673b40 0000000000000010 t cff_random
0000000000673b50 0000000000000010 t t1_cmap_std_done
0000000000673b60 0000000000000030 t t1_cmap_standard_init
0000000000673b90 0000000000000030 t t1_cmap_expert_init
0000000000673bc0 0000000000000024 t t1_cmap_custom_init
0000000000673bf0 0000000000000008 t t1_cmap_custom_done
0000000000673c00 0000000000000034 t t1_cmap_custom_char_index
0000000000673c40 0000000000000064 t t1_cmap_custom_char_next
0000000000673cb0 000000000000000c t psaux_get_glyph_name
0000000000673cc0 0000000000000038 t t1_cmap_unicode_init
0000000000673d00 0000000000000014 t t1_cmap_unicode_char_index
0000000000673d20 0000000000000014 t t1_cmap_unicode_char_next
0000000000673d40 0000000000000068 t cf2_stack_popInt
0000000000673db0 0000000000000060 t cf2_stack_popFixed
0000000000673e10 000000000000006c t cf2_stack_getReal
0000000000673e80 0000000000000068 t ps_table_release
0000000000673ef0 0000000000000028 t afm_parser_done
0000000000673f20 0000000000000034 t t1_cmap_unicode_done
0000000000673f60 00000000000000a0 t ps_table_realloc
0000000000674000 0000000000000008 t ps_table_done
0000000000674010 00000000000000d4 t ps_table_new
00000000006740f0 00000000000000b0 t t1_builder_add_point
00000000006741a0 00000000000000c4 t cf2_arrstack_setNumElements
0000000000674270 0000000000000064 t cf2_arrstack_push
00000000006742e0 0000000000000108 t cf2_doStems
00000000006743f0 0000000000000454 t PS_Conv_ToFixed
0000000000674850 00000000000001c0 t ps_tofixedarray
0000000000674a10 0000000000000030 t ps_parser_to_fixed_array
0000000000674a40 0000000000000144 t ps_parser_to_coord_array
0000000000674b90 0000000000000020 t ps_parser_to_fixed
0000000000674bb0 00000000000000b4 t ps_builder_init
0000000000674c70 00000000000000e4 t cf2_getSeacComponent
0000000000674d60 00000000000003e4 t t1_make_subfont
0000000000675150 00000000000000d4 t t1_builder_add_contour
0000000000675230 00000000000000c8 t cff_builder_add_contour
0000000000675300 00000000000000b4 t t1_builder_init
00000000006753c0 00000000000000c8 t cff_builder_init
0000000000675490 0000000000000064 t afm_parser_init
0000000000675500 000000000000010c t cf2_hintmap_map
0000000000675610 00000000000000dc t cf2_glyphpath_hintPoint
00000000006756f0 00000000000003b4 t cf2_hintmap_insertHint
0000000000675ab0 00000000000001d0 t cf2_glyphpath_computeOffset
0000000000675c80 000000000000036c t t1_decoder_parse_metrics
0000000000675ff0 00000000000000a8 t t1_lookup_glyph_by_stdcharcode_ps
00000000006760a0 0000000000000098 t t1_cmap_std_char_index
0000000000676140 0000000000000078 t t1_cmap_std_char_next
00000000006761c0 00000000000000e0 t t1_decoder_init
00000000006762a0 00000000000000d8 t afm_tokenize
0000000000676380 00000000000000f4 t cff_decoder_prepare
0000000000676480 0000000000000048 t cf2_free_instance
00000000006764d0 00000000000000fc t ps_table_add
00000000006765d0 00000000000004c4 t cf2_glyphpath_pushPrevElem
0000000000676aa0 0000000000000288 t cf2_computeDarkening.part.0.constprop.0
0000000000676d30 00000000000000d4 t ps_builder_add_contour.constprop.0
0000000000676e10 0000000000000034 t cff_check_points
0000000000676e50 000000000000002c t ps_builder_check_points.part.0.isra.0
0000000000676e80 0000000000000034 t t1_builder_check_points
0000000000676ec0 0000000000000040 t cf2_stack_pushFixed
0000000000676f00 000000000000006c t afm_stream_skip_spaces.part.0.isra.0
0000000000676f70 0000000000000038 t cf2_freeT1SeacComponent.isra.0
0000000000676fb0 000000000000007c t cf2_getT1SeacComponent.isra.0
0000000000677030 0000000000000128 t ps_builder_close_contour.isra.0
0000000000677160 0000000000000020 t cf2_builder_moveTo
0000000000677180 0000000000000064 t t1_decrypt
00000000006771f0 00000000000000bc t afm_stream_read_one
00000000006772b0 00000000000000cc t cff_decoder_init
0000000000677380 0000000000000130 t skip_procedure
00000000006774b0 00000000000001e4 t ps_parser_skip_PS_token
00000000006776a0 0000000000000198 t ps_parser_to_token
0000000000677840 0000000000000124 t ps_parser_to_token_array
0000000000677970 0000000000000524 t ps_parser_load_field
0000000000677ea0 000000000000016c t ps_parser_load_field_table
0000000000678010 00000000000000d4 t afm_stream_read_string
00000000006780f0 00000000000001a0 t afm_parser_read_vals
0000000000678290 0000000000000064 t afm_parser_next_key.constprop.0.isra.0
0000000000678300 000000000000007c t t1_builder_add_point1
0000000000678380 0000000000000060 t t1_builder_start_point
00000000006783e0 0000000000000044 t cf2_stack_setReal
0000000000678430 0000000000000044 t cf2_stack_pushInt
0000000000678480 0000000000000060 t t1_decoder_done
00000000006784e0 00000000000000a4 t cf2_hintmask_read
0000000000678590 00000000000000ac t cff_builder_add_point1
0000000000678640 000000000000005c t cff_builder_start_point
00000000006786a0 0000000000000158 t cf2_hint_init
0000000000678800 0000000000000168 t ps_decoder_init
0000000000678970 0000000000000a88 t cf2_hintmap_build
0000000000679400 00000000000000f0 t cf2_glyphpath_moveTo
00000000006794f0 000000000000009c t cf2_glyphpath_pushMove
0000000000679590 000000000000019c t cf2_glyphpath_lineTo
0000000000679730 0000000000000214 t cf2_glyphpath_curveTo
0000000000679950 00000000000001b8 t cf2_doFlex
0000000000679b10 00000000000001e8 t cf2_builder_cubeTo
0000000000679d00 000000000000016c t cf2_builder_lineTo
0000000000679e70 00000000000006f0 t afm_parser_parse
000000000067a560 0000000000002dec t cf2_interpT2CharString
000000000067d350 0000000000000b00 t cf2_decoder_parse_charstrings
000000000067de50 00000000000000a8 t psh_hint_table_record
000000000067df00 0000000000000008 t pshinter_get_globals_funcs
000000000067df10 0000000000000008 t pshinter_get_t1_funcs
000000000067df20 0000000000000008 t pshinter_get_t2_funcs
000000000067df30 0000000000000028 t t1_hints_open
000000000067df60 0000000000000028 t t2_hints_open
000000000067df90 00000000000000c8 t psh_globals_scale_widths
000000000067e060 00000000000002b0 t psh_globals_set_scale
000000000067e310 00000000000000c8 t ps_hinter_init
000000000067e3e0 0000000000000078 t ps_mask_table_done
000000000067e460 00000000000000f0 t ps_mask_table_alloc
000000000067e550 0000000000000090 t ps_mask_ensure
000000000067e5e0 000000000000002c t psh_globals_destroy
000000000067e610 0000000000000494 t psh_hint_align
000000000067eab0 0000000000000208 t ps_mask_table_merge_all
000000000067ecc0 0000000000000144 t psh_blues_set_zones_0.isra.0
000000000067ee10 0000000000000214 t psh_blues_set_zones
000000000067f030 00000000000003bc t psh_hint_table_find_strong_points.isra.0
000000000067f3f0 0000000000000238 t psh_hint_table_init.isra.0
000000000067f630 0000000000000158 t psh_hint_table_activate_mask.isra.0
000000000067f790 0000000000000098 t ps_hints_close.part.0
000000000067f830 0000000000000014 t t1_hints_close
000000000067f850 0000000000000080 t ps_hinter_done
000000000067f8d0 0000000000000014 t t2_hints_close
000000000067f8f0 0000000000000150 t ps_dimension_set_mask_bits
000000000067fa40 0000000000000094 t ps_hints_t2counter
000000000067fae0 0000000000000098 t ps_hints_t2mask
000000000067fb80 0000000000001250 t ps_hints_apply.part.0
0000000000680dd0 000000000000001c t t1_hints_apply
0000000000680df0 000000000000001c t t2_hints_apply
0000000000680e10 00000000000000d0 t ps_hints_t1reset
0000000000680ee0 000000000000040c t psh_globals_new
00000000006812f0 0000000000000220 t ps_dimension_add_t1stem
0000000000681510 000000000000007c t t1_hints_stem
0000000000681590 0000000000000178 t t2_hints_stems
0000000000681710 00000000000002a8 t ps_hints_t1stem3
00000000006819c0 0000000000000240 t ps_unicode_value
0000000000681c00 0000000000000034 t compare_uni_maps
0000000000681c40 00000000000000ac t ps_unicodes_char_index
0000000000681cf0 00000000000000d0 t ps_unicodes_char_next
0000000000681dc0 0000000000000028 t ps_get_macintosh_name
0000000000681df0 000000000000002c t ps_get_standard_strings
0000000000681e20 000000000000000c t psnames_get_service
0000000000681e30 0000000000000278 t ps_unicodes_init
00000000006820b0 00000000000000f4 t New_Profile
00000000006821b0 000000000000018c t End_Profile
0000000000682340 000000000000002c t Split_Conic
0000000000682370 00000000000000ac t Split_Cubic
0000000000682420 000000000000019c t Bezier_Up
00000000006825c0 0000000000000224 t Cubic_To
00000000006827f0 00000000000000b0 t Increment
00000000006828a0 0000000000000018 t Vertical_Sweep_Init
00000000006828c0 00000000000000ec t Vertical_Sweep_Span
00000000006829b0 0000000000000090 t Vertical_Sweep_Drop
0000000000682a40 0000000000000014 t Vertical_Sweep_Step
0000000000682a60 0000000000000004 t Horizontal_Sweep_Init
0000000000682a70 00000000000000c0 t Horizontal_Sweep_Span
0000000000682b30 00000000000000b0 t Horizontal_Sweep_Drop
0000000000682be0 0000000000000004 t Horizontal_Sweep_Step
0000000000682bf0 0000000000000004 t ft_black_reset
0000000000682c00 0000000000000008 t ft_black_set_mode
0000000000682c10 0000000000000030 t ft_raster1_init
0000000000682c40 0000000000000018 t ft_raster1_set_mode
0000000000682c60 000000000000000c t ft_black_done
0000000000682c70 00000000000001b0 t Line_Up
0000000000682e20 00000000000000e4 t Line_To
0000000000682f10 0000000000000040 t ft_black_new
0000000000682f50 000000000000002c t ft_raster1_get_cbox
0000000000682f80 000000000000026c t ft_raster1_render
00000000006831f0 0000000000000058 t ft_raster1_transform
0000000000683250 00000000000001ec t Conic_To
0000000000683440 0000000000000850 t Render_Single_Pass.constprop.0
0000000000683c90 0000000000000130 t Render_Glyph
0000000000683dc0 00000000000000ec t ft_black_render
0000000000683eb0 0000000000000018 t ft_sdf_init
0000000000683ed0 0000000000000004 t ft_sdf_done
0000000000683ee0 0000000000000018 t ft_sdf_set_mode
0000000000683f00 0000000000000004 t bsdf_raster_reset
0000000000683f10 0000000000000008 t bsdf_raster_set_mode
0000000000683f20 000000000000002c t ft_sdf_get_cbox
0000000000683f50 000000000000000c t bsdf_raster_done
0000000000683f60 000000000000000c t sdf_raster_done
0000000000683f70 00000000000002cc t ft_sdf_render
0000000000684240 000000000000000c t ft_sdf_requester
0000000000684250 00000000000000b4 t sdf_property_get
0000000000684310 00000000000000e0 t sdf_property_set
00000000006843f0 0000000000000220 t ft_bsdf_render
0000000000684610 0000000000000080 t compare_neighbor
0000000000684690 000000000000006c t map_fixed_to_sdf
0000000000684700 0000000000000040 t bsdf_raster_new
0000000000684740 0000000000000040 t sdf_raster_new
0000000000684780 000000000000005c t sdf_edge_new
00000000006847e0 00000000000000a8 t sdf_cubic_to
0000000000684890 000000000000009c t sdf_line_to
0000000000684930 00000000000000e4 t sdf_conic_to
0000000000684a20 0000000000000160 t split_sdf_conic
0000000000684b80 0000000000000058 t ft_sdf_transform
0000000000684be0 000000000000005c t sdf_contour_done
0000000000684c40 0000000000000008 t sdf_raster_set_mode
0000000000684c50 0000000000000004 t sdf_raster_reset
0000000000684c60 0000000000000ea4 t sdf_generate_bounding_box.isra.0
0000000000685b10 0000000000000bb0 t bsdf_raster_render
00000000006866c0 000000000000024c t split_sdf_cubic
0000000000686910 00000000000001e4 t split_sdf_shape
0000000000686b00 00000000000007a4 t sdf_raster_render
00000000006872b0 0000000000000078 t sdf_move_to
0000000000687330 0000000000000094 t premultiply_data
00000000006873d0 0000000000000048 t convert_bytes_to_data
0000000000687420 0000000000000004 t warning_callback
0000000000687430 00000000000000a4 t get_sfnt_table
00000000006874e0 0000000000000060 t sfnt_table_info
0000000000687540 0000000000000034 t sfnt_is_postscript
0000000000687580 0000000000000028 t sfnt_is_alphanumeric
00000000006875b0 00000000000000e0 t sfnt_get_name_id
0000000000687690 0000000000000020 t compare_offsets
00000000006876b0 000000000000000c t tt_cmap_init
00000000006876c0 0000000000000020 t tt_cmap0_char_index
00000000006876e0 0000000000000044 t tt_cmap0_char_next
0000000000687730 0000000000000020 t tt_cmap0_get_info
0000000000687750 0000000000000058 t tt_cmap2_get_subheader
00000000006877b0 0000000000000084 t tt_cmap2_char_index
0000000000687840 00000000000001a8 t tt_cmap2_char_next
00000000006879f0 0000000000000024 t tt_cmap2_get_info
0000000000687a20 0000000000000024 t tt_cmap4_init
0000000000687a50 00000000000000f8 t tt_cmap4_set_range
0000000000687b50 0000000000000204 t tt_cmap4_next
0000000000687d60 0000000000000290 t tt_cmap4_char_map_linear
0000000000687ff0 00000000000006dc t tt_cmap4_char_map_binary
00000000006886d0 0000000000000050 t tt_cmap4_char_index
0000000000688720 000000000000006c t tt_cmap4_char_next
0000000000688790 0000000000000024 t tt_cmap4_get_info
00000000006887c0 0000000000000040 t tt_cmap6_char_index
0000000000688800 00000000000000a4 t tt_cmap6_char_next
00000000006888b0 0000000000000024 t tt_cmap6_get_info
00000000006888e0 0000000000000088 t tt_cmap8_char_index
0000000000688970 0000000000000104 t tt_cmap8_char_next
0000000000688a80 0000000000000020 t tt_cmap8_get_info
0000000000688aa0 000000000000004c t tt_cmap10_char_index
0000000000688af0 0000000000000090 t tt_cmap10_char_next
0000000000688b80 0000000000000020 t tt_cmap10_get_info
0000000000688ba0 000000000000001c t tt_cmap12_init
0000000000688bc0 00000000000000c8 t tt_cmap12_next
0000000000688c90 0000000000000148 t tt_cmap12_char_map_binary
0000000000688de0 0000000000000020 t tt_cmap12_char_index
0000000000688e00 0000000000000020 t tt_cmap12_get_info
0000000000688e20 000000000000001c t tt_cmap13_init
0000000000688e40 0000000000000084 t tt_cmap13_next
0000000000688ed0 0000000000000124 t tt_cmap13_char_map_binary
0000000000689000 0000000000000020 t tt_cmap13_char_index
0000000000689020 0000000000000020 t tt_cmap13_get_info
0000000000689040 0000000000000020 t tt_cmap14_init
0000000000689060 0000000000000008 t tt_cmap14_char_index
0000000000689070 000000000000000c t tt_cmap14_char_next
0000000000689080 0000000000000014 t tt_cmap14_get_info
00000000006890a0 0000000000000078 t tt_cmap14_char_map_def_binary
0000000000689120 0000000000000074 t tt_cmap14_char_map_nondef_binary
00000000006891a0 0000000000000070 t tt_cmap14_find_variant
0000000000689210 0000000000000084 t tt_cmap14_char_var_index
00000000006892a0 000000000000008c t tt_cmap14_char_var_isdefault
0000000000689330 0000000000000038 t tt_cmap_unicode_init
0000000000689370 0000000000000014 t tt_cmap_unicode_char_index
0000000000689390 0000000000000014 t tt_cmap_unicode_char_next
00000000006893b0 000000000000001c t tt_get_cmap_info
00000000006893d0 0000000000000148 t tt_face_get_colr_layer
0000000000689520 000000000000007c t get_child_table_pointer
00000000006895a0 00000000000000d4 t tt_face_get_colr_glyph_paint
0000000000689680 00000000000000a8 t tt_face_get_paint_layers
0000000000689730 00000000000000a8 t tt_face_palette_set
00000000006897e0 000000000000002c t extract_svg_doc
0000000000689810 0000000000000184 t tt_face_get_kerning
00000000006899a0 00000000000000a4 t tt_sbit_decoder_load_metrics
0000000000689a50 0000000000000204 t tt_sbit_decoder_load_byte_aligned
0000000000689c60 000000000000025c t tt_sbit_decoder_load_bit_aligned
0000000000689ec0 000000000000000c t sfnt_get_interface
0000000000689ed0 00000000000001a0 t tt_face_load_kern
000000000068a070 0000000000000030 t tt_face_free_sbit
000000000068a0a0 0000000000000278 t tt_face_get_metrics
000000000068a320 000000000000009c t tt_name_ascii_from_other
000000000068a3c0 00000000000000b0 t tt_name_ascii_from_utf16
000000000068a470 000000000000003c t tt_face_free_svg
000000000068a4b0 00000000000002bc t tt_face_get_name
000000000068a770 0000000000000070 t tt_face_free_colr
000000000068a7e0 000000000000003c t tt_face_free_cpal
000000000068a820 000000000000007c t tt_face_free_ps_names
000000000068a8a0 00000000000000dc t tt_face_free_name
000000000068a980 0000000000000210 t sfnt_done_face
000000000068ab90 0000000000000030 t sfnt_stream_close
000000000068abc0 000000000000003c t tt_cmap14_done
000000000068ac00 0000000000000034 t tt_cmap_unicode_done
000000000068ac40 0000000000000260 t tt_face_load_svg_doc
000000000068aea0 0000000000000158 t tt_face_load_svg
000000000068b000 00000000000003b8 t tt_face_colr_blend_layer
000000000068b3c0 00000000000003fc t tt_face_load_colr
000000000068b7c0 0000000000000088 t tt_face_load_hmtx
000000000068b850 00000000000003a8 t tt_face_load_cpal
000000000068bc00 00000000000002c0 t tt_face_load_strike_metrics
000000000068bec0 000000000000015c t tt_face_load_gasp
000000000068c020 000000000000000c t tt_face_set_sbit_strike
000000000068c030 00000000000003dc t tt_face_load_sbit
000000000068c410 0000000000000058 t tt_face_load_pclt
000000000068c470 00000000000003a8 t tt_face_load_name
000000000068c820 00000000000000e0 t tt_face_load_maxp
000000000068c900 0000000000000090 t tt_face_load_hhea
000000000068c990 0000000000000428 t Load_SBit_Png
000000000068cdc0 000000000000007c t tt_sbit_decoder_load_png
000000000068ce40 0000000000000038 t error_callback
000000000068ce80 00000000000000b8 t tt_cmap0_validate
000000000068cf40 000000000000024c t tt_cmap2_validate
000000000068d190 0000000000000558 t tt_cmap4_validate
000000000068d6f0 00000000000000e4 t tt_cmap6_validate
000000000068d7e0 0000000000000288 t tt_cmap8_validate
000000000068da70 00000000000000ec t tt_cmap10_validate
000000000068db60 0000000000000170 t tt_cmap12_validate
000000000068dcd0 0000000000000158 t tt_cmap13_validate
000000000068de30 0000000000000364 t tt_cmap14_validate
000000000068e1a0 0000000000000070 t tt_cmap12_char_next
000000000068e210 0000000000000070 t tt_cmap13_char_next
000000000068e280 0000000000000060 t tt_face_load_cmap
000000000068e2e0 0000000000000480 t tt_face_get_ps_name.part.0
000000000068e760 0000000000000024 t tt_face_get_ps_name
000000000068e790 0000000000000058 t tt_face_load_bhed
000000000068e7f0 0000000000000084 t tt_face_load_post
000000000068e880 0000000000000104 t tt_face_load_os2
000000000068e990 0000000000000070 t read_data_from_FT_Stream
000000000068ea00 00000000000003e8 t tt_face_load_font_dir
000000000068edf0 00000000000000d8 t get_deltas_for_var_index_base.isra.0
000000000068eed0 0000000000000334 t tt_face_get_color_glyph_clipbox
000000000068f210 0000000000000140 t tt_face_get_colorline_stops
000000000068f350 0000000000000274 t tt_face_build_cmaps.isra.0
000000000068f5d0 0000000000000efc t sfnt_init_face
00000000006904d0 0000000000000128 t get_apple_string.isra.0
0000000000690600 0000000000000140 t get_win_string.isra.0
0000000000690740 0000000000000aa0 t sfnt_get_ps_name
00000000006911e0 0000000000000058 t tt_face_load_head
0000000000691240 00000000000000b0 t sfnt_get_name_index
00000000006912f0 000000000000003c t tt_get_glyph_name
0000000000691330 0000000000000080 t sfnt_get_glyph_name
00000000006913b0 0000000000000054 t tt_face_goto_table
0000000000691410 0000000000000094 t sfnt_load_table
00000000006914b0 0000000000000094 t tt_face_load_any
0000000000691550 0000000000000330 t tt_face_find_bdf_prop
0000000000691880 0000000000000098 t sfnt_get_charset_id
0000000000691920 00000000000000d8 t tt_cmap14_variants
0000000000691a00 00000000000000f0 t tt_cmap14_get_nondef_chars
0000000000691af0 0000000000000158 t tt_cmap14_get_def_chars
0000000000691c50 0000000000000378 t tt_cmap14_variant_chars
0000000000691fd0 0000000000000144 t tt_cmap14_char_variants
0000000000692120 00000000000006a4 t tt_sbit_decoder_load_image
00000000006927d0 000000000000015c t tt_sbit_decoder_load_compound
0000000000692930 00000000000004e0 t tt_face_load_sbit_image
0000000000692e10 0000000000000bd8 t sfnt_load_face
00000000006939f0 0000000000000f40 t tt_face_get_paint
0000000000694930 0000000000000004 t gray_raster_reset
0000000000694940 0000000000000008 t gray_raster_set_mode
0000000000694950 0000000000000018 t ft_smooth_set_mode
0000000000694970 0000000000000048 t ft_smooth_init
00000000006949c0 0000000000000068 t ft_smooth_lcd_spans
0000000000694a30 0000000000000094 t ft_smooth_overlap_spans
0000000000694ad0 000000000000000c t gray_raster_done
0000000000694ae0 0000000000000090 t gray_convert_glyph_inner
0000000000694b70 00000000000000bc t gray_set_cell
0000000000694c30 0000000000000314 t gray_render_line
0000000000694f50 000000000000002c t gray_line_to
0000000000694f80 0000000000000048 t gray_move_to
0000000000694fd0 0000000000000648 t gray_convert_glyph
0000000000695620 000000000000013c t gray_raster_render
0000000000695760 0000000000000040 t gray_raster_new
00000000006957a0 000000000000002c t ft_smooth_get_cbox
00000000006957d0 00000000000007fc t ft_smooth_render
0000000000695fd0 0000000000000058 t ft_smooth_transform
0000000000696030 0000000000000208 t gray_render_cubic.isra.0
0000000000696240 000000000000002c t gray_cubic_to
0000000000696270 0000000000000194 t gray_conic_to
0000000000696410 000000000000000c t ft_svg_init
0000000000696420 000000000000004c t ft_svg_done
0000000000696470 000000000000008c t ft_svg_preset_slot
0000000000696500 00000000000000d8 t ft_svg_transform
00000000006965e0 000000000000000c t ft_svg_get_interface
00000000006965f0 0000000000000050 t ft_svg_property_get
0000000000696640 00000000000000a4 t ft_svg_property_set
00000000006966f0 0000000000000124 t ft_svg_render
0000000000696820 0000000000000048 t tt_get_kerning
0000000000696870 0000000000000084 t tt_get_metrics_incremental
0000000000696900 0000000000000070 t TT_Load_Glyph_Header
0000000000696970 0000000000000080 t tt_loader_set_pp
00000000006969f0 000000000000040c t ft_var_get_value_pointer
0000000000696e00 0000000000000020 t ft_size_reset_iterator
0000000000696e20 0000000000000014 t tt_cvt_ready_iterator
0000000000696e40 0000000000000060 t tt_get_var_blend
0000000000696ea0 0000000000000048 t TT_MulFix14
0000000000696ef0 000000000000006c t TT_DotFix14
0000000000696f60 0000000000000008 t Current_Ppem
0000000000696f70 000000000000000c t Read_CVT
0000000000696f80 0000000000000064 t Direct_Move_X
0000000000696ff0 000000000000005c t Direct_Move_Y
0000000000697050 0000000000000018 t Direct_Move_Orig_X
0000000000697070 0000000000000018 t Direct_Move_Orig_Y
0000000000697090 0000000000000024 t Round_None
00000000006970c0 0000000000000038 t Round_To_Grid
0000000000697100 0000000000000040 t Round_To_Half_Grid
0000000000697140 0000000000000030 t Round_Down_To_Grid
0000000000697170 0000000000000038 t Round_Up_To_Grid
00000000006971b0 0000000000000038 t Round_To_Double_Grid
00000000006971f0 0000000000000058 t Round_Super
0000000000697250 0000000000000058 t Round_Super_45
00000000006972b0 000000000000002c t Project
00000000006972e0 000000000000002c t Dual_Project
0000000000697310 0000000000000008 t Project_x
0000000000697320 0000000000000008 t Project_y
0000000000697330 0000000000000138 t Compute_Funcs
0000000000697470 000000000000008c t SkipCode
0000000000697500 00000000000000bc t Move_Zp2_Point
00000000006975c0 000000000000001c t tt_size_init
00000000006975e0 0000000000000010 t tt_driver_init
00000000006975f0 0000000000000004 t tt_driver_done
0000000000697600 00000000000000f0 t tt_face_get_location
00000000006976f0 0000000000000018 t compare_ppem
0000000000697710 00000000000000e0 t tt_size_reset_height
00000000006977f0 00000000000000e4 t ft_var_apply_tuple
00000000006978e0 00000000000000bc t Direct_Move_Orig
00000000006979a0 0000000000000174 t Direct_Move
0000000000697b20 0000000000000090 t TT_Done_Context
0000000000697bb0 0000000000000078 t tt_glyphzone_done
0000000000697c30 0000000000000090 t tt_size_done_bytecode
0000000000697cc0 0000000000000024 t tt_size_done
0000000000697cf0 0000000000000040 t tt_var_done_delta_set_index_map
0000000000697d30 00000000000000d8 t tt_var_done_item_variation_store
0000000000697e10 000000000000002c t tt_construct_ps_name
0000000000697e40 00000000000001e8 t TT_Load_Context
0000000000698030 0000000000000174 t tt_size_run_prep
00000000006981b0 0000000000000164 t ft_var_readpackeddeltas
0000000000698320 0000000000000270 t TT_Hint_Glyph
0000000000698590 0000000000000068 t TT_Access_Glyph_Frame
0000000000698600 0000000000000008 t TT_Forget_Glyph_Frame
0000000000698610 00000000000001d0 t ft_var_readpackedpoints
00000000006987e0 000000000000007c t Current_Ratio
0000000000698860 000000000000000c t tt_slot_init
0000000000698870 00000000000005a8 t tt_face_vary_cvt
0000000000698e20 0000000000000104 t tt_face_load_cvt
0000000000698f30 0000000000000ae0 t tt_face_init
0000000000699a10 0000000000000280 t TT_Load_Composite_Glyph
0000000000699c90 0000000000000444 t TT_Load_Simple_Glyph
000000000069a0e0 000000000000004c t tt_property_get
000000000069a130 00000000000003c4 t tt_var_get_item_delta
000000000069a500 000000000000019c t tt_apply_mvar
000000000069a6a0 00000000000002d8 t ft_var_to_normalized
000000000069a980 0000000000000570 t tt_var_load_item_variation_store
000000000069aef0 0000000000000264 t tt_var_load_delta_set_index_mapping
000000000069b160 000000000000022c t ft_var_load_hvvar
000000000069b390 0000000000000120 t tt_hvadvance_adjust
000000000069b4b0 0000000000000008 t tt_vadvance_adjust
000000000069b4c0 0000000000000008 t tt_hadvance_adjust
000000000069b4d0 00000000000002d8 t ft_var_load_avar
000000000069b7b0 0000000000000954 t TT_Get_MM_Var
000000000069c110 0000000000000048 t TT_Get_Default_Named_Instance
000000000069c160 00000000000000a0 t TT_Get_VMetrics
000000000069c200 00000000000000f8 t tt_get_advances
000000000069c300 00000000000001a4 t tt_delta_interpolate.part.0
000000000069c4b0 0000000000000ce8 t TT_Vary_Apply_Glyph_Deltas
000000000069d1a0 0000000000000188 t iup_worker_interpolate_.part.0
000000000069d330 0000000000000080 t Modify_CVT_Check.part.0
000000000069d3b0 000000000000005c t Write_CVT
000000000069d410 000000000000007c t Move_CVT_Stretched
000000000069d490 0000000000000070 t Write_CVT_Stretched
000000000069d500 0000000000000084 t tt_get_interface
000000000069d590 00000000000000b8 t tt_property_set
000000000069d650 00000000000001a4 t Ins_DELTAP.constprop.0
000000000069d800 00000000000003c4 t Ins_IP.constprop.0
000000000069dbd0 00000000000002b0 t Ins_ISECT.constprop.0
000000000069de80 0000000000000278 t Ins_MIRP.constprop.0
000000000069e100 000000000000012c t Compute_Point_Displacement.constprop.0
000000000069e230 0000000000000084 t Ins_JMPR.constprop.0
000000000069e2c0 00000000000000fc t SetSuperRound.constprop.0
000000000069e3c0 0000000000000154 t tt_size_reset
000000000069e520 0000000000000064 t tt_size_select
000000000069e590 0000000000000128 t tt_size_request
000000000069e6c0 000000000000006c t Move_CVT
000000000069e730 00000000000009b0 t tt_set_mm_blend
000000000069f0e0 0000000000000008 t TT_Set_MM_Blend
000000000069f0f0 0000000000000114 t TT_Get_Var_Design
000000000069f210 0000000000000264 t TT_Set_Var_Design
000000000069f480 0000000000000120 t TT_Set_Named_Instance
000000000069f5a0 0000000000000114 t TT_Get_MM_Blend
000000000069f6c0 0000000000001024 t load_truetype_glyph
00000000006a06f0 000000000000030c t Ins_IUP.constprop.0
00000000006a0a00 00000000000000f4 t Ins_SxVTL.constprop.0
00000000006a0b00 0000000000000218 t tt_done_blend
00000000006a0d20 00000000000000d4 t tt_face_done
00000000006a0e00 0000000000000094 t Current_Ppem_Stretched
00000000006a0ea0 0000000000000098 t Read_CVT_Stretched
00000000006a0f40 000000000000010c t Ins_UNKNOWN.constprop.0
00000000006a1050 0000000000002b00 T TT_RunIns
00000000006a3b50 000000000000009c T TT_New_Context
00000000006a3bf0 0000000000000f8c t TT_Load_Glyph
00000000006a4b80 00000000000000f4 t tt_glyph_load
00000000006a4c80 0000000000000020 t compare_kern_pairs
00000000006a4ca0 0000000000000008 t t1_get_ps_name
00000000006a4cb0 0000000000000024 t t1_ps_get_font_info
00000000006a4ce0 0000000000000010 t t1_ps_get_font_extra
00000000006a4cf0 0000000000000008 t t1_ps_has_glyph_names
00000000006a4d00 0000000000000044 t t1_ps_get_font_private
00000000006a4d50 0000000000000068 t T1_Get_Multi_Master
00000000006a4dc0 00000000000000c4 t T1_Set_MM_WeightVector
00000000006a4e90 00000000000000b4 t T1_Get_MM_WeightVector
00000000006a4f50 0000000000000038 t parse_buildchar
00000000006a4f90 0000000000000010 t parse_private
00000000006a4fa0 00000000000000d8 t read_binary_data
00000000006a5080 0000000000000010 t T1_GlyphSlot_Done
00000000006a5090 0000000000000074 t T1_Driver_Init
00000000006a5110 0000000000000004 t T1_Driver_Done
00000000006a5120 0000000000000060 t T1_GlyphSlot_Init
00000000006a5180 00000000000001d0 t T1_Parse_Glyph_And_Get_Char_String
00000000006a5350 0000000000000060 t T1_Parse_Glyph
00000000006a53b0 0000000000000134 t T1_Compute_Max_Advance
00000000006a54f0 0000000000000144 t T1_Get_Advances
00000000006a5640 0000000000000188 t T1_Done_Blend
00000000006a57d0 0000000000000514 t parse_encoding
00000000006a5cf0 0000000000000490 t T1_Load_Glyph
00000000006a6180 000000000000007c t t1_get_name_index
00000000006a6200 00000000000001d4 t t1_allocate_blend
00000000006a63e0 000000000000018c t parse_weight_vector
00000000006a6570 00000000000002a0 t parse_blend_design_positions
00000000006a6810 00000000000005d0 t parse_dict
00000000006a6de0 0000000000000610 t parse_charstrings
00000000006a73f0 00000000000003b8 t parse_subrs
00000000006a77b0 000000000000011c t t1_parse_font_matrix
00000000006a78d0 000000000000000c t Get_Interface
00000000006a78e0 00000000000000a8 t mm_axis_unmap
00000000006a7990 0000000000000140 t T1_Get_Track_Kerning
00000000006a7ad0 00000000000006c8 t t1_ps_get_font_value
00000000006a81a0 000000000000002c t t1_get_glyph_name
00000000006a81d0 000000000000013c t mm_weights_unmap
00000000006a8310 000000000000009c t T1_Get_MM_Blend
00000000006a83b0 00000000000000d0 t T1_Get_Var_Design
00000000006a8480 0000000000000274 t T1_Get_MM_Var
00000000006a8700 00000000000000c4 t t1_get_index
00000000006a87d0 0000000000000090 t Get_Kerning
00000000006a8860 0000000000000058 t T1_Size_Get_Globals_Funcs.isra.0
00000000006a88c0 0000000000000060 t T1_Size_Init
00000000006a8920 0000000000000050 t T1_Size_Done
00000000006a8970 0000000000000070 t T1_Size_Request
00000000006a89e0 000000000000011c t t1_set_mm_blend.isra.0
00000000006a8b00 0000000000000144 t T1_Set_MM_Design
00000000006a8c50 000000000000007c t T1_Set_Var_Design
00000000006a8cd0 0000000000000010 t T1_Reset_MM_Blend
00000000006a8ce0 0000000000000008 t T1_Set_MM_Blend
00000000006a8cf0 00000000000001b0 t T1_Face_Done
00000000006a8ea0 0000000000000410 t T1_Read_Metrics
00000000006a92b0 00000000000000d8 t check_type1_format.part.0
00000000006a9390 0000000000000b34 t T1_Open_Face
00000000006a9ed0 0000000000000410 t T1_Face_Init
00000000006aa2e0 0000000000000184 t parse_blend_axis_types
00000000006aa470 0000000000000270 t parse_blend_design_map
00000000006aa6e0 0000000000000008 t t42_get_ps_font_name
00000000006aa6f0 0000000000000024 t t42_ps_get_font_info
00000000006aa720 0000000000000010 t t42_ps_get_font_extra
00000000006aa730 0000000000000008 t t42_ps_has_glyph_names
00000000006aa740 0000000000000004 t T42_Driver_Done
00000000006aa750 000000000000006c t T42_Size_Select
00000000006aa7c0 0000000000000064 t T42_Size_Request
00000000006aa830 0000000000000138 t T42_GlyphSlot_Load
00000000006aa970 000000000000000c t T42_GlyphSlot_Done
00000000006aa980 0000000000000098 t T42_GlyphSlot_Init
00000000006aaa20 0000000000000044 t T42_Size_Init
00000000006aaa70 0000000000000134 t T42_Face_Done
00000000006aabb0 000000000000004c t T42_Driver_Init
00000000006aac00 0000000000000554 t t42_parse_charstrings
00000000006ab160 00000000000000ac t t42_get_name_index
00000000006ab210 00000000000005bc t t42_parse_sfnts
00000000006ab7d0 000000000000010c t t42_parse_font_matrix
00000000006ab8e0 000000000000000c t T42_Get_Interface
00000000006ab8f0 000000000000002c t t42_get_glyph_name
00000000006ab920 0000000000000040 t T42_Size_Done
00000000006ab960 0000000000000a10 t T42_Face_Init
00000000006ac370 00000000000004d0 t t42_parse_encoding
00000000006ac840 0000000000000028 t fnt_cmap_init
00000000006ac870 0000000000000014 t fnt_cmap_char_index
00000000006ac890 0000000000000050 t fnt_cmap_char_next
00000000006ac8e0 000000000000005c t winfnt_get_header
00000000006ac940 000000000000005c t FNT_Size_Select
00000000006ac9a0 0000000000000220 t FNT_Load_Glyph
00000000006acbc0 0000000000000064 t fnt_font_done
00000000006acc30 00000000000000c8 t fnt_font_load
00000000006acd00 000000000000000c t winfnt_get_service
00000000006acd10 0000000000000adc t FNT_Face_Init
00000000006ad7f0 0000000000000040 t FNT_Face_Done
00000000006ad830 00000000000000ec t FNT_Size_Request
00000000006ad920 000000000000002c t ft_ansi_stream_close
00000000006ad950 00000000000000c0 t ft_ansi_stream_io
00000000006ada10 0000000000000008 t ft_alloc
00000000006ada20 0000000000000008 t ft_free
00000000006ada30 000000000000000c t ft_realloc
00000000006ada40 00000000000000c8 t FT_Stream_Open
00000000006adb10 000000000000003c t FT_New_Memory
00000000006adb50 0000000000000004 t FT_Done_Memory
00000000006adb60 0000000000000004 t FT_Trace_Disable
00000000006adb70 0000000000000004 t FT_Trace_Enable
00000000006adb80 000000000000001c t af_cjk_get_standard_widths
00000000006adba0 0000000000000088 t af_cjk_hints_init
00000000006adc30 0000000000000074 t af_cjk_snap_width
00000000006adc30 0000000000000074 t af_latin_snap_width
00000000006adcb0 0000000000000028 t af_dummy_hints_init
00000000006adce0 00000000000002f0 t af_sort_and_quantize_widths
00000000006adfd0 000000000000001c t af_latin_get_standard_widths
00000000006adff0 00000000000001a8 t af_latin_hints_link_segments
00000000006ae1a0 0000000000000084 t af_latin_hints_init
00000000006ae230 0000000000000044 t af_autofitter_init
00000000006ae280 0000000000000004 t af_autofitter_done
00000000006ae290 0000000000000174 t af_cjk_hints_compute_blue_edges
00000000006ae410 0000000000000768 t af_glyph_hints_reload
00000000006aeb80 00000000000007f4 t af_latin_hints_compute_segments
00000000006af380 00000000000001ec t af_axis_hints_new_edge
00000000006af570 0000000000000320 t af_glyph_hints_align_strong_points
00000000006af890 0000000000000178 t af_cjk_metrics_scale_dim
00000000006afa10 0000000000000038 t af_cjk_metrics_scale
00000000006afa50 0000000000000428 t af_latin_hints_compute_edges
00000000006afe80 0000000000000390 t af_latin_metrics_scale_dim
00000000006b0210 0000000000000044 t af_latin_metrics_scale
00000000006b0260 00000000000000cc t af_glyph_hints_done
00000000006b0330 00000000000000b0 t af_face_globals_free
00000000006b03e0 00000000000000ac t hb_ft_reference_table_
00000000006b0490 000000000000000c t af_get_interface
00000000006b04a0 0000000000000700 t af_cjk_hints_detect_features
00000000006b0ba0 000000000000015c t af_iup_interp.part.0
00000000006b0d00 0000000000000298 t af_glyph_hints_align_weak_points
00000000006b0fa0 00000000000002a0 t af_loader_compute_darkening.isra.0
00000000006b1240 000000000000021c t af_latin_compute_stem_width.isra.0
00000000006b1460 0000000000000044 t af_glyph_hints_save.isra.0
00000000006b14b0 0000000000000058 t af_dummy_hints_apply
00000000006b1510 000000000000016c t af_cjk_compute_stem_width.isra.0
00000000006b1680 0000000000000260 t af_hint_normal_stem
00000000006b18e0 000000000000001c t af_indic_get_standard_widths
00000000006b1900 0000000000000038 t af_indic_metrics_scale
00000000006b1940 00000000000007e0 t af_cjk_hints_apply
00000000006b2120 0000000000000004 t af_indic_hints_apply
00000000006b2130 0000000000000b78 t af_latin_hints_apply
00000000006b2cb0 0000000000000088 t af_indic_hints_init
00000000006b2d40 0000000000000438 t af_shaper_get_coverage
00000000006b3180 0000000000000460 t af_face_globals_new
00000000006b35e0 0000000000000838 t af_autofitter_load_glyph
00000000006b3e20 00000000000002bc t af_property_set
00000000006b40e0 00000000000001b8 t af_property_get
00000000006b42a0 00000000000001e8 t af_shaper_get_cluster
00000000006b4490 0000000000000300 t af_cjk_metrics_init_widths
00000000006b4790 00000000000004b0 t af_cjk_metrics_init_blues
00000000006b4c40 0000000000000308 t af_latin_metrics_init_widths
00000000006b4f50 0000000000000b5c t af_latin_metrics_init_blues
00000000006b5ab0 0000000000000164 t af_latin_metrics_init
00000000006b5c20 0000000000000120 t af_cjk_metrics_check_digits.isra.0
00000000006b5d40 000000000000007c t af_indic_metrics_init
00000000006b5dc0 0000000000000088 t af_cjk_metrics_init
00000000006b5e50 0000000000000014 T FT_Bitmap_Init
00000000006b5e70 0000000000000014 T FT_Bitmap_New
00000000006b5e90 00000000000001bc T FT_Bitmap_Copy
00000000006b6050 0000000000000050 T FT_Bitmap_Done
00000000006b60a0 00000000000004dc T FT_Bitmap_Convert
00000000006b6580 000000000000001c t ft_bzip2_alloc
00000000006b65a0 0000000000000004 t ft_bzip2_free
00000000006b65b0 0000000000000078 t ft_bzip2_stream_close
00000000006b6630 000000000000013c t ft_bzip2_file_fill_output
00000000006b6770 0000000000000188 t ft_bzip2_stream_io
00000000006b6900 0000000000000074 t ft_bzip2_check_header
00000000006b6980 0000000000000188 T FT_Stream_OpenBzip2
00000000006b6b10 0000000000000004 t ft_gzip_free
00000000006b6b20 0000000000000130 t ft_gzip_check_header
00000000006b6c50 000000000000001c t ft_gzip_alloc
00000000006b6c70 000000000000012c t ft_gzip_file_fill_output
00000000006b6da0 0000000000000168 t ft_gzip_file_io
00000000006b6f10 0000000000000008 t ft_gzip_stream_io
00000000006b6f20 00000000000000a0 t ft_gzip_stream_close
00000000006b6fc0 00000000000002fc T FT_Stream_OpenGzip
00000000006b72c0 0000000000000104 T FT_Gzip_Uncompress
00000000006b73d0 0000000000000068 t ft_lzw_check_header
00000000006b7440 00000000000001fc t ft_lzwstate_get_code
00000000006b7640 0000000000000100 t ft_lzwstate_stack_grow
00000000006b7740 0000000000000158 T FT_Stream_OpenLZW
00000000006b78a0 0000000000000088 t ft_lzwstate_done
00000000006b7930 0000000000000054 t ft_lzw_stream_close
00000000006b7990 00000000000003ec t ft_lzwstate_io
00000000006b7d80 00000000000001d0 t ft_lzw_stream_io
00000000006b7f50 0000000000000010 t default_bzfree
00000000006b7f60 000000000000000c t default_bzalloc
00000000006b7f70 00000000000000f0 T BZ2_bzDecompressInit
00000000006b8060 0000000000000038 T BZ2_indexIntoF
00000000006b80a0 0000000000000e6c T BZ2_bzDecompress
00000000006b8f10 0000000000000088 T BZ2_bzDecompressEnd
00000000006b8fa0 000000000000000c T BZ2_bzlibVersion
00000000006b8fb0 0000000000000064 T BZ2_bz__AssertH__fail
00000000006b9020 0000000000002a3c T BZ2_decompress
00000000006bba60 0000000000000158 T BZ2_hbCreateDecodeTables
00000000006bbbc0 0000000000000050 t png_fp_sub
00000000006bbc10 0000000000000010 T png_zalloc
00000000006bbc20 0000000000000004 T png_zfree
00000000006bbc30 0000000000000218 t png_icc_profile_error.isra.0
00000000006bbe50 0000000000000050 T png_sig_cmp
00000000006bbea0 0000000000000030 T png_reset_crc
00000000006bbed0 00000000000000ac T png_calculate_crc
00000000006bbf80 0000000000000108 T png_user_version_check
00000000006bc090 000000000000012c T png_create_png_struct
00000000006bc1c0 0000000000000048 T png_create_info_struct
00000000006bc210 0000000000000490 T png_free_data
00000000006bc6a0 0000000000000064 T png_destroy_info_struct
00000000006bc710 000000000000000c T png_get_io_ptr
00000000006bc720 0000000000000004 T png_save_int_32
00000000006bc730 0000000000000058 T png_handle_as_unknown
00000000006bc790 0000000000000024 T png_chunk_unknown_handling
00000000006bc7c0 0000000000000100 T png_zstream_error
00000000006bc8c0 0000000000000060 T png_icc_check_length
00000000006bc920 0000000000000398 T png_icc_check_header
00000000006bccc0 00000000000000f0 T png_icc_check_tag_table
00000000006bcdb0 00000000000002dc T png_check_IHDR
00000000006bd090 00000000000001a0 T png_check_fp_number
00000000006bd230 0000000000000060 T png_check_fp_string
00000000006bd290 0000000000000088 T png_muldiv
00000000006bd320 0000000000000058 T png_reciprocal
00000000006bd380 0000000000000420 T png_XYZ_from_xy
00000000006bd7a0 00000000000001c0 T png_set_rgb_coefficients
00000000006bd960 0000000000000018 T png_gamma_significant
00000000006bd980 00000000000001b8 t png_build_16bit_table
00000000006bdb40 000000000000006c T png_reciprocal2
00000000006bdbb0 0000000000000060 T png_gamma_8bit_correct
00000000006bdc10 00000000000000b8 t png_build_8bit_table
00000000006bdcd0 0000000000000064 T png_gamma_16bit_correct
00000000006bdd40 0000000000000038 T png_gamma_correct
00000000006bdd80 0000000000000158 T png_destroy_gamma_table
00000000006bdee0 0000000000000384 T png_build_gamma_table
00000000006be270 00000000000000d4 t png_format_buffer.isra.0
00000000006be350 0000000000000050 T png_safecat
00000000006be3a0 0000000000000174 T png_format_number
00000000006be520 0000000000000084 T png_warning
00000000006be5b0 0000000000000028 T png_warning_parameter
00000000006be5e0 000000000000009c T png_warning_parameter_signed
00000000006be680 0000000000000104 T png_formatted_warning
00000000006be790 0000000000000034 T png_chunk_warning
00000000006be7d0 000000000000007c T png_free_jmpbuf
00000000006be850 0000000000000024 T png_longjmp
00000000006be880 0000000000000064 T png_error
00000000006be8f0 0000000000000018 T png_app_warning
00000000006be910 0000000000000018 T png_app_error
00000000006be930 0000000000000028 T png_chunk_error
00000000006be960 0000000000000018 T png_chunk_benign_error
00000000006be980 0000000000000028 T png_chunk_report
00000000006be9b0 0000000000000058 T png_benign_error
00000000006bea10 00000000000000c0 T png_set_longjmp_fn
00000000006bead0 0000000000000010 T png_set_error_fn
00000000006beae0 000000000000000c T png_get_error_ptr
00000000006beaf0 0000000000000038 T png_get_valid
00000000006beb30 000000000000001c T png_get_channels
00000000006beb50 0000000000000090 T png_get_IHDR
00000000006bebe0 0000000000000040 T png_get_PLTE
00000000006bec20 0000000000000078 T png_get_tRNS
00000000006beca0 0000000000000020 T png_malloc_base
00000000006becc0 000000000000003c T png_malloc_array
00000000006bed00 00000000000000f4 T png_realloc_array
00000000006bee00 0000000000000040 T png_malloc
00000000006bee40 0000000000000038 T png_calloc
00000000006bee80 0000000000000050 T png_malloc_warn
00000000006beed0 0000000000000018 T png_free_default
00000000006beef0 0000000000000024 T png_free
00000000006bef20 0000000000000064 T png_destroy_png_struct
00000000006bef90 0000000000000014 T png_set_mem_fn
00000000006befb0 0000000000000050 T png_create_read_struct_2
00000000006bf000 0000000000000010 T png_create_read_struct
00000000006bf010 00000000000001bc T png_read_info
00000000006bf1d0 0000000000000048 T png_read_update_info
00000000006bf220 0000000000000020 T png_start_read_image
00000000006bf240 0000000000000428 T png_read_row
00000000006bf670 00000000000000e0 T png_read_image
00000000006bf750 0000000000000208 T png_read_end
00000000006bf960 000000000000015c T png_destroy_read_struct
00000000006bfac0 000000000000004c T png_default_read_data
00000000006bfb10 0000000000000024 T png_read_data
00000000006bfb40 0000000000000058 T png_set_read_fn
00000000006bfba0 00000000000001d8 t png_do_gray_to_rgb
00000000006bfd80 0000000000000558 t png_do_expand
00000000006c02e0 0000000000000034 T png_set_strip_16
00000000006c0320 0000000000000038 T png_set_expand
00000000006c0360 0000000000000038 T png_set_palette_to_rgb
00000000006c03a0 0000000000000034 T png_set_expand_gray_1_2_4_to_8
00000000006c03e0 0000000000000038 T png_set_tRNS_to_alpha
00000000006c0420 000000000000004c T png_set_gray_to_rgb
00000000006c0470 0000000000000014 T png_set_read_user_transform_fn
00000000006c0490 0000000000000030 T png_resolve_file_gamma
00000000006c04c0 0000000000000d80 T png_init_read_transformations
00000000006c1240 00000000000002bc T png_read_transform_info
00000000006c1500 0000000000002b44 T png_do_read_transformations
00000000006c4050 0000000000000044 t png_read_filter_row_sub
00000000006c40a0 0000000000000030 t png_read_filter_row_up
00000000006c40d0 0000000000000078 t png_read_filter_row_avg
00000000006c4150 00000000000000a0 t png_read_filter_row_paeth_1byte_pixel
00000000006c41f0 00000000000000b8 t png_read_filter_row_paeth_multibyte_pixel
00000000006c42b0 00000000000000a8 t png_read_buffer
00000000006c4360 00000000000000fc t png_inflate_claim
00000000006c4460 0000000000000028 T png_get_uint_31
00000000006c4490 00000000000000d0 T png_read_sig
00000000006c4560 00000000000000e4 T png_read_chunk_header
00000000006c4650 0000000000000040 T png_crc_read
00000000006c4690 0000000000000160 t png_crc_finish_critical
00000000006c47f0 0000000000000074 t png_handle_IEND
00000000006c4870 0000000000000008 T png_crc_finish
00000000006c4880 00000000000000d4 t png_cache_unknown_chunk
00000000006c4960 0000000000000198 t png_handle_tRNS
00000000006c4b00 0000000000000088 t png_handle_tIME
00000000006c4b90 000000000000016c t png_handle_tEXt
00000000006c4d00 0000000000000094 t png_handle_sRGB
00000000006c4da0 0000000000000278 t png_handle_sPLT
00000000006c5020 00000000000001c0 t png_handle_sCAL
00000000006c51e0 0000000000000150 t png_handle_sBIT
00000000006c5330 000000000000006c t png_handle_pHYs
00000000006c53a0 0000000000000288 t png_handle_pCAL
00000000006c5630 0000000000000098 t png_handle_oFFs
00000000006c56d0 000000000000012c t png_handle_mDCV
00000000006c5800 00000000000000dc t png_handle_hIST
00000000006c58e0 0000000000000094 t png_handle_gAMA
00000000006c5980 00000000000000e0 t png_handle_eXIf
00000000006c5a60 0000000000000068 t png_handle_cLLI
00000000006c5ad0 000000000000006c t png_handle_cICP
00000000006c5b40 00000000000001a8 t png_handle_cHRM
00000000006c5cf0 00000000000001f4 t png_handle_bKGD
00000000006c5ef0 000000000000029c t png_handle_PLTE
00000000006c6190 0000000000000134 t png_handle_IHDR
00000000006c62d0 0000000000000040 T png_zlib_inflate
00000000006c6310 000000000000014c t png_inflate.constprop.0
00000000006c6460 0000000000000260 t png_decompress_chunk.constprop.0
00000000006c66c0 0000000000000304 t png_handle_iTXt
00000000006c69d0 0000000000000218 t png_handle_zTXt
00000000006c6bf0 0000000000000138 t png_inflate_read.constprop.0.isra.0
00000000006c6d30 0000000000000444 t png_handle_iCCP
00000000006c7180 00000000000001d8 T png_handle_unknown
00000000006c7360 0000000000000590 T png_handle_chunk
00000000006c78f0 0000000000000550 T png_combine_row
00000000006c7e40 0000000000000448 T png_do_read_interlace
00000000006c8290 00000000000000d4 T png_read_filter_row
00000000006c8370 0000000000000234 T png_read_IDAT_data
00000000006c85b0 00000000000000b0 T png_read_finish_IDAT
00000000006c8660 0000000000000120 T png_read_finish_row
00000000006c8780 0000000000000468 T png_read_start_row
00000000006c8bf0 0000000000000094 t check_location
00000000006c8c90 0000000000000030 T png_set_bKGD
00000000006c8cc0 0000000000000040 T png_set_cHRM_fixed
00000000006c8d00 0000000000000048 T png_set_cICP
00000000006c8d50 0000000000000038 T png_set_cLLI_fixed
00000000006c8d90 000000000000011c T png_set_mDCV_fixed
00000000006c8eb0 00000000000000cc T png_set_eXIf_1
00000000006c8f80 0000000000000020 T png_set_gAMA_fixed
00000000006c8fa0 00000000000000c4 T png_set_hIST
00000000006c9070 00000000000000fc T png_set_IHDR
00000000006c9170 0000000000000024 T png_set_oFFs
00000000006c91a0 0000000000000284 T png_set_pCAL
00000000006c9430 000000000000017c T png_set_sCAL_s
00000000006c95b0 0000000000000024 T png_set_pHYs
00000000006c95e0 000000000000015c T png_set_PLTE
00000000006c9740 0000000000000030 T png_set_sBIT
00000000006c9770 0000000000000020 T png_set_sRGB
00000000006c9790 0000000000000338 T png_set_text_2
00000000006c9ad0 0000000000000088 T png_set_tIME
00000000006c9b60 0000000000000204 T png_set_tRNS
00000000006c9d70 00000000000001c4 T png_set_sPLT
00000000006c9f40 0000000000000154 T png_set_unknown_chunks
00000000006ca0a0 000000000000007c T png_set_rows
00000000006ca120 00000000000001d8 T png_check_keyword
00000000006ca300 0000000000000014 T png_set_bgr
00000000006ca320 0000000000000024 T png_set_swap
00000000006ca350 0000000000000028 T png_set_packing
00000000006ca380 0000000000000020 T png_set_packswap
00000000006ca3a0 0000000000000028 T png_set_shift
00000000006ca3d0 0000000000000030 T png_set_interlace_handling
00000000006ca400 0000000000000088 T png_set_filler
00000000006ca490 0000000000000014 T png_set_swap_alpha
00000000006ca4b0 0000000000000014 T png_set_invert_alpha
00000000006ca4d0 0000000000000014 T png_set_invert_mono
00000000006ca4f0 00000000000000ec T png_do_invert
00000000006ca5e0 0000000000000094 T png_do_swap
00000000006ca680 0000000000000070 T png_do_packswap
00000000006ca6f0 0000000000000228 T png_do_strip_channel
00000000006ca920 0000000000000118 T png_do_bgr
00000000006caa40 000000000000018c T png_do_check_palette_indexes
00000000006cabd0 000000000000004c T png_default_write_data
00000000006cac20 0000000000000010 T png_default_flush
00000000006cac30 0000000000000024 T png_write_data
00000000006cac60 0000000000000014 T png_flush
00000000006cac80 000000000000004c T png_set_write_fn
00000000006cacd0 00000000000000e4 t write_unknown_chunks.part.0
00000000006cadc0 00000000000001e0 T png_write_info_before_PLTE
00000000006cafa0 000000000000033c T png_write_info
00000000006cb2e0 00000000000001ac T png_write_end
00000000006cb490 000000000000007c T png_create_write_struct_2
00000000006cb510 0000000000000010 T png_create_write_struct
00000000006cb520 0000000000000378 T png_write_row
00000000006cb8a0 0000000000000080 T png_write_image
00000000006cb920 0000000000000048 T png_write_flush
00000000006cb970 00000000000000b8 T png_destroy_write_struct
00000000006cba30 0000000000000154 T png_write_png
00000000006cbb90 00000000000008e8 T png_do_write_transformations
00000000006cc480 000000000000016c t png_image_size
00000000006cc5f0 0000000000000250 t png_deflate_claim
00000000006cc840 00000000000000b4 t optimize_cmf.part.0
00000000006cc900 00000000000001ec t png_text_compress.constprop.0
00000000006ccaf0 000000000000000c T png_save_uint_32
00000000006ccb00 000000000000000c T png_save_uint_16
00000000006ccb10 000000000000006c T png_write_sig
00000000006ccb80 0000000000000050 T png_write_chunk_data
00000000006ccbd0 0000000000000078 t png_write_compressed_data_out
00000000006ccc50 0000000000000040 T png_write_chunk_end
00000000006ccc90 00000000000000c8 t png_write_complete_chunk
00000000006ccd60 00000000000000cc T png_write_chunk
00000000006cce30 0000000000000040 T png_free_buffer_list
00000000006cce70 00000000000002b0 T png_write_IHDR
00000000006cd120 0000000000000178 T png_write_PLTE
00000000006cd2a0 0000000000000234 T png_compress_IDAT
00000000006cd4e0 00000000000000ac T png_write_IEND
00000000006cd590 00000000000000ac T png_write_gAMA_fixed
00000000006cd640 00000000000000c0 T png_write_sRGB
00000000006cd700 0000000000000188 T png_write_iCCP
00000000006cd890 00000000000001d4 T png_write_sPLT
00000000006cda70 00000000000000d0 T png_write_sBIT
00000000006cdb40 0000000000000108 T png_write_cHRM_fixed
00000000006cdc50 0000000000000154 T png_write_tRNS
00000000006cddb0 0000000000000160 T png_write_bKGD
00000000006cdf10 00000000000000bc T png_write_cICP
00000000006cdfd0 00000000000000bc T png_write_cLLI_fixed
00000000006ce090 000000000000013c T png_write_mDCV_fixed
00000000006ce1d0 00000000000000d0 T png_write_eXIf
00000000006ce2a0 00000000000000e8 T png_write_hIST
00000000006ce390 0000000000000170 T png_write_tEXt
00000000006ce500 000000000000015c T png_write_zTXt
00000000006ce660 0000000000000374 T png_write_iTXt
00000000006ce9e0 00000000000000e8 T png_write_oFFs
00000000006cead0 00000000000002a8 T png_write_pCAL
00000000006ced80 00000000000000c8 T png_write_sCAL_s
00000000006cee50 00000000000000e8 T png_write_pHYs
00000000006cef40 00000000000000a8 T png_write_tIME
00000000006ceff0 0000000000000188 T png_write_start_row
00000000006cf180 000000000000015c T png_write_finish_row
00000000006cf2e0 0000000000000350 T png_do_write_interlace
00000000006cf630 0000000000000908 T png_write_find_filter
00000000006cff40 0000000000000070 T png_init_filter_functions_neon
00000000006cffb0 0000000000000040 T png_read_filter_row_up_neon
00000000006cfff0 0000000000000058 T png_read_filter_row_sub3_neon
00000000006d0050 0000000000000044 T png_read_filter_row_sub4_neon
00000000006d00a0 000000000000007c T png_read_filter_row_avg3_neon
00000000006d0120 000000000000005c T png_read_filter_row_avg4_neon
00000000006d0180 0000000000000144 T png_read_filter_row_paeth3_neon
00000000006d02d0 0000000000000124 T png_read_filter_row_paeth4_neon
00000000006d0400 0000000000000054 T png_riffle_palette_neon
00000000006d0460 00000000000000dc T png_do_expand_palette_rgba8_neon
00000000006d0540 0000000000000138 T png_do_expand_palette_rgb8_neon
00000000006d0680 000000000000000c T get_crc_table
00000000006d0690 00000000000003c4 T crc32_z
00000000006d0a60 0000000000000008 T crc32
00000000006d0a70 00000000000000cc T crc32_combine64
00000000006d0b40 0000000000000004 T crc32_combine
00000000006d0b50 0000000000000090 T crc32_combine_gen64
00000000006d0be0 0000000000000004 T crc32_combine_gen
00000000006d0bf0 0000000000000044 T crc32_combine_op
00000000006d0c40 000000000000007c t slide_hash
00000000006d0cc0 00000000000001dc t longest_match
00000000006d0ea0 00000000000000c8 t read_buf
00000000006d0f70 0000000000000268 t fill_window
00000000006d11e0 00000000000000b0 t flush_pending
00000000006d1290 0000000000000570 t deflate_slow
00000000006d1800 0000000000000400 t deflate_fast
00000000006d1c00 000000000000058c t deflate_stored
00000000006d2190 000000000000007c t deflateStateCheck.part.0
00000000006d2210 000000000000008c t deflateStateCheck
00000000006d22a0 00000000000001e0 T deflateSetDictionary
00000000006d2480 00000000000000d8 T deflateGetDictionary
00000000006d2560 00000000000000f0 T deflateResetKeep
00000000006d2650 00000000000000b4 T deflateReset
00000000006d2710 0000000000000058 T deflateSetHeader
00000000006d2770 0000000000000068 T deflatePending
00000000006d27e0 00000000000000f4 T deflatePrime
00000000006d28e0 0000000000000058 T deflateTune
00000000006d2940 0000000000000158 T deflateBound
00000000006d2aa0 0000000000001184 T deflate
00000000006d3c30 0000000000000174 T deflateParams
00000000006d3db0 00000000000000a0 T deflateEnd
00000000006d3e50 00000000000002a4 T deflateInit2_
00000000006d4100 000000000000001c T deflateInit_
00000000006d4120 00000000000001cc T deflateCopy
00000000006d42f0 0000000000000114 t updatewindow
00000000006d4410 0000000000000050 t inflateStateCheck
00000000006d4460 0000000000000080 T inflateResetKeep
00000000006d44e0 0000000000000050 T inflateReset
00000000006d4530 00000000000000ac T inflateReset2
00000000006d45e0 0000000000000118 T inflateInit2_
00000000006d4700 0000000000000010 T inflateInit_
00000000006d4710 00000000000000b0 T inflatePrime
00000000006d47c0 00000000000018ec T inflate
00000000006d60b0 000000000000005c T inflateEnd
00000000006d6110 00000000000000d4 T inflateGetDictionary
00000000006d61f0 00000000000000c0 T inflateSetDictionary
00000000006d62b0 0000000000000068 T inflateGetHeader
00000000006d6320 0000000000000308 T inflateSync
00000000006d6630 0000000000000070 T inflateSyncPoint
00000000006d66a0 00000000000001e0 T inflateCopy
00000000006d6880 0000000000000060 T inflateUndermine
00000000006d68e0 000000000000007c T inflateValidate
00000000006d6960 0000000000000090 T inflateMark
00000000006d69f0 0000000000000064 T inflateCodesUsed
00000000006d6a60 000000000000047c t inflate_table
00000000006d6ee0 0000000000000078 t bi_windup
00000000006d6f60 00000000000000f4 t pqdownheap
00000000006d7060 00000000000004e8 t build_tree
00000000006d7550 00000000000001e0 t scan_tree
00000000006d7730 0000000000000668 t send_tree
00000000006d7da0 00000000000003cc t compress_block
00000000006d8170 0000000000000098 t _tr_init
00000000006d8210 0000000000000148 t _tr_stored_block
00000000006d8360 0000000000000088 t _tr_flush_bits
00000000006d83f0 0000000000000148 t _tr_align
00000000006d8540 0000000000000614 t _tr_flush_block
00000000006d8b60 00000000000000dc T _tr_tally
00000000006d8c40 000000000000000c T zlibVersion
00000000006d8c50 0000000000000008 T zlibCompileFlags
00000000006d8c60 0000000000000030 T zError
00000000006d8c90 0000000000000008 T zcalloc
00000000006d8ca0 0000000000000008 T zcfree
00000000006d8cb0 00000000000003a0 T adler32_z
00000000006d9050 0000000000000008 T adler32
00000000006d9060 00000000000000e4 T adler32_combine
00000000006d9150 00000000000000e4 T adler32_combine64
00000000006d9240 00000000000004f4 t inflate_fast
00000000006d9740 00000000000008d8 t __multf3
00000000006da020 0000000000000064 t __floatunsitf
00000000006da0a0 0000000000000134 t __extenddftf2
00000000006da1e0 0000000000000348 t __trunctfsf2
00000000006da540 0000000000000298 t init_dwarf_reg_size_table
00000000006da7e0 000000000000018c t uw_install_context_1
00000000006da980 000000000000018c t read_encoded_value
00000000006dab20 00000000000007f8 t execute_stack_op
00000000006db320 0000000000000334 t uw_update_context_1
00000000006db660 00000000000000f8 t uw_update_context
00000000006db760 0000000000000868 t execute_cfa_program_specialized
00000000006dbfe0 0000000000000898 t execute_cfa_program_generic
00000000006dc880 000000000000043c t uw_frame_state_for
00000000006dccc0 000000000000036c t uw_init_context_1
00000000006dd040 0000000000000140 t _Unwind_RaiseException_Phase2
00000000006dd180 0000000000000154 t _Unwind_ForcedUnwind_Phase2
00000000006dd2e0 0000000000000050 t _Unwind_SetGR
00000000006dd340 0000000000000014 t _Unwind_GetIPInfo
00000000006dd360 0000000000000008 t _Unwind_SetIP
00000000006dd380 0000000000000008 t _Unwind_GetLanguageSpecificData
00000000006dd3a0 0000000000000008 t _Unwind_GetRegionStart
00000000006dd3c0 0000000000000008 t _Unwind_GetDataRelBase
00000000006dd3e0 0000000000000008 t _Unwind_GetTextRelBase
00000000006dd400 0000000000000004 t _Unwind_DebugHook
00000000006dd420 00000000000001a4 t _Unwind_RaiseException
00000000006dd5e0 000000000000012c t _Unwind_Resume
00000000006dd720 000000000000001c t _Unwind_DeleteException
00000000006dd740 0000000000000018 t fde_unencoded_compare
00000000006dd760 000000000000002c t fde_unencoded_extract
00000000006dd7a0 00000000000000ec t frame_downheap
00000000006dd8a0 0000000000000138 t read_encoded_value_with_base
00000000006dd9e0 0000000000000220 t fde_radixsort
00000000006ddc00 0000000000000110 t __deregister_frame_info_bases.part.0
00000000006ddd20 0000000000000124 t get_cie_encoding
00000000006dde60 00000000000000d8 t fde_mixed_encoding_extract
00000000006ddf40 00000000000001e0 t classify_object_over_fdes.constprop.0
00000000006de120 00000000000000bc t fde_single_encoding_extract
00000000006de1e0 00000000000000a8 t fde_single_encoding_compare
00000000006de2a0 000000000000010c t fde_mixed_encoding_compare
00000000006de3c0 0000000000000234 t add_fdes.isra.0
00000000006de600 00000000000002e8 t linear_search_fdes
00000000006de900 0000000000000558 t search_object
00000000006dee60 0000000000000060 t __register_frame_info
00000000006deec0 0000000000000018 t __deregister_frame_info
00000000006deee0 00000000000001d0 t _Unwind_Find_FDE
00000000006df0b0 0000000000000030 T __arm_za_disable
00000000006df0b0 0000000000000030 t __libgcc_arm_za_disable
00000000006df0e0 0000000000000070 t __sfp_handle_exceptions
00000000006df150 00000000000000a0 T __arm_tpidr2_save
00000000006df150 00000000000000a0 t __libgcc_arm_tpidr2_save
00000000006df200 0000000000000104 T strrchr
00000000006df320 0000000000000028 T srand
00000000006df360 0000000000000038 T rand
00000000006df3a0 0000000000000024 T getenv
00000000006df3e0 000000000000002c T strndup
00000000006df440 0000000000000150 T stpcpy
00000000006df5a0 0000000000000184 T _fgets_r
00000000006df740 0000000000000034 T fgets
00000000006df780 0000000000000060 T _init_signal_r
00000000006df7e0 0000000000000074 T _signal_r
00000000006df860 000000000000009c T _raise_r
00000000006df900 000000000000001c T raise
00000000006df920 000000000000002c T signal
00000000006df960 0000000000000018 T isalpha
00000000006df980 0000000000000064 T __assert_func
00000000006dfa00 0000000000000418 T _strerror_r
00000000006dfe20 0000000000000024 T strerror
00000000006dfe60 0000000000000054 T __itoa
00000000006dfec0 0000000000000004 T itoa
00000000006dfee0 0000000000000130 T _fclose_r
00000000006e0020 000000000000001c T fclose
00000000006e0040 0000000000000104 T memset
00000000006e0160 00000000000000b8 T _fputs_r
00000000006e0220 000000000000002c T fputs
00000000006e0260 0000000000000034 T setenv
00000000006e02a0 000000000000002c T read
00000000006e02e0 0000000000000008 T _user_strerror
00000000006e0300 00000000000002c0 t _strtoll_l.isra.0
00000000006e05c0 0000000000000034 T _strtoll_r
00000000006e0600 0000000000000040 T strtoll
00000000006e0640 0000000000000080 T fprintf
00000000006e06c0 0000000000000008 T atof
00000000006e06e0 000000000000002c T stat
00000000006e0720 00000000000000b8 T __submore
00000000006e07e0 0000000000000058 t sulp
00000000006e0840 00000000000012f4 T _strtod_l
00000000006e1b40 0000000000000040 T _strtod_r
00000000006e1b80 000000000000004c T strtod
00000000006e1be0 00000000000000e8 T strtof
00000000006e1d00 0000000000000134 T strcmp
00000000006e1e40 00000000000000f4 T _fwrite_r
00000000006e1f40 0000000000000034 T fwrite
00000000006e1f80 0000000000000028 T srandom
00000000006e1fc0 0000000000000038 T random
00000000006e2000 0000000000000080 T fiprintf
00000000006e2080 00000000000000a4 T __utoa
00000000006e2140 00000000000001b4 T strncmp
00000000006e2300 000000000000007c T strcat
00000000006e2380 000000000000001c T isatty
00000000006e23c0 00000000000000dc T memchr
00000000006e24a0 0000000000000110 t rshift
00000000006e25c0 0000000000000860 T __gethex
00000000006e2e20 000000000000009c T sprintf
00000000006e2ec0 000000000000001c t stdio_exit_handler
00000000006e2ee0 000000000000006c t cleanup_stdio
00000000006e2f60 0000000000000134 t global_stdio_init.part.0
00000000006e30a0 000000000000000c T __sfp_lock_acquire
00000000006e30c0 000000000000000c T __sfp_lock_release
00000000006e30e0 0000000000000138 T __sfp
00000000006e3220 0000000000000054 T __sinit
00000000006e3280 00000000000001a4 t _strtoul_l.isra.0
00000000006e3440 0000000000000034 T _strtoul_r
00000000006e3480 0000000000000040 T strtoul
00000000006e34c0 00000000000000a4 T __libc_init_array
00000000006e3580 00000000000004c0 T _fseeko_r
00000000006e3a40 0000000000000034 T fseeko
00000000006e3a80 0000000000000088 T strncat
00000000006e3b20 0000000000000098 T _fwalk_sglue
00000000006e3bc0 00000000000000b4 T bsearch
00000000006e3c80 0000000000000014 T __errno
00000000006e3ca0 00000000000000b4 T fileno
00000000006e3d60 000000000000002c T calloc
00000000006e3da0 00000000000000a4 T _vsnprintf_r
00000000006e3e60 0000000000000048 T vsnprintf
00000000006e3ec0 00000000000000cc T strchr
00000000006e3fa0 000000000000002c T aligned_alloc
00000000006e3fe0 000000000000094c T qsort
00000000006e3fe0 000000000000094c t qsort.localalias
00000000006e4940 0000000000000064 T _vasprintf_r
00000000006e49c0 0000000000000044 T vasprintf
00000000006e4a20 0000000000000098 T clearerr
00000000006e4ac0 0000000000000018 T abort
00000000006e4ae0 00000000000000d4 T _puts_r
00000000006e4bc0 000000000000001c T puts
00000000006e4be0 0000000000000004 T call_once
00000000006e4c00 0000000000000004 T mtx_destroy
00000000006e4c20 000000000000002c T mtx_init
00000000006e4c60 000000000000005c T mtx_lock
00000000006e4cc0 000000000000005c T mtx_unlock
00000000006e4d20 000000000000008c T open
00000000006e4dc0 000000000000022c T memcpy
00000000006e4dc0 T memmove
00000000006e4fec 0000000000000790 t get_arg
00000000006e577c 0000000000003bd4 T _vfprintf_r
00000000006e9350 0000000000000044 T vfprintf
00000000006e9394 00000000000000d0 t __sbprintf
00000000006e9480 00000000000000bc T _calloc_r
00000000006e9540 00000000000000cc T getc
00000000006e9620 000000000000002c T realloc
00000000006e9660 0000000000000038 T strlcpy
00000000006e96a0 000000000000001c T strdup
00000000006e96c0 0000000000000004 T _fseek_r
00000000006e96e0 0000000000000034 T fseek
00000000006e9720 000000000000002c T memalign
00000000006e9760 000000000000008c T feof
00000000006e9800 000000000000000c T _Exit
00000000006e9820 0000000000000020 T putchar
00000000006e9840 0000000000000840 T _malloc_r
00000000006ea080 0000000000000074 T strcasecmp
00000000006ea100 00000000000001a4 t quorem
00000000006ea2c0 0000000000001320 T _dtoa_r
00000000006eb5e0 00000000000000d0 T _wcrtomb_r
00000000006eb6c0 000000000000002c T gettimeofday
00000000006eb700 0000000000000078 T _strndup_r
00000000006eb780 000000000000011c T _malloc_trim_r
00000000006eb8a0 00000000000002d8 T _free_r
00000000006ebb80 00000000000000f8 T snprintf
00000000006ebc80 0000000000000034 T strtok
00000000006ebcb4 0000000000000790 t get_arg
00000000006ec444 0000000000003a84 T _svfprintf_r
00000000006efee0 0000000000000080 T printf
00000000006eff60 00000000000000b8 T __sflags
00000000006f0020 000000000000001c T atoi
00000000006f0040 00000000000002c0 t _strtol_l.part.0
00000000006f0300 0000000000000070 T _strtol_r
00000000006f0380 0000000000000078 T strtol
00000000006f0400 000000000000012c T strcpy
00000000006f0540 0000000000000040 T __memcpy_chk
00000000006f0580 0000000000000018 T isspace
00000000006f05a0 0000000000000038 T malloc
00000000006f05e0 000000000000001c T free
00000000006f05fc 0000000000000038 T setjmp
00000000006f0634 000000000000003c T longjmp
00000000006f0680 00000000000001ec T __sflush_r
00000000006f0880 00000000000000bc T _fflush_r
00000000006f0940 000000000000003c T fflush
00000000006f0980 0000000000000048 T time
00000000006f09e0 0000000000000094 T strlcat
00000000006f0a80 0000000000000020 T isblank
00000000006f0aa0 00000000000000b0 T asprintf
00000000006f0b60 0000000000000038 t lflush
00000000006f0ba0 0000000000000190 T __srefill_r
00000000006f0d40 00000000000000b0 T __swhatbuf_r
00000000006f0e00 00000000000000e8 T __smakebuf_r
00000000006f0f00 0000000000000034 T lseek
00000000006f0f40 0000000000000028 T gmtime
00000000006f0f80 0000000000000130 T strlen
00000000006f10c0 00000000000000f4 T _findenv_r
00000000006f11c0 0000000000000134 t critical_factorization
00000000006f1300 00000000000002f0 t two_way_long_needle
00000000006f1600 0000000000000258 T strstr
00000000006f1860 0000000000000080 T _vsscanf_r
00000000006f18e0 0000000000000044 T vsscanf
00000000006f1940 0000000000000568 T _realloc_r
00000000006f1ec0 0000000000000020 T islower
00000000006f1ee0 0000000000000084 T strncasecmp
00000000006f1f80 0000000000000054 T _strdup_r
00000000006f1fe0 0000000000000330 T _fread_r
00000000006f2320 0000000000000034 T fread
00000000006f2380 00000000000000b8 T strnlen
00000000006f2440 000000000000000c T __malloc_lock
00000000006f2460 000000000000000c T __malloc_unlock
00000000006f2480 0000000000000168 T _ftello_r
00000000006f2600 000000000000001c T ftello
00000000006f2620 000000000000015c T _fdopen_r
00000000006f2780 000000000000002c T fdopen
00000000006f27c0 00000000000000a8 T fputc
00000000006f2880 0000000000000258 T _setenv_r
00000000006f2b00 00000000000001c8 T memcmp
00000000006f2ce0 00000000000000a8 T __strtok_r
00000000006f2da0 0000000000000008 T strtok_r
00000000006f2da8 0000000000000074 t get_arg
00000000006f2e1c 0000000000003260 T __ssvfscanf_r
00000000006f6080 0000000000000120 T _fopen_r
00000000006f61a0 000000000000002c T fopen
00000000006f61e0 0000000000000014 T atexit
00000000006f6200 000000000000001c T close
00000000006f6220 0000000000000020 T isupper
00000000006f6240 0000000000000070 T __srget_r
00000000006f62c0 00000000000000ac T strncpy
00000000006f6380 0000000000000004 T _ftell_r
00000000006f63a0 000000000000001c T ftell
00000000006f63c0 0000000000000024 T toupper
00000000006f6400 00000000000001a4 t _strtoull_l.isra.0
00000000006f65c0 0000000000000034 T _strtoull_r
00000000006f6600 0000000000000040 T strtoull
00000000006f6640 0000000000000010 T _wcsrtombs_r
00000000006f6660 0000000000000048 T __match
00000000006f66c0 000000000000025c T __hexnan
00000000006f6920 00000000000000b0 T sscanf
00000000006f69e0 000000000000008c T ferror
00000000006f6a80 000000000000002c T write
00000000006f6ac0 00000000000000d8 T _mbrtowc_r
00000000006f6ba0 000000000000012c T __swsetup_r
00000000006f6ce0 00000000000004a4 T __sfvwrite_r
00000000006f71a0 000000000000004c T __sread
00000000006f7200 0000000000000008 T __seofread
00000000006f7220 0000000000000070 T __swrite
00000000006f72a0 0000000000000050 T __sseek
00000000006f7300 0000000000000008 T __sclose
00000000006f7320 000000000000000c T __env_lock
00000000006f7340 000000000000000c T __env_unlock
00000000006f7360 00000000000000a4 T _Balloc
00000000006f7420 0000000000000020 T _Bfree
00000000006f7440 0000000000000118 T __multadd
00000000006f7560 0000000000000144 T __s2b
00000000006f76c0 0000000000000094 T __hi0bits
00000000006f7760 0000000000000100 T __lo0bits
00000000006f7860 000000000000004c T __i2b
00000000006f78c0 0000000000000210 T __multiply
00000000006f7ae0 0000000000000104 T __pow5mult
00000000006f7c00 0000000000000174 T __lshift
00000000006f7d80 0000000000000050 T __mcmp
00000000006f7de0 00000000000001c4 T __mdiff
00000000006f7fc0 0000000000000084 T __ulp
00000000006f8060 0000000000000168 T __b2d
00000000006f81e0 000000000000014c T __d2b
00000000006f8340 00000000000000b0 T __ratio
00000000006f8400 0000000000000074 T __copybits
00000000006f8480 0000000000000068 T __any_on
00000000006f8500 000000000000002c T __locale_mb_cur_max
00000000006f8540 00000000000000c8 T __ssprint_r
00000000006f8620 000000000000004c T __chk_fail
00000000006f8680 00000000000002a0 T gmtime_r
00000000006f8920 0000000000000790 t get_arg
00000000006f90b0 0000000000002964 T _vfiprintf_r
00000000006fba14 00000000000000d0 t __sbprintf
00000000006fbb00 000000000000018c T _memalign_r
00000000006fbca0 0000000000000188 T _wcsnrtombs_l
00000000006fbe40 0000000000000054 T _wcsnrtombs_r
00000000006fbe94 00000000000000f0 T _sungetc_r
00000000006fbf84 0000000000000070 T __ssrefill_r
00000000006fbff4 00000000000000dc T _sfread_r
00000000006fc0e0 00000000000000e4 T _putc_r
00000000006fc1e0 00000000000002dc T __utf8_mbtowc
00000000006fc4c0 0000000000000038 T __sprint_r
00000000006fc500 0000000000000008 T iswspace
00000000006fc520 0000000000000008 T __localeconv_l
00000000006fc540 0000000000000028 T _localeconv_r
00000000006fc580 00000000000000d0 T __sccl
00000000006fc660 00000000000000dc T __register_exitproc
00000000006fc740 00000000000000ac T stpncpy
00000000006fc800 0000000000000188 T __ssputs_r
00000000006fc9a0 00000000000000e0 T __utf8_wctomb
00000000006fca80 0000000000000048 T iswspace_l
00000000006fcae0 0000000000000118 T __swbuf_r
00000000006fcc00 0000000000000148 T __call_exitprocs
00000000006fcd60 0000000000000084 T category
00000000006fce00 0000000000000020 T _exit
00000000006fce20 000000000000016c T chdir
00000000006fcfa0 0000000000000030 T clock_gettime
00000000006fcfe0 0000000000000218 T _concatenate_path
00000000006fd200 000000000000009c T _fstat_r
00000000006fd2a0 0000000000000010 T _getpid_r
00000000006fd2c0 0000000000000020 T __getreent
00000000006fd2e0 0000000000000024 T _gettimeofday_r
00000000006fd320 00000000000000a0 T __release_handle
00000000006fd3c0 0000000000000130 T __alloc_handle
00000000006fd500 0000000000000060 T __get_handle
00000000006fd560 00000000000000f4 T _close_r
00000000006fd660 0000000000000008 t null_write
00000000006fd680 0000000000000018 T setDefaultDevice
00000000006fd6a0 0000000000000110 T FindDevice
00000000006fd7c0 0000000000000034 T RemoveDevice
00000000006fd800 00000000000000c4 T AddDevice
00000000006fd8e0 0000000000000034 T GetDeviceOpTab
00000000006fd920 0000000000000008 T _isatty_r
00000000006fd940 0000000000000010 T _kill_r
00000000006fd960 00000000000000a0 T _lseek_r
00000000006fda00 0000000000000018 T pthread_mutexattr_init
00000000006fda20 0000000000000018 T pthread_mutexattr_settype
00000000006fda40 00000000000000bc T pthread_mutex_init
00000000006fdb00 0000000000000010 T pthread_mutex_destroy
00000000006fdb20 000000000000006c T pthread_mutex_lock
00000000006fdba0 000000000000006c T pthread_mutex_unlock
00000000006fdc20 000000000000001c T pthread_condattr_init
00000000006fdc40 0000000000000068 T pthread_cond_init
00000000006fdcc0 0000000000000010 T pthread_cond_destroy
00000000006fdce0 0000000000000014 T pthread_cond_signal
00000000006fdd00 0000000000000014 T pthread_cond_broadcast
00000000006fdd20 0000000000000054 T pthread_cond_wait
00000000006fdd80 000000000000001c T pthread_attr_init
00000000006fdda0 0000000000000020 T pthread_attr_setstacksize
00000000006fddc0 0000000000000018 T pthread_attr_setdetachstate
00000000006fdde0 000000000000007c T pthread_create
00000000006fde60 000000000000003c T pthread_join
00000000006fdea0 0000000000000014 T pthread_self
00000000006fdec0 00000000000000d4 T pthread_once
00000000006fdfa0 0000000000000024 T pthread_key_create
00000000006fdfe0 0000000000000018 T pthread_setspecific
00000000006fe000 0000000000000018 T pthread_getspecific
00000000006fe020 0000000000000018 T pthread_key_delete
00000000006fe040 0000000000000008 T pthread_setcanceltype
00000000006fe060 000000000000002c T sem_destroy
00000000006fe0a0 0000000000000054 T sem_init
00000000006fe100 0000000000000060 T sem_post
00000000006fe160 00000000000000b0 T sem_timedwait
00000000006fe220 0000000000000078 T sem_trywait
00000000006fe2a0 00000000000000a0 T sem_wait
00000000006fe340 00000000000000f0 T _open_r
00000000006fe440 00000000000000b0 T _read_r
00000000006fe500 0000000000000078 W _sbrk_r
00000000006fe580 000000000000008c T _stat_r
00000000006fe620 0000000000000014 T timespec2nsec
00000000006fe640 00000000000000c8 T abstimespec2nsec
00000000006fe720 0000000000000014 T __libc_lock_acquire
00000000006fe740 0000000000000014 T __libc_lock_release
00000000006fe760 0000000000000014 T __libc_lock_acquire_recursive
00000000006fe780 0000000000000014 T __libc_lock_release_recursive
00000000006fe7a0 0000000000000018 T __libc_cond_signal
00000000006fe7c0 0000000000000018 T __libc_cond_broadcast
00000000006fe7e0 0000000000000018 T __libc_cond_wait
00000000006fe800 0000000000000018 T __libc_cond_wait_recursive
00000000006fe820 00000000000000b0 T _write_r
00000000006fe8e0 0000000000000380 t __trunctfdf2
00000000006fec60 T _init
00000000006fec98 T _fini
0000000000753110 0000000000000400 R bend_coarse
0000000000753510 0000000000000800 R bend_fine
0000000000753d10 0000000000000200 R freq_table
0000000000753f10 0000000000000400 R vol_table
0000000000754718 0000000000000800 r vwin1024
0000000000754f18 0000000000000100 r vwin128
0000000000755018 0000000000001000 r vwin2048
0000000000756018 0000000000000200 r vwin256
0000000000756218 0000000000002000 r vwin4096
0000000000758218 0000000000000400 r vwin512
0000000000758618 0000000000000080 r vwin64
0000000000758698 0000000000004000 r vwin8192
000000000075c698 0000000000000400 r FLOOR_fromdB_LOOKUP
000000000075ca98 0000000000000010 r ADJUST_SQRT2
000000000075caa8 0000000000000204 r COS_LOOKUP_I
000000000075ccb0 0000000000000080 r FROMdB2_LOOKUP
000000000075cd30 000000000000008c r FROMdB_LOOKUP
000000000075cdc0 0000000000000208 r INVSQ_LOOKUP_I
000000000075cfc8 0000000000000200 r INVSQ_LOOKUP_IDel
000000000075d1c8 0000000000000040 r MLOOP_1
000000000075d208 0000000000000040 r MLOOP_2
000000000075d248 0000000000000008 r MLOOP_3
000000000075d250 0000000000000070 r barklook
000000000075d2c0 0000000000000010 r bitrev
000000000075d2d0 0000000000001008 r sincos_lookup0
000000000075e2d8 0000000000001000 r sincos_lookup1
000000000075f2d8 0000000000000040 r PreAmpTable
000000000075f318 0000000000000080 r ModSinusTable
000000000075f398 0000000000000080 r ModRandomTable
000000000075f418 0000000000000080 r ModSquareTable
000000000075f498 0000000000000040 r PreAmpAGCTable
000000000075f4d8 0000000000000100 r ft2VibratoTable
000000000075f5d8 0000000000000080 r ModRampDownTable
000000000075f658 0000000000000400 r LinearSlideUpTable
000000000075fa58 0000000000000400 r LinearSlideDownTable
000000000075fe58 0000000000000040 r FineLinearSlideUpTable
000000000075fe98 0000000000000040 r FineLinearSlideDownTable
000000000075ff18 0000000000000020 r FreqS3MTable
000000000075ff38 0000000000000010 r retrigTable1
000000000075ff48 0000000000000010 r retrigTable2
000000000075ff58 0000000000000c00 r XMLinearTable
0000000000760b58 00000000000000d0 r XMPeriodTable
0000000000760c28 0000000000000020 r S3MFineTuneTable
0000000000760c48 0000000000000400 r LinearSlideUpTable
0000000000761048 0000000000000400 r LinearSlideDownTable
0000000000761448 0000000000000090 r ProTrackerPeriodTable
00000000007614d8 0000000000000040 r FineLinearSlideUpTable
0000000000761518 0000000000000180 r ProTrackerTunedPeriods
0000000000761698 0000000000000040 r FineLinearSlideDownTable
00000000007616d8 0000000000000010 r ImpulseTrackerPortaVolCmd
00000000007616f0 0000000000000020 r MMCMP8BitFetch
0000000000761710 0000000000000040 r MMCMP16BitFetch
0000000000761750 0000000000000020 r MMCMP8BitCommands
0000000000761770 0000000000000040 r MMCMP16BitCommands
0000000000761820 000000000000003c r CSWTCH.23
0000000000761860 000000000000003c r CSWTCH.24
00000000007618a0 000000000000000a r bpmvals
0000000000761918 0000000000000010 r abc_setup_chordnames()::list_7sus4
0000000000761928 0000000000000010 r abc_setup_chordnames()::list_7sus9
0000000000761938 0000000000000014 r abc_setup_chordnames()::list_9sus4
0000000000761950 0000000000000008 r abc_setup_chordnames()::list_5
0000000000761958 0000000000000010 r abc_setup_chordnames()::list_6
0000000000761968 0000000000000010 r abc_setup_chordnames()::list_7
0000000000761978 0000000000000014 r abc_setup_chordnames()::list_9
0000000000761990 000000000000000c r abc_setup_chordnames()::list_m
00000000007619a0 0000000000000018 r abc_setup_chordnames()::list_11
00000000007619b8 0000000000000018 r abc_setup_chordnames()::list_13
00000000007619d0 0000000000000010 r abc_setup_chordnames()::list_M7
00000000007619e0 0000000000000014 r abc_setup_chordnames()::list_M9
00000000007619f8 0000000000000010 r abc_setup_chordnames()::list_m6
0000000000761a08 0000000000000010 r abc_setup_chordnames()::list_m7
0000000000761a18 0000000000000014 r abc_setup_chordnames()::list_m9
0000000000761a30 000000000000000c r abc_setup_chordnames()::list_Maj
0000000000761a40 000000000000000c r abc_setup_chordnames()::list_aug
0000000000761a50 000000000000000c r abc_setup_chordnames()::list_dim
0000000000761a60 000000000000000c r abc_setup_chordnames()::list_sus
0000000000761a70 0000000000000010 r abc_setup_chordnames()::list_7sus
0000000000761a80 0000000000000010 r abc_setup_chordnames()::list_aug7
0000000000761a90 0000000000000010 r abc_setup_chordnames()::list_dim7
0000000000761aa0 0000000000000014 r abc_setup_chordnames()::list_dim9
0000000000761ab8 0000000000000010 r abc_setup_chordnames()::list_maj7
0000000000761ac8 0000000000000014 r abc_setup_chordnames()::list_maj9
0000000000761ae0 000000000000000c r abc_setup_chordnames()::list_plus
0000000000761af0 000000000000000c r abc_setup_chordnames()::list_sus9
0000000000762f00 0000000000000027 r CSWTCH.60
0000000000762f28 0000000000000041 r tune
0000000000762f70 0000000000000010 r __func__.0
0000000000762f80 0000000000000010 r __func__.1
0000000000762f90 000000000000001b r __func__.2
0000000000762fb0 0000000000000030 r my_encodings
0000000000762fe0 0000000000000048 r my_rates
0000000000763028 0000000000000015 r __func__.0
0000000000763040 000000000000001b r __func__.0
0000000000763060 0000000000000008 r __func__.1
0000000000763068 000000000000000d r __func__.2
0000000000763078 000000000000000e r __func__.3
0000000000763088 0000000000000008 r __func__.4
0000000000763090 000000000000001b r __func__.5
00000000007630b0 000000000000000e r __func__.6
00000000007630c0 000000000000000a r __func__.7
00000000007630d0 0000000000000048 r freqs
0000000000763120 0000000000000180 r tabsel_123
00000000007632a0 000000000000000e r __func__.0
00000000007632b0 000000000000001c r __func__.1
00000000007632d0 0000000000000014 r __func__.2
00000000007632e8 000000000000001f r __func__.3
0000000000763308 0000000000000012 r __func__.4
0000000000763320 0000000000000016 r __func__.5
0000000000763338 0000000000000019 r __func__.6
0000000000763358 0000000000000017 r __func__.7
0000000000763370 0000000000000010 r __func__.0
0000000000763380 000000000000000d r __func__.1
0000000000763390 000000000000000e r __func__.2
00000000007633a0 000000000000000f r __func__.3
00000000007633b0 0000000000000010 r __func__.4
00000000007633c0 0000000000000015 r __func__.5
00000000007633d8 000000000000000c r __func__.6
00000000007633e8 0000000000000011 r __func__.7
0000000000763400 0000000000000013 r __func__.8
0000000000763420 0000000000000010 r encoding_widths
0000000000763430 0000000000000019 r frame_type
0000000000763450 0000000000000015 r __func__.0
0000000000763468 000000000000000d r __func__.1
0000000000763478 000000000000001b r __func__.2
0000000000763498 0000000000000006 r dn_nodec
00000000007634a0 000000000000000c r dn_sse_vintage
00000000007634b0 0000000000000011 r dn_dreidnowext_vintage
00000000007634c8 000000000000000e r dn_dreidnow_vintage
00000000007634d8 0000000000000004 r dn_avx
00000000007634e0 0000000000000007 r dn_neon64
00000000007634e8 0000000000000005 r dn_neon
00000000007634f0 0000000000000004 r dn_arm
00000000007634f8 0000000000000007 r dn_x86_64
0000000000763500 0000000000000004 r dn_sse
0000000000763508 0000000000000008 r dn_altivec
0000000000763510 0000000000000009 r dn_dreidnowext
0000000000763520 0000000000000006 r dn_dreidnow
0000000000763528 0000000000000004 r dn_mmx
0000000000763530 000000000000000c r dn_ifuenf_dither
0000000000763540 0000000000000005 r dn_ifuenf
0000000000763548 0000000000000005 r dn_ivier
0000000000763550 0000000000000005 r dn_idrei
0000000000763558 000000000000000f r dn_generic_dither
0000000000763568 0000000000000008 r dn_generic
0000000000763570 0000000000000005 r dn_autodec
0000000000763578 000000000000000d r __func__.1
0000000000763588 000000000000000d r __func__.2
0000000000763598 0000000000000012 r __func__.3
00000000007635b0 0000000000000011 r __func__.5
00000000007635c8 000000000000001c r __func__.0
00000000007635f0 0000000000000808 r intwinbase
0000000000763df8 0000000000000004 r cos4
0000000000763e00 0000000000000008 r cos8
0000000000763e10 0000000000000010 r cos16
0000000000763e20 0000000000000020 r cos32
0000000000763e40 0000000000000040 r cos64
0000000000763e80 0000000000000008 r __func__.0
0000000000763e88 000000000000000b r __func__.1
0000000000763e98 000000000000000d r __func__.2
0000000000763ea8 000000000000000b r __func__.3
0000000000763eb8 0000000000000011 r __func__.4
0000000000763ed0 0000000000000008 r __func__.0
0000000000763ed8 000000000000000c r __func__.1
0000000000763ee8 0000000000000011 r __func__.2
0000000000763f00 0000000000000c00 r grp_9tab
0000000000764b00 0000000000000180 r grp_5tab
0000000000764c80 0000000000000060 r grp_3tab
0000000000764ce0 0000000000001b00 r layer12_table
00000000007667e0 0000000000000310 r alloc_4
0000000000766af0 00000000000001c0 r alloc_3
0000000000766cb0 0000000000000140 r alloc_2
0000000000766df0 00000000000004b0 r alloc_1
00000000007672a0 0000000000000480 r alloc_0
00000000007678b8 0000000000000016 r __func__.0
00000000007678d0 0000000000000008 r __func__.1
00000000007678d8 0000000000000012 r __func__.2
00000000007678f0 0000000000000011 r __func__.3
0000000000767908 00000000000003de r bandInfo
0000000000767cf0 0000000000000200 r i_slen2
0000000000767ef0 0000000000000400 r n_slen2
00000000007682f0 0000000000000318 r mapbuf2
0000000000768610 0000000000000af8 r mapbuf1
0000000000769110 0000000000000ab0 r mapbuf0
0000000000769bc0 0000000000000100 r pow2_2
0000000000769cc0 0000000000000100 r pow1_2
0000000000769dc0 0000000000000100 r pow2_1
0000000000769ec0 0000000000000100 r pow1_1
0000000000769fc0 0000000000000040 r tan2_2
000000000076a000 0000000000000040 r tan1_2
000000000076a040 0000000000000040 r tan2_1
000000000076a080 0000000000000040 r tan1_1
000000000076a0c0 0000000000000240 r win1
000000000076a300 0000000000000240 r win
000000000076a540 000000000000803c r ispow
0000000000772580 000000000000003e r tab_c1
00000000007725c0 000000000000003e r tab_c0
0000000000772600 0000000000000800 r tab24_
0000000000772e00 0000000000000820 r tab16_
0000000000773620 00000000000007e0 r tab15_
0000000000773e00 00000000000007e0 r tab13_
00000000007745e0 00000000000001e0 r tab12_
00000000007747c0 00000000000001e0 r tab11_
00000000007749a0 0000000000000220 r tab10_
0000000000774bc0 0000000000000100 r tab9_
0000000000774cc0 0000000000000100 r tab8_
0000000000774dc0 0000000000000120 r tab7_
0000000000774ee0 0000000000000080 r tab6_
0000000000774f60 0000000000000060 r tab5_
0000000000774fc0 0000000000000060 r tab3_
0000000000775020 0000000000000060 r tab2_
0000000000775080 0000000000000020 r tab1_
00000000007750a0 0000000000000020 r tab0_
0000000000775150 0000000000000080 r npio2_hw
00000000007751d0 0000000000000108 r two_over_pi
00000000007752e0 0000000000000040 r PIo2
0000000000775320 0000000000000010 r init_jk
0000000000775330 0000000000000060 R __inv_pio4
0000000000775390 00000000000000e0 R __sincosf_table
0000000000775470 0000000000000890 R __log_data
0000000000775d00 0000000000000128 R __powf_log2_data
0000000000775e30 0000000000000148 R __exp2f_data
0000000000775f80 0000000000000870 R __exp_data
00000000007767f0 0000000000002000 r crc_lookup
00000000007787f0 0000000000000108 r mask
00000000007788f8 0000000000000014 r CSWTCH.52
0000000000778910 0000000000000024 r gains.6636
0000000000778938 0000000000000020 R tf_select_table
0000000000778958 0000000000000004 r spread_icdf
0000000000778960 0000000000000003 r tapset_icdf
0000000000778968 000000000000000b r trim_icdf
0000000000778978 0000000000000020 r correction.4177
0000000000778998 00000000000000e7 r band_allocation
0000000000778a80 0000000000000188 r cache_bits50
0000000000778c08 00000000000000a8 r cache_caps50
0000000000778cb0 00000000000000d2 r cache_index50
0000000000778d88 000000000000002c r eband5ms
0000000000778db8 00000000000000f0 r fft_bitrev120
0000000000778ea8 00000000000001e0 r fft_bitrev240
0000000000779088 00000000000003c0 r fft_bitrev480
0000000000779448 0000000000000078 r fft_bitrev60
00000000007794c0 0000000000000f00 r fft_twiddles48000_960
000000000077a3c0 000000000000002a r logN400
000000000077a3f0 0000000000001c20 r mdct_twiddles960
000000000077c010 00000000000001e0 r window120
000000000077c1f0 0000000000000010 r beta_coef
000000000077c200 0000000000000064 R eMeans
000000000077c268 0000000000000150 r e_prob_model
000000000077c3b8 0000000000000010 r pred_coef
000000000077c3c8 0000000000000003 r small_energy_icdf
000000000077c3d0 0000000000000018 r LOG2_FRAC_TABLE
000000000077c3e8 000000000000000c r SPREAD_FACTOR.6494
000000000077c3f8 0000000000000003 r silk_LBRR_flags_2_iCDF
000000000077c400 0000000000000007 r silk_LBRR_flags_3_iCDF
000000000077c408 0000000000000006 R silk_LTPScales_table_Q14
000000000077c410 0000000000000003 R silk_LTPscale_iCDF
000000000077c418 0000000000000007 R silk_NLSF_EXT_iCDF
000000000077c420 0000000000000005 R silk_NLSF_interpolation_factor_iCDF
000000000077c428 0000000000000008 R silk_Quantization_Offsets_Q10
000000000077c430 0000000000000002 R silk_lsb_iCDF
000000000077c438 0000000000000002 R silk_stereo_only_code_mid_iCDF
000000000077c440 0000000000000019 R silk_stereo_pred_joint_iCDF
000000000077c460 0000000000000020 R silk_stereo_pred_quant_Q13
000000000077c480 0000000000000004 R silk_type_offset_VAD_iCDF
000000000077c488 0000000000000002 R silk_type_offset_no_VAD_iCDF
000000000077c490 0000000000000003 R silk_uniform3_iCDF
000000000077c498 0000000000000004 R silk_uniform4_iCDF
000000000077c4a0 0000000000000005 R silk_uniform5_iCDF
000000000077c4a8 0000000000000006 R silk_uniform6_iCDF
000000000077c4b0 0000000000000008 R silk_uniform8_iCDF
000000000077c4b8 000000000000000f r delay_matrix_dec
000000000077c4c8 000000000000000f r delay_matrix_enc
000000000077c4d8 000000000000001c R silk_Resampler_1_2_COEFS
000000000077c4f8 0000000000000028 R silk_Resampler_1_3_COEFS
000000000077c520 0000000000000028 R silk_Resampler_1_4_COEFS
000000000077c548 0000000000000028 R silk_Resampler_1_6_COEFS
000000000077c570 0000000000000028 R silk_Resampler_2_3_COEFS
000000000077c598 000000000000003a R silk_Resampler_3_4_COEFS
000000000077c5d8 0000000000000060 R silk_resampler_frac_FIR_12
000000000077c638 0000000000000010 r bit_deinterleave_table.7015
000000000077c648 0000000000000010 r bit_interleave_table.7005
000000000077c658 0000000000000010 r exp2_table8.6846
000000000077c668 0000000000000078 r ordery_table
000000000077c6e0 00000000000013e0 r CELT_PVQ_U_DATA
000000000077dac0 0000000000000004 r HARM_ATT_Q15
000000000077dac8 0000000000000004 r PLC_RAND_ATTENUATE_UV_Q15
000000000077dad0 0000000000000004 r PLC_RAND_ATTENUATE_V_Q15
000000000077dad8 0000000000000029 R silk_delta_gain_iCDF
000000000077db08 0000000000000018 R silk_gain_iCDF
000000000077db20 0000000000000008 r silk_LTP_gain_iCDF_0
000000000077db28 0000000000000010 r silk_LTP_gain_iCDF_1
000000000077db38 0000000000000020 r silk_LTP_gain_iCDF_2
000000000077db58 0000000000000028 r silk_LTP_gain_vq_0
000000000077db80 0000000000000050 r silk_LTP_gain_vq_1
000000000077dbd0 00000000000000a0 r silk_LTP_gain_vq_2
000000000077dc70 0000000000000003 R silk_LTP_per_index_iCDF
000000000077dc78 0000000000000140 r silk_NLSF_CB1_NB_MB_Q8
000000000077ddb8 0000000000000280 r silk_NLSF_CB1_Wght_Q9
000000000077e038 0000000000000040 r silk_NLSF_CB1_iCDF_NB_MB
000000000077e078 0000000000000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
000000000077e0c0 00000000000000a0 r silk_NLSF_CB2_SELECT_NB_MB
000000000077e160 0000000000000048 r silk_NLSF_CB2_iCDF_NB_MB
000000000077e1a8 0000000000000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
000000000077e1c0 0000000000000012 r silk_NLSF_PRED_NB_MB_Q8
000000000077e1d8 0000000000000200 r silk_NLSF_CB1_WB_Q8
000000000077e3d8 0000000000000400 r silk_NLSF_CB1_WB_Wght_Q9
000000000077e7d8 0000000000000040 r silk_NLSF_CB1_iCDF_WB
000000000077e818 0000000000000048 r silk_NLSF_CB2_BITS_WB_Q5
000000000077e860 0000000000000100 r silk_NLSF_CB2_SELECT_WB
000000000077e960 0000000000000048 r silk_NLSF_CB2_iCDF_WB
000000000077e9a8 0000000000000022 r silk_NLSF_DELTA_MIN_WB_Q15
000000000077e9d0 000000000000001e r silk_NLSF_PRED_WB_Q8
000000000077e9f0 0000000000000003 R silk_pitch_contour_10_ms_NB_iCDF
000000000077e9f8 000000000000000c R silk_pitch_contour_10_ms_iCDF
000000000077ea08 000000000000000b R silk_pitch_contour_NB_iCDF
000000000077ea18 0000000000000022 R silk_pitch_contour_iCDF
000000000077ea40 0000000000000015 R silk_pitch_delta_iCDF
000000000077ea58 0000000000000020 R silk_pitch_lag_iCDF
000000000077ea78 00000000000000b4 R silk_pulses_per_block_iCDF
000000000077eb30 0000000000000012 R silk_rate_levels_iCDF
000000000077eb48 0000000000000098 R silk_shell_code_table0
000000000077ebe0 0000000000000098 R silk_shell_code_table1
000000000077ec78 0000000000000098 R silk_shell_code_table2
000000000077ed10 0000000000000098 R silk_shell_code_table3
000000000077eda8 0000000000000011 R silk_shell_code_table_offsets
000000000077edc0 000000000000002a R silk_sign_iCDF
000000000077edf0 000000000000000a r ordering10.23678
000000000077ee00 0000000000000010 r ordering16.23677
000000000077ee10 000000000000002c R silk_CB_lags_stage2
000000000077ee40 0000000000000006 R silk_CB_lags_stage2_10_ms
000000000077ee48 0000000000000088 R silk_CB_lags_stage3
000000000077eed0 0000000000000018 R silk_CB_lags_stage3_10_ms
000000000077eee8 0000000000000102 R silk_LSFCosTab_FIX_Q12
000000000077f058 0000000000000036 r CSWTCH.143
000000000077f090 0000000000000011 r bits_ac_chrominance.1
000000000077f0b0 0000000000000011 r bits_ac_luminance.5
000000000077f0d0 0000000000000011 r bits_dc_chrominance.3
000000000077f0f0 0000000000000011 r bits_dc_luminance.7
000000000077f110 0000000000000100 r std_chrominance_quant_tbl
000000000077f210 0000000000000100 r std_luminance_quant_tbl
000000000077f310 00000000000000a2 r val_ac_chrominance.0
000000000077f3c0 00000000000000a2 r val_ac_luminance.4
000000000077f468 000000000000000c r val_dc_chrominance.2
000000000077f478 000000000000000c r val_dc_luminance.6
000000000077f510 0000000000000044 r rgb_pixelsize
000000000077f560 0000000000000020 r dither_matrix
000000000077f580 0000000000000100 r base_dither_matrix
000000000077f680 0000000000000044 r rgb_blue
000000000077f6d0 0000000000000044 r rgb_green
000000000077f720 0000000000000044 r rgb_red
000000000077f768 000000000000000c r c_scales
000000000077f780 0000000000000044 r rgb_blue
000000000077f7d0 0000000000000044 r rgb_green
000000000077f820 0000000000000044 r rgb_red
000000000077f868 0000000000000140 R jpeg_natural_order
000000000077f9b0 0000000000000010 r extra_pool_slop
000000000077f9c0 0000000000000010 r first_pool_slop
000000000077f9d0 0000000000000044 r rgb_blue
000000000077fa20 0000000000000044 r rgb_green
000000000077fa70 0000000000000044 r rgb_pixelsize
000000000077fac0 0000000000000044 r rgb_red
000000000077fb10 0000000000000040 r aanscalefactor.0
000000000077fb50 0000000000000080 r aanscales.1
000000000077fbd0 0000000000000020 r dither_matrix
000000000077fbf0 0000000000000044 r rgb_blue
000000000077fc40 0000000000000044 r rgb_green
000000000077fc90 0000000000000044 r rgb_pixelsize
000000000077fce0 0000000000000044 r rgb_red
000000000077fd30 0000000000000040 r aanscalefactor.0
000000000077fd70 0000000000000011 r bits_ac_chrominance.1
000000000077fd90 0000000000000011 r bits_ac_luminance.5
000000000077fdb0 0000000000000011 r bits_dc_chrominance.3
000000000077fdd0 0000000000000011 r bits_dc_luminance.7
000000000077fdf0 00000000000000a2 r val_ac_chrominance.0
000000000077fea0 00000000000000a2 r val_ac_luminance.4
000000000077ff48 000000000000000c r val_dc_chrominance.2
000000000077ff58 000000000000000c r val_dc_luminance.6
000000000077ff68 0000000000000390 R jpeg_aritab
0000000000780300 0000000000000100 r jsimd_h2_downsample_consts
0000000000780400 0000000000000008 r jsimd_ycc_rgb_convert_neon_consts
0000000000780410 0000000000000008 r jsimd_fdct_ifast_neon_consts
0000000000780420 0000000000000008 r jsimd_idct_2x2_neon_consts
0000000000780430 0000000000000018 r jsimd_idct_4x4_neon_consts
0000000000780450 0000000000000008 r jsimd_idct_ifast_neon_consts
0000000000780460 r Ljsimd_idct_islow_neon_consts
0000000000780480 r Ljsimd_ycc_rgb_neon_consts
00000000007804a0 r Ljsimd_rgb_ycc_neon_consts
00000000007804c0 r Ljsimd_fdct_islow_neon_consts
00000000007804e0 r Ljsimd_huff_encode_one_block_neon_consts
00000000007805b0 000000000000000d r kModeBpp
00000000007805c0 0000000000000003 r kFilterExtraRows
00000000007805c8 000000000000000c r kQuantToDitherAmp
00000000007805d8 0000000000000020 r kScan
00000000007805f8 0000000000000030 r CSWTCH.31
0000000000780628 0000000000000004 r kCat3
0000000000780630 0000000000000005 r kCat4
0000000000780638 0000000000000006 r kCat5
0000000000780640 000000000000000c r kCat6
0000000000780650 0000000000000010 r kZigzag
0000000000780660 000000000000000a r kAlphabetSize
0000000000780670 0000000000000013 r kCodeLengthCodeOrder
0000000000780688 0000000000000003 r kCodeLengthExtraBits
0000000000780690 0000000000000003 r kCodeLengthRepeatOffsets
0000000000780698 0000000000000078 r kCodeToPlane
0000000000780710 0000000000000005 r kLiteralMap
0000000000780718 0000000000000018 r kTableSize
00000000007807a0 0000000000000008 r k0g0g.0
00000000007807a8 0000000000000008 r kGreenShuffle
00000000007807b0 0000000000000008 r kCoeffs1
00000000007807b8 0000000000000064 r kBitMask
0000000000780820 0000000000000080 R kVP8Log2Range
00000000007808a0 0000000000000080 R kVP8NewRange
0000000000780920 00000000000000dc r kRandomTable
0000000000780a00 0000000000000100 r kAcTable
0000000000780b00 0000000000000080 r kDcTable
0000000000780b80 0000000000000420 r CoeffsProba0
0000000000780fa0 0000000000000420 r CoeffsUpdateProba
00000000007813c0 0000000000000384 r kBModesProba
0000000000781748 0000000000000011 r kBands
0000000000781760 00000000000000c8 r format_list
0000000000781830 0000000000002804 r ResamplerFilterDifference
0000000000784040 0000000000002804 r ResamplerFilter
0000000000786850 0000000000000200 r mix8
0000000000786cc0 0000000000000044 r CSWTCH.10
0000000000786d10 0000000000000800 r SDL_default_keymap
0000000000787530 0000000000000010 r emptyGUID.0
0000000000787560 000000000000000c r CSWTCH.396
0000000000787560 000000000000000c r CSWTCH.398
0000000000787560 000000000000000c r CSWTCH.400
0000000000787560 000000000000000c r CSWTCH.402
0000000000787560 000000000000000c r CSWTCH.404
0000000000787560 000000000000000c r CSWTCH.406
0000000000787570 0000000000000014 r CSWTCH.91
0000000000787588 0000000000000028 r CSWTCH.89
00000000007875b0 0000000000000014 r __func__.0
00000000007875c8 0000000000000014 r __func__.1
00000000007875e0 0000000000000017 r __func__.2
00000000007875f8 0000000000000016 r __func__.3
0000000000787610 0000000000000016 r __func__.4
0000000000787628 0000000000000017 r __func__.5
0000000000787640 0000000000000016 r __func__.6
0000000000787658 0000000000000015 r __func__.7
0000000000787690 00000000000000d8 r GLES2_Fragment_TextureExternalOES
0000000000787770 0000000000000031 r GLES2_Fragment_TextureExternalOES_Prologue
00000000007877b0 000000000000030f r GLES2_Fragment_TextureNV21BT709
0000000000787ac0 000000000000030f r GLES2_Fragment_TextureNV21BT601
0000000000787dd0 00000000000002fd r GLES2_Fragment_TextureNV21JPEG
00000000007880d0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RG
00000000007883e0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RA
00000000007886f0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RG
0000000000788a00 000000000000030f r GLES2_Fragment_TextureNV12BT601_RA
0000000000788d10 00000000000002fd r GLES2_Fragment_TextureNV12JPEG
0000000000789010 000000000000033f r GLES2_Fragment_TextureYUVBT709
0000000000789350 000000000000033f r GLES2_Fragment_TextureYUVBT601
0000000000789690 000000000000032d r GLES2_Fragment_TextureYUVJPEG
00000000007899c0 0000000000000107 r GLES2_Fragment_TextureBGR
0000000000789ad0 0000000000000141 r GLES2_Fragment_TextureRGB
0000000000789c20 0000000000000127 r GLES2_Fragment_TextureARGB
0000000000789d50 00000000000000cf r GLES2_Fragment_TextureABGR
0000000000789e20 000000000000004c r GLES2_Fragment_Solid
0000000000789e70 0000000000000133 r GLES2_Vertex_Default
0000000000789fb0 000000000000004c r GLES2_Fragment_Include_Undef_Precision
000000000078a000 0000000000000040 r GLES2_Fragment_Include_High_Texture_Precision
000000000078a040 0000000000000042 r GLES2_Fragment_Include_Medium_Texture_Precision
000000000078a090 0000000000000097 r GLES2_Fragment_Include_Best_Texture_Precision
000000000078a128 000000000000000d r __func__.0
000000000078a138 0000000000000020 r CSWTCH.26
000000000078a158 0000000000000020 r CSWTCH.25
000000000078a178 0000000000000020 r CSWTCH.24
000000000078a198 0000000000000020 r CSWTCH.23
000000000078a210 0000000000000078 r RGB2YUVFactorTables.0
000000000078a290 0000000000000200 r lut.0
000000000078a490 0000000000000024 r YUV2RGB
000000000078a4b8 0000000000000002 r sink_channels.0
000000000078a4c0 0000000000000018 r arConfig
000000000078a4e0 00000000000000e0 r pad_mapping_right_joy
000000000078a5c0 00000000000000e0 r pad_mapping_left_joy
000000000078a6a0 00000000000000e0 r pad_mapping_default
000000000078a780 0000000000000800 r RGB565_BGRA8888_LUT
000000000078af80 0000000000000800 r RGB565_RGBA8888_LUT
000000000078b780 0000000000000800 r RGB565_ABGR8888_LUT
000000000078bf80 0000000000000800 r RGB565_ARGB8888_LUT
000000000078c790 0000000000000018 r __func__.0
000000000078c7a8 0000000000000015 r __func__.1
000000000078c7c0 0000000000000016 r __func__.2
000000000078c7d8 0000000000000012 r __func__.3
000000000078c7f0 0000000000000022 r __func__.4
000000000078c818 0000000000000022 r __func__.5
000000000078c840 0000000000000013 r __func__.6
000000000078c858 0000000000000011 r __func__.7
000000000078c870 0000000000000022 r __func__.8
000000000078c898 000000000000001a r __func__.9
000000000078c8b8 0000000000000013 r __func__.10
000000000078c8d0 0000000000000012 r __func__.11
000000000078c8e8 000000000000001b r __func__.12
000000000078c908 0000000000000019 r __func__.13
000000000078c928 000000000000001e r __func__.14
000000000078c948 0000000000000016 r __func__.15
000000000078c960 000000000000001a r __func__.16
000000000078c980 0000000000000018 r __func__.17
000000000078c998 0000000000000019 r __func__.18
000000000078c9b8 0000000000000014 r __func__.19
000000000078c9d0 0000000000000019 r __func__.20
000000000078c9f0 0000000000000012 r __func__.21
000000000078ca08 0000000000000013 r __func__.22
000000000078ca20 0000000000000011 r __func__.23
000000000078ca38 0000000000000018 r __func__.24
000000000078ca50 0000000000000018 r __func__.25
000000000078ca68 0000000000000013 r __func__.26
000000000078ca80 0000000000000019 r __func__.27
000000000078caa0 0000000000000019 r __func__.28
000000000078cac0 000000000000001b r __func__.29
000000000078cae0 0000000000000018 r __func__.30
000000000078caf8 000000000000001c r __func__.31
000000000078cb18 0000000000000016 r __func__.32
000000000078cb30 0000000000000011 r __func__.33
000000000078cb48 0000000000000018 r __func__.34
000000000078cb60 000000000000001c r __func__.35
000000000078cb80 0000000000000020 r __func__.36
000000000078cba0 000000000000001c r __func__.37
000000000078cbc0 000000000000001a r __func__.38
000000000078cbe0 000000000000000f r __func__.39
000000000078cbf0 0000000000000012 r __func__.41
000000000078cc08 0000000000000018 r __func__.42
000000000078cc20 0000000000000011 r __func__.43
000000000078cc38 0000000000000013 r __func__.44
000000000078cc50 000000000000000c r __func__.45
000000000078cc60 0000000000000019 r __func__.46
000000000078cc80 0000000000000012 r __func__.47
000000000078cc98 0000000000000010 r __func__.48
000000000078cca8 000000000000000f r __func__.49
000000000078ccb8 000000000000000f r __func__.50
000000000078ccc8 000000000000000e r __func__.51
000000000078ccd8 0000000000000017 r __func__.52
000000000078ccf0 0000000000000010 r __func__.53
000000000078cd00 0000000000000016 r __func__.54
000000000078cd18 000000000000000f r __func__.55
000000000078cd28 0000000000000011 r __func__.56
000000000078cd40 0000000000000021 r __func__.57
000000000078cd68 000000000000000c r __func__.58
000000000078cd78 000000000000000b r __func__.59
000000000078cd88 0000000000000015 r __func__.60
000000000078cda0 0000000000000015 r __func__.61
000000000078cdb8 0000000000000015 r __func__.62
000000000078cdd0 000000000000000e r __func__.63
000000000078cde0 000000000000000a r __func__.64
000000000078cdf0 0000000000000015 r __func__.65
000000000078ce08 000000000000000e r __func__.66
000000000078ce18 000000000000000f r __func__.67
000000000078ce28 000000000000000f r __func__.68
000000000078ce38 0000000000000010 r __func__.69
000000000078ce48 0000000000000013 r __func__.70
000000000078ce60 0000000000000010 r __func__.71
000000000078ce70 0000000000000011 r __func__.72
000000000078ce88 0000000000000010 r __func__.73
000000000078ce98 0000000000000012 r __func__.74
000000000078ceb0 0000000000000018 r __func__.75
000000000078cec8 000000000000001f r __func__.76
000000000078cee8 000000000000001e r __func__.77
000000000078cf08 0000000000000017 r __func__.78
000000000078cf20 000000000000001f r __func__.79
000000000078cf40 000000000000001e r __func__.80
000000000078cf60 0000000000000017 r __func__.81
000000000078cf78 0000000000000010 r __func__.82
000000000078cf88 000000000000000f r __func__.83
000000000078cf98 0000000000000012 r __func__.84
000000000078cfb0 0000000000000011 r __func__.85
000000000078cfc8 0000000000000013 r __func__.86
000000000078cfe0 0000000000000010 r __func__.87
000000000078cff0 000000000000000e r __func__.88
000000000078d000 000000000000000f r __func__.89
000000000078d010 000000000000000d r __func__.90
000000000078d020 000000000000000e r __func__.91
000000000078d030 000000000000001d r __func__.92
000000000078d050 0000000000000016 r __func__.93
000000000078d068 000000000000000e r __func__.94
000000000078d140 0000000000000250 r _eglValidationTable
000000000078d3a8 000000000000000c r CSWTCH.4
000000000078d4a0 000000000000001c r depthfmts.0
000000000078d4c0 0000000000000010 r CSWTCH.87
000000000078d4d0 0000000000000010 r CSWTCH.82
000000000078d4e0 00000000000002b2 r CSWTCH.59
000000000078d798 000000000000001c r CSWTCH.51
000000000078d7b8 0000000000000018 r CSWTCH.49
000000000078daf8 0000000000000005 r CSWTCH.131
000000000078db00 000000000000001c r CSWTCH.89
000000000078db20 0000000000000028 r code_nvc0.3
000000000078db50 0000000000000030 r code_nve4.4
000000000078db80 0000000000000030 r code_gk110.5
000000000078dbb0 0000000000000078 r code_gm107.6
000000000078dc30 00000000000002f0 r nve4_su_format_aux_map
000000000078df20 0000000000000178 r nve4_su_format_map
000000000078e098 0000000000000088 r cpbs.0
000000000078e140 00000000000003e0 r hash_sizes
000000000078e520 0000000000000004 r deleted_key_value
000000000078e528 0000000000000017 r __func__.4
000000000078e830 0000000000000010 r debug_severity_enums
000000000078e840 0000000000000024 r debug_type_enums
000000000078e870 0000000000000018 r debug_source_enums
000000000078ec80 0000000000000028 r CSWTCH.3654
000000000078eca8 0000000000000028 r CSWTCH.3190
000000000078ecd0 0000000000000017 r __func__.0
000000000078ece8 0000000000000018 r __func__.1
000000000078ed00 0000000000000017 r __func__.2
000000000078ed18 0000000000000018 r __func__.3
000000000078ed30 0000000000000017 r __func__.4
000000000078ed48 0000000000000018 r __func__.5
000000000078ed60 0000000000000017 r __func__.6
000000000078ed78 0000000000000018 r __func__.7
000000000078ed90 0000000000000015 r __func__.8
000000000078eda8 0000000000000015 r __func__.9
000000000078edc0 0000000000000015 r __func__.10
000000000078edd8 0000000000000015 r __func__.11
000000000078edf0 0000000000000016 r __func__.12
000000000078ee08 0000000000000016 r __func__.13
000000000078ee20 0000000000000016 r __func__.14
000000000078ee38 0000000000000016 r __func__.15
000000000078ee50 0000000000000016 r __func__.16
000000000078ee68 0000000000000016 r __func__.17
000000000078ee80 0000000000000016 r __func__.18
000000000078ee98 0000000000000017 r __func__.19
000000000078eeb0 0000000000000017 r __func__.20
000000000078eec8 0000000000000017 r __func__.21
000000000078eee0 0000000000000016 r __func__.52
000000000078eef8 0000000000000017 r __func__.53
000000000078ef10 0000000000000016 r __func__.54
000000000078ef28 0000000000000017 r __func__.55
000000000078ef40 0000000000000016 r __func__.56
000000000078ef58 0000000000000017 r __func__.57
000000000078ef70 0000000000000016 r __func__.58
000000000078ef88 0000000000000017 r __func__.59
000000000078efa0 0000000000000015 r __func__.60
000000000078efb8 0000000000000015 r __func__.61
000000000078efd0 0000000000000015 r __func__.62
000000000078efe8 0000000000000015 r __func__.63
000000000078f000 0000000000000016 r __func__.64
000000000078f018 0000000000000016 r __func__.65
000000000078f030 0000000000000016 r __func__.66
000000000078f048 0000000000000016 r __func__.67
000000000078f060 000000000000001b r __func__.68
000000000078f080 000000000000001c r __func__.69
000000000078f0b0 0000000000000029 r CSWTCH.23
000000000078f820 000000000000001f r __func__.0
000000000078fa08 0000000000000020 r CSWTCH.168
000000000078fa28 000000000000001e r __func__.0
000000000078fa48 00000000000000a9 r mappings
000000000078faf8 0000000000000013 r __func__.0
000000000078fb10 000000000000001b r __func__.0
000000000078fba0 0000000000002598 r MESA_remap_table_functions
0000000000792140 000000000000f43d r _mesa_function_pool
00000000007a1598 000000000000002c r CSWTCH.17
00000000007a15c8 0000000000000114 r CSWTCH.15
00000000007a17b0 0000000000000030 r targets.0
00000000007a1ce0 0000000000000004 r weights2.0
00000000007a1ce8 0000000000000008 r weights3.1
00000000007a1cf0 0000000000000010 r weights4.2
00000000007a1d00 00000000000000c0 r anchor_indices
00000000007a1dc0 0000000000000100 r partition_table2
00000000007a1ec0 0000000000000100 r partition_table1
00000000007a1fc0 0000000000000a68 r bptc_float_modes
00000000007a2a28 0000000000000100 r bptc_unorm_modes
00000000007a2b60 0000000000000020 r lookup.0
00000000007a2b60 0000000000000020 r lookup.1
00000000007a2b80 0000000000000080 r etc1_modifier_tables
00000000007a2c00 0000000000000080 r etc2_modifier_tables_non_opaque
00000000007a2c80 0000000000000200 r etc2_modifier_tables
00000000007a2e80 0000000000000020 r etc2_distance_table
00000000007a2ea0 0000000000000040 r _rgb_scale_6
00000000007a2ee0 0000000000000020 r _rgb_scale_5
00000000007a2f70 0000000000000014 r CSWTCH.316
00000000007a2f88 0000000000000014 r CSWTCH.315
00000000007a2fa0 0000000000000010 r zeroData.0
00000000007a2fb0 0000000000000028 r targets.2
00000000007a2fd8 0000000000000030 r CSWTCH.106
00000000007a3008 0000000000000030 r CSWTCH.105
00000000007a3038 0000000000000030 r CSWTCH.104
00000000007a3068 0000000000000030 r CSWTCH.103
00000000007a30a0 0000000000000030 r targets.0
00000000007a30d0 0000000000000028 r default_combine_state
00000000007a30f8 00000000000000a0 r gles_astc_3d_compatible_internal_formats
00000000007a3198 00000000000000e0 r gles_astc_compatible_internal_formats
00000000007a3278 0000000000000050 r gles_etc2_compatible_internal_formats
00000000007a32c8 0000000000000040 r s3tc_compatible_internal_formats
00000000007a3308 00000000000001f8 r compatible_internal_formats
00000000007a3518 0000000000000050 r CSWTCH.121
00000000007a35a8 0000000000000038 r CSWTCH.246
00000000007a35e0 0000000000000038 r CSWTCH.245
00000000007a3618 0000000000000038 r CSWTCH.244
00000000007a3650 0000000000000038 r CSWTCH.243
00000000007a3688 0000000000000038 r CSWTCH.242
00000000007a36c0 0000000000000038 r CSWTCH.241
00000000007a36f8 0000000000000038 r CSWTCH.240
00000000007a3730 0000000000000038 r CSWTCH.239
00000000007a3768 000000000000000e r CSWTCH.238
00000000007a3778 000000000000000e r CSWTCH.237
00000000007a3788 000000000000000e r CSWTCH.236
00000000007a37a0 00000000000001a0 r vertex_formats
00000000007a3940 0000000000000040 r Identity
00000000007a3980 0000000000000015 r __func__.0
00000000007a3998 000000000000001b r __func__.1
00000000007a39b8 000000000000001c r __func__.2
00000000007a39d8 000000000000001b r __func__.3
00000000007a39f8 000000000000001c r __func__.4
00000000007a3a18 000000000000001b r __func__.5
00000000007a3a38 000000000000001c r __func__.6
00000000007a3a58 000000000000001b r __func__.7
00000000007a3a78 000000000000001c r __func__.8
00000000007a3a98 0000000000000019 r __func__.9
00000000007a3ab8 0000000000000019 r __func__.10
00000000007a3ad8 0000000000000019 r __func__.11
00000000007a3af8 0000000000000019 r __func__.12
00000000007a3b18 000000000000001a r __func__.13
00000000007a3b38 000000000000001a r __func__.14
00000000007a3b58 000000000000001a r __func__.15
00000000007a3b78 000000000000001a r __func__.16
00000000007a3b98 000000000000001a r __func__.17
00000000007a3bb8 000000000000001a r __func__.18
00000000007a3bd8 000000000000001a r __func__.19
00000000007a3bf8 000000000000001b r __func__.20
00000000007a3c18 000000000000001b r __func__.21
00000000007a3c38 000000000000001b r __func__.22
00000000007a3c58 000000000000001a r __func__.53
00000000007a3c78 000000000000001b r __func__.54
00000000007a3c98 000000000000001a r __func__.55
00000000007a3cb8 000000000000001b r __func__.56
00000000007a3cd8 000000000000001a r __func__.57
00000000007a3cf8 000000000000001b r __func__.58
00000000007a3d18 000000000000001a r __func__.59
00000000007a3d38 000000000000001b r __func__.60
00000000007a3d58 0000000000000019 r __func__.61
00000000007a3d78 0000000000000019 r __func__.62
00000000007a3d98 0000000000000019 r __func__.63
00000000007a3db8 0000000000000019 r __func__.64
00000000007a3dd8 000000000000001a r __func__.65
00000000007a3df8 000000000000001a r __func__.66
00000000007a3e18 000000000000001a r __func__.67
00000000007a3e38 000000000000001a r __func__.68
00000000007a3e58 000000000000001f r __func__.69
00000000007a3e80 0000000000000020 r default_uint64.70
00000000007a3ea0 0000000000000020 r default_double.71
00000000007a3ec0 0000000000000010 r default_int.72
00000000007a3ed0 0000000000000010 r default_float.73
00000000007a3ee0 0000000000000020 r __func__.74
00000000007a3f10 0000000000000040 R _vbo_attribute_alias_map
00000000007a3f50 000000000000001d r __func__.0
00000000007a3f70 000000000000001e r __func__.1
00000000007a3f90 000000000000001d r __func__.2
00000000007a3fb0 000000000000001e r __func__.3
00000000007a3fd0 000000000000001d r __func__.4
00000000007a3ff0 000000000000001e r __func__.5
00000000007a4010 000000000000001d r __func__.6
00000000007a4030 000000000000001e r __func__.7
00000000007a4050 000000000000001b r __func__.8
00000000007a4070 000000000000001b r __func__.9
00000000007a4090 000000000000001b r __func__.10
00000000007a40b0 000000000000001b r __func__.11
00000000007a40d0 000000000000001c r __func__.12
00000000007a40f0 000000000000001c r __func__.13
00000000007a4110 000000000000001c r __func__.14
00000000007a4130 000000000000001c r __func__.15
00000000007a4150 000000000000001c r __func__.16
00000000007a4170 000000000000001c r __func__.17
00000000007a4190 000000000000001c r __func__.18
00000000007a41b0 000000000000001d r __func__.19
00000000007a41d0 000000000000001d r __func__.20
00000000007a41f0 000000000000001d r __func__.21
00000000007a4210 000000000000001c r __func__.52
00000000007a4230 000000000000001d r __func__.53
00000000007a4250 000000000000001c r __func__.54
00000000007a4270 000000000000001d r __func__.55
00000000007a4290 000000000000001c r __func__.56
00000000007a42b0 000000000000001d r __func__.57
00000000007a42d0 000000000000001c r __func__.58
00000000007a42f0 000000000000001d r __func__.59
00000000007a4310 000000000000001b r __func__.60
00000000007a4330 000000000000001b r __func__.61
00000000007a4350 000000000000001b r __func__.62
00000000007a4370 000000000000001b r __func__.63
00000000007a4390 000000000000001c r __func__.64
00000000007a43b0 000000000000001c r __func__.65
00000000007a43d0 000000000000001c r __func__.66
00000000007a43f0 000000000000001c r __func__.67
00000000007a4410 0000000000000021 r __func__.68
00000000007a4438 0000000000000022 r __func__.69
00000000007a4460 0000000000000018 r __func__.0
00000000007a4478 0000000000000019 r __func__.1
00000000007a4498 0000000000000018 r __func__.2
00000000007a44b0 0000000000000019 r __func__.3
00000000007a44d0 0000000000000018 r __func__.4
00000000007a44e8 0000000000000019 r __func__.5
00000000007a4508 0000000000000018 r __func__.6
00000000007a4520 0000000000000019 r __func__.7
00000000007a4540 0000000000000016 r __func__.8
00000000007a4558 0000000000000016 r __func__.9
00000000007a4570 0000000000000016 r __func__.10
00000000007a4588 0000000000000016 r __func__.11
00000000007a45a0 0000000000000017 r __func__.12
00000000007a45b8 0000000000000017 r __func__.13
00000000007a45d0 0000000000000017 r __func__.14
00000000007a45e8 0000000000000017 r __func__.15
00000000007a4600 0000000000000017 r __func__.16
00000000007a4618 0000000000000017 r __func__.17
00000000007a4630 0000000000000017 r __func__.18
00000000007a4648 0000000000000018 r __func__.19
00000000007a4660 0000000000000018 r __func__.20
00000000007a4678 0000000000000018 r __func__.21
00000000007a4690 0000000000000017 r __func__.52
00000000007a46a8 0000000000000018 r __func__.53
00000000007a46c0 0000000000000017 r __func__.54
00000000007a46d8 0000000000000018 r __func__.55
00000000007a46f0 0000000000000017 r __func__.56
00000000007a4708 0000000000000018 r __func__.57
00000000007a4720 0000000000000017 r __func__.58
00000000007a4738 0000000000000018 r __func__.59
00000000007a4750 0000000000000016 r __func__.60
00000000007a4768 0000000000000016 r __func__.61
00000000007a4780 0000000000000016 r __func__.62
00000000007a4798 0000000000000016 r __func__.63
00000000007a47b0 0000000000000017 r __func__.64
00000000007a47c8 0000000000000017 r __func__.65
00000000007a47e0 0000000000000017 r __func__.66
00000000007a47f8 0000000000000017 r __func__.67
00000000007a4810 000000000000001c r __func__.68
00000000007a4830 0000000000000020 r default_uint64.69
00000000007a4850 0000000000000020 r default_double.70
00000000007a4870 0000000000000010 r default_int.71
00000000007a4880 0000000000000010 r default_float.72
00000000007a4890 000000000000001d r __func__.73
00000000007a4f30 0000000000007660 r enum_string_table_offsets
00000000007ac590 000000000001671d r enum_string_table
00000000007c2e08 0000000000000018 r CSWTCH.198
00000000007c3130 00000000000002b2 r CSWTCH.44
00000000007c3fc0 0000000000000010 r zeros.3
00000000007c3fd0 0000000000000010 r table_1010102_uint
00000000007c3fe0 0000000000000010 r table_1010102_snorm
00000000007c3ff0 0000000000000010 r table_1010102_unorm
00000000007c4000 0000000000000020 r table_8888_unorm
00000000007c4020 000000000000001c r CSWTCH.5
00000000007c4040 000000000000001c r CSWTCH.4
00000000007c4060 000000000000001c r CSWTCH.3
00000000007c4080 0000000000000018 r CSWTCH.41
00000000007c4098 000000000000008c r tbo_rgb32.0
00000000007c4130 0000000000000014 r depth_formats.3
00000000007c4150 0000000000000010 r color_formats.4
00000000007c4160 00000000000001a4 r vertex_mapping.5
00000000007c4308 00000000000009d8 r texture_mapping.6
00000000007c4ce0 000000000000008c r depthstencil_mapping.7
00000000007c4d70 000000000000008c r rt_blendable.8
00000000007c4e00 00000000000004ec r rendertarget_mapping.9
00000000007c52f0 0000000000000320 r cap_mapping.10
00000000007c5610 0000000000005d00 r format_map
00000000007cb510 0000000000000004 r zero.0
00000000007cb548 000000000000001c r CSWTCH.47
00000000007cb568 000000000000000a r texcoord_state.0
00000000007cb578 000000000000000a r bias_state.1
00000000007cb588 000000000000000a r scale_state.2
00000000007cb598 000000000000000a r depth_range_state
00000000007cb5a8 000000000000001c r CSWTCH.23
00000000007cb5f0 0000000000000028 r _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)::fmt
00000000007cb620 0000000000000034 r known_desktop_gl_versions
00000000007cb660 0000000000000034 r known_desktop_glsl_versions
00000000007cb898 0000000000000034 r CSWTCH.294
00000000007cb8d0 000000000000000e R ir_variable::tmp_name
00000000007cb8e0 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::idx_map
00000000007cb900 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::base_idx
00000000007cb920 0000000000000050 r CSWTCH.173
00000000007cb970 0000000000000050 r CSWTCH.24
00000000007cb9c0 000000000000000c r CSWTCH.181
00000000007cb9d0 0000000000000050 r CSWTCH.155
00000000007cbb90 0000000000000050 r CSWTCH.51
00000000007cbd10 0000000000000018 r CSWTCH.157
00000000007cbf98 0000000000000020 r _mesa_glsl_parse(_mesa_glsl_parse_state*)::yyloc_default
00000000007cbfc0 0000000000000139 r yyr2
00000000007cc100 0000000000000272 r yyr1
00000000007cc380 00000000000013a6 r yycheck
00000000007cd730 00000000000013a6 r yytable
00000000007ceae0 00000000000000de r yydefgoto
00000000007cebc0 00000000000000de r yypgoto
00000000007ceca0 00000000000003b6 r yydefact
00000000007cf060 00000000000003b6 r yypact
00000000007cf420 000000000000018a r yytranslate
00000000007cf7f0 0000000000000d28 r yy_chk
00000000007d0520 0000000000000d28 r yy_nxt
00000000007d1250 00000000000008ce r yy_def
00000000007d1b20 00000000000008ce r yy_base
00000000007d23f0 000000000000004a r yy_meta
00000000007d2440 0000000000000100 r yy_ec
00000000007d2540 00000000000008b0 r yy_accept
00000000007d2e70 0000000000000498 r yy_chk
00000000007d3310 0000000000000498 r yy_nxt
00000000007d37b0 00000000000001a0 r yy_def
00000000007d3950 00000000000001a0 r yy_base
00000000007d3af0 0000000000000031 r yy_meta
00000000007d3b30 0000000000000100 r yy_ec
00000000007d3c30 000000000000017a r yy_accept
00000000007d3f98 0000000000000014 r yyloc_default.0
00000000007d3fb0 0000000000000075 r yyr2
00000000007d4030 0000000000000075 r yyr1
00000000007d40b0 00000000000000b9 r yystos
00000000007d4170 00000000000005b8 r yycheck
00000000007d4730 00000000000002dc r yytable
00000000007d4a10 0000000000000014 r yydefgoto
00000000007d4a30 0000000000000028 r yypgoto
00000000007d4a60 00000000000000b9 r yydefact
00000000007d4b20 0000000000000172 r yypact
00000000007d4ca0 00000000000000ea r yyrline
00000000007d4d90 000000000000012b r yytranslate
00000000007d4ee0 0000000000000050 r CSWTCH.328
00000000007d4f30 0000000000000020 r prime_deltas
00000000007d4fa0 00000000000003f0 r opcode_info
00000000007d54c0 0000000000000038 r CSWTCH.35
00000000007d5630 0000000000000048 r CSWTCH.19
00000000007d5700 0000000000000048 r shader_templ.3
00000000007d5750 000000000000023b r text.4
00000000007d5990 00000000000000b4 r text.5
00000000007d5a48 00000000000001e0 r vbuf_format_fallbacks
00000000007d5c28 000000000000000f r slab_order.0
00000000007d5c38 0000000000000060 r CSWTCH.23
00000000007d5c98 0000000000000060 r nouveau_decoder_msvld
00000000007d5cf8 000000000000001c r CSWTCH.100
00000000007d5d20 0000000000000010 r ms8.0
00000000007d5d30 0000000000000008 r ms4.1
00000000007d5d38 0000000000000004 r ms2.2
00000000007d5d40 0000000000000002 r ms1.3
00000000007d5d48 0000000000000bc0 R nvc0_vertex_format
00000000007d6908 00000000000011a0 R nvc0_format_table
00000000007d7aa8 000000000000000c r CSWTCH.32
00000000007d7ab8 0000000000000010 r CSWTCH.31
00000000007d7b50 0000000000000028 r CSWTCH.48
00000000007d7b78 0000000000000028 r CSWTCH.47
00000000007d7bb0 0000000000000028 r sm35_warp_nonpred_execution_efficiency
00000000007d7bd8 0000000000000028 r sm30_warp_execution_efficiency
00000000007d7c00 0000000000000028 r sm30_shared_replay_overhead
00000000007d7c28 0000000000000028 r sm30_issue_slot_utilization
00000000007d7c50 0000000000000028 r sm30_issue_slots
00000000007d7c78 0000000000000028 r sm30_issued_ipc
00000000007d7ca0 0000000000000028 r sm30_inst_replay_overhead
00000000007d7cc8 0000000000000028 r sm30_inst_issued
00000000007d7cf0 0000000000000028 r sm21_issue_slot_utilization
00000000007d7d18 0000000000000028 r sm21_issue_slots
00000000007d7d40 0000000000000028 r sm21_issued_ipc
00000000007d7d68 0000000000000028 r sm21_inst_replay_overhead
00000000007d7d90 0000000000000028 r sm21_inst_issued
00000000007d7db8 0000000000000028 r sm20_ipc
00000000007d7de0 0000000000000028 r sm20_issue_slot_utilization
00000000007d7e08 0000000000000028 r sm20_issued_ipc
00000000007d7e30 0000000000000028 r sm20_inst_replay_overhead
00000000007d7e58 0000000000000028 r sm20_inst_per_wrap
00000000007d7e80 0000000000000028 r sm20_branch_efficiency
00000000007d7ea8 0000000000000028 r sm20_achieved_occupancy
00000000007d7ed0 0000000000000068 r sm21_th_inst_executed_3
00000000007d7f38 0000000000000068 r sm21_th_inst_executed_2
00000000007d7fa0 0000000000000068 r sm21_th_inst_executed_1
00000000007d8008 0000000000000068 r sm21_th_inst_executed_0
00000000007d8070 0000000000000068 r sm21_inst_issued2_1
00000000007d80d8 0000000000000068 r sm21_inst_issued2_0
00000000007d8140 0000000000000068 r sm21_inst_issued1_1
00000000007d81a8 0000000000000068 r sm21_inst_issued1_0
00000000007d8210 0000000000000068 r sm21_inst_executed
00000000007d8278 0000000000000068 r sm20_warps_launched
00000000007d82e0 0000000000000068 r sm20_th_inst_executed_1
00000000007d8348 0000000000000068 r sm20_th_inst_executed_0
00000000007d83b0 0000000000000068 r sm20_threads_launched
00000000007d8418 0000000000000068 r sm20_shared_st
00000000007d8480 0000000000000068 r sm20_shared_ld
00000000007d84e8 0000000000000068 r sm20_prof_trigger_7
00000000007d8550 0000000000000068 r sm20_prof_trigger_6
00000000007d85b8 0000000000000068 r sm20_prof_trigger_5
00000000007d8620 0000000000000068 r sm20_prof_trigger_4
00000000007d8688 0000000000000068 r sm20_prof_trigger_3
00000000007d86f0 0000000000000068 r sm20_prof_trigger_2
00000000007d8758 0000000000000068 r sm20_prof_trigger_1
00000000007d87c0 0000000000000068 r sm20_prof_trigger_0
00000000007d8828 0000000000000068 r sm20_local_st
00000000007d8890 0000000000000068 r sm20_local_ld
00000000007d88f8 0000000000000068 r sm20_inst_issued
00000000007d8960 0000000000000068 r sm20_inst_executed
00000000007d89c8 0000000000000068 r sm20_gst_request
00000000007d8a30 0000000000000068 r sm20_gred_count
00000000007d8a98 0000000000000068 r sm20_gld_request
00000000007d8b00 0000000000000068 r sm20_divergent_branch
00000000007d8b68 0000000000000068 r sm20_branch
00000000007d8bd0 0000000000000068 r sm20_atom_count
00000000007d8c38 0000000000000068 r sm20_active_warps
00000000007d8ca0 0000000000000068 r sm20_active_cycles
00000000007d8d10 00000000000000b8 r nvc0_read_hw_sm_counters_code
00000000007d8dc8 0000000000000068 r sm52_warps_launched
00000000007d8e30 0000000000000068 r sm52_shared_st
00000000007d8e98 0000000000000068 r sm52_shared_ld
00000000007d8f00 0000000000000068 r sm52_shared_atom_cas
00000000007d8f68 0000000000000068 r sm52_shared_atom
00000000007d8fd0 0000000000000068 r sm52_local_st
00000000007d9038 0000000000000068 r sm52_local_ld
00000000007d90a0 0000000000000068 r sm52_inst_issued2
00000000007d9108 0000000000000068 r sm52_inst_issued1
00000000007d9170 0000000000000068 r sm52_inst_issued0
00000000007d91d8 0000000000000068 r sm52_inst_executed
00000000007d9240 0000000000000068 r sm52_gred_count
00000000007d92a8 0000000000000068 r sm52_global_st
00000000007d9310 0000000000000068 r sm52_global_ld
00000000007d9378 0000000000000068 r sm52_global_atom_cas
00000000007d93e0 0000000000000068 r sm52_atom_count
00000000007d9448 0000000000000068 r sm50_warps_launched
00000000007d94b0 0000000000000068 r sm50_th_inst_executed
00000000007d9518 0000000000000068 r sm50_sm_cta_launched
00000000007d9580 0000000000000068 r sm50_shared_st_transactions
00000000007d95e8 0000000000000068 r sm50_shared_st_bank_conflict
00000000007d9650 0000000000000068 r sm50_shared_st
00000000007d96b8 0000000000000068 r sm50_shared_ld_transactions
00000000007d9720 0000000000000068 r sm50_shared_ld_bank_conflict
00000000007d9788 0000000000000068 r sm50_shared_ld
00000000007d97f0 0000000000000068 r sm50_shared_atom_cas
00000000007d9858 0000000000000068 r sm50_shared_atom
00000000007d98c0 0000000000000068 r sm50_prof_trigger_7
00000000007d9928 0000000000000068 r sm50_prof_trigger_6
00000000007d9990 0000000000000068 r sm50_prof_trigger_5
00000000007d99f8 0000000000000068 r sm50_prof_trigger_4
00000000007d9a60 0000000000000068 r sm50_prof_trigger_3
00000000007d9ac8 0000000000000068 r sm50_prof_trigger_2
00000000007d9b30 0000000000000068 r sm50_prof_trigger_1
00000000007d9b98 0000000000000068 r sm50_prof_trigger_0
00000000007d9c00 0000000000000068 r sm50_not_pred_off_inst_executed
00000000007d9c68 0000000000000068 r sm50_local_st
00000000007d9cd0 0000000000000068 r sm50_local_ld
00000000007d9d38 0000000000000068 r sm50_inst_issued2
00000000007d9da0 0000000000000068 r sm50_inst_issued1
00000000007d9e08 0000000000000068 r sm50_inst_issued0
00000000007d9e70 0000000000000068 r sm50_inst_executed
00000000007d9ed8 0000000000000068 r sm50_gred_count
00000000007d9f40 0000000000000068 r sm50_global_st
00000000007d9fa8 0000000000000068 r sm50_global_ld
00000000007da010 0000000000000068 r sm50_global_atom_cas
00000000007da078 0000000000000068 r sm50_divergent_branch
00000000007da0e0 0000000000000068 r sm50_branch
00000000007da148 0000000000000068 r sm50_atom_count
00000000007da1b0 0000000000000068 r sm50_active_warps
00000000007da218 0000000000000068 r sm50_active_cycles
00000000007da280 0000000000000068 r sm50_active_ctas
00000000007da2e8 0000000000000068 r sm35_th_inst_executed
00000000007da350 0000000000000068 r sm35_shared_st_replay
00000000007da3b8 0000000000000068 r sm35_shared_ld_replay
00000000007da420 0000000000000068 r sm35_not_pred_off_inst_executed
00000000007da488 0000000000000068 r sm35_gred_count
00000000007da4f0 0000000000000068 r sm35_atom_count
00000000007da558 0000000000000068 r sm35_atom_cas_count
00000000007da5c0 0000000000000068 r sm30_warps_launched
00000000007da628 0000000000000068 r sm30_uncached_gld_transactions
00000000007da690 0000000000000068 r sm30_threads_launched
00000000007da6f8 0000000000000068 r sm30_sm_cta_launched
00000000007da760 0000000000000068 r sm30_shared_st_replay
00000000007da7c8 0000000000000068 r sm30_shared_st
00000000007da830 0000000000000068 r sm30_shared_ld_replay
00000000007da898 0000000000000068 r sm30_shared_ld
00000000007da900 0000000000000068 r sm30_prof_trigger_7
00000000007da968 0000000000000068 r sm30_prof_trigger_6
00000000007da9d0 0000000000000068 r sm30_prof_trigger_5
00000000007daa38 0000000000000068 r sm30_prof_trigger_4
00000000007daaa0 0000000000000068 r sm30_prof_trigger_3
00000000007dab08 0000000000000068 r sm30_prof_trigger_2
00000000007dab70 0000000000000068 r sm30_prof_trigger_1
00000000007dabd8 0000000000000068 r sm30_prof_trigger_0
00000000007dac40 0000000000000068 r sm30_local_st_transactions
00000000007daca8 0000000000000068 r sm30_local_st
00000000007dad10 0000000000000068 r sm30_local_ld_transactions
00000000007dad78 0000000000000068 r sm30_local_ld
00000000007dade0 0000000000000068 r sm30_l1_shared_st_transactions
00000000007dae48 0000000000000068 r sm30_l1_shared_ld_transactions
00000000007daeb0 0000000000000068 r sm30_l1_local_st_miss
00000000007daf18 0000000000000068 r sm30_l1_local_st_hit
00000000007daf80 0000000000000068 r sm30_l1_local_ld_miss
00000000007dafe8 0000000000000068 r sm30_l1_local_ld_hit
00000000007db050 0000000000000068 r sm30_l1_gst_transactions
00000000007db0b8 0000000000000068 r sm30_l1_gld_transactions
00000000007db120 0000000000000068 r sm30_l1_gld_miss
00000000007db188 0000000000000068 r sm30_l1_gld_hit
00000000007db1f0 0000000000000068 r sm30_inst_issued2
00000000007db258 0000000000000068 r sm30_inst_issued1
00000000007db2c0 0000000000000068 r sm30_inst_executed
00000000007db328 0000000000000068 r sm30_gst_request
00000000007db390 0000000000000068 r sm30_gred_count
00000000007db3f8 0000000000000068 r sm30_gst_mem_div_replay
00000000007db460 0000000000000068 r sm30_gst_transactions
00000000007db4c8 0000000000000068 r sm30_gld_mem_div_replay
00000000007db530 0000000000000068 r sm30_gld_request
00000000007db598 0000000000000068 r sm30_divergent_branch
00000000007db600 0000000000000068 r sm30_branch
00000000007db668 0000000000000068 r sm30_atom_count
00000000007db6d0 0000000000000068 r sm30_atom_cas_count
00000000007db738 0000000000000068 r sm30_active_warps
00000000007db7a0 0000000000000068 r sm30_active_cycles
00000000007db810 0000000000000160 r gm107_read_hw_sm_counters_code
00000000007db970 0000000000000130 r nvf0_read_hw_sm_counters_code
00000000007dbaa0 0000000000000130 r nve4_read_hw_sm_counters_code
00000000007dbbd0 0000000000000038 r supported_modifiers.0
00000000007dbc08 0000000000000068 r CSWTCH.63
00000000007dbc70 000000000000001c r CSWTCH.60
00000000007dbc90 0000000000000040 r CSWTCH.56
00000000007dbcd0 0000000000000010 r CSWTCH.54
00000000007dbce0 0000000000000014 r CSWTCH.52
00000000007dbd00 0000000000000010 r lut.0
00000000007dbd10 0000000000000060 r CSWTCH.9
00000000007dbd70 0000000000000060 r CSWTCH.10
00000000007dbdd0 0000000000000060 r CSWTCH.11
00000000007dbe30 0000000000000011 r hex_digits.0
00000000007dbe50 00000000000003e0 r hash_sizes
00000000007dc230 0000000000000004 r deleted_key_value
00000000007dc240 00000000000001a0 R util_format_linear_to_srgb_helper_table
00000000007dc3e0 0000000000000100 R util_format_linear_to_srgb_8unorm_table
00000000007dc4e0 0000000000000100 R util_format_srgb_to_linear_8unorm_table
00000000007dc5e0 0000000000000400 R util_format_srgb_8unorm_to_linear_float_table
00000000007dc9e0 0000000000000004 r weights2.0
00000000007dc9e8 0000000000000008 r weights3.1
00000000007dc9f0 0000000000000010 r weights4.2
00000000007dca00 00000000000000c0 r anchor_indices
00000000007dcac0 0000000000000100 r partition_table2
00000000007dcbc0 0000000000000100 r partition_table1
00000000007dccc0 0000000000000a68 r bptc_float_modes
00000000007dd728 0000000000000100 r bptc_unorm_modes
00000000007dd830 0000000000000020 r lookup.0
00000000007dd850 0000000000000080 r etc1_modifier_tables
00000000007dd8d0 0000000000000029 r __func__.0
00000000007dd900 000000000000002b r __func__.1
00000000007dd930 000000000000002a r __func__.2
00000000007dd960 0000000000000029 r __func__.3
00000000007dd990 000000000000002b r __func__.4
00000000007dd9c0 000000000000002a r __func__.5
00000000007dd9f0 0000000000000029 r __func__.0
00000000007dda20 000000000000002b r __func__.1
00000000007dda50 000000000000002a r __func__.2
00000000007dda80 0000000000000029 r __func__.3
00000000007ddab0 000000000000002b r __func__.4
00000000007ddae0 000000000000002a r __func__.5
00000000007ddb20 0000000000000050 r CSWTCH.109
00000000007ddbf8 0000000000000009 r swz.5
00000000007ddc08 0000000000000014 r CSWTCH.6
00000000007ddc20 000000000000000a r fogColorState.0
00000000007ddc30 000000000000000a r fogPStateOpt.1
00000000007ddc40 0000000000000028 r mvpState.2
00000000007ddc70 0000000000000028 r mvpState.3
00000000007dde30 000000000000001e r __func__.1
00000000007dde50 000000000000001e r __func__.2
00000000007ddf10 0000000000000060 R _mesa_vao_attribute_map
00000000007ddf70 0000000000000074 r CSWTCH.62
00000000007ddff0 0000000000000010 r color_logicop_mapping
00000000007de49c 0000000000000004 R RGBA32_INT
00000000007de4a0 0000000000000004 R RGBA32_UINT
00000000007de4a4 0000000000000004 R RGBA32_FLOAT
00000000007de960 0000000000000040 r transpose
00000000007de9a0 0000000000000018 r error_value
00000000007de9c0 0000000000000800 r table_API_OPENGLES32
00000000007df1c0 0000000000000800 r table_API_OPENGLES31
00000000007df9c0 0000000000000800 r table_API_OPENGLES3
00000000007e01c0 0000000000000800 r table_API_OPENGLES2
00000000007e09c0 0000000000000800 r table_API_OPENGLES
00000000007e11c0 0000000000000800 r table_API_OPENGL
00000000007e19c0 0000000000000010 r extra_EXT_disjoint_timer_query
00000000007e19d0 0000000000000008 r extra_EXT_provoking_vertex_32
00000000007e19e0 0000000000000010 r extra_EXT_shader_framebuffer_fetch
00000000007e19f0 0000000000000010 r extra_core_ARB_color_buffer_float_and_new_buffers
00000000007e1a00 000000000000000c r extra_NV_read_buffer_api_gl
00000000007e1a10 000000000000000c r extra_ARB_vertex_program_api_es2
00000000007e1a20 000000000000000c r extra_gl40_ARB_sample_shading
00000000007e1a30 000000000000000c r extra_version_32_OES_geometry_shader
00000000007e1a40 000000000000000c r extra_gl32_es3
00000000007e1a50 000000000000000c r extra_gl30_es3
00000000007e1a60 0000000000000008 r extra_version_43
00000000007e1a68 0000000000000008 r extra_version_32
00000000007e1a70 0000000000000008 r extra_version_31
00000000007e1a78 0000000000000008 r extra_version_30
00000000007e1a80 0000000000000008 r extra_NV_primitive_restart
00000000007e1a88 000000000000000c r extra_ARB_color_buffer_float_or_glcore
00000000007e1a98 0000000000000008 r extra_NV_viewport_swizzle
00000000007e1aa0 0000000000000008 r extra_ARB_spirv_extensions
00000000007e1aa8 0000000000000008 r extra_AMD_framebuffer_multisample_advanced
00000000007e1ab0 0000000000000008 r extra_ARB_sample_locations
00000000007e1ab8 0000000000000008 r extra_NV_conservative_raster_pre_snap_triangles
00000000007e1ac0 0000000000000008 r extra_NV_conservative_raster_dilate
00000000007e1ac8 0000000000000008 r extra_NV_conservative_raster
00000000007e1ad0 0000000000000008 r extra_ARB_sparse_buffer
00000000007e1ad8 0000000000000008 r extra_KHR_robustness
00000000007e1ae0 0000000000000008 r extra_ARB_compute_variable_group_size
00000000007e1ae8 0000000000000008 r extra_OES_primitive_bounding_box
00000000007e1af0 0000000000000008 r extra_KHR_blend_equation_advanced_coherent
00000000007e1af8 0000000000000008 r extra_EXT_window_rectangles
00000000007e1b00 0000000000000008 r extra_ARB_cull_distance
00000000007e1b08 0000000000000008 r extra_NVX_gpu_memory_info
00000000007e1b10 0000000000000008 r extra_ATI_meminfo
00000000007e1b18 0000000000000008 r extra_ARB_indirect_parameters
00000000007e1b20 0000000000000008 r extra_ARB_shader_storage_buffer_object
00000000007e1b28 0000000000000008 r extra_ARB_tessellation_shader
00000000007e1b30 0000000000000008 r extra_ARB_framebuffer_no_attachments
00000000007e1b38 0000000000000008 r extra_ARB_polygon_offset_clamp
00000000007e1b40 0000000000000008 r extra_ARB_clip_control
00000000007e1b48 0000000000000008 r extra_ARB_explicit_uniform_location
00000000007e1b50 0000000000000008 r extra_INTEL_performance_query
00000000007e1b58 000000000000000c r extra_ARB_transform_feedback3_ARB_gpu_shader5
00000000007e1b68 0000000000000008 r extra_ARB_query_buffer_object
00000000007e1b70 0000000000000008 r extra_ARB_shader_image_load_store
00000000007e1b78 0000000000000008 r extra_ARB_draw_indirect
00000000007e1b80 0000000000000008 r extra_ARB_shader_atomic_counters
00000000007e1b88 0000000000000008 r extra_ARB_texture_gather
00000000007e1b90 0000000000000008 r extra_ARB_texture_multisample
00000000007e1b98 0000000000000008 r extra_ARB_texture_buffer_range
00000000007e1ba0 000000000000000c r extra_ARB_texture_cube_map_array_OES_texture_cube_map_array
00000000007e1bb0 0000000000000008 r extra_ARB_timer_query
00000000007e1bb8 0000000000000008 r extra_ARB_uniform_buffer_object
00000000007e1bc0 0000000000000008 r extra_ARB_blend_func_extended
00000000007e1bc8 0000000000000008 r extra_OES_EGL_image_external
00000000007e1bd0 0000000000000008 r extra_EXT_framebuffer_sRGB
00000000007e1bd8 0000000000000008 r extra_ARB_color_buffer_float
00000000007e1be0 000000000000000c r extra_ARB_vertex_program_ARB_fragment_program
00000000007e1bf0 000000000000000c r extra_NV_point_sprite_ARB_point_sprite
00000000007e1c00 0000000000000008 r extra_ARB_vertex_program
00000000007e1c08 0000000000000008 r extra_EXT_pixel_buffer_object
00000000007e1c10 0000000000000008 r extra_ARB_transform_feedback3
00000000007e1c18 0000000000000008 r extra_EXT_transform_feedback
00000000007e1c20 0000000000000008 r extra_ARB_vertex_shader
00000000007e1c28 0000000000000008 r extra_ARB_sync
00000000007e1c30 0000000000000008 r extra_ARB_seamless_cube_map
00000000007e1c38 000000000000000c r extra_ARB_framebuffer_object_EXT_framebuffer_multisample
00000000007e1c48 0000000000000008 r extra_ARB_fragment_program
00000000007e1c50 0000000000000008 r extra_ARB_fragment_shader
00000000007e1c58 0000000000000008 r extra_EXT_provoking_vertex
00000000007e1c60 0000000000000008 r extra_ATI_fragment_shader
00000000007e1c68 0000000000000008 r extra_AMD_depth_clamp_separate
00000000007e1c70 0000000000000008 r extra_ARB_depth_clamp
00000000007e1c78 0000000000000008 r extra_EXT_depth_bounds_test
00000000007e1c80 0000000000000008 r extra_EXT_stencil_two_side
00000000007e1c88 0000000000000008 r extra_NV_texture_rectangle
00000000007e1c90 0000000000000008 r extra_NV_point_sprite
00000000007e1c98 0000000000000008 r extra_EXT_texture_filter_anisotropic
00000000007e1ca0 0000000000000008 r extra_NV_fog_distance
00000000007e1ca8 0000000000000008 r extra_EXT_texture_array
00000000007e1cb0 0000000000000008 r extra_ARB_texture_cube_map
00000000007e1cb8 0000000000000008 r extra_INTEL_conservative_rasterization
00000000007e1cc0 0000000000000010 r extra_KHR_robustness_or_GL
00000000007e1cd0 000000000000000c r extra_ES32
00000000007e1ce0 000000000000000c r extra_ARB_gpu_shader5_or_OES_sample_variables
00000000007e1cf0 000000000000000c r extra_ARB_gpu_shader5_or_oes_geometry_shader
00000000007e1d00 000000000000000c r extra_ARB_viewport_array_or_oes_viewport_array
00000000007e1d10 000000000000000c r extra_ARB_viewport_array_or_oes_geometry_shader
00000000007e1d20 0000000000000008 r extra_ARB_framebuffer_no_attachments_and_geometry_shader
00000000007e1d30 0000000000000010 r extra_ARB_shader_image_load_store_shader_storage_buffer_object_es31
00000000007e1d40 0000000000000008 r extra_ARB_shader_storage_buffer_object_and_geometry_shader
00000000007e1d48 000000000000000c r extra_ARB_shader_storage_buffer_object_es31
00000000007e1d58 000000000000000c r extra_ARB_compute_shader_es31
00000000007e1d68 0000000000000008 r extra_ARB_shader_image_load_store_and_tessellation
00000000007e1d70 0000000000000008 r extra_ARB_shader_atomic_counters_and_tessellation
00000000007e1d78 0000000000000008 r extra_ARB_shader_image_load_store_and_geometry_shader
00000000007e1d80 0000000000000008 r extra_ARB_shader_atomic_counters_and_geometry_shader
00000000007e1d88 000000000000000c r extra_EXT_texture_array_es3
00000000007e1d98 000000000000000c r extra_EXT_packed_float
00000000007e1da8 000000000000000c r extra_EXT_framebuffer_sRGB_and_new_buffers
00000000007e1db8 000000000000000c r extra_ARB_ES3_compatibility_api_es3
00000000007e1dc8 000000000000000c r extra_ARB_ES2_compatibility_api_es2
00000000007e1dd8 0000000000000008 r extra_ARB_uniform_buffer_object_and_geometry_shader
00000000007e1de0 000000000000000c r extra_ARB_transform_feedback2_api_es3
00000000007e1df0 0000000000000008 r extra_texture_buffer_object
00000000007e1e00 0000000000000010 r extra_GLSL_130_es3_gpushader4
00000000007e1e10 000000000000000c r extra_EXT_texture_integer_and_new_buffers
00000000007e1e20 0000000000000008 r extra_flush_current
00000000007e1e28 000000000000000c r extra_flush_current_valid_texture_unit
00000000007e1e38 0000000000000008 r extra_valid_clip_distance
00000000007e1e40 0000000000000008 r extra_valid_texture_unit
00000000007e1e48 0000000000000008 r extra_valid_draw_buffer
00000000007e1e50 0000000000000008 r extra_new_frag_clamp
00000000007e1e58 0000000000000008 r extra_new_buffers
00000000007e1e60 0000000000000020 r stage_pairs.0
00000000007e1ec0 0000000000000044 r cem_ranges
00000000007e1f08 00000000000000c8 r formats
00000000007e2000 0000000000000028 r CSWTCH.19
00000000007e2000 0000000000000028 r CSWTCH.29
00000000007e2028 0000000000000005 r CSWTCH.13
00000000007e2030 0000000000000014 r CSWTCH.12
00000000007e26c0 0000000000000018 r CSWTCH.54
00000000007e26d8 000000000000000a r fog_color.0
00000000007e26e8 000000000000000a r fog_params_state.1
00000000007e26f8 000000000000001c r CSWTCH.10
00000000007e2760 0000000000000080 r table.0
00000000007e29f0 0000000000000010 r zeros.0
00000000007e2a00 0000000000000007 r CSWTCH.5
00000000007e2a08 000000000000001c r CSWTCH.4
00000000007e2a28 0000000000000014 r CSWTCH.15
00000000007e2a40 000000000000001c r CSWTCH.6
00000000007e2ec8 000000000000001c r CSWTCH.14
00000000007e3378 000000000000002c r CSWTCH.1102
00000000007e33a8 000000000000002c r CSWTCH.1101
00000000007e33d8 000000000000002c r CSWTCH.1100
00000000007e3408 000000000000001c r CSWTCH.593
00000000007e3428 0000000000000014 r CSWTCH.570
00000000007e3440 0000000000000050 r CSWTCH.414
00000000007e3490 000000000000000a r get_mesa_program_tgsi(gl_context*, gl_shader_program*, gl_linked_shader*)::wposTransformState
00000000007e34a0 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
00000000007e34b0 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
00000000007e34c0 000000000000000c r glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)::dot_opcodes
00000000007e34d0 0000000000000010 r swizzle_for_size(int)::size_swizzles
00000000007e35a8 000000000000000c r CSWTCH.243
00000000007e35b8 000000000000002c r CSWTCH.215
00000000007e35e8 0000000000000038 r CSWTCH.98
00000000007e3620 000000000000000a r wposTransformState.0
00000000007e3630 0000000000000040 r emit_inline_matrix_constructor(glsl_type const*, exec_list*, exec_list*, void*)::rhs_swiz
00000000007e36d8 0000000000000050 r CSWTCH.836
00000000007e3730 00000000000000d4 r ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)::operations
00000000007e3808 0000000000000048 r gl_NormalMatrix_elements
00000000007e3850 0000000000000060 r gl_TextureMatrixInverseTranspose_elements
00000000007e38b0 0000000000000060 r gl_TextureMatrixTranspose_elements
00000000007e3910 0000000000000060 r gl_TextureMatrixInverse_elements
00000000007e3970 0000000000000060 r gl_TextureMatrix_elements
00000000007e39d0 0000000000000060 r gl_ModelViewProjectionMatrixInverseTranspose_elements
00000000007e3a30 0000000000000060 r gl_ModelViewProjectionMatrixTranspose_elements
00000000007e3a90 0000000000000060 r gl_ModelViewProjectionMatrixInverse_elements
00000000007e3af0 0000000000000060 r gl_ModelViewProjectionMatrix_elements
00000000007e3b50 0000000000000060 r gl_ProjectionMatrixInverseTranspose_elements
00000000007e3bb0 0000000000000060 r gl_ProjectionMatrixTranspose_elements
00000000007e3c10 0000000000000060 r gl_ProjectionMatrixInverse_elements
00000000007e3c70 0000000000000060 r gl_ProjectionMatrix_elements
00000000007e3cd0 0000000000000060 r gl_ModelViewMatrixInverseTranspose_elements
00000000007e3d30 0000000000000060 r gl_ModelViewMatrixTranspose_elements
00000000007e3d90 0000000000000060 r gl_ModelViewMatrixInverse_elements
00000000007e3df0 0000000000000060 r gl_ModelViewMatrix_elements
00000000007e3e50 0000000000000018 r gl_CurrentAttribFragMESA_elements
00000000007e3e68 0000000000000018 r gl_CurrentAttribVertMESA_elements
00000000007e3e80 0000000000000018 r gl_FogParamsOptimizedMESA_elements
00000000007e3e98 0000000000000018 r gl_NormalScale_elements
00000000007e3eb0 0000000000000018 r gl_ObjectPlaneQ_elements
00000000007e3ec8 0000000000000018 r gl_ObjectPlaneR_elements
00000000007e3ee0 0000000000000018 r gl_ObjectPlaneT_elements
00000000007e3ef8 0000000000000018 r gl_ObjectPlaneS_elements
00000000007e3f10 0000000000000018 r gl_EyePlaneQ_elements
00000000007e3f28 0000000000000018 r gl_EyePlaneR_elements
00000000007e3f40 0000000000000018 r gl_EyePlaneT_elements
00000000007e3f58 0000000000000018 r gl_EyePlaneS_elements
00000000007e3f70 0000000000000018 r gl_TextureEnvColor_elements
00000000007e3f88 0000000000000018 r gl_ClipPlane_elements
00000000007e3fa0 0000000000000018 r gl_NumSamples_elements
00000000007e3fb8 0000000000000050 r CSWTCH.28
00000000007e4008 0000000000000050 r CSWTCH.21
00000000007e4058 0000000000000038 r CSWTCH.159
00000000007e4238 000000000000001c r CSWTCH.66
00000000007e4378 0000000000000018 r CSWTCH.1025
00000000007e4390 0000000000000520 R nv50_ir::TexInstruction::formatTable
00000000007e48b0 00000000000001b0 R nv50_ir::TexInstruction::Target::descTable
00000000007e4e10 00000000000000dc r CSWTCH.918
00000000007e4ef0 0000000000000054 r CSWTCH.711
00000000007e4f48 00000000000000fc r CSWTCH.709
00000000007e5048 0000000000000048 r CSWTCH.706
00000000007e5090 0000000000000029 r CSWTCH.704
00000000007e50c0 0000000000000030 r CSWTCH.702
00000000007e52d8 0000000000000024 r CSWTCH.867
00000000007e5300 0000000000000034 r CSWTCH.740
00000000007e5338 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
00000000007e5340 0000000000000034 r CSWTCH.653
00000000007e5378 0000000000000034 r CSWTCH.37
00000000007e53b0 00000000000001f8 R nv50_ir::Target::operationClass
00000000007e55b0 000000000000007e R nv50_ir::Target::operationSrcNr
00000000007e5658 0000000000000034 r CSWTCH.52
00000000007e5690 000000000000006c r nv50_ir::TargetNVC0::initOpInfo()::noDest
00000000007e5700 000000000000003c r nv50_ir::TargetNVC0::initOpInfo()::commutative
00000000007e5740 0000000000000038 r nv50_ir::_initPropsGM107
00000000007e5778 0000000000000030 r nv50_ir::_initPropsNVE4
00000000007e57a8 0000000000000160 r nv50_ir::_initProps
00000000007e5908 0000000000000060 r CSWTCH.40
00000000007e5970 0000000000000400 r util_crc32_table
00000000007e5d70 0000000000000010 r fog_modes.0
00000000007e5f90 0000000000000014 r yyloc_default.0
00000000007e5fb0 000000000000010c r yyr2
00000000007e60c0 000000000000010c r yyr1
00000000007e61d0 00000000000002c4 r yycheck
00000000007e64a0 00000000000002c4 r yytable
00000000007e6770 0000000000000110 r yydefgoto
00000000007e6880 0000000000000110 r yypgoto
00000000007e6990 0000000000000384 r yydefact
00000000007e6d20 0000000000000384 r yypact
00000000007e70b0 000000000000016a r yytranslate
00000000007e7220 000000000000001c r CSWTCH.4
00000000007e7240 0000000000000038 r CSWTCH.5
00000000007e7278 0000000000000060 r CSWTCH.2
00000000007e72d8 0000000000000060 r CSWTCH.8
00000000007e7338 0000000000000034 r CSWTCH.126
00000000007e7370 0000000000000020 r nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)::baseSize2
00000000007e74e0 0000000000000004 r CSWTCH.769
00000000007e74e8 0000000000000005 r CSWTCH.703
00000000007e74f0 0000000000000030 r CSWTCH.701
00000000007e7520 000000000000001c r CSWTCH.698
00000000007e7540 000000000000000c r CSWTCH.651
00000000007e7540 000000000000000c r CSWTCH.653
00000000007e7550 000000000000000c r CSWTCH.649
00000000007e7560 0000000000000020 r CSWTCH.635
00000000007e7560 0000000000000020 r CSWTCH.694
00000000007e7580 0000000000000044 r CSWTCH.481
00000000007e75c8 000000000000001c r CSWTCH.469
00000000007e75e8 000000000000001c r CSWTCH.468
00000000007e7608 0000000000000038 r CSWTCH.457
00000000007e7640 0000000000000038 r CSWTCH.455
00000000007e7678 000000000000000e r CSWTCH.342
00000000007e7688 0000000000000034 r CSWTCH.336
00000000007e76c0 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
00000000007e76c8 0000000000000034 r CSWTCH.76
00000000007e77e8 0000000000000014 r CSWTCH.493
00000000007e7800 0000000000000034 r CSWTCH.485
00000000007e7998 0000000000000068 r CSWTCH.12
00000000007e7a00 00000000000007f0 r yy_chk
00000000007e81f0 00000000000007f0 r yy_nxt
00000000007e89e0 0000000000000540 r yy_def
00000000007e8f20 0000000000000540 r yy_base
00000000007e9460 0000000000000044 r yy_meta
00000000007e94b0 0000000000000100 r yy_ec
00000000007e95b0 000000000000053a r yy_accept
00000000007e9af0 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00000000007e9b18 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
00000000007e9b48 000000000000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
00000000007e9b78 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
00000000007e9ba0 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
00000000007e9bc8 000000000000000d V typeinfo name for std::type_info
00000000007e9bd8 000000000000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
00000000007e9be8 0000000000000988 R std::__detail::__prime_list
00000000007ea570 000000000000000d V typeinfo name for std::bad_alloc
00000000007ea580 0000000000000019 V typeinfo name for std::bad_array_new_length
00000000007ea5a0 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
00000000007ea5c8 000000000000000d V typeinfo name for std::exception
00000000007ea5d8 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
00000000007ea5f8 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
00000000007ea620 0000000000000010 V typeinfo name for std::logic_error
00000000007ea630 0000000000000011 V typeinfo name for std::length_error
00000000007ea648 0000000000000011 V typeinfo name for std::out_of_range
00000000007ea660 000000000000d7a0 r public_stubs
00000000007f7e00 000000000000a555 r public_string_pool
0000000000802358 0000000000000014 r CSWTCH.1000
0000000000802380 0000000000000024 r s_emptyFence.0
0000000000802420 0000000000000023 r g_bq_InterfaceDescriptor
0000000000802450 0000000000000086 r _error_code_map
00000000008024d8 0000000000000020 r error_table
0000000000802500 0000000000000100 r canon_map
0000000000802600 0000000000000048 r _pow10(unsigned int)::_powers_of_10
0000000000802648 000000000000000a r _double_parser_trans_actions
0000000000802658 000000000000000a r _double_parser_trans_targs
0000000000802670 00000000000000bf r _double_parser_indicies
0000000000802730 0000000000000009 r _double_parser_index_offsets
0000000000802740 0000000000000009 r _double_parser_key_spans
0000000000802750 0000000000000013 r _double_parser_trans_keys
00000000008027f0 000000000000040c r format1_names_msgidx
0000000000802c00 000000000000073a r format1_names_msgstr
0000000000803340 0000000000000620 r cff1_std_strings_msgidx
0000000000803960 0000000000000d73 r cff1_std_strings_msgstr
00000000008046d8 0000000000000200 r OT::unicode_to_macroman(unsigned int)::mapping
00000000008048e0 00000000000005a0 r _hb_arabic_u16
0000000000804e80 00000000000001d0 r _hb_arabic_u8
00000000008051c0 0000000000000038 r horizontal_features
00000000008051f8 0000000000000038 r common_features
0000000000805230 0000000000000004 R minus_1
0000000000805238 0000000000000002 R _hb_Null_AAT_Lookup
0000000000805240 000000000000000c R _hb_Null_OT_CmapSubtableLongGroup
0000000000805250 0000000000000009 R _hb_Null_OT_RangeRecord
0000000000805260 0000000000000008 R _hb_Null_OT_LangSys
0000000000805268 0000000000000002 R _hb_Null_OT_Index
0000000000805270 0000000000000280 R _hb_NullPool
00000000008054f0 00000000000001d0 r _hb_emoji_u8
00000000008056c0 0000000000000100 R _hb_modified_combining_class
0000000000805800 00000000000005a0 r _hb_arabic_u16
0000000000805da0 00000000000001d0 r _hb_arabic_u8
0000000000805f70 00000000000004e0 r feature_mappings
00000000008064e0 0000000000000100 r standard_encoding_to_sid
00000000008065e0 0000000000000158 r expert_subset_charset_sid_to_gid
0000000000806738 0000000000000294 r expert_charset_sid_to_gid
00000000008069d0 00000000000000ae r expert_subset_charset_to_sid
0000000000806a80 000000000000014c r expert_charset_to_sid
0000000000806c50 0000000000000001 r hb_second
0000000000806c58 0000000000000008 r table_tags
0000000000806c60 0000000000000038 r modifier_combining_marks
0000000000806ca0 000000000000001c r arabic_fallback_features
0000000000806cc0 00000000000000a8 r arabic_state_table
0000000000806d70 0000000000000020 r arabic_features
0000000000806d90 0000000000000014 r ligature_3_table
0000000000806da8 0000000000000016 r ligature_mark_table
0000000000806dc0 0000000000000414 r ligature_table
00000000008071e0 0000000000000598 r shaping_table
0000000000807780 000000000000059a r joining_table
0000000000807d20 0000000000000001 r hb_first
0000000000807da8 0000000000000060 R _hb_ot_shaper_dumber
0000000000807e08 0000000000000060 R _hb_ot_shaper_default
0000000000807e70 0000000000000010 r hangul_features
0000000000807e80 000000000000006c r compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
0000000000807f18 0000000000000088 r indic_features
0000000000807fa0 00000000000000f0 r indic_configs
0000000000808090 0000000000000114 r _indic_syllable_machine_eof_trans
00000000008081b0 000000000000008a r _indic_syllable_machine_from_state_actions
0000000000808240 000000000000008a r _indic_syllable_machine_to_state_actions
00000000008082d0 0000000000000096 r _indic_syllable_machine_trans_actions
0000000000808370 0000000000000096 r _indic_syllable_machine_trans_targs
0000000000808410 000000000000059f r _indic_syllable_machine_indicies
00000000008089b0 0000000000000114 r _indic_syllable_machine_index_offsets
0000000000808ad0 000000000000008a r _indic_syllable_machine_key_spans
0000000000808b60 0000000000000115 r _indic_syllable_machine_trans_keys
0000000000808c78 0000000000000048 r khmer_features
0000000000808cc0 0000000000000056 r _khmer_syllable_machine_eof_trans
0000000000808d20 000000000000002b r _khmer_syllable_machine_from_state_actions
0000000000808d50 000000000000002b r _khmer_syllable_machine_to_state_actions
0000000000808d80 0000000000000031 r _khmer_syllable_machine_trans_actions
0000000000808dc0 0000000000000031 r _khmer_syllable_machine_trans_targs
0000000000808e00 00000000000003bd r _khmer_syllable_machine_indicies
00000000008091c0 0000000000000056 r _khmer_syllable_machine_index_offsets
0000000000809220 000000000000002b r _khmer_syllable_machine_key_spans
0000000000809250 0000000000000057 r _khmer_syllable_machine_trans_keys
00000000008092a8 0000000000000060 R _hb_ot_shaper_myanmar_zawgyi
0000000000809310 0000000000000010 r myanmar_other_features
0000000000809320 0000000000000010 r myanmar_basic_features
0000000000809330 000000000000006e r _myanmar_syllable_machine_eof_trans
00000000008093a0 0000000000000037 r _myanmar_syllable_machine_from_state_actions
00000000008093e0 0000000000000037 r _myanmar_syllable_machine_to_state_actions
0000000000809420 000000000000003d r _myanmar_syllable_machine_trans_actions
0000000000809460 000000000000003d r _myanmar_syllable_machine_trans_targs
00000000008094a0 00000000000007cd r _myanmar_syllable_machine_indicies
0000000000809c70 000000000000006e r _myanmar_syllable_machine_index_offsets
0000000000809ce0 0000000000000037 r _myanmar_syllable_machine_key_spans
0000000000809d20 000000000000006f r _myanmar_syllable_machine_trans_keys
0000000000809d90 0000000000000048 r thai_below_state_machine
0000000000809de0 0000000000000014 r thai_below_start_state
0000000000809df8 0000000000000060 r thai_above_state_machine
0000000000809e60 0000000000000014 r thai_above_start_state
0000000000809e78 0000000000000012 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
0000000000809e90 000000000000004e r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
0000000000809ee0 0000000000000024 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
0000000000809f08 0000000000000036 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
0000000000809f70 0000000000000014 r use_other_features
0000000000809f90 0000000000000010 r use_topographical_features
0000000000809fa0 000000000000001c r use_basic_features
0000000000809fc0 00000000000006b0 r hb_use_u16
000000000080a670 0000000000000d0f r hb_use_u8
000000000080b380 00000000000000fa r _use_syllable_machine_eof_trans
000000000080b480 000000000000007d r _use_syllable_machine_from_state_actions
000000000080b500 000000000000007d r _use_syllable_machine_to_state_actions
000000000080b580 000000000000008f r _use_syllable_machine_trans_actions
000000000080b610 000000000000008f r _use_syllable_machine_trans_targs
000000000080b6a0 0000000000001138 r _use_syllable_machine_indicies
000000000080c7e0 00000000000000fa r _use_syllable_machine_index_offsets
000000000080c8e0 000000000000007d r _use_syllable_machine_key_spans
000000000080c960 00000000000000fb r _use_syllable_machine_trans_keys
000000000080ca60 0000000000000001 r hb_second
000000000080ca68 0000000000000001 r hb_identity
000000000080cb40 0000000000002648 r ot_languages3
000000000080f190 0000000000000660 r ot_languages2
000000000080f7f0 0000000000000188 r _hb_ucd_i16
000000000080f980 0000000000005140 r _hb_ucd_u16
0000000000814ac0 00000000000044cc r _hb_ucd_u8
0000000000818f90 0000000000000cc0 r _hb_ucd_dm2_u64_map
0000000000819c50 00000000000009f8 r _hb_ucd_dm2_u32_map
000000000081a650 00000000000000dc r _hb_ucd_dm1_p2_map
000000000081a730 0000000000000672 r _hb_ucd_dm1_p0_map
000000000081adb0 00000000000002b0 r _hb_ucd_sc_map
000000000081b060 0000000000000db0 r indic_table
000000000081be10 0000000000000010 r atanlo
000000000081be20 0000000000000010 r atanhi
000000000081be30 0000000000000008 r Zero
000000000081be40 0000000000001048 R __pow_log_data
000000000081ce88 0000000000000018 r CSWTCH.7
000000000081cea0 0000000000000018 r CSWTCH.6
000000000081cec0 0000000000000120 R __log2f_data
000000000081cfe0 0000000000000020 r atanlo
000000000081d000 0000000000000020 r atanhi
000000000081d020 000000000000000c r CSWTCH.7
000000000081d030 000000000000000c r CSWTCH.6
000000000081d040 0000000000000080 r npio2_hw
000000000081d0c0 0000000000000318 r two_over_pi
000000000081d3d8 0000000000000120 R __logf_data
000000000081d500 000000000000002c r PIo2
000000000081d530 000000000000000c r init_jk
000000000081d540 0000000000000490 R __log2_data
000000000081d9d0 00000000000000b0 r ft_trig_arctan_table
000000000081da80 0000000000000008 r nibble_mask
000000000081da90 0000000000000020 r hdigits
000000000081dab0 0000000000000020 r ddigits
000000000081dad0 0000000000000080 r a2i
000000000081db50 0000000000000001 r empty
000000000081db58 0000000000000014 r cff_header_fields.0
000000000081db70 0000000000000200 r cff_expert_encoding
000000000081dd70 0000000000000200 r cff_standard_encoding
000000000081df70 00000000000000ae r cff_expertsubset_charset
000000000081e020 000000000000014c r cff_expert_charset
000000000081e170 00000000000001ca r cff_isoadobe_charset
000000000081e340 0000000000000050 r power_tens
000000000081e390 0000000000000034 r pcf_accel_msb_header
000000000081e3c8 0000000000000034 r pcf_accel_header
000000000081e400 000000000000001c r pcf_enc_msb_header
000000000081e420 000000000000001c r pcf_enc_header
000000000081e440 0000000000000014 r pcf_property_msb_header
000000000081e458 0000000000000014 r pcf_property_header
000000000081e470 000000000000001c r pcf_compressed_metric_header
000000000081e490 0000000000000020 r pcf_metric_msb_header
000000000081e4b0 0000000000000020 r pcf_metric_header
000000000081e4d0 0000000000000018 r pcf_table_header
000000000081e4e8 0000000000000010 r pcf_toc_header
000000000081e4f8 0000000000000074 r pfr_header_fields
000000000081e668 000000000000000c r readFromStack.0
000000000081e678 000000000000000c r readFromStack.1
000000000081e688 000000000000000c r readFromStack.2
000000000081e698 000000000000000c r readFromStack.3
000000000081e6b0 0000000000000080 r ft_char_table
000000000081e730 0000000000000028 r ft_extra_glyph_name_offsets
000000000081e760 0000000000000055 r ft_extra_glyph_names
000000000081e7c0 0000000000000028 r ft_extra_glyph_unicodes
000000000081e7f0 000000000000dabd R ft_adobe_glyph_list
000000000082c2b0 0000000000000200 R t1_expert_encoding
000000000082c4b0 0000000000000200 R t1_standard_encoding
000000000082c6b0 000000000000030e R ft_sid_names
000000000082c9c0 0000000000000204 R ft_mac_names
000000000082cbd0 0000000000000e70 R ft_standard_glyph_names
000000000082da60 000000000000003c r woff_header_fields.0
000000000082daa0 0000000000000010 r ttc_header_fields.1
000000000082dab0 0000000000000084 r tt_encodings.2
000000000082db38 000000000000004c r metrics_header_fields.3
000000000082db88 000000000000003c r maxp_fields_extra.4
000000000082dbc8 0000000000000010 r maxp_fields.5
000000000082dbd8 0000000000000010 r os2_fields_extra5.6
000000000082dbe8 000000000000001c r os2_fields_extra2.7
000000000082dc08 0000000000000010 r os2_fields_extra1.8
000000000082dc18 00000000000000b0 r os2_fields.9
000000000082dcc8 000000000000002c r post_fields.10
000000000082dcf8 000000000000001c r name_record_fields.11
000000000082dd18 000000000000000c r langTag_record_fields.12
000000000082dd28 0000000000000014 r name_table_fields.13
000000000082dd40 0000000000000044 r pclt_fields.14
000000000082dd88 0000000000000054 r header_fields.15
000000000082dde0 0000000000000018 r table_dir_entry_fields.16
000000000082ddf8 0000000000000018 r offset_table_fields.17
000000000082de10 0000000000000010 r hexdigits
000000000082de20 0000000000000010 r sfnt_ps_map
000000000082df58 0000000000000020 r fvaraxis_fields.0
000000000082df78 0000000000000024 r fvar_fields.1
000000000082dfa0 0000000000000024 r gvar_fields.2
000000000082dfc8 00000000000005d0 r sfnt_id.3
000000000082e5a0 0000000000000190 r trick_names.4
000000000082e730 0000000000000100 r opcode_length
000000000082e830 0000000000000100 r Pop_Push_Count
000000000082e930 0000000000000060 R tt_default_graphics_state
000000000082e990 0000000000000004 r tt_service_truetype_engine
000000000082e9f0 0000000000000098 r winfnt_header_fields
000000000082ea88 0000000000000018 r winpe_rsrc_data_entry_fields
000000000082eaa0 0000000000000010 r winpe_rsrc_dir_entry_fields
000000000082eab0 0000000000000020 r winpe_rsrc_dir_fields
000000000082ead0 0000000000000020 r winpe32_section_fields
000000000082eaf0 0000000000000034 r winpe32_header_fields
000000000082eb28 0000000000000018 r winne_header_fields
000000000082eb40 0000000000000014 r winmz_header_fields
000000000082eb58 0000000000000010 r titling_feature
000000000082eb68 0000000000000010 r superscript_feature
000000000082eb78 0000000000000010 r subscript_feature
000000000082eb88 0000000000000010 r small_capitals_feature
000000000082eb98 0000000000000010 r scientific_inferiors_feature
000000000082eba8 0000000000000010 r ruby_feature
000000000082ebb8 0000000000000010 r petite_capitals_feature
000000000082ebc8 0000000000000010 r ordinals_feature
000000000082ebd8 0000000000000010 r small_capitals_from_capitals_feature
000000000082ebe8 0000000000000010 r petite_capitals_from_capitals_feature
000000000082ec00 00000000000000f0 r scripts
000000000082ecf0 0000000000000008 r titling_coverage
000000000082ecf8 0000000000000008 r superscript_coverage
000000000082ed00 0000000000000008 r subscript_coverage
000000000082ed08 0000000000000008 r small_capitals_coverage
000000000082ed10 0000000000000008 r scientific_inferiors_coverage
000000000082ed18 0000000000000008 r ruby_coverage
000000000082ed20 0000000000000008 r petite_capitals_coverage
000000000082ed28 0000000000000008 r ordinals_coverage
000000000082ed30 0000000000000008 r small_capitals_from_capitals_coverage
000000000082ed38 0000000000000008 r petite_capitals_from_capitals_coverage
000000000082ed40 0000000000000018 R af_hani_nonbase_uniranges
000000000082ed58 0000000000000110 R af_hani_uniranges
000000000082ee68 0000000000000050 R af_tibt_nonbase_uniranges
000000000082eeb8 0000000000000010 R af_tibt_uniranges
000000000082eec8 0000000000000028 R af_sylo_nonbase_uniranges
000000000082eef0 0000000000000010 R af_sylo_uniranges
000000000082ef00 0000000000000038 R af_orya_nonbase_uniranges
000000000082ef38 0000000000000010 R af_orya_uniranges
000000000082ef48 0000000000000020 R af_limb_nonbase_uniranges
000000000082ef68 0000000000000010 R af_limb_uniranges
000000000082ef78 0000000000000008 R af_vaii_nonbase_uniranges
000000000082ef80 0000000000000010 R af_vaii_uniranges
000000000082ef90 0000000000000008 R af_tfng_nonbase_uniranges
000000000082ef98 0000000000000010 R af_tfng_uniranges
000000000082efa8 0000000000000020 R af_thai_nonbase_uniranges
000000000082efc8 0000000000000010 R af_thai_uniranges
000000000082efd8 0000000000000030 R af_telu_nonbase_uniranges
000000000082f008 0000000000000010 R af_telu_uniranges
000000000082f018 0000000000000030 R af_tavt_nonbase_uniranges
000000000082f048 0000000000000010 R af_tavt_uniranges
000000000082f058 0000000000000020 R af_taml_nonbase_uniranges
000000000082f078 0000000000000010 R af_taml_uniranges
000000000082f088 0000000000000018 R af_sund_nonbase_uniranges
000000000082f0a0 0000000000000018 R af_sund_uniranges
000000000082f0b8 0000000000000018 R af_sinh_nonbase_uniranges
000000000082f0d0 0000000000000010 R af_sinh_uniranges
000000000082f0e0 0000000000000008 R af_shaw_nonbase_uniranges
000000000082f0e8 0000000000000010 R af_shaw_uniranges
000000000082f0f8 0000000000000018 R af_saur_nonbase_uniranges
000000000082f110 0000000000000010 R af_saur_uniranges
000000000082f120 0000000000000008 R af_rohg_nonbase_uniranges
000000000082f128 0000000000000010 R af_rohg_uniranges
000000000082f138 0000000000000008 R af_osma_nonbase_uniranges
000000000082f140 0000000000000010 R af_osma_uniranges
000000000082f150 0000000000000008 R af_osge_nonbase_uniranges
000000000082f158 0000000000000010 R af_osge_uniranges
000000000082f168 0000000000000008 R af_orkh_nonbase_uniranges
000000000082f170 0000000000000010 R af_orkh_uniranges
000000000082f180 0000000000000008 R af_olck_nonbase_uniranges
000000000082f188 0000000000000010 R af_olck_uniranges
000000000082f198 0000000000000008 R af_none_nonbase_uniranges
000000000082f1a0 0000000000000008 R af_none_uniranges
000000000082f1a8 0000000000000018 R af_nkoo_nonbase_uniranges
000000000082f1c0 0000000000000010 R af_nkoo_uniranges
000000000082f1d0 0000000000000068 R af_mymr_nonbase_uniranges
000000000082f238 0000000000000020 R af_mymr_uniranges
000000000082f258 0000000000000018 R af_mong_nonbase_uniranges
000000000082f270 0000000000000018 R af_mong_uniranges
000000000082f288 0000000000000008 R af_medf_nonbase_uniranges
000000000082f290 0000000000000010 R af_medf_uniranges
000000000082f2a0 0000000000000028 R af_mlym_nonbase_uniranges
000000000082f2c8 0000000000000010 R af_mlym_uniranges
000000000082f2d8 0000000000000008 R af_lisu_nonbase_uniranges
000000000082f2e0 0000000000000010 R af_lisu_uniranges
000000000082f2f0 0000000000000008 R af_latp_nonbase_uniranges
000000000082f2f8 0000000000000070 R af_latp_uniranges
000000000082f368 0000000000000008 R af_latb_nonbase_uniranges
000000000082f370 0000000000000020 R af_latb_uniranges
000000000082f390 0000000000000088 R af_latn_nonbase_uniranges
000000000082f418 0000000000000108 R af_latn_uniranges
000000000082f520 0000000000000020 R af_lao_nonbase_uniranges
000000000082f540 0000000000000010 R af_lao_uniranges
000000000082f550 0000000000000008 R af_khms_nonbase_uniranges
000000000082f558 0000000000000010 R af_khms_uniranges
000000000082f568 0000000000000028 R af_khmr_nonbase_uniranges
000000000082f590 0000000000000010 R af_khmr_uniranges
000000000082f5a0 0000000000000038 R af_knda_nonbase_uniranges
000000000082f5d8 0000000000000010 R af_knda_uniranges
000000000082f5e8 0000000000000010 R af_kali_nonbase_uniranges
000000000082f5f8 0000000000000010 R af_kali_uniranges
000000000082f608 0000000000000030 R af_hebr_nonbase_uniranges
000000000082f638 0000000000000018 R af_hebr_uniranges
000000000082f650 0000000000000030 R af_guru_nonbase_uniranges
000000000082f680 0000000000000010 R af_guru_uniranges
000000000082f690 0000000000000038 R af_gujr_nonbase_uniranges
000000000082f6c8 0000000000000010 R af_gujr_uniranges
000000000082f6d8 0000000000000040 R af_grek_nonbase_uniranges
000000000082f718 0000000000000018 R af_grek_uniranges
000000000082f730 0000000000000008 R af_goth_nonbase_uniranges
000000000082f738 0000000000000010 R af_goth_uniranges
000000000082f748 0000000000000010 R af_glag_nonbase_uniranges
000000000082f758 0000000000000018 R af_glag_uniranges
000000000082f770 0000000000000008 R af_geok_nonbase_uniranges
000000000082f778 0000000000000018 R af_geok_uniranges
000000000082f790 0000000000000008 R af_geor_nonbase_uniranges
000000000082f798 0000000000000018 R af_geor_uniranges
000000000082f7b0 0000000000000010 R af_ethi_nonbase_uniranges
000000000082f7c0 0000000000000028 R af_ethi_uniranges
000000000082f7e8 0000000000000008 R af_dsrt_nonbase_uniranges
000000000082f7f0 0000000000000010 R af_dsrt_uniranges
000000000082f800 0000000000000048 R af_deva_nonbase_uniranges
000000000082f848 0000000000000038 R af_deva_uniranges
000000000082f880 0000000000000028 R af_cyrl_nonbase_uniranges
000000000082f8a8 0000000000000030 R af_cyrl_uniranges
000000000082f8d8 0000000000000008 R af_cprt_nonbase_uniranges
000000000082f8e0 0000000000000010 R af_cprt_uniranges
000000000082f8f0 0000000000000010 R af_copt_nonbase_uniranges
000000000082f900 0000000000000010 R af_copt_uniranges
000000000082f910 0000000000000008 R af_cher_nonbase_uniranges
000000000082f918 0000000000000018 R af_cher_uniranges
000000000082f930 0000000000000008 R af_cari_nonbase_uniranges
000000000082f938 0000000000000010 R af_cari_uniranges
000000000082f948 0000000000000008 R af_cans_nonbase_uniranges
000000000082f950 0000000000000018 R af_cans_uniranges
000000000082f968 0000000000000020 R af_cakm_nonbase_uniranges
000000000082f988 0000000000000010 R af_cakm_uniranges
000000000082f998 0000000000000010 R af_buhd_nonbase_uniranges
000000000082f9a8 0000000000000010 R af_buhd_uniranges
000000000082f9b8 0000000000000038 R af_beng_nonbase_uniranges
000000000082f9f0 0000000000000010 R af_beng_uniranges
000000000082fa00 0000000000000010 R af_bamu_nonbase_uniranges
000000000082fa10 0000000000000010 R af_bamu_uniranges
000000000082fa20 0000000000000010 R af_avst_nonbase_uniranges
000000000082fa30 0000000000000010 R af_avst_uniranges
000000000082fa40 0000000000000010 R af_armn_nonbase_uniranges
000000000082fa50 0000000000000018 R af_armn_uniranges
000000000082fa68 00000000000000a0 R af_arab_nonbase_uniranges
000000000082fb08 0000000000000038 R af_arab_uniranges
000000000082fb40 0000000000000010 R af_adlm_nonbase_uniranges
000000000082fb50 0000000000000010 R af_adlm_uniranges
000000000082fb60 0000000000000014 R af_hani_dflt_style_class
000000000082fb78 0000000000000014 R af_tibt_dflt_style_class
000000000082fb90 0000000000000014 R af_sylo_dflt_style_class
000000000082fba8 0000000000000014 R af_orya_dflt_style_class
000000000082fbc0 0000000000000014 R af_limb_dflt_style_class
000000000082fbd8 0000000000000014 R af_vaii_dflt_style_class
000000000082fbf0 0000000000000014 R af_thai_dflt_style_class
000000000082fc08 0000000000000014 R af_tfng_dflt_style_class
000000000082fc20 0000000000000014 R af_telu_dflt_style_class
000000000082fc38 0000000000000014 R af_tavt_dflt_style_class
000000000082fc50 0000000000000014 R af_taml_dflt_style_class
000000000082fc68 0000000000000014 R af_sund_dflt_style_class
000000000082fc80 0000000000000014 R af_sinh_dflt_style_class
000000000082fc98 0000000000000014 R af_shaw_dflt_style_class
000000000082fcb0 0000000000000014 R af_saur_dflt_style_class
000000000082fcc8 0000000000000014 R af_rohg_dflt_style_class
000000000082fce0 0000000000000014 R af_osma_dflt_style_class
000000000082fcf8 0000000000000014 R af_osge_dflt_style_class
000000000082fd10 0000000000000014 R af_orkh_dflt_style_class
000000000082fd28 0000000000000014 R af_olck_dflt_style_class
000000000082fd40 0000000000000014 R af_none_dflt_style_class
000000000082fd58 0000000000000014 R af_nkoo_dflt_style_class
000000000082fd70 0000000000000014 R af_mymr_dflt_style_class
000000000082fd88 0000000000000014 R af_mong_dflt_style_class
000000000082fda0 0000000000000014 R af_medf_dflt_style_class
000000000082fdb8 0000000000000014 R af_mlym_dflt_style_class
000000000082fdd0 0000000000000014 R af_lisu_dflt_style_class
000000000082fde8 0000000000000014 R af_latp_dflt_style_class
000000000082fe00 0000000000000014 R af_latb_dflt_style_class
000000000082fe18 0000000000000014 R af_latn_dflt_style_class
000000000082fe30 0000000000000014 R af_latn_titl_style_class
000000000082fe48 0000000000000014 R af_latn_sups_style_class
000000000082fe60 0000000000000014 R af_latn_subs_style_class
000000000082fe78 0000000000000014 R af_latn_smcp_style_class
000000000082fe90 0000000000000014 R af_latn_sinf_style_class
000000000082fea8 0000000000000014 R af_latn_pcap_style_class
000000000082fec0 0000000000000014 R af_latn_ordn_style_class
000000000082fed8 0000000000000014 R af_latn_c2sc_style_class
000000000082fef0 0000000000000014 R af_latn_c2cp_style_class
000000000082ff08 0000000000000014 R af_lao_dflt_style_class
000000000082ff20 0000000000000014 R af_knda_dflt_style_class
000000000082ff38 0000000000000014 R af_khms_dflt_style_class
000000000082ff50 0000000000000014 R af_khmr_dflt_style_class
000000000082ff68 0000000000000014 R af_kali_dflt_style_class
000000000082ff80 0000000000000014 R af_hebr_dflt_style_class
000000000082ff98 0000000000000014 R af_guru_dflt_style_class
000000000082ffb0 0000000000000014 R af_gujr_dflt_style_class
000000000082ffc8 0000000000000014 R af_grek_dflt_style_class
000000000082ffe0 0000000000000014 R af_grek_titl_style_class
000000000082fff8 0000000000000014 R af_grek_sups_style_class
0000000000830010 0000000000000014 R af_grek_subs_style_class
0000000000830028 0000000000000014 R af_grek_smcp_style_class
0000000000830040 0000000000000014 R af_grek_sinf_style_class
0000000000830058 0000000000000014 R af_grek_pcap_style_class
0000000000830070 0000000000000014 R af_grek_ordn_style_class
0000000000830088 0000000000000014 R af_grek_c2sc_style_class
00000000008300a0 0000000000000014 R af_grek_c2cp_style_class
00000000008300b8 0000000000000014 R af_goth_dflt_style_class
00000000008300d0 0000000000000014 R af_glag_dflt_style_class
00000000008300e8 0000000000000014 R af_geok_dflt_style_class
0000000000830100 0000000000000014 R af_geor_dflt_style_class
0000000000830118 0000000000000014 R af_ethi_dflt_style_class
0000000000830130 0000000000000014 R af_dsrt_dflt_style_class
0000000000830148 0000000000000014 R af_deva_dflt_style_class
0000000000830160 0000000000000014 R af_cyrl_dflt_style_class
0000000000830178 0000000000000014 R af_cyrl_titl_style_class
0000000000830190 0000000000000014 R af_cyrl_sups_style_class
00000000008301a8 0000000000000014 R af_cyrl_subs_style_class
00000000008301c0 0000000000000014 R af_cyrl_smcp_style_class
00000000008301d8 0000000000000014 R af_cyrl_sinf_style_class
00000000008301f0 0000000000000014 R af_cyrl_pcap_style_class
0000000000830208 0000000000000014 R af_cyrl_ordn_style_class
0000000000830220 0000000000000014 R af_cyrl_c2sc_style_class
0000000000830238 0000000000000014 R af_cyrl_c2cp_style_class
0000000000830250 0000000000000014 R af_cprt_dflt_style_class
0000000000830268 0000000000000014 R af_copt_dflt_style_class
0000000000830280 0000000000000014 R af_cher_dflt_style_class
0000000000830298 0000000000000014 R af_cari_dflt_style_class
00000000008302b0 0000000000000014 R af_cans_dflt_style_class
00000000008302c8 0000000000000014 R af_cakm_dflt_style_class
00000000008302e0 0000000000000014 R af_buhd_dflt_style_class
00000000008302f8 0000000000000014 R af_beng_dflt_style_class
0000000000830310 0000000000000014 R af_bamu_dflt_style_class
0000000000830328 0000000000000014 R af_avst_dflt_style_class
0000000000830340 0000000000000014 R af_armn_dflt_style_class
0000000000830358 0000000000000014 R af_arab_dflt_style_class
0000000000830370 0000000000000014 R af_adlm_dflt_style_class
0000000000830388 0000000000000848 R af_blue_stringsets
0000000000830bd0 000000000000159b R af_blue_strings
00000000008321e0 0000000000000008 r png_signature.1
00000000008321e8 000000000000000a r valid_parameters.0
0000000000832200 0000000000000011 r digits.1
0000000000832220 0000000000000010 r png_digit
0000000000832230 0000000000000090 r row_mask.0
00000000008322c0 0000000000000048 r display_mask.1
0000000000832308 0000000000000007 r png_pass_yinc
0000000000832310 0000000000000007 r png_pass_ystart
0000000000832318 0000000000000007 r png_pass_inc
0000000000832320 0000000000000007 r png_pass_start
0000000000832330 0000000000000100 r fourbppswaptable
0000000000832430 0000000000000100 r twobppswaptable
0000000000832530 0000000000000100 r onebppswaptable
0000000000832630 0000000000000007 r png_pass_yinc
0000000000832638 0000000000000007 r png_pass_ystart
0000000000832640 0000000000000007 r png_pass_inc
0000000000832648 0000000000000007 r png_pass_start
0000000000832650 0000000000000400 r crc_table
0000000000832a50 0000000000000080 r x2n_table
0000000000832ad0 0000000000002000 r crc_braid_table
0000000000834b10 0000000000000800 r lenfix.1
0000000000835310 0000000000000080 r distfix.0
0000000000835390 0000000000000026 r order.2
00000000008353c0 0000000000000040 r dext.0
0000000000835400 0000000000000040 r dbase.1
0000000000835440 000000000000003e r lext.2
0000000000835480 000000000000003e r lbase.3
00000000008354c0 000000000000002f R inflate_copyright
00000000008354f0 0000000000000100 R _length_code
00000000008355f0 0000000000000074 r extra_lbits
0000000000835670 0000000000000074 r base_length
00000000008356f0 0000000000000200 R _dist_code
00000000008358f0 0000000000000078 r extra_dbits
0000000000835970 0000000000000078 r base_dist
00000000008359f0 0000000000000013 r bl_order
0000000000835a08 0000000000000078 r static_dtree
0000000000835a80 0000000000000480 r static_ltree
0000000000835f00 000000000000004c r extra_blbits
0000000000836068 0000000000000008 r terminator.0
0000000000836070 0000000000000001 R __aarch64_have_sme
0000000000836198 0000000000000014 r fpinan.0
00000000008361b0 0000000000000014 r fpi.1
00000000008361d0 0000000000000028 r tinytens
00000000008361f8 0000000000000100 R __hexdig
0000000000836430 0000000000000010 r zeroes.0
0000000000836440 0000000000000010 r blanks.1
0000000000836550 0000000000000010 r zeroes.0
0000000000836560 0000000000000010 r blanks.1
0000000000836570 0000000000000101 R _ctype_
0000000000836780 0000000000000022 r basefix.0
00000000008367a8 000000000000006c R __action_table
0000000000836818 000000000000006c R __state_table
0000000000836888 0000000000000100 R __chclass
0000000000836988 000000000000000c r p05.0
0000000000836998 0000000000000028 R __mprec_bigtens
00000000008369c0 00000000000000c8 R __mprec_tens
0000000000836b80 0000000000000010 r zeroes.0
0000000000836b90 0000000000000010 r blanks.1
0000000000836ba0 00000000000035dc r categories
000000000083a180 r __tls_align
000000000083a21c r __eh_frame_hdr_end
000000000083a21c r __eh_frame_hdr_start
000000000083a220 r __EH_FRAME_BEGIN__
000000000090b944 r __FRAME_END__
000000000090c000 d __frame_dummy_init_array_entry
000000000090c000 d __init_array_start
000000000090c000 d __preinit_array_end
000000000090c000 d __preinit_array_start
000000000090c000 d __relro_start
000000000090c050 d __do_global_dtors_aux_fini_array_entry
000000000090c050 d __fini_array_start
000000000090c050 d __init_array_end
000000000090c078 d __fini_array_end
000000000090c080 0000000000000200 d gpMixFunctionTable
000000000090c280 0000000000000200 d gpFastMixFunctionTable
000000000090c480 0000000000000028 d mustype
000000000090c4a8 0000000000000078 d sig
000000000090c520 0000000000000080 d keySigs
000000000090c5a0 0000000000000018 d pat_fun
000000000090c5c0 0000000000000168 d mpg123_error
000000000090c730 0000000000000020 d text_converters
000000000090c750 00000000000000a8 d decname
000000000090c800 00000000000000d8 d mapend
000000000090c8e0 00000000000000d8 d map
000000000090c9b8 0000000000000020 d htc
000000000090c9d8 0000000000000200 d ht
000000000090cbd8 0000000000000048 d fft_state48000_960_0
000000000090cc20 0000000000000048 d fft_state48000_960_1
000000000090cc68 0000000000000048 d fft_state48000_960_2
000000000090ccb0 0000000000000048 d fft_state48000_960_3
000000000090ccf8 00000000000000a0 d mode48000_960_120
000000000090cd98 0000000000000010 D silk_LBRR_flags_iCDF_ptr
000000000090cda8 0000000000000078 d CELT_PVQ_U_ROW
000000000090ce20 0000000000000018 D silk_LTP_gain_iCDF_ptrs
000000000090ce38 0000000000000018 D silk_LTP_vq_ptrs_Q7
000000000090ce50 0000000000000048 D silk_NLSF_CB_NB_MB
000000000090ce98 0000000000000048 D silk_NLSF_CB_WB
000000000090cee0 0000000000000070 d known.9876
000000000090cf50 0000000000000410 D jpeg_std_message_table
000000000090d360 0000000000000020 d kCat3456
000000000090d380 0000000000000038 d SDL_priority_prefixes
000000000090d3c0 0000000000000200 d channel_converters
000000000090d5c0 00000000000000b0 d map_StringForControllerButton
000000000090d670 0000000000000038 d map_StringForControllerAxis
000000000090d6a8 00000000000020b0 d arrControllers
000000000090f760 0000000000000020 d getpixes
000000000090f780 0000000000000028 d colorkey_blit
000000000090f7b0 0000000000000028 d bitmap_blit
000000000090f7e0 0000000000000028 d one_blitkey
000000000090f810 0000000000000028 d one_blit
000000000090f840 0000000000000020 d normal_blit
000000000090f860 00000000000001b0 d normal_blit_4
000000000090fa10 0000000000000150 d normal_blit_3
000000000090fb60 0000000000000150 d normal_blit_2
000000000090fcb0 0000000000000030 d normal_blit_1
000000000090fce0 0000000000000080 d egl_platforms
000000000090fd60 0000000000000020 d level_strings
000000000090fd80 0000000000000048 d st_gl_api
000000000090fdc8 00000000000000d8 D util_format_x8b8g8r8_sint_description
000000000090fea0 00000000000000d8 D util_format_x8b8g8r8_snorm_description
000000000090ff78 00000000000000d8 D util_format_a8b8g8r8_sint_description
0000000000910050 00000000000000d8 D util_format_a8b8g8r8_snorm_description
0000000000910128 00000000000000d8 D util_format_g16r16_snorm_description
0000000000910200 00000000000000d8 D util_format_g16r16_unorm_description
00000000009102d8 00000000000000d8 D util_format_g8r8_sint_description
00000000009103b0 00000000000000d8 D util_format_g8r8_snorm_description
0000000000910488 00000000000000d8 D util_format_g8r8_unorm_description
0000000000910560 00000000000000d8 D util_format_b5g6r5_srgb_description
0000000000910638 00000000000000d8 D util_format_r10g10b10a2_sint_description
0000000000910710 00000000000000d8 D util_format_r10g10b10a2_uint_description
00000000009107e8 00000000000000d8 D util_format_r32a32_sint_description
00000000009108c0 00000000000000d8 D util_format_r32a32_uint_description
0000000000910998 00000000000000d8 D util_format_r16a16_sint_description
0000000000910a70 00000000000000d8 D util_format_r16a16_uint_description
0000000000910b48 00000000000000d8 D util_format_r8a8_sint_description
0000000000910c20 00000000000000d8 D util_format_r8a8_uint_description
0000000000910cf8 00000000000000d8 D util_format_r32a32_float_description
0000000000910dd0 00000000000000d8 D util_format_r16a16_float_description
0000000000910ea8 00000000000000d8 D util_format_r16a16_snorm_description
0000000000910f80 00000000000000d8 D util_format_r16a16_unorm_description
0000000000911058 00000000000000d8 D util_format_r8a8_snorm_description
0000000000911130 00000000000000d8 D util_format_r32g32b32x32_sint_description
0000000000911208 00000000000000d8 D util_format_r32g32b32x32_uint_description
00000000009112e0 00000000000000d8 D util_format_r32g32b32x32_float_description
00000000009113b8 00000000000000d8 D util_format_r16g16b16x16_sint_description
0000000000911490 00000000000000d8 D util_format_r16g16b16x16_uint_description
0000000000911568 00000000000000d8 D util_format_r16g16b16x16_float_description
0000000000911640 00000000000000d8 D util_format_r16g16b16x16_snorm_description
0000000000911718 00000000000000d8 D util_format_r16g16b16x16_unorm_description
00000000009117f0 00000000000000d8 D util_format_b10g10r10x2_unorm_description
00000000009118c8 00000000000000d8 D util_format_r8g8b8x8_sint_description
00000000009119a0 00000000000000d8 D util_format_r8g8b8x8_uint_description
0000000000911a78 00000000000000d8 D util_format_r8g8b8x8_srgb_description
0000000000911b50 00000000000000d8 D util_format_r8g8b8x8_snorm_description
0000000000911c28 00000000000000d8 D util_format_b5g5r5a1_uint_description
0000000000911d00 00000000000000d8 D util_format_r5g5b5a1_uint_description
0000000000911dd8 00000000000000d8 D util_format_a1b5g5r5_uint_description
0000000000911eb0 00000000000000d8 D util_format_a1r5g5b5_uint_description
0000000000911f88 00000000000000d8 D util_format_a4b4g4r4_uint_description
0000000000912060 00000000000000d8 D util_format_a4r4g4b4_uint_description
0000000000912138 00000000000000d8 D util_format_b4g4r4a4_uint_description
0000000000912210 00000000000000d8 D util_format_r4g4b4a4_uint_description
00000000009122e8 00000000000000d8 D util_format_b2g3r3_uint_description
00000000009123c0 00000000000000d8 D util_format_r3g3b2_uint_description
0000000000912498 00000000000000d8 D util_format_b5g6r5_uint_description
0000000000912570 00000000000000d8 D util_format_r5g6b5_uint_description
0000000000912648 00000000000000d8 D util_format_b10g10r10a2_sint_description
0000000000912720 00000000000000d8 D util_format_b10g10r10a2_uint_description
00000000009127f8 00000000000000d8 D util_format_a2b10g10r10_uint_description
00000000009128d0 00000000000000d8 D util_format_a2r10g10b10_uint_description
00000000009129a8 00000000000000d8 D util_format_a8b8g8r8_uint_description
0000000000912a80 00000000000000d8 D util_format_a8r8g8b8_uint_description
0000000000912b58 00000000000000d8 D util_format_b8g8r8a8_sint_description
0000000000912c30 00000000000000d8 D util_format_b8g8r8_sint_description
0000000000912d08 00000000000000d8 D util_format_b8g8r8a8_uint_description
0000000000912de0 00000000000000d8 D util_format_b8g8r8_uint_description
0000000000912eb8 00000000000000d8 D util_format_l32a32_sint_description
0000000000912f90 00000000000000d8 D util_format_l32_sint_description
0000000000913068 00000000000000d8 D util_format_i32_sint_description
0000000000913140 00000000000000d8 D util_format_a32_sint_description
0000000000913218 00000000000000d8 D util_format_l32a32_uint_description
00000000009132f0 00000000000000d8 D util_format_l32_uint_description
00000000009133c8 00000000000000d8 D util_format_i32_uint_description
00000000009134a0 00000000000000d8 D util_format_a32_uint_description
0000000000913578 00000000000000d8 D util_format_l16a16_sint_description
0000000000913650 00000000000000d8 D util_format_l16_sint_description
0000000000913728 00000000000000d8 D util_format_i16_sint_description
0000000000913800 00000000000000d8 D util_format_a16_sint_description
00000000009138d8 00000000000000d8 D util_format_l16a16_uint_description
00000000009139b0 00000000000000d8 D util_format_l16_uint_description
0000000000913a88 00000000000000d8 D util_format_i16_uint_description
0000000000913b60 00000000000000d8 D util_format_a16_uint_description
0000000000913c38 00000000000000d8 D util_format_l8a8_sint_description
0000000000913d10 00000000000000d8 D util_format_l8_sint_description
0000000000913de8 00000000000000d8 D util_format_i8_sint_description
0000000000913ec0 00000000000000d8 D util_format_a8_sint_description
0000000000913f98 00000000000000d8 D util_format_l8a8_uint_description
0000000000914070 00000000000000d8 D util_format_l8_uint_description
0000000000914148 00000000000000d8 D util_format_i8_uint_description
0000000000914220 00000000000000d8 D util_format_a8_uint_description
00000000009142f8 00000000000000d8 D util_format_r32g32b32a32_sint_description
00000000009143d0 00000000000000d8 D util_format_r32g32b32_sint_description
00000000009144a8 00000000000000d8 D util_format_r32g32_sint_description
0000000000914580 00000000000000d8 D util_format_r32_sint_description
0000000000914658 00000000000000d8 D util_format_r32g32b32a32_uint_description
0000000000914730 00000000000000d8 D util_format_r32g32b32_uint_description
0000000000914808 00000000000000d8 D util_format_r32g32_uint_description
00000000009148e0 00000000000000d8 D util_format_r32_uint_description
00000000009149b8 00000000000000d8 D util_format_r16g16b16a16_sint_description
0000000000914a90 00000000000000d8 D util_format_r16g16b16_sint_description
0000000000914b68 00000000000000d8 D util_format_r16g16_sint_description
0000000000914c40 00000000000000d8 D util_format_r16_sint_description
0000000000914d18 00000000000000d8 D util_format_r16g16b16a16_uint_description
0000000000914df0 00000000000000d8 D util_format_r16g16b16_uint_description
0000000000914ec8 00000000000000d8 D util_format_r16g16_uint_description
0000000000914fa0 00000000000000d8 D util_format_r16_uint_description
0000000000915078 00000000000000d8 D util_format_r8g8b8a8_sint_description
0000000000915150 00000000000000d8 D util_format_r8g8b8_sint_description
0000000000915228 00000000000000d8 D util_format_r8g8_sint_description
0000000000915300 00000000000000d8 D util_format_r8_sint_description
00000000009153d8 00000000000000d8 D util_format_r8g8b8a8_uint_description
00000000009154b0 00000000000000d8 D util_format_r8g8b8_uint_description
0000000000915588 00000000000000d8 D util_format_r8g8_uint_description
0000000000915660 00000000000000d8 D util_format_r8_uint_description
0000000000915738 00000000000000d8 D util_format_b10g10r10a2_snorm_description
0000000000915810 00000000000000d8 D util_format_b10g10r10a2_sscaled_description
00000000009158e8 00000000000000d8 D util_format_b10g10r10a2_uscaled_description
00000000009159c0 00000000000000d8 D util_format_r10g10b10a2_snorm_description
0000000000915a98 00000000000000d8 D util_format_r10g10b10a2_sscaled_description
0000000000915b70 00000000000000d8 D util_format_r10g10b10a2_uscaled_description
0000000000915c48 00000000000000d8 D util_format_a8r8_unorm_description
0000000000915d20 00000000000000d8 D util_format_r8a8_unorm_description
0000000000915df8 00000000000000d8 D util_format_r4a4_unorm_description
0000000000915ed0 00000000000000d8 D util_format_a4r4_unorm_description
0000000000915fa8 00000000000000d8 D util_format_r10g10b10x2_snorm_description
0000000000916080 00000000000000d8 D util_format_r10g10b10x2_uscaled_description
0000000000916158 00000000000000d8 D util_format_r32g32b32a32_fixed_description
0000000000916230 00000000000000d8 D util_format_r32g32b32_fixed_description
0000000000916308 00000000000000d8 D util_format_r32g32_fixed_description
00000000009163e0 00000000000000d8 D util_format_r32_fixed_description
00000000009164b8 00000000000000d8 D util_format_a8b8g8r8_sscaled_description
0000000000916590 00000000000000d8 D util_format_b8g8r8a8_sscaled_description
0000000000916668 00000000000000d8 D util_format_r8g8b8a8_sscaled_description
0000000000916740 00000000000000d8 D util_format_b8g8r8_sscaled_description
0000000000916818 00000000000000d8 D util_format_r8g8b8_sscaled_description
00000000009168f0 00000000000000d8 D util_format_r8g8_sscaled_description
00000000009169c8 00000000000000d8 D util_format_r8_sscaled_description
0000000000916aa0 00000000000000d8 D util_format_b8g8r8a8_snorm_description
0000000000916b78 00000000000000d8 D util_format_r8g8b8a8_snorm_description
0000000000916c50 00000000000000d8 D util_format_b8g8r8_snorm_description
0000000000916d28 00000000000000d8 D util_format_r8g8b8_snorm_description
0000000000916e00 00000000000000d8 D util_format_r8g8_snorm_description
0000000000916ed8 00000000000000d8 D util_format_r8_snorm_description
0000000000916fb0 00000000000000d8 D util_format_a8b8g8r8_uscaled_description
0000000000917088 00000000000000d8 D util_format_b8g8r8a8_uscaled_description
0000000000917160 00000000000000d8 D util_format_r8g8b8a8_uscaled_description
0000000000917238 00000000000000d8 D util_format_b8g8r8_uscaled_description
0000000000917310 00000000000000d8 D util_format_r8g8b8_uscaled_description
00000000009173e8 00000000000000d8 D util_format_r8g8_uscaled_description
00000000009174c0 00000000000000d8 D util_format_r8_uscaled_description
0000000000917598 00000000000000d8 D util_format_r8g8b8a8_unorm_description
0000000000917670 00000000000000d8 D util_format_b8g8r8_unorm_description
0000000000917748 00000000000000d8 D util_format_r8g8b8_unorm_description
0000000000917820 00000000000000d8 D util_format_r8g8_unorm_description
00000000009178f8 00000000000000d8 D util_format_r8_unorm_description
00000000009179d0 00000000000000d8 D util_format_r16g16b16a16_sscaled_description
0000000000917aa8 00000000000000d8 D util_format_r16g16b16_sscaled_description
0000000000917b80 00000000000000d8 D util_format_r16g16_sscaled_description
0000000000917c58 00000000000000d8 D util_format_r16_sscaled_description
0000000000917d30 00000000000000d8 D util_format_r16g16b16a16_snorm_description
0000000000917e08 00000000000000d8 D util_format_r16g16b16_snorm_description
0000000000917ee0 00000000000000d8 D util_format_r16g16_snorm_description
0000000000917fb8 00000000000000d8 D util_format_r16_snorm_description
0000000000918090 00000000000000d8 D util_format_r16g16b16a16_uscaled_description
0000000000918168 00000000000000d8 D util_format_r16g16b16_uscaled_description
0000000000918240 00000000000000d8 D util_format_r16g16_uscaled_description
0000000000918318 00000000000000d8 D util_format_r16_uscaled_description
00000000009183f0 00000000000000d8 D util_format_r16g16b16a16_unorm_description
00000000009184c8 00000000000000d8 D util_format_r16g16b16_unorm_description
00000000009185a0 00000000000000d8 D util_format_r16g16_unorm_description
0000000000918678 00000000000000d8 D util_format_r16_unorm_description
0000000000918750 00000000000000d8 D util_format_r16g16b16a16_float_description
0000000000918828 00000000000000d8 D util_format_r16g16b16_float_description
0000000000918900 00000000000000d8 D util_format_r16g16_float_description
00000000009189d8 00000000000000d8 D util_format_r16_float_description
0000000000918ab0 00000000000000d8 D util_format_r32g32b32a32_sscaled_description
0000000000918b88 00000000000000d8 D util_format_r32g32b32_sscaled_description
0000000000918c60 00000000000000d8 D util_format_r32g32_sscaled_description
0000000000918d38 00000000000000d8 D util_format_r32_sscaled_description
0000000000918e10 00000000000000d8 D util_format_r32g32b32a32_snorm_description
0000000000918ee8 00000000000000d8 D util_format_r32g32b32_snorm_description
0000000000918fc0 00000000000000d8 D util_format_r32g32_snorm_description
0000000000919098 00000000000000d8 D util_format_r32_snorm_description
0000000000919170 00000000000000d8 D util_format_r32g32b32a32_uscaled_description
0000000000919248 00000000000000d8 D util_format_r32g32b32_uscaled_description
0000000000919320 00000000000000d8 D util_format_r32g32_uscaled_description
00000000009193f8 00000000000000d8 D util_format_r32_uscaled_description
00000000009194d0 00000000000000d8 D util_format_r32g32b32a32_unorm_description
00000000009195a8 00000000000000d8 D util_format_r32g32b32_unorm_description
0000000000919680 00000000000000d8 D util_format_r32g32_unorm_description
0000000000919758 00000000000000d8 D util_format_r32_unorm_description
0000000000919830 00000000000000d8 D util_format_r32g32b32a32_float_description
0000000000919908 00000000000000d8 D util_format_r32g32b32_float_description
00000000009199e0 00000000000000d8 D util_format_r32g32_float_description
0000000000919ab8 00000000000000d8 D util_format_r32_float_description
0000000000919b90 00000000000000d8 D util_format_r64g64b64a64_float_description
0000000000919c68 00000000000000d8 D util_format_r64g64b64_float_description
0000000000919d40 00000000000000d8 D util_format_r64g64_float_description
0000000000919e18 00000000000000d8 D util_format_r64_float_description
0000000000919ef0 00000000000000d8 D util_format_atc_rgba_interpolated_description
0000000000919fc8 00000000000000d8 D util_format_atc_rgba_explicit_description
000000000091a0a0 00000000000000d8 D util_format_atc_rgb_description
000000000091a178 00000000000000d8 D util_format_astc_6x6x6_srgb_description
000000000091a250 00000000000000d8 D util_format_astc_6x6x5_srgb_description
000000000091a328 00000000000000d8 D util_format_astc_6x5x5_srgb_description
000000000091a400 00000000000000d8 D util_format_astc_5x5x5_srgb_description
000000000091a4d8 00000000000000d8 D util_format_astc_5x5x4_srgb_description
000000000091a5b0 00000000000000d8 D util_format_astc_5x4x4_srgb_description
000000000091a688 00000000000000d8 D util_format_astc_4x4x4_srgb_description
000000000091a760 00000000000000d8 D util_format_astc_4x4x3_srgb_description
000000000091a838 00000000000000d8 D util_format_astc_4x3x3_srgb_description
000000000091a910 00000000000000d8 D util_format_astc_3x3x3_srgb_description
000000000091a9e8 00000000000000d8 D util_format_astc_6x6x6_description
000000000091aac0 00000000000000d8 D util_format_astc_6x6x5_description
000000000091ab98 00000000000000d8 D util_format_astc_6x5x5_description
000000000091ac70 00000000000000d8 D util_format_astc_5x5x5_description
000000000091ad48 00000000000000d8 D util_format_astc_5x5x4_description
000000000091ae20 00000000000000d8 D util_format_astc_5x4x4_description
000000000091aef8 00000000000000d8 D util_format_astc_4x4x4_description
000000000091afd0 00000000000000d8 D util_format_astc_4x4x3_description
000000000091b0a8 00000000000000d8 D util_format_astc_4x3x3_description
000000000091b180 00000000000000d8 D util_format_astc_3x3x3_description
000000000091b258 00000000000000d8 D util_format_astc_12x12_srgb_description
000000000091b330 00000000000000d8 D util_format_astc_12x10_srgb_description
000000000091b408 00000000000000d8 D util_format_astc_10x10_srgb_description
000000000091b4e0 00000000000000d8 D util_format_astc_10x8_srgb_description
000000000091b5b8 00000000000000d8 D util_format_astc_10x6_srgb_description
000000000091b690 00000000000000d8 D util_format_astc_10x5_srgb_description
000000000091b768 00000000000000d8 D util_format_astc_8x8_srgb_description
000000000091b840 00000000000000d8 D util_format_astc_8x6_srgb_description
000000000091b918 00000000000000d8 D util_format_astc_8x5_srgb_description
000000000091b9f0 00000000000000d8 D util_format_astc_6x6_srgb_description
000000000091bac8 00000000000000d8 D util_format_astc_6x5_srgb_description
000000000091bba0 00000000000000d8 D util_format_astc_5x5_srgb_description
000000000091bc78 00000000000000d8 D util_format_astc_5x4_srgb_description
000000000091bd50 00000000000000d8 D util_format_astc_4x4_srgb_description
000000000091be28 00000000000000d8 D util_format_astc_12x12_description
000000000091bf00 00000000000000d8 D util_format_astc_12x10_description
000000000091bfd8 00000000000000d8 D util_format_astc_10x10_description
000000000091c0b0 00000000000000d8 D util_format_astc_10x8_description
000000000091c188 00000000000000d8 D util_format_astc_10x6_description
000000000091c260 00000000000000d8 D util_format_astc_10x5_description
000000000091c338 00000000000000d8 D util_format_astc_8x8_description
000000000091c410 00000000000000d8 D util_format_astc_8x6_description
000000000091c4e8 00000000000000d8 D util_format_astc_8x5_description
000000000091c5c0 00000000000000d8 D util_format_astc_6x6_description
000000000091c698 00000000000000d8 D util_format_astc_6x5_description
000000000091c770 00000000000000d8 D util_format_astc_5x5_description
000000000091c848 00000000000000d8 D util_format_astc_5x4_description
000000000091c920 00000000000000d8 D util_format_astc_4x4_description
000000000091c9f8 00000000000000d8 D util_format_etc2_rg11_snorm_description
000000000091cad0 00000000000000d8 D util_format_etc2_rg11_unorm_description
000000000091cba8 00000000000000d8 D util_format_etc2_r11_snorm_description
000000000091cc80 00000000000000d8 D util_format_etc2_r11_unorm_description
000000000091cd58 00000000000000d8 D util_format_etc2_srgba8_description
000000000091ce30 00000000000000d8 D util_format_etc2_rgba8_description
000000000091cf08 00000000000000d8 D util_format_etc2_srgb8a1_description
000000000091cfe0 00000000000000d8 D util_format_etc2_rgb8a1_description
000000000091d0b8 00000000000000d8 D util_format_etc2_srgb8_description
000000000091d190 00000000000000d8 D util_format_etc2_rgb8_description
000000000091d268 00000000000000d8 D util_format_fxt1_rgba_description
000000000091d340 00000000000000d8 D util_format_fxt1_rgb_description
000000000091d418 00000000000000d8 D util_format_z24_unorm_s8_uint_as_r8g8b8a8_description
000000000091d4f0 00000000000000d8 D util_format_r5sg5sb6u_norm_description
000000000091d5c8 00000000000000d8 D util_format_r10sg10sb10sa2u_norm_description
000000000091d6a0 00000000000000d8 D util_format_r8sg8sb8ux8u_norm_description
000000000091d778 00000000000000d8 D util_format_x8r8g8b8_srgb_description
000000000091d850 00000000000000d8 D util_format_a8r8g8b8_srgb_description
000000000091d928 00000000000000d8 D util_format_b8g8r8x8_srgb_description
000000000091da00 00000000000000d8 D util_format_b8g8r8a8_srgb_description
000000000091dad8 00000000000000d8 D util_format_x8b8g8r8_srgb_description
000000000091dbb0 00000000000000d8 D util_format_a8b8g8r8_srgb_description
000000000091dc88 00000000000000d8 D util_format_r8g8b8a8_srgb_description
000000000091dd60 00000000000000d8 D util_format_b8g8r8_srgb_description
000000000091de38 00000000000000d8 D util_format_r8g8b8_srgb_description
000000000091df10 00000000000000d8 D util_format_r8g8_srgb_description
000000000091dfe8 00000000000000d8 D util_format_l8a8_srgb_description
000000000091e0c0 00000000000000d8 D util_format_r8_srgb_description
000000000091e198 00000000000000d8 D util_format_l8_srgb_description
000000000091e270 00000000000000d8 D util_format_i32_float_description
000000000091e348 00000000000000d8 D util_format_l32a32_float_description
000000000091e420 00000000000000d8 D util_format_l32_float_description
000000000091e4f8 00000000000000d8 D util_format_a32_float_description
000000000091e5d0 00000000000000d8 D util_format_i16_float_description
000000000091e6a8 00000000000000d8 D util_format_l16a16_float_description
000000000091e780 00000000000000d8 D util_format_l16_float_description
000000000091e858 00000000000000d8 D util_format_a16_float_description
000000000091e930 00000000000000d8 D util_format_i16_snorm_description
000000000091ea08 00000000000000d8 D util_format_l16a16_snorm_description
000000000091eae0 00000000000000d8 D util_format_l16_snorm_description
000000000091ebb8 00000000000000d8 D util_format_a16_snorm_description
000000000091ec90 00000000000000d8 D util_format_i8_snorm_description
000000000091ed68 00000000000000d8 D util_format_l8a8_snorm_description
000000000091ee40 00000000000000d8 D util_format_l8_snorm_description
000000000091ef18 00000000000000d8 D util_format_a8_snorm_description
000000000091eff0 00000000000000d8 D util_format_l16a16_unorm_description
000000000091f0c8 00000000000000d8 D util_format_i16_unorm_description
000000000091f1a0 00000000000000d8 D util_format_a16_unorm_description
000000000091f278 00000000000000d8 D util_format_l16_unorm_description
000000000091f350 00000000000000d8 D util_format_l8a8_unorm_description
000000000091f428 00000000000000d8 D util_format_l4a4_unorm_description
000000000091f500 00000000000000d8 D util_format_i8_unorm_description
000000000091f5d8 00000000000000d8 D util_format_a8_unorm_description
000000000091f6b0 00000000000000d8 D util_format_l8_unorm_description
000000000091f788 00000000000000d8 D util_format_b2g3r3_unorm_description
000000000091f860 00000000000000d8 D util_format_r3g3b2_unorm_description
000000000091f938 00000000000000d8 D util_format_a2b10g10r10_unorm_description
000000000091fa10 00000000000000d8 D util_format_a2r10g10b10_unorm_description
000000000091fae8 00000000000000d8 D util_format_b10g10r10a2_unorm_description
000000000091fbc0 00000000000000d8 D util_format_r10g10b10x2_unorm_description
000000000091fc98 00000000000000d8 D util_format_r10g10b10a2_unorm_description
000000000091fd70 00000000000000d8 D util_format_b5g6r5_unorm_description
000000000091fe48 00000000000000d8 D util_format_r5g6b5_unorm_description
000000000091ff20 00000000000000d8 D util_format_a4b4g4r4_unorm_description
000000000091fff8 00000000000000d8 D util_format_a4r4g4b4_unorm_description
00000000009200d0 00000000000000d8 D util_format_b4g4r4x4_unorm_description
00000000009201a8 00000000000000d8 D util_format_b4g4r4a4_unorm_description
0000000000920280 00000000000000d8 D util_format_r4g4b4a4_unorm_description
0000000000920358 00000000000000d8 D util_format_a1b5g5r5_unorm_description
0000000000920430 00000000000000d8 D util_format_a1r5g5b5_unorm_description
0000000000920508 00000000000000d8 D util_format_x1b5g5r5_unorm_description
00000000009205e0 00000000000000d8 D util_format_b5g5r5a1_unorm_description
00000000009206b8 00000000000000d8 D util_format_b5g5r5x1_unorm_description
0000000000920790 00000000000000d8 D util_format_r5g5b5a1_unorm_description
0000000000920868 00000000000000d8 D util_format_r8g8b8x8_unorm_description
0000000000920940 00000000000000d8 D util_format_x8b8g8r8_unorm_description
0000000000920a18 00000000000000d8 D util_format_a8b8g8r8_unorm_description
0000000000920af0 00000000000000d8 D util_format_x8r8g8b8_unorm_description
0000000000920bc8 00000000000000d8 D util_format_a8r8g8b8_unorm_description
0000000000920ca0 00000000000000d8 D util_format_b8g8r8x8_unorm_description
0000000000920d78 00000000000000d8 D util_format_b8g8r8a8_unorm_description
0000000000920e50 00000000000000d8 D util_format_none_description
0000000000920f28 0000000000002ac0 D _mesa_extension_table
00000000009239e8 0000000000005240 d format_info
0000000000928c30 0000000000000028 d weights.3
0000000000928c60 0000000000000040 d decode_1.0
0000000000928ca0 0000000000000038 d inv_mat_tab
0000000000928ce0 0000000000000020 d vert_attrfunc
0000000000928d00 0000000000000088 d prim_names
0000000000928d88 0000000000000180 d st_debug_flags
0000000000928f08 0000000000001220 d _mesa_glsl_supported_extensions
000000000092a130 0000000000000060 d tex_opcode_strs
000000000092a190 00000000000004c8 D ir_expression_operation_strings
000000000092a658 0000000000000140 V vtable for ir_hierarchical_visitor
000000000092a798 00000000000000d0 V vtable for ir_print_visitor
000000000092a868 0000000000000038 d vtable for (anonymous namespace)::count_uniform_size
000000000092a8a0 0000000000000048 V vtable for parcel_out_uniform_storage
000000000092a8e8 00000000000000d0 d vtable for (anonymous namespace)::ir_lower_jumps_visitor
000000000092a9c0 0000000000000018 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::local_size_qualifiers
000000000092a9d8 0000000000000100 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000092aad8 0000000000000030 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000092ab08 0000000000000020 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000092ab28 0000000000000580 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000092b0a8 0000000000000070 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000092b120 0000000000000890 d yytname
000000000092b9b0 00000000000002b8 d yytname
000000000092bc68 0000000000000008 D glsl_type::atomic_uint_type
000000000092bc70 0000000000000008 D glsl_type::uimage2DMSArray_type
000000000092bc78 0000000000000008 D glsl_type::uimage2DMS_type
000000000092bc80 0000000000000008 D glsl_type::uimageCubeArray_type
000000000092bc88 0000000000000008 D glsl_type::uimage2DArray_type
000000000092bc90 0000000000000008 D glsl_type::uimage1DArray_type
000000000092bc98 0000000000000008 D glsl_type::uimageBuffer_type
000000000092bca0 0000000000000008 D glsl_type::uimageCube_type
000000000092bca8 0000000000000008 D glsl_type::uimage2DRect_type
000000000092bcb0 0000000000000008 D glsl_type::uimage3D_type
000000000092bcb8 0000000000000008 D glsl_type::uimage2D_type
000000000092bcc0 0000000000000008 D glsl_type::uimage1D_type
000000000092bcc8 0000000000000008 D glsl_type::iimage2DMSArray_type
000000000092bcd0 0000000000000008 D glsl_type::iimage2DMS_type
000000000092bcd8 0000000000000008 D glsl_type::iimageCubeArray_type
000000000092bce0 0000000000000008 D glsl_type::iimage2DArray_type
000000000092bce8 0000000000000008 D glsl_type::iimage1DArray_type
000000000092bcf0 0000000000000008 D glsl_type::iimageBuffer_type
000000000092bcf8 0000000000000008 D glsl_type::iimageCube_type
000000000092bd00 0000000000000008 D glsl_type::iimage2DRect_type
000000000092bd08 0000000000000008 D glsl_type::iimage3D_type
000000000092bd10 0000000000000008 D glsl_type::iimage2D_type
000000000092bd18 0000000000000008 D glsl_type::iimage1D_type
000000000092bd20 0000000000000008 D glsl_type::image2DMSArray_type
000000000092bd28 0000000000000008 D glsl_type::image2DMS_type
000000000092bd30 0000000000000008 D glsl_type::imageCubeArray_type
000000000092bd38 0000000000000008 D glsl_type::image2DArray_type
000000000092bd40 0000000000000008 D glsl_type::image1DArray_type
000000000092bd48 0000000000000008 D glsl_type::imageBuffer_type
000000000092bd50 0000000000000008 D glsl_type::imageCube_type
000000000092bd58 0000000000000008 D glsl_type::image2DRect_type
000000000092bd60 0000000000000008 D glsl_type::image3D_type
000000000092bd68 0000000000000008 D glsl_type::image2D_type
000000000092bd70 0000000000000008 D glsl_type::image1D_type
000000000092bd78 0000000000000008 D glsl_type::samplerExternalOES_type
000000000092bd80 0000000000000008 D glsl_type::sampler2DRectShadow_type
000000000092bd88 0000000000000008 D glsl_type::samplerCubeArrayShadow_type
000000000092bd90 0000000000000008 D glsl_type::sampler2DArrayShadow_type
000000000092bd98 0000000000000008 D glsl_type::sampler1DArrayShadow_type
000000000092bda0 0000000000000008 D glsl_type::samplerCubeShadow_type
000000000092bda8 0000000000000008 D glsl_type::sampler2DShadow_type
000000000092bdb0 0000000000000008 D glsl_type::sampler1DShadow_type
000000000092bdb8 0000000000000008 D glsl_type::usampler2DMSArray_type
000000000092bdc0 0000000000000008 D glsl_type::usampler2DMS_type
000000000092bdc8 0000000000000008 D glsl_type::usamplerBuffer_type
000000000092bdd0 0000000000000008 D glsl_type::usampler2DRect_type
000000000092bdd8 0000000000000008 D glsl_type::usamplerCubeArray_type
000000000092bde0 0000000000000008 D glsl_type::usampler2DArray_type
000000000092bde8 0000000000000008 D glsl_type::usampler1DArray_type
000000000092bdf0 0000000000000008 D glsl_type::usamplerCube_type
000000000092bdf8 0000000000000008 D glsl_type::usampler3D_type
000000000092be00 0000000000000008 D glsl_type::usampler2D_type
000000000092be08 0000000000000008 D glsl_type::usampler1D_type
000000000092be10 0000000000000008 D glsl_type::isampler2DMSArray_type
000000000092be18 0000000000000008 D glsl_type::isampler2DMS_type
000000000092be20 0000000000000008 D glsl_type::isamplerBuffer_type
000000000092be28 0000000000000008 D glsl_type::isampler2DRect_type
000000000092be30 0000000000000008 D glsl_type::isamplerCubeArray_type
000000000092be38 0000000000000008 D glsl_type::isampler2DArray_type
000000000092be40 0000000000000008 D glsl_type::isampler1DArray_type
000000000092be48 0000000000000008 D glsl_type::isamplerCube_type
000000000092be50 0000000000000008 D glsl_type::isampler3D_type
000000000092be58 0000000000000008 D glsl_type::isampler2D_type
000000000092be60 0000000000000008 D glsl_type::isampler1D_type
000000000092be68 0000000000000008 D glsl_type::sampler2DMSArray_type
000000000092be70 0000000000000008 D glsl_type::sampler2DMS_type
000000000092be78 0000000000000008 D glsl_type::samplerBuffer_type
000000000092be80 0000000000000008 D glsl_type::sampler2DRect_type
000000000092be88 0000000000000008 D glsl_type::samplerCubeArray_type
000000000092be90 0000000000000008 D glsl_type::sampler2DArray_type
000000000092be98 0000000000000008 D glsl_type::sampler1DArray_type
000000000092bea0 0000000000000008 D glsl_type::samplerCube_type
000000000092bea8 0000000000000008 D glsl_type::sampler3D_type
000000000092beb0 0000000000000008 D glsl_type::sampler2D_type
000000000092beb8 0000000000000008 D glsl_type::sampler1D_type
000000000092bec0 0000000000000008 D glsl_type::dmat4x3_type
000000000092bec8 0000000000000008 D glsl_type::dmat4x2_type
000000000092bed0 0000000000000008 D glsl_type::dmat3x4_type
000000000092bed8 0000000000000008 D glsl_type::dmat3x2_type
000000000092bee0 0000000000000008 D glsl_type::dmat2x4_type
000000000092bee8 0000000000000008 D glsl_type::dmat2x3_type
000000000092bef0 0000000000000008 D glsl_type::dmat4_type
000000000092bef8 0000000000000008 D glsl_type::dmat3_type
000000000092bf00 0000000000000008 D glsl_type::dmat2_type
000000000092bf08 0000000000000008 D glsl_type::mat4x3_type
000000000092bf10 0000000000000008 D glsl_type::mat4x2_type
000000000092bf18 0000000000000008 D glsl_type::mat3x4_type
000000000092bf20 0000000000000008 D glsl_type::mat3x2_type
000000000092bf28 0000000000000008 D glsl_type::mat2x4_type
000000000092bf30 0000000000000008 D glsl_type::mat2x3_type
000000000092bf38 0000000000000008 D glsl_type::mat4_type
000000000092bf40 0000000000000008 D glsl_type::mat3_type
000000000092bf48 0000000000000008 D glsl_type::mat2_type
000000000092bf50 0000000000000008 D glsl_type::u64vec4_type
000000000092bf58 0000000000000008 D glsl_type::u64vec3_type
000000000092bf60 0000000000000008 D glsl_type::u64vec2_type
000000000092bf68 0000000000000008 D glsl_type::uint64_t_type
000000000092bf70 0000000000000008 D glsl_type::i64vec4_type
000000000092bf78 0000000000000008 D glsl_type::i64vec3_type
000000000092bf80 0000000000000008 D glsl_type::i64vec2_type
000000000092bf88 0000000000000008 D glsl_type::int64_t_type
000000000092bf90 0000000000000008 D glsl_type::dvec4_type
000000000092bf98 0000000000000008 D glsl_type::dvec3_type
000000000092bfa0 0000000000000008 D glsl_type::dvec2_type
000000000092bfa8 0000000000000008 D glsl_type::double_type
000000000092bfb0 0000000000000008 D glsl_type::vec4_type
000000000092bfb8 0000000000000008 D glsl_type::vec3_type
000000000092bfc0 0000000000000008 D glsl_type::vec2_type
000000000092bfc8 0000000000000008 D glsl_type::float_type
000000000092bfd0 0000000000000008 D glsl_type::uvec4_type
000000000092bfd8 0000000000000008 D glsl_type::uvec3_type
000000000092bfe0 0000000000000008 D glsl_type::uvec2_type
000000000092bfe8 0000000000000008 D glsl_type::uint_type
000000000092bff0 0000000000000008 D glsl_type::ivec4_type
000000000092bff8 0000000000000008 D glsl_type::ivec3_type
000000000092c000 0000000000000008 D glsl_type::ivec2_type
000000000092c008 0000000000000008 D glsl_type::int_type
000000000092c010 0000000000000008 D glsl_type::bvec4_type
000000000092c018 0000000000000008 D glsl_type::bvec3_type
000000000092c020 0000000000000008 D glsl_type::bvec2_type
000000000092c028 0000000000000008 D glsl_type::bool_type
000000000092c030 0000000000000008 D glsl_type::void_type
000000000092c038 0000000000000008 D glsl_type::error_type
000000000092c040 00000000000007e0 d opcode_names
000000000092c820 0000000000000078 d tgsi_file_names
000000000092c898 0000000000000168 d names.0
000000000092ca00 0000000000000028 d hw_query_funcs
000000000092ca28 0000000000000020 d hw_metric_query_funcs
000000000092ca48 0000000000000180 d nvc0_hw_metric_queries
000000000092cbc8 0000000000000020 d hw_sm_query_funcs
000000000092cbf0 0000000000000648 d nvc0_hw_sm_queries
000000000092d240 0000000000000028 d weights.3
000000000092d270 0000000000000060 d fragResults.1
000000000092d2d0 0000000000000200 d vertResults.2
000000000092d4d0 0000000000000200 d fragAttribs.7
000000000092d6d0 0000000000000100 d vertAttribs.8
000000000092d7d0 0000000000000400 d AttribFuncsARB
000000000092dbd0 0000000000000200 d AttribFuncsNV
000000000092ddd0 0000000000000038 d table_set
000000000092de08 0000000000003d38 d values
0000000000931b40 0000000000000120 d inst_desc
0000000000931c60 00000000000000d0 V vtable for glsl_to_tgsi_visitor
0000000000931d30 0000000000000140 d ast_expression::operator_string(ast_operators)::operators
0000000000931e70 0000000000000020 d ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)::precision_names
0000000000931e90 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931ed0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931ef0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931f10 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931f50 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931f90 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931fd0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000931ff0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932030 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932050 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932070 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009320b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009320f0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932130 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932150 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932170 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009321b0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009321d0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009321f0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932230 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000932270 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009322b0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009322d0 0000000000000038 d deprecated_types
0000000000932308 0000000000000420 d _mesa_builtin_uniform_desc
0000000000932728 0000000000000078 d gl_Fog_elements
00000000009327a0 0000000000000048 d gl_BackLightProduct_elements
00000000009327e8 0000000000000048 d gl_FrontLightProduct_elements
0000000000932830 0000000000000018 d gl_BackLightModelProduct_elements
0000000000932848 0000000000000018 d gl_FrontLightModelProduct_elements
0000000000932860 0000000000000018 d gl_LightModel_elements
0000000000932878 0000000000000120 d gl_LightSource_elements
0000000000932998 0000000000000078 d gl_BackMaterial_elements
0000000000932a10 0000000000000078 d gl_FrontMaterial_elements
0000000000932a88 00000000000000a8 d gl_Point_elements
0000000000932b30 0000000000000048 d gl_DepthRange_elements
0000000000932b78 0000000000000028 V vtable for nv50_ir::Instruction
0000000000932ba0 0000000000000028 V vtable for nv50_ir::TexInstruction
0000000000932bc8 0000000000000028 V vtable for nv50_ir::CmpInstruction
0000000000932bf0 0000000000000028 V vtable for nv50_ir::FlowInstruction
0000000000932c18 0000000000000020 V vtable for nv50_ir::DeepClonePolicy<nv50_ir::Function>
0000000000932c38 0000000000000028 d vtable for (anonymous namespace)::Converter::BindArgumentsPass
0000000000932c60 0000000000000020 V vtable for nv50_ir::Graph
0000000000932c80 0000000000000040 V vtable for nv50_ir::DFSIterator
0000000000932cc0 0000000000000040 V vtable for nv50_ir::CFGIterator
0000000000932d00 0000000000000028 V vtable for nv50_ir::CopyPropagation
0000000000932d28 0000000000000028 V vtable for nv50_ir::MergeSplits
0000000000932d50 0000000000000028 V vtable for nv50_ir::LoadPropagation
0000000000932d78 0000000000000028 V vtable for nv50_ir::IndirectPropagation
0000000000932da0 0000000000000028 V vtable for nv50_ir::ConstantFolding
0000000000932dc8 0000000000000028 V vtable for nv50_ir::ModifierFolding
0000000000932df0 0000000000000028 V vtable for nv50_ir::AlgebraicOpt
0000000000932e18 0000000000000028 V vtable for nv50_ir::LateAlgebraicOpt
0000000000932e40 0000000000000028 V vtable for nv50_ir::Split64BitOpPreRA
0000000000932e68 0000000000000028 V vtable for nv50_ir::MemoryOpt
0000000000932e90 0000000000000028 V vtable for nv50_ir::FlatteningPass
0000000000932eb8 0000000000000028 V vtable for nv50_ir::PostRaLoadPropagation
0000000000932ee0 0000000000000028 V vtable for nv50_ir::GlobalCSE
0000000000932f08 0000000000000028 V vtable for nv50_ir::LocalCSE
0000000000932f30 0000000000000028 V vtable for nv50_ir::DeadCodeElim
0000000000932f58 0000000000000020 V vtable for nv50_ir::ShallowClonePolicy<nv50_ir::Function>
0000000000932f80 0000000000000020 d nv50_ir::gatherCompStr
0000000000932fa0 0000000000000080 d nv50_ir::texMaskStr
0000000000933020 0000000000000080 d nv50_ir::interpStr
00000000009330a0 0000000000000170 d nv50_ir::SemanticStr
0000000000933210 00000000000000c0 d nv50_ir::CondCodeStr
00000000009332d0 0000000000000040 d nv50_ir::RoundModeStr
0000000000933310 0000000000000070 d nv50_ir::DataTypeStr
0000000000933380 0000000000000020 d nv50_ir::xmadOpCModeStr
00000000009333a0 0000000000000028 d nv50_ir::barOpStr
00000000009333d0 0000000000000038 d nv50_ir::cctlOpStr
0000000000933410 0000000000000010 d nv50_ir::emitOpStr
0000000000933420 0000000000000010 d nv50_ir::rcprsqOpStr
0000000000933430 0000000000000030 d nv50_ir::pixldOpStr
0000000000933460 0000000000000020 d nv50_ir::shflOpStr
0000000000933480 0000000000000010 d nv50_ir::subfmOpStr
0000000000933490 0000000000000018 d nv50_ir::ldstSubOpStr
00000000009334b0 0000000000000050 d nv50_ir::atomSubOpStr
0000000000933500 0000000000000028 V vtable for nv50_ir::RegAlloc::PhiMovesPass
0000000000933528 0000000000000028 V vtable for nv50_ir::RegAlloc::ArgumentMovesPass
0000000000933550 0000000000000028 V vtable for nv50_ir::RegAlloc::BuildIntervalsPass
0000000000933578 0000000000000028 V vtable for nv50_ir::RegAlloc::InsertConstraintsPass
00000000009335a0 0000000000000020 V vtable for nv50_ir::DominatorTree
00000000009335c0 0000000000000050 V vtable for nv50_ir::DLList::Iterator
0000000000933610 00000000000005a0 d InstInfo
0000000000933bb0 00000000000007e8 d yytname
00000000009343a0 0000000000000078 d file_names
0000000000934418 0000000000000028 V vtable for nv50_ir::SchedDataCalculatorGM107
0000000000934440 0000000000000028 V vtable for nv50_ir::NVC0LegalizeSSA
0000000000934468 0000000000000028 V vtable for nv50_ir::NVC0LegalizePostRA
0000000000934490 0000000000000030 V vtable for nv50_ir::NVC0LoweringPass
00000000009344c0 0000000000003a50 D table_noop_array
0000000000937f10 0000000000003250 d public_entries
000000000093b160 0000000000000100 d romFS_devoptab
000000000093b260 0000000000000100 d fsdev_devoptab
000000000093b360 0000000000000030 d _hb_all_shapers
000000000093b390 0000000000000060 D _hb_ot_shaper_arabic
000000000093b3f0 0000000000000060 D _hb_ot_shaper_hangul
000000000093b450 0000000000000060 D _hb_ot_shaper_hebrew
000000000093b4b0 0000000000000060 D _hb_ot_shaper_indic
000000000093b510 0000000000000060 D _hb_ot_shaper_khmer
000000000093b570 0000000000000060 D _hb_ot_shaper_myanmar
000000000093b5d0 0000000000000060 D _hb_ot_shaper_thai
000000000093b630 0000000000000060 D _hb_ot_shaper_use
000000000093b690 0000000000000090 d ft_raccess_guess_table
000000000093b720 0000000000000040 D ft_svg_glyph_class
000000000093b760 0000000000000040 D ft_outline_glyph_class
000000000093b7a0 0000000000000040 D ft_bitmap_glyph_class
000000000093b7e0 00000000000000c0 D bdf_driver_class
000000000093b8a0 0000000000000030 d bdf_services
000000000093b8d0 0000000000000010 d bdf_service_bdf
000000000093b8e0 0000000000000050 d bdf_cmap_class
000000000093b930 00000000000007c8 d bdf_properties_
000000000093c0f8 00000000000009a0 d cff_field_handlers
000000000093ca98 00000000000000c0 D cff_driver_class
000000000093cb58 00000000000000b0 d cff_services
000000000093cc08 0000000000000028 d cff_service_cff_load
000000000093cc30 0000000000000048 d cff_service_metrics_variations
000000000093cc78 0000000000000098 d cff_service_multi_masters
000000000093cd10 0000000000000018 d cff_service_cid_info
000000000093cd28 0000000000000008 d cff_service_get_cmap_info
000000000093cd30 0000000000000008 d cff_service_ps_name
000000000093cd38 0000000000000028 d cff_service_ps_info
000000000093cd60 0000000000000010 d cff_service_glyph_dict
000000000093cd70 0000000000000050 D cff_cmap_unicode_class_rec
000000000093cdc0 0000000000000050 D cff_cmap_encoding_class_rec
000000000093ce10 00000000000000c0 D t1cid_driver_class
000000000093ced0 0000000000000060 d cid_services
000000000093cf30 0000000000000018 d cid_service_cid_info
000000000093cf48 0000000000000028 d cid_service_ps_info
000000000093cf70 0000000000000008 d cid_service_ps_name
000000000093cf78 0000000000000b98 d cid_field_records
000000000093db10 00000000000000c0 D pcf_driver_class
000000000093dbd0 0000000000000040 d pcf_services
000000000093dc10 0000000000000010 d pcf_service_properties
000000000093dc20 0000000000000010 d pcf_service_bdf
000000000093dc30 0000000000000050 d pcf_cmap_class
000000000093dc80 0000000000000050 d pfr_phy_font_extra_items
000000000093dcd0 00000000000000c0 D pfr_driver_class
000000000093dd90 0000000000000030 d pfr_services
000000000093ddc0 0000000000000018 d pfr_metrics_service_rec
000000000093ddd8 0000000000000050 D pfr_cmap_class_rec
000000000093de28 0000000000000050 D t1_cmap_unicode_class_rec
000000000093de78 0000000000000050 D t1_cmap_custom_class_rec
000000000093dec8 0000000000000050 D t1_cmap_expert_class_rec
000000000093df18 0000000000000050 D t1_cmap_standard_class_rec
000000000093df68 0000000000000048 D psaux_module_class
000000000093dfb0 0000000000000058 d psaux_interface
000000000093e008 0000000000000018 D cff_decoder_funcs
000000000093e020 0000000000000040 D cff_builder_funcs
000000000093e060 0000000000000020 D t1_cmap_classes
000000000093e080 0000000000000018 D afm_parser_funcs
000000000093e098 0000000000000020 D t1_decoder_funcs
000000000093e0b8 0000000000000040 D t1_builder_funcs
000000000093e0f8 0000000000000068 D ps_parser_funcs
000000000093e160 0000000000000020 D ps_table_funcs
000000000093e180 0000000000000250 d afm_key_table
000000000093e3d0 0000000000000048 D pshinter_module_class
000000000093e418 0000000000000018 d pshinter_interface
000000000093e430 0000000000000048 D psnames_module_class
000000000093e478 0000000000000020 d pscmaps_services
000000000093e498 0000000000000040 d pscmaps_interface
000000000093e4d8 0000000000000078 D ft_raster1_renderer_class
000000000093e550 0000000000000030 D ft_standard_raster
000000000093e580 0000000000000030 D ft_sdf_raster
000000000093e5b0 0000000000000030 d sdf_decompose_funcs
000000000093e5e0 0000000000000030 D ft_bitmap_sdf_raster
000000000093e610 0000000000000078 D ft_bitmap_sdf_renderer_class
000000000093e688 0000000000000078 D ft_sdf_renderer_class
000000000093e700 0000000000000020 d sdf_services
000000000093e720 0000000000000010 d sdf_service_properties
000000000093e730 0000000000000050 d tt_cmap_classes
000000000093e780 0000000000000068 D tt_cmap_unicode_class_rec
000000000093e7e8 0000000000000068 D tt_cmap14_class_rec
000000000093e850 0000000000000068 D tt_cmap13_class_rec
000000000093e8b8 0000000000000068 D tt_cmap12_class_rec
000000000093e920 0000000000000068 D tt_cmap10_class_rec
000000000093e988 0000000000000068 D tt_cmap8_class_rec
000000000093e9f0 0000000000000068 D tt_cmap6_class_rec
000000000093ea58 0000000000000068 D tt_cmap4_class_rec
000000000093eac0 0000000000000068 D tt_cmap2_class_rec
000000000093eb28 0000000000000068 D tt_cmap0_class_rec
000000000093eb90 0000000000000048 D sfnt_module_class
000000000093ebd8 0000000000000180 d sfnt_interface
000000000093ed58 0000000000000060 d sfnt_services
000000000093edb8 0000000000000010 d sfnt_service_bdf
000000000093edc8 0000000000000008 d tt_service_get_cmap_info
000000000093edd0 0000000000000008 d sfnt_service_ps_name
000000000093edd8 0000000000000010 d sfnt_service_glyph_dict
000000000093ede8 0000000000000018 d sfnt_service_sfnt_table
000000000093ee00 0000000000000078 D ft_smooth_renderer_class
000000000093ee78 0000000000000030 D ft_grays_raster
000000000093eea8 0000000000000030 d func_interface
000000000093eed8 0000000000000078 D ft_svg_renderer_class
000000000093ef50 0000000000000020 d ft_svg_services
000000000093ef70 0000000000000010 d ft_svg_service_properties
000000000093ef80 0000000000000008 d svg_interface
000000000093ef88 00000000000000c0 D tt_driver_class
000000000093f048 0000000000000070 d tt_services
000000000093f0b8 0000000000000008 d tt_service_truetype_glyf
000000000093f0c0 0000000000000048 d tt_service_metrics_variations
000000000093f108 0000000000000098 d tt_service_gx_multi_masters
000000000093f1a0 0000000000000010 d tt_service_properties
000000000093f1b0 0000000000000a48 d t1_keywords
000000000093fbf8 00000000000000c0 D t1_driver_class
000000000093fcb8 0000000000000080 d t1_services
000000000093fd38 0000000000000008 d t1_service_kerning
000000000093fd40 0000000000000028 d t1_service_ps_info
000000000093fd68 0000000000000098 d t1_service_multi_masters
000000000093fe00 0000000000000008 d t1_service_ps_name
000000000093fe08 0000000000000010 d t1_service_glyph_dict
000000000093fe18 0000000000000460 d t42_keywords
0000000000940278 00000000000000c0 D t42_driver_class
0000000000940338 0000000000000050 d t42_services
0000000000940388 0000000000000028 d t42_service_ps_info
00000000009403b0 0000000000000008 d t42_service_ps_font_name
00000000009403b8 0000000000000010 d t42_service_glyph_dict
00000000009403c8 00000000000000c0 D winfnt_driver_class
0000000000940488 0000000000000030 d winfnt_services
00000000009404b8 0000000000000008 d winfnt_service_rec
00000000009404c0 0000000000000050 d fnt_cmap_class_rec
0000000000940510 0000000000000058 d features
0000000000940570 0000000000000058 d coverages
00000000009405c8 0000000000000048 D autofit_module_class
0000000000940610 0000000000000020 D af_autofitter_interface
0000000000940630 0000000000000020 d af_services
0000000000940650 0000000000000010 d af_service_properties
0000000000940660 0000000000000040 D af_latin_writing_system_class
00000000009406a0 0000000000000040 D af_indic_writing_system_class
00000000009406e0 00000000000002c0 D af_style_classes
00000000009409a0 00000000000001e8 D af_script_classes
0000000000940b90 0000000000000028 D af_writing_system_classes
0000000000940bb8 0000000000000028 D af_hani_script_class
0000000000940be0 0000000000000028 D af_tibt_script_class
0000000000940c08 0000000000000028 D af_sylo_script_class
0000000000940c30 0000000000000028 D af_orya_script_class
0000000000940c58 0000000000000028 D af_limb_script_class
0000000000940c80 0000000000000028 D af_vaii_script_class
0000000000940ca8 0000000000000028 D af_thai_script_class
0000000000940cd0 0000000000000028 D af_tfng_script_class
0000000000940cf8 0000000000000028 D af_telu_script_class
0000000000940d20 0000000000000028 D af_tavt_script_class
0000000000940d48 0000000000000028 D af_taml_script_class
0000000000940d70 0000000000000028 D af_sund_script_class
0000000000940d98 0000000000000028 D af_sinh_script_class
0000000000940dc0 0000000000000028 D af_shaw_script_class
0000000000940de8 0000000000000028 D af_saur_script_class
0000000000940e10 0000000000000028 D af_rohg_script_class
0000000000940e38 0000000000000028 D af_osma_script_class
0000000000940e60 0000000000000028 D af_osge_script_class
0000000000940e88 0000000000000028 D af_orkh_script_class
0000000000940eb0 0000000000000028 D af_olck_script_class
0000000000940ed8 0000000000000028 D af_none_script_class
0000000000940f00 0000000000000028 D af_nkoo_script_class
0000000000940f28 0000000000000028 D af_mymr_script_class
0000000000940f50 0000000000000028 D af_mong_script_class
0000000000940f78 0000000000000028 D af_medf_script_class
0000000000940fa0 0000000000000028 D af_mlym_script_class
0000000000940fc8 0000000000000028 D af_lisu_script_class
0000000000940ff0 0000000000000028 D af_latp_script_class
0000000000941018 0000000000000028 D af_latb_script_class
0000000000941040 0000000000000028 D af_latn_script_class
0000000000941068 0000000000000028 D af_lao_script_class
0000000000941090 0000000000000028 D af_knda_script_class
00000000009410b8 0000000000000028 D af_khms_script_class
00000000009410e0 0000000000000028 D af_khmr_script_class
0000000000941108 0000000000000028 D af_kali_script_class
0000000000941130 0000000000000028 D af_hebr_script_class
0000000000941158 0000000000000028 D af_guru_script_class
0000000000941180 0000000000000028 D af_gujr_script_class
00000000009411a8 0000000000000028 D af_grek_script_class
00000000009411d0 0000000000000028 D af_goth_script_class
00000000009411f8 0000000000000028 D af_glag_script_class
0000000000941220 0000000000000028 D af_geok_script_class
0000000000941248 0000000000000028 D af_geor_script_class
0000000000941270 0000000000000028 D af_ethi_script_class
0000000000941298 0000000000000028 D af_dsrt_script_class
00000000009412c0 0000000000000028 D af_deva_script_class
00000000009412e8 0000000000000028 D af_cyrl_script_class
0000000000941310 0000000000000028 D af_cprt_script_class
0000000000941338 0000000000000028 D af_copt_script_class
0000000000941360 0000000000000028 D af_cher_script_class
0000000000941388 0000000000000028 D af_cari_script_class
00000000009413b0 0000000000000028 D af_cans_script_class
00000000009413d8 0000000000000028 D af_cakm_script_class
0000000000941400 0000000000000028 D af_buhd_script_class
0000000000941428 0000000000000028 D af_beng_script_class
0000000000941450 0000000000000028 D af_bamu_script_class
0000000000941478 0000000000000028 D af_avst_script_class
00000000009414a0 0000000000000028 D af_armn_script_class
00000000009414c8 0000000000000028 D af_arab_script_class
00000000009414f0 0000000000000028 D af_adlm_script_class
0000000000941518 0000000000000040 D af_dummy_writing_system_class
0000000000941558 0000000000000040 D af_cjk_writing_system_class
0000000000941598 00000000000001c0 d read_chunks
0000000000941758 00000000000000a0 d configuration_table
00000000009417f8 0000000000000020 d static_l_desc
0000000000941818 0000000000000020 d static_d_desc
0000000000941838 0000000000000020 d static_bl_desc
0000000000941858 0000000000000050 D z_errmsg
00000000009418a8 0000000000000100 D dotab_stdnull
00000000009419a8 0000000000000030 d s_music_interfaces
00000000009419e0 0000000000000200 d synth_base
0000000000941be0 0000000000000180 d supported
0000000000941d60 0000000000000010 d render_drivers
0000000000941d70 0000000000000530 d egl_functions.40
00000000009422a0 00000000000000d8 D util_format_p016_description
0000000000942378 00000000000000d8 D util_format_p010_description
0000000000942450 00000000000000d8 D util_format_nv21_description
0000000000942528 00000000000000d8 D util_format_nv12_description
0000000000942600 00000000000000d8 D util_format_iyuv_description
00000000009426d8 00000000000000d8 D util_format_yv16_description
00000000009427b0 00000000000000d8 D util_format_yv12_description
0000000000942888 00000000000000d8 D util_format_bptc_rgb_ufloat_description
0000000000942960 00000000000000d8 D util_format_bptc_rgb_float_description
0000000000942a38 00000000000000d8 D util_format_bptc_srgba_description
0000000000942b10 00000000000000d8 D util_format_bptc_rgba_unorm_description
0000000000942be8 00000000000000d8 D util_format_etc1_rgb8_description
0000000000942cc0 00000000000000d8 D util_format_latc2_snorm_description
0000000000942d98 00000000000000d8 D util_format_latc2_unorm_description
0000000000942e70 00000000000000d8 D util_format_latc1_snorm_description
0000000000942f48 00000000000000d8 D util_format_latc1_unorm_description
0000000000943020 00000000000000d8 D util_format_rgtc2_snorm_description
00000000009430f8 00000000000000d8 D util_format_rgtc2_unorm_description
00000000009431d0 00000000000000d8 D util_format_rgtc1_snorm_description
00000000009432a8 00000000000000d8 D util_format_rgtc1_unorm_description
0000000000943380 00000000000000d8 D util_format_dxt5_srgba_description
0000000000943458 00000000000000d8 D util_format_dxt3_srgba_description
0000000000943530 00000000000000d8 D util_format_dxt1_srgba_description
0000000000943608 00000000000000d8 D util_format_dxt1_srgb_description
00000000009436e0 00000000000000d8 D util_format_dxt5_rgba_description
00000000009437b8 00000000000000d8 D util_format_dxt3_rgba_description
0000000000943890 00000000000000d8 D util_format_dxt1_rgba_description
0000000000943968 00000000000000d8 D util_format_dxt1_rgb_description
0000000000943a40 00000000000000d8 D util_format_r8g8bx_snorm_description
0000000000943b18 00000000000000d8 D util_format_r1_unorm_description
0000000000943bf0 00000000000000d8 D util_format_r9g9b9e5_float_description
0000000000943cc8 00000000000000d8 D util_format_r11g11b10_float_description
0000000000943da0 00000000000000d8 D util_format_r8g8_r8b8_unorm_description
0000000000943e78 00000000000000d8 D util_format_g8r8_b8r8_unorm_description
0000000000943f50 00000000000000d8 D util_format_g8r8_g8b8_unorm_description
0000000000944028 00000000000000d8 D util_format_r8g8_b8g8_unorm_description
0000000000944100 00000000000000d8 D util_format_xyuv_description
00000000009441d8 00000000000000d8 D util_format_ayuv_description
00000000009442b0 00000000000000d8 D util_format_yuyv_description
0000000000944388 00000000000000d8 D util_format_uyvy_description
0000000000944460 00000000000000d8 D util_format_x32_s8x24_uint_description
0000000000944538 00000000000000d8 D util_format_z32_float_s8x24_uint_description
0000000000944610 00000000000000d8 D util_format_x8z24_unorm_description
00000000009446e8 00000000000000d8 D util_format_z24x8_unorm_description
00000000009447c0 00000000000000d8 D util_format_s8x24_uint_description
0000000000944898 00000000000000d8 D util_format_x24s8_uint_description
0000000000944970 00000000000000d8 D util_format_s8_uint_z24_unorm_description
0000000000944a48 00000000000000d8 D util_format_z24_unorm_s8_uint_description
0000000000944b20 00000000000000d8 D util_format_z32_float_description
0000000000944bf8 00000000000000d8 D util_format_z32_unorm_description
0000000000944cd0 00000000000000d8 D util_format_z16_unorm_description
0000000000944da8 00000000000000d8 D util_format_s8_uint_description
0000000000944e80 0000000000000030 V vtable for ast_node
0000000000944eb0 0000000000000030 V vtable for ast_compound_statement
0000000000944ee0 0000000000000030 V vtable for ast_expression_statement
0000000000944f10 0000000000000030 V vtable for ast_function
0000000000944f40 0000000000000030 V vtable for ast_fully_specified_type
0000000000944f70 0000000000000030 V vtable for ast_parameter_declarator
0000000000944fa0 0000000000000030 V vtable for ast_function_definition
0000000000944fd0 0000000000000030 V vtable for ast_declaration
0000000000945000 0000000000000030 V vtable for ast_declarator_list
0000000000945030 0000000000000030 V vtable for ast_jump_statement
0000000000945060 0000000000000030 V vtable for ast_demote_statement
0000000000945090 0000000000000030 V vtable for ast_selection_statement
00000000009450c0 0000000000000030 V vtable for ast_switch_statement
00000000009450f0 0000000000000030 V vtable for ast_switch_body
0000000000945120 0000000000000030 V vtable for ast_case_label
0000000000945150 0000000000000030 V vtable for ast_case_label_list
0000000000945180 0000000000000030 V vtable for ast_case_statement
00000000009451b0 0000000000000030 V vtable for ast_case_statement_list
00000000009451e0 0000000000000030 V vtable for ast_iteration_statement
0000000000945210 0000000000000030 V vtable for ast_struct_specifier
0000000000945240 0000000000000030 V vtable for ast_subroutine_list
0000000000945270 0000000000000080 V vtable for ir_rvalue
00000000009452f0 0000000000000040 V vtable for ir_variable
0000000000945330 0000000000000080 V vtable for ir_swizzle
00000000009453b0 0000000000000040 V vtable for ir_return
00000000009453f0 0000000000000040 V vtable for ir_discard
0000000000945430 0000000000000040 V vtable for ir_demote
0000000000945470 0000000000000040 V vtable for ir_loop_jump
00000000009454b0 0000000000000040 V vtable for ir_if
00000000009454f0 0000000000000040 V vtable for ir_loop
0000000000945530 0000000000000048 V vtable for ir_call
0000000000945578 0000000000000088 V vtable for ir_dereference_variable
0000000000945600 0000000000000088 V vtable for ir_dereference_array
0000000000945688 0000000000000088 V vtable for ir_dereference_record
0000000000945710 0000000000000080 V vtable for ir_texture
0000000000945790 0000000000000048 V vtable for ir_assignment
00000000009457d8 0000000000000040 V vtable for ir_function
0000000000945818 0000000000000040 V vtable for ir_function_signature
0000000000945858 0000000000000088 V vtable for ir_constant
00000000009458e0 0000000000000140 V vtable for fixup_ir_call_visitor
0000000000945a20 0000000000000080 V vtable for ir_expression
0000000000945aa0 0000000000000040 V vtable for ir_emit_vertex
0000000000945ae0 0000000000000040 V vtable for ir_end_primitive
0000000000945b20 0000000000000040 V vtable for ir_barrier
0000000000945b60 0000000000000140 d vtable for (anonymous namespace)::find_assignment_visitor
0000000000945ca0 0000000000000140 d vtable for (anonymous namespace)::find_deref_visitor
0000000000945de0 0000000000000140 d vtable for (anonymous namespace)::deref_type_updater
0000000000945f20 0000000000000150 d vtable for (anonymous namespace)::array_resize_visitor
0000000000946070 0000000000000140 d vtable for (anonymous namespace)::find_emit_vertex_visitor
00000000009461b0 0000000000000140 d vtable for (anonymous namespace)::dynamic_sampler_array_indexing_visitor
00000000009462f0 0000000000000140 d vtable for remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor
0000000000946430 0000000000000140 V vtable for array_sizing_visitor
0000000000946570 0000000000000140 d vtable for (anonymous namespace)::call_link_visitor
00000000009466b0 0000000000000038 d vtable for (anonymous namespace)::ubo_visitor
00000000009466e8 0000000000000038 d vtable for (anonymous namespace)::count_block_size
0000000000946720 0000000000000038 V vtable for tfeedback_candidate_generator
0000000000946758 0000000000000140 d vtable for (anonymous namespace)::loop_analysis
0000000000946898 0000000000000140 V vtable for examine_rhs
00000000009469d8 0000000000000140 V vtable for loop_unroll_count
0000000000946b18 0000000000000140 d vtable for (anonymous namespace)::loop_unroll_visitor
0000000000946c58 0000000000000140 d vtable for (anonymous namespace)::lower_builtins_visitor
0000000000946d98 0000000000000148 d vtable for (anonymous namespace)::lower_const_array_visitor
0000000000946ee0 0000000000000140 d vtable for (anonymous namespace)::lower_cs_derived_visitor
0000000000947020 0000000000000140 d vtable for (anonymous namespace)::lower_discard_flow_visitor
0000000000947160 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor
00000000009472a8 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor_counter
00000000009473f0 0000000000000140 d vtable for (anonymous namespace)::lower_instructions_visitor
0000000000947530 0000000000000140 V vtable for lower_packed_varyings_gs_splicer
0000000000947670 0000000000000140 V vtable for lower_packed_varyings_return_splicer
00000000009477b0 0000000000000148 d vtable for (anonymous namespace)::flatten_named_interface_blocks_declarations
00000000009478f8 0000000000000140 d vtable for (anonymous namespace)::find_lowerable_rvalues_visitor
0000000000947a38 0000000000000148 d vtable for (anonymous namespace)::lower_precision_visitor
0000000000947b80 0000000000000148 d vtable for (anonymous namespace)::find_precision_visitor
0000000000947cc8 0000000000000140 d vtable for (anonymous namespace)::lower_subroutine_visitor
0000000000947e08 0000000000000148 d vtable for (anonymous namespace)::lower_tess_level_visitor
0000000000947f50 0000000000000148 d vtable for (anonymous namespace)::ir_vec_index_to_swizzle_visitor
0000000000948098 0000000000000158 d vtable for (anonymous namespace)::vector_deref_visitor
00000000009481f0 0000000000000158 d vtable for (anonymous namespace)::vector_insert_visitor
0000000000948348 0000000000000140 d vtable for (anonymous namespace)::lower_vertex_id_visitor
0000000000948488 0000000000000150 d vtable for (anonymous namespace)::lower_shared_reference_visitor
00000000009485d8 0000000000000150 d vtable for (anonymous namespace)::lower_ubo_reference_visitor
0000000000948728 0000000000000140 d vtable for (anonymous namespace)::lower_xfb_var_splicer
0000000000948868 0000000000000158 d vtable for (anonymous namespace)::ir_algebraic_visitor
00000000009489c0 0000000000000140 d vtable for (anonymous namespace)::ir_array_reference_visitor
0000000000948b00 0000000000000158 V vtable for ir_array_splitting_visitor
0000000000948c58 0000000000000140 d vtable for (anonymous namespace)::opt_conditional_discard_visitor
0000000000948d98 0000000000000158 d vtable for (anonymous namespace)::ir_constant_folding_visitor
0000000000948ef0 0000000000000148 d vtable for (anonymous namespace)::ir_constant_propagation_visitor
0000000000949038 0000000000000148 d vtable for (anonymous namespace)::ir_constant_variable_visitor
0000000000949180 0000000000000148 d vtable for (anonymous namespace)::ir_copy_propagation_elements_visitor
00000000009492c8 0000000000000140 d vtable for (anonymous namespace)::varying_info_visitor
0000000000949408 0000000000000148 d vtable for (anonymous namespace)::replace_varyings_visitor
0000000000949550 0000000000000148 d vtable for (anonymous namespace)::kill_for_derefs_visitor
0000000000949698 0000000000000140 d vtable for (anonymous namespace)::array_index_visit
00000000009497d8 0000000000000140 d vtable for (anonymous namespace)::ir_dead_functions_visitor
0000000000949918 0000000000000140 d vtable for (anonymous namespace)::nested_if_flattener
0000000000949a58 0000000000000140 d vtable for (anonymous namespace)::matrix_flipper
0000000000949b98 0000000000000140 d vtable for (anonymous namespace)::ir_save_lvalue_visitor
0000000000949cd8 0000000000000150 d vtable for (anonymous namespace)::ir_function_inlining_visitor
0000000000949e28 0000000000000150 V vtable for ir_variable_replacement_visitor
0000000000949f78 0000000000000140 d vtable for (anonymous namespace)::ir_if_simplification_visitor
000000000094a0b8 0000000000000148 d vtable for (anonymous namespace)::ir_minmax_visitor
000000000094a200 0000000000000148 d vtable for (anonymous namespace)::ir_rebalance_visitor
000000000094a348 0000000000000140 d vtable for (anonymous namespace)::redundant_jumps_visitor
000000000094a488 0000000000000140 d vtable for (anonymous namespace)::ir_structure_reference_visitor
000000000094a5c8 0000000000000158 d vtable for (anonymous namespace)::ir_structure_splitting_visitor
000000000094a720 0000000000000148 d vtable for (anonymous namespace)::ir_opt_swizzle_visitor
000000000094a868 0000000000000140 d vtable for (anonymous namespace)::ir_tree_grafting_visitor
000000000094a9a8 0000000000000140 d vtable for (anonymous namespace)::ir_vectorize_visitor
000000000094aae8 0000000000000150 d vtable for (anonymous namespace)::ir_invariance_propagation_visitor
000000000094ac38 0000000000000030 V vtable for ast_layout_expression
000000000094ac68 0000000000000028 D nouveau_buffer_vtbl
000000000094ac90 0000000000000028 D nvc0_miptree_vtbl
000000000094acb8 0000000000000038 d vtable for (anonymous namespace)::add_uniform_to_shader
000000000094acf0 0000000000000200 d update_functions
000000000094aef0 0000000000000140 V vtable for ir_control_flow_info_visitor
000000000094b030 0000000000000030 V vtable for ast_array_specifier
000000000094b060 0000000000000038 V vtable for ast_expression_bin
000000000094b098 0000000000000038 V vtable for ast_function_expression
000000000094b0d0 0000000000000038 V vtable for ast_aggregate_initializer
000000000094b108 0000000000000140 V vtable for read_from_write_only_variable_visitor
000000000094b248 0000000000000038 V vtable for ast_expression
000000000094b280 0000000000000140 V vtable for interface_block_usage_visitor
000000000094b3c0 0000000000000030 V vtable for ast_interface_block
000000000094b3f0 0000000000000030 V vtable for ast_tcs_output_layout
000000000094b420 0000000000000030 V vtable for ast_gs_input_layout
000000000094b450 0000000000000030 V vtable for ast_cs_input_layout
000000000094b480 0000000000000030 V vtable for ast_warnings_toggle
000000000094b4b0 0000000000000030 V vtable for ast_type_specifier
000000000094b4e0 0000000000000140 V vtable for ir_array_refcount_visitor
000000000094b620 0000000000000140 V vtable for ir_function_can_inline_visitor
000000000094b760 0000000000000140 d vtable for (anonymous namespace)::has_recursion_visitor
000000000094b8a0 0000000000000140 d vtable for (anonymous namespace)::ir_set_program_inouts_visitor
000000000094b9e0 0000000000000140 V vtable for ir_variable_refcount_visitor
000000000094bb20 0000000000000140 V vtable for link_uniform_block_active_visitor
000000000094bc60 0000000000000140 d vtable for (anonymous namespace)::lower_discard_visitor
000000000094bda0 0000000000000140 d vtable for (anonymous namespace)::ir_if_to_cond_assign_visitor
000000000094bee0 0000000000000148 d vtable for (anonymous namespace)::lower_64bit_visitor
000000000094c028 0000000000000140 d vtable for (anonymous namespace)::ir_mat_op_to_vec_visitor
000000000094c168 0000000000000148 V vtable for lower_offset_array_visitor
000000000094c2b0 0000000000000158 d vtable for (anonymous namespace)::lower_packing_builtins_visitor
000000000094c408 0000000000000148 d vtable for (anonymous namespace)::deref_replacer
000000000094c550 0000000000000140 d vtable for (anonymous namespace)::find_variable_index
000000000094c690 0000000000000148 d vtable for (anonymous namespace)::variable_index_to_cond_assign_visitor
000000000094c7d8 0000000000000140 d vtable for (anonymous namespace)::ir_vec_index_to_cond_assign_visitor
000000000094c918 0000000000000148 d vtable for (anonymous namespace)::lower_vector_visitor
000000000094ca60 0000000000000140 d vtable for (anonymous namespace)::output_read_remover
000000000094cba0 0000000000000028 D nv50_miptree_vtbl
000000000094cbc8 0000000000000048 V vtable for nv50_ir::LValue
000000000094cc10 0000000000000048 V vtable for nv50_ir::Symbol
000000000094cc58 0000000000000048 V vtable for nv50_ir::ImmediateValue
000000000094cca0 0000000000000048 V vtable for nv50_ir::Value
000000000094cce8 0000000000000048 V vtable for nv50_ir::CodeEmitter
000000000094cd30 00000000000000d8 V vtable for nv50_ir::TargetGM107
000000000094ce08 0000000000000158 V vtable for ir_expression_flattening_visitor
000000000094cf60 0000000000000048 V vtable for nv50_ir::CodeEmitterGM107
000000000094cfa8 0000000000000028 V vtable for nv50_ir::GM107LegalizeSSA
000000000094cfd0 0000000000000030 V vtable for nv50_ir::GM107LoweringPass
000000000094d000 00000000000000b8 V vtable for nv50_ir::TargetNVC0
000000000094d0b8 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
000000000094d0d0 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
000000000094d0e8 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_broadcast_error
000000000094d100 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_wait_error
000000000094d118 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
000000000094d140 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
000000000094d168 0000000000000028 V vtable for __gnu_cxx::__concurrence_broadcast_error
000000000094d190 0000000000000028 V vtable for __gnu_cxx::__concurrence_wait_error
000000000094d1b8 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
000000000094d1d0 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
000000000094d228 0000000000000010 V typeinfo for std::type_info
000000000094d238 0000000000000018 V typeinfo for std::bad_alloc
000000000094d250 0000000000000028 V vtable for std::bad_alloc
000000000094d278 0000000000000018 V typeinfo for std::bad_array_new_length
000000000094d290 0000000000000028 V vtable for std::bad_array_new_length
000000000094d2b8 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
000000000094d2d0 0000000000000058 V vtable for __cxxabiv1::__class_type_info
000000000094d328 0000000000000010 V typeinfo for std::exception
000000000094d338 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
000000000094d348 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
000000000094d358 0000000000000018 V typeinfo for std::logic_error
000000000094d370 0000000000000018 V typeinfo for std::length_error
000000000094d388 0000000000000018 V typeinfo for std::out_of_range
000000000094d3a0 0000000000000028 V vtable for std::logic_error
000000000094d3c8 0000000000000028 V vtable for std::length_error
000000000094d3f0 0000000000000028 V vtable for std::out_of_range
000000000094d420 00000000000000a0 d ft_default_modules
000000000094d4c0 0000000000000010 d cff_service_properties
000000000094d4d0 0000000000000010 d cid_service_properties
000000000094d4e0 0000000000000010 d t1_service_properties
000000000094d4f0 a _DYNAMIC
000000000094d640 d __got_start__
000000000094d640 a _GLOBAL_OFFSET_TABLE_
00000000009525a0 d __got_end__
0000000000953000 d __data_start
0000000000953000 0000000000000008 d mix_music
0000000000953008 0000000000000004 d music_active
000000000095300c 0000000000000004 d music_volume
0000000000953010 0000000000000090 D Mix_MusicInterface_MODPLUG
00000000009530a0 0000000000000090 D Mix_MusicInterface_MPG123
0000000000953130 0000000000000090 D Mix_MusicInterface_OGG
00000000009531c0 0000000000000090 D Mix_MusicInterface_Opus
0000000000953250 0000000000000090 D Mix_MusicInterface_TIMIDITY
00000000009532e0 0000000000000090 D Mix_MusicInterface_WAV
0000000000953370 0000000000000010 D _floor_P
0000000000953380 0000000000000008 D _mapping_P
0000000000953388 0000000000000018 D _residue_P
00000000009533a0 0000000000000030 D floor1_exportbundle
00000000009533d0 0000000000000030 D floor0_exportbundle
0000000000953400 0000000000000028 D residue0_exportbundle
0000000000953428 0000000000000028 D residue1_exportbundle
0000000000953450 0000000000000028 D residue2_exportbundle
0000000000953478 0000000000000028 D mapping0_exportbundle
00000000009534a0 0000000000000038 D ModPlug::gSettings
00000000009534d8 0000000000000004 D CSoundFile::gnChannels
00000000009534dc 0000000000000004 D CSoundFile::gdwMixingFreq
00000000009534e0 0000000000000004 D CSoundFile::gnBitsPerSample
00000000009534e4 0000000000000004 D CSoundFile::m_nMaxMixChannels
00000000009534e8 0000000000000004 D CSoundFile::gnVolumeRampSamples
00000000009534ec 0000000000000004 D CSoundFile::m_nStereoSeparation
00000000009534f0 0000000000000004 D CSoundFile::gnAGC
00000000009534f4 0000000000000004 D CSoundFile::m_nXBassDepth
00000000009534f8 0000000000000004 D CSoundFile::m_nXBassRange
00000000009534fc 0000000000000004 D CSoundFile::m_nReverbDelay
0000000000953500 0000000000000004 D CSoundFile::m_nReverbDepth
0000000000953504 0000000000000004 D CSoundFile::m_nProLogicDelay
0000000000953508 0000000000000004 D CSoundFile::m_nProLogicDepth
0000000000953510 0000000000000008 D autovibit2xm
0000000000953768 0000000000000060 d bad_reader
00000000009537c8 00000000000001e0 d readers
00000000009539a8 0000000000000028 D INT123_pnts
0000000000953ab0 000000000000002c d pretab_choice
0000000000953ae0 00000000000000a0 D nsvg__colors
0000000000953b80 0000000000000004 d simd_features
0000000000953b84 0000000000000004 d simd_huffman
0000000000953b88 0000000000000004 d simd_support
0000000000953b90 0000000000000008 d WebPInitAlphaProcessing_body_last_cpuinfo_used.0
0000000000953b98 0000000000000008 D VP8GetCPUInfo
0000000000953ba0 0000000000000008 d VP8DspInit_body_last_cpuinfo_used.0
0000000000953ba8 0000000000000008 d VP8FiltersInit_body_last_cpuinfo_used.0
0000000000953bb0 0000000000000008 d VP8LDspInit_body_last_cpuinfo_used.0
0000000000953bb8 0000000000000008 d WebPRescalerDspInit_body_last_cpuinfo_used.0
0000000000953bc0 0000000000000008 d WebPInitUpsamplers_body_last_cpuinfo_used.0
0000000000953bc8 0000000000000008 d WebPInitYUV444Converters_body_last_cpuinfo_used.2
0000000000953bd0 0000000000000008 d WebPInitConvertARGBToYUV_body_last_cpuinfo_used.0
0000000000953bd8 0000000000000008 d WebPInitSamplers_body_last_cpuinfo_used.2
0000000000953be0 0000000000000030 d g_worker_interface
0000000000953c10 0000000000000004 d g_hb_script
0000000000953c14 0000000000000004 d g_hb_direction
0000000000953c18 0000000000000004 d SDL_MainIsReady
0000000000953c70 0000000000000008 d assertion_handler
0000000000953c78 0000000000000008 d SDL_log_function
0000000000953c80 0000000000000004 d SDL_test_priority
0000000000953c84 0000000000000004 d SDL_application_priority
0000000000953c88 0000000000000004 d SDL_assert_priority
0000000000953c8c 0000000000000004 d SDL_default_priority
0000000000953c90 000000000000006c d extensible_guids
0000000000953cfc 0000000000000004 d SDL_SIMDAlignment
0000000000953d00 0000000000000004 d SDL_CPUFeatures
0000000000953d04 0000000000000004 d SDL_update_sensors
0000000000953d08 0000000000000004 d SDL_update_joysticks
0000000000953d10 0000000000000060 D GLES2_RenderDriver
0000000000953d70 0000000000000030 d sdl_assert_data.1
0000000000953da0 0000000000000060 D SW_RenderDriver
0000000000953e00 0000000000000028 d s_mem
0000000000953e28 0000000000000048 D SDL_expand_byte
0000000000953e70 0000000000000001 d lookup_8
0000000000953e78 0000000000000002 d lookup_7
0000000000953e80 0000000000000004 d lookup_6
0000000000953e88 0000000000000008 d lookup_5
0000000000953e90 0000000000000010 d lookup_4
0000000000953ea0 0000000000000020 d lookup_3
0000000000953ec0 0000000000000040 d lookup_2
0000000000953f00 0000000000000080 d lookup_1
0000000000953f80 0000000000000100 d lookup_0
0000000000954080 0000000000000004 d val.0
0000000000954084 0000000000000004 d SDL_YUV_ConversionMode
0000000000954088 0000000000000004 d thread_local_storage
0000000000954090 0000000000000018 D SWITCH_bootstrap
00000000009540a8 0000000000000020 D SWITCHAUDIO_bootstrap
00000000009540c8 00000000000000a0 D SDL_SWITCH_JoystickDriver
0000000000954168 00000000000000a0 D SDL_VIRTUAL_JoystickDriver
0000000000954208 0000000000000058 D SDL_DUMMY_SensorDriver
0000000000954260 0000000000000004 d features.0
0000000000954268 0000000000000be8 D SDL_GeneratedBlitFuncTable
0000000000954e50 0000000000000018 D _eglSoftwareDevice
0000000000954e70 0000000000000088 D _eglGlobal
0000000000954ef8 0000000000000018 d logging
0000000000954f10 0000000000000040 D mme90c0_launch_grid_indirect
0000000000954f50 000000000000004c D mme9097_compute_counter_to_query
0000000000954fa0 0000000000000060 D mme9097_compute_counter
0000000000955000 0000000000000044 D mme9097_conservative_raster_state
0000000000955050 0000000000000088 D mme9097_query_buffer_write
00000000009550e0 00000000000000b8 D mme9097_draw_arrays_indirect_count
00000000009551a0 00000000000000f4 D mme9097_draw_elts_indirect_count
00000000009552a0 0000000000000078 D mme9097_draw_arrays_indirect
0000000000955320 00000000000000a8 D mme9097_draw_elts_indirect
00000000009553d0 0000000000000044 D mme9097_tep_select
0000000000955420 0000000000000044 D mme9097_gp_select
0000000000955470 0000000000000044 D mme9097_poly_mode_back
00000000009554c0 0000000000000044 D mme9097_poly_mode_front
0000000000955510 0000000000000030 D mme9097_vertex_array_select
0000000000955540 0000000000000024 D mme9097_blend_enables
0000000000955570 000000000000001c D mme9097_per_instance_bf
0000000000955590 0000000000000080 d validate_list_cp
0000000000955610 0000000000000001 d first.8
0000000000955620 000000000000001f d out_of_memory
0000000000955640 0000000000000004 d NextDynamicID
0000000000955644 0000000000000004 d debug.0
0000000000955648 0000000000000004 d debug.3
0000000000955650 0000000000000010 d texcoord.0
0000000000955660 000000000000000c d normal.1
0000000000955670 0000000000000010 d color.2
0000000000955680 0000000000000004 d index.3
0000000000955690 0000000000000010 d vertex.4
00000000009556a0 0000000000000020 d override.0
00000000009556c0 0000000000000001 d first.1
00000000009556c1 0000000000000001 d first.1
0000000000955750 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::i
0000000000955754 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::arg
0000000000955760 0000000000000020 D tgsi_swizzle_names
0000000000955780 0000000000000001 d firsttime.0
0000000000955790 0000000000000020 D tgsi_memory_names
00000000009557b0 0000000000000030 D tgsi_immediate_type_names
00000000009557e0 0000000000000010 D tgsi_fs_coord_pixel_center_names
00000000009557f0 0000000000000010 D tgsi_fs_coord_origin_names
0000000000955800 0000000000000078 D tgsi_primitive_names
0000000000955878 0000000000000008 D tgsi_invariant_name
0000000000955880 0000000000000018 D tgsi_interpolate_locations
00000000009558a0 0000000000000020 D tgsi_interpolate_names
00000000009558c0 0000000000000030 D tgsi_return_type_names
00000000009558f0 00000000000000d8 D tgsi_property_names
00000000009559d0 0000000000000098 D tgsi_texture_names
0000000000955a70 0000000000000188 D tgsi_semantic_names
0000000000955c00 0000000000000030 D tgsi_processor_type_names
0000000000955c30 0000000000000080 d validate_list_cp
0000000000955cb0 0000000000000058 d sm50_hw_metric_queries
0000000000955d10 0000000000000058 d sm35_hw_metric_queries
0000000000955d70 0000000000000058 d sm30_hw_metric_queries
0000000000955dd0 0000000000000048 d sm21_hw_metric_queries
0000000000955e20 0000000000000038 d sm20_hw_metric_queries
0000000000955e60 00000000000000f8 d sm21_hw_sm_queries
0000000000955f60 00000000000000d0 d sm20_hw_sm_queries
0000000000956030 0000000000000120 d sm52_hw_sm_queries
0000000000956150 0000000000000120 d sm50_hw_sm_queries
0000000000956270 0000000000000168 d sm35_hw_sm_queries
00000000009563e0 0000000000000168 d sm30_hw_sm_queries
0000000000956548 0000000000000220 d validate_list_3d
0000000000956768 0000000000000008 D util_format_dxtn_pack
0000000000956770 0000000000000008 D util_format_dxt5_rgba_fetch
0000000000956778 0000000000000008 D util_format_dxt3_rgba_fetch
0000000000956780 0000000000000008 D util_format_dxt1_rgba_fetch
0000000000956788 0000000000000008 D util_format_dxt1_rgb_fetch
0000000000956790 0000000000000030 d markers.0
00000000009567c0 0000000000000720 d builtin_type_versions
0000000000956ee0 00000000000003f0 D nv50_ir::operationStr
00000000009572d0 0000000000000020 D nv50_ir::gm107_builtin_offsets
00000000009572f0 0000000000000700 D nv50_ir::gm107_builtin_code
00000000009579f0 0000000000000020 D nv50_ir::gk110_builtin_offsets
0000000000957a10 00000000000005a8 D nv50_ir::gk110_builtin_code
0000000000957fc0 0000000000000020 D nv50_ir::gk104_builtin_offsets
0000000000957fe0 0000000000001590 D nv50_ir::gk104_builtin_code
0000000000959570 0000000000000020 D nv50_ir::gf100_builtin_offsets
0000000000959590 0000000000000190 D nv50_ir::gf100_builtin_code
0000000000959720 0000000000000001 d first.1
0000000000959728 0000000000000008 V DW.ref.__gxx_personality_v0
0000000000959730 0000000000000008 D __cxxabiv1::__unexpected_handler
0000000000959738 0000000000000008 D __cxxabiv1::__terminate_handler
0000000000959740 0000000000000004 d next_dynamic_slot
0000000000959744 0000000000000004 d debug.0
0000000000959748 0000000000000008 V __nx_applet_init_timeout
0000000000959750 0000000000000001 V __nx_applet_auto_notifyrunning
0000000000959754 0000000000000004 V __nx_applet_type
0000000000959758 0000000000000004 V __nx_nv_transfermem_size
000000000095975c 0000000000000004 V __nx_nv_service_type
0000000000959760 0000000000000004 d g_ctrl_fd
0000000000959764 0000000000000004 d g_ctrlgpu_fd
0000000000959768 0000000000000004 d g_nvmap_fd
000000000095976c 0000000000000004 V __nx_fs_num_sessions
0000000000959770 0000000000000004 d g_viServiceType
0000000000959774 0000000000000004 V __nx_vi_stray_layer_flags
0000000000959778 0000000000000008 V __nx_exception_stack_size
0000000000959780 0000000000000001 V __nx_fsdev_support_cwd
0000000000959784 0000000000000004 V __nx_fsdev_direntry_cache_size
0000000000959788 00000000000000f0 D _hb_Null_hb_buffer_t
0000000000959878 00000000000000c0 D _hb_Null_hb_font_t
0000000000959938 00000000000000b8 d _hb_font_funcs_default
00000000009599f0 00000000000000b8 D _hb_Null_hb_font_funcs_t
0000000000959aa8 0000000000000048 d _hb_draw_funcs_default
0000000000959af0 00000000000000d8 D _hb_Null_hb_unicode_funcs_t
0000000000959bf8 0000000000000048 D _hb_Null_hb_draw_funcs_t
0000000000959c40 00000000000001b8 D _hb_Null_hb_face_t
0000000000959e28 0000000000000090 D _hb_Null_hb_paint_funcs_t
0000000000959eb8 0000000000000400 D BZ2_crc32Table
000000000095a2b8 0000000000000800 D BZ2_rNums
000000000095aab8 0000000000000018 D __sglue
000000000095aad0 0000000000000008 D __malloc_sbrk_base
000000000095aad8 0000000000000008 D __malloc_trim_threshold
000000000095aae0 0000000000000810 D __malloc_av_
000000000095b2f0 0000000000000008 D _impure_ptr
000000000095b2f8 0000000000000180 D _impure_data
000000000095b478 00000000000001a8 D __global_locale
000000000095b620 0000000000000008 D environ
000000000095b630 0000000000000400 d _current_working_directory
000000000095ba40 0000000000002000 d handles
000000000095da40 0000000000000010 d __stderr_handle
000000000095da50 0000000000000010 d __stdout_handle
000000000095da60 0000000000000010 d __stdin_handle
000000000095da70 0000000000000118 D devoptab_list
000000000095db88 0000000000000004 d defaultDevice
000000000095db90 d __tdata_lma
000000000095db98 d __tdata_lma_end
000000000095dba0 b __bss_start__
000000000095dba0 b completed.1
000000000095dba8 b object.0
000000000095dbd8 0000000000000004 b audio_device
000000000095dbdc 0000000000000004 b audio_opened
000000000095dbe0 0000000000000008 b channel_done_callback
000000000095dbe8 0000000000000008 b chunk_decoders
000000000095dbf0 0000000000000008 b mix_channel
000000000095dbf8 0000000000000008 b mix_postmix
000000000095dc00 0000000000000008 b mix_postmix_data
000000000095dc08 0000000000000020 b mixer
000000000095dc28 0000000000000008 b music_data
000000000095dc30 0000000000000004 b num_channels
000000000095dc34 0000000000000004 b num_decoders
000000000095dc38 0000000000000008 b posteffects
000000000095dc40 0000000000000004 b reserved_channels
000000000095dc44 0000000000000004 b ms_per_step
000000000095dc48 0000000000000008 B music_cmd
000000000095dc50 0000000000000008 b music_decoders
000000000095dc58 0000000000000008 b music_finished_hook
000000000095dc60 0000000000000008 b music_playing
000000000095dc68 0000000000000004 b num_decoders
000000000095dc70 0000000000000008 b soundfont_paths
000000000095dc78 0000000000000048 b modplug
000000000095dcc0 0000000000000038 b settings
000000000095dcf8 0000000000000088 b mpg123
000000000095dd80 0000000000000058 b vorbis
000000000095ddd8 0000000000000040 b opus
000000000095de18 0000000000000100 b def_instr_name
000000000095df18 0000000000000004 b rcf_count.10150
000000000095df1c 0000000000000004 B _Mix_effects_max_speed
000000000095df20 0000000000000008 b pathlist
000000000095df28 0000000000000001 b lastchan.10105
000000000095df29 0000000000000001 b laststatus.10104
000000000095df2a 0000000000000001 b nrpn.10106
000000000095df30 0000000000000010 b rpn_lsb.10108
000000000095df40 0000000000000010 b rpn_msb.10107
000000000095df50 0000000000000008 b pos_args_array
000000000095df58 0000000000000008 b pos_args_global
000000000095df60 0000000000000004 b position_channels
000000000095df64 0000000000000004 b seq
000000000095df68 0000000000000004 B ModPlug::gSampleSize
000000000095df6c 0000000000000004 B CSoundFile::gdwSysInfo
000000000095df70 0000000000000004 B CSoundFile::gnCPUUsage
000000000095df78 0000000000000008 B CSoundFile::gpSndMixHook
000000000095df80 0000000000000004 B CSoundFile::gdwSoundSetup
000000000095df88 0000000000000008 B CSoundFile::gpMixPluginCreateProc
000000000095df90 0000000000000004 B CSoundFile::gnVUMeter
000000000095df94 0000000000000004 B gbInitPlugins
000000000095df98 0000000000000004 B gnDryLOfsVol
000000000095df9c 0000000000000004 B gnDryROfsVol
000000000095dfa0 0000000000000004 B gnReverbSend
000000000095dfa4 0000000000000004 B gnRvbLOfsVol
000000000095dfa8 0000000000000004 B gnRvbROfsVol
000000000095dfb0 0000000000000100 b XBassDelay
000000000095e0b0 0000000000000004 b nXBassMask
000000000095e0b8 0000000000000100 b XBassBuffer
000000000095e1b8 0000000000000020 b gRvbLowPass
000000000095e1d8 0000000000000004 b nDolbyDepth
000000000095e1dc 0000000000000004 b nFilterAttn
000000000095e1e0 0000000000000004 b nReverbSize
000000000095e1e8 0000000000025800 b ReverbBuffer
00000000009839e8 0000000000000004 b nReverbSize2
00000000009839ec 0000000000000004 b nReverbSize3
00000000009839f0 0000000000000004 b nReverbSize4
00000000009839f4 0000000000000004 b nSurroundPos
00000000009839f8 0000000000000004 b nXBassDlyPos
0000000000983a00 000000000001cad0 b ReverbBuffer2
00000000009a04d0 0000000000014310 b ReverbBuffer3
00000000009b47e0 000000000000dd0c b ReverbBuffer4
00000000009c24ec 0000000000000004 b nSurroundSize
00000000009c24f0 0000000000009600 b SurroundBuffer
00000000009cbaf0 0000000000000004 b nDolbyHiFltPos
00000000009cbaf4 0000000000000004 b nDolbyHiFltSum
00000000009cbaf8 0000000000000004 b nDolbyLoDlyPos
00000000009cbafc 0000000000000004 b nDolbyLoFltPos
00000000009cbb00 0000000000000004 b nDolbyLoFltSum
00000000009cbb04 0000000000000004 b nReverbLoDlyPos
00000000009cbb08 0000000000000004 b nReverbLoFltPos
00000000009cbb0c 0000000000000004 b nReverbLoFltSum
00000000009cbb10 0000000000000004 b nXBassBufferPos
00000000009cbb14 0000000000000004 b nReverbBufferPos
00000000009cbb18 0000000000000004 b nReverbBufferPos2
00000000009cbb1c 0000000000000004 b nReverbBufferPos3
00000000009cbb20 0000000000000004 b nReverbBufferPos4
00000000009cbb28 0000000000000100 b DolbyLoFilterDelay
00000000009cbc28 0000000000000100 b DolbyHiFilterBuffer
00000000009cbd28 0000000000000100 b DolbyLoFilterBuffer
00000000009cbe28 0000000000000100 b ReverbLoFilterDelay
00000000009cbf28 0000000000000100 b ReverbLoFilterBuffer
00000000009cc028 0000000000000004 b nLeftNR
00000000009cc02c 0000000000000004 b nRightNR
00000000009cc030 0000000000000004 b gRvbLPPos
00000000009cc034 0000000000000004 b gRvbLPSum
00000000009cc038 0000000000000004 b nXBassSum
00000000009cc040 0000000000001000 B MixRearBuffer
00000000009cd040 0000000000001000 B MixReverbBuffer
00000000009ce040 0000000000002000 B MixSoundBuffer
00000000009d0040 0000000000002000 B CzCUBICSPLINE::lut
00000000009d2040 0000000000008010 B CzWINDOWEDFIR::lut
00000000009da050 0000000000000001 B sfir
00000000009da058 0000000000000001 B sspline
00000000009da060 0000000000000780 b chordnotes
00000000009da7e0 0000000000000004 b chordsnamed
00000000009da7e4 0000000000000001 b global_part
00000000009da7e8 0000000000000004 b global_voiceno
00000000009da7ec 0000000000000004 b global_songstart
00000000009da7f0 0000000000000004 b global_octave_shift
00000000009da7f4 0000000000000004 b global_tempo_factor
00000000009da7f8 0000000000000004 b global_tempo_divider
00000000009da800 0000000000000140 b chordlen
00000000009da940 0000000000000280 b chordname
00000000009dabc0 0000000000000004 b abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int)::ordersize
00000000009dabc8 0000000000000400 b pathforpat
00000000009dafc8 00000000000000bf b pat_gm_used
00000000009db088 0000000000000400 b timiditycfg
00000000009db488 000000000002fc00 b midipat
0000000000a0b088 00000000000000bf b pat_loops
0000000000a0b148 0000000000000028 b pat_gm_name::buf
0000000000a0b170 0000000000000004 b pat_readpat(int, char*, int)::readlasttime
0000000000a0b178 0000000000000008 b pat_readpat(int, char*, int)::opt
0000000000a0b180 0000000000000008 b pat_readpat(int, char*, int)::mmpat
0000000000a0b188 0000000000000004 b pat_readpat(int, char*, int)::wavesize
0000000000a0b18c 0000000000000004 b initialized
0000000000a0b190 0000000000000010 b Gif89
0000000000a0b1a0 000000000000031c b GifScreen
0000000000a0b4bc 0000000000000004 b ZeroDataBlock
0000000000a0b4c0 0000000000000100 b buf.9898
0000000000a0b5c0 0000000000000118 b buf.9926
0000000000a0b6d8 0000000000000004 b clear_code.9952
0000000000a0b6dc 0000000000000004 b code_size.9946
0000000000a0b6e0 0000000000000004 b curbit.9927
0000000000a0b6e4 0000000000000004 b done.9929
0000000000a0b6e8 0000000000000004 b end_code.9953
0000000000a0b6ec 0000000000000004 b firstcode.9950
0000000000a0b6f0 0000000000000004 b fresh.9943
0000000000a0b6f4 0000000000000004 b last_byte.9930
0000000000a0b6f8 0000000000000004 b lastbit.9928
0000000000a0b6fc 0000000000000004 b max_code.9948
0000000000a0b700 0000000000000004 b max_code_size.9949
0000000000a0b704 0000000000000004 b oldcode.9951
0000000000a0b708 0000000000000004 b set_code_size.9947
0000000000a0b710 0000000000000008 b sp.9956
0000000000a0b718 0000000000008000 b stack.9955
0000000000a13718 0000000000008000 b table.9954
0000000000a1b718 0000000000000090 b lib
0000000000a1b7a8 00000000000000f0 b lib
0000000000a1b898 0000000000000004 b buflen
0000000000a1b8a0 0000000000000008 b error
0000000000a1b8a8 0000000000000008 b linebuf
0000000000a1b8b0 0000000000000028 b lib
0000000000a1b8d8 0000000000000008 b GetCoeffs
0000000000a1b8e0 0000000000000008 B WebPApplyAlphaMultiply
0000000000a1b8e8 0000000000000008 B WebPApplyAlphaMultiply4444
0000000000a1b8f0 0000000000000008 B WebPDispatchAlpha
0000000000a1b8f8 0000000000000008 B WebPDispatchAlphaToGreen
0000000000a1b900 0000000000000008 B WebPExtractAlpha
0000000000a1b908 0000000000000008 B WebPExtractGreen
0000000000a1b910 0000000000000008 B WebPHasAlpha32b
0000000000a1b918 0000000000000008 B WebPHasAlpha8b
0000000000a1b920 0000000000000010 b WebPInitAlphaProcessing_body_lock.1
0000000000a1b930 0000000000000008 B WebPMultARGBRow
0000000000a1b938 0000000000000008 B WebPMultRow
0000000000a1b940 0000000000000008 B WebPPackRGB
0000000000a1b948 0000000000000008 B VP8DitherCombine8x8
0000000000a1b950 0000000000000010 b VP8DspInit_body_lock.1
0000000000a1b960 0000000000000008 B VP8HFilter16
0000000000a1b968 0000000000000008 B VP8HFilter16i
0000000000a1b970 0000000000000008 B VP8HFilter8
0000000000a1b978 0000000000000008 B VP8HFilter8i
0000000000a1b980 0000000000000038 B VP8PredChroma8
0000000000a1b9b8 0000000000000038 B VP8PredLuma16
0000000000a1b9f0 0000000000000050 B VP8PredLuma4
0000000000a1ba40 0000000000000008 B VP8SimpleHFilter16
0000000000a1ba48 0000000000000008 B VP8SimpleHFilter16i
0000000000a1ba50 0000000000000008 B VP8SimpleVFilter16
0000000000a1ba58 0000000000000008 B VP8SimpleVFilter16i
0000000000a1ba60 0000000000000008 B VP8Transform
0000000000a1ba68 0000000000000008 B VP8TransformAC3
0000000000a1ba70 0000000000000008 B VP8TransformDC
0000000000a1ba78 0000000000000008 B VP8TransformDCUV
0000000000a1ba80 0000000000000008 B VP8TransformUV
0000000000a1ba88 0000000000000008 B VP8TransformWHT
0000000000a1ba90 0000000000000008 B VP8VFilter16
0000000000a1ba98 0000000000000008 B VP8VFilter16i
0000000000a1baa0 0000000000000008 B VP8VFilter8
0000000000a1baa8 0000000000000008 B VP8VFilter8i
0000000000a1bab0 0000000000000010 b VP8FiltersInit_body_lock.1
0000000000a1bac0 0000000000000020 B WebPFilters
0000000000a1bae0 0000000000000020 B WebPUnfilters
0000000000a1bb00 0000000000000008 B VP8LAddGreenToBlueAndRed
0000000000a1bb08 0000000000000008 B VP8LConvertBGRAToBGR
0000000000a1bb10 0000000000000008 B VP8LConvertBGRAToRGB
0000000000a1bb18 0000000000000008 B VP8LConvertBGRAToRGB565
0000000000a1bb20 0000000000000008 B VP8LConvertBGRAToRGBA
0000000000a1bb28 0000000000000008 B VP8LConvertBGRAToRGBA4444
0000000000a1bb30 0000000000000010 b VP8LDspInit_body_lock.1
0000000000a1bb40 0000000000000008 B VP8LMapColor32b
0000000000a1bb48 0000000000000008 B VP8LMapColor8b
0000000000a1bb50 0000000000000080 B VP8LPredictors
0000000000a1bbd0 0000000000000080 B VP8LPredictorsAdd
0000000000a1bc50 0000000000000080 B VP8LPredictorsAdd_C
0000000000a1bcd0 0000000000000080 B VP8LPredictors_C
0000000000a1bd50 0000000000000008 B VP8LTransformColorInverse
0000000000a1bd58 0000000000000010 b WebPRescalerDspInit_body_lock.1
0000000000a1bd68 0000000000000008 B WebPRescalerExportRowExpand
0000000000a1bd70 0000000000000008 B WebPRescalerExportRowShrink
0000000000a1bd78 0000000000000008 B WebPRescalerImportRowExpand
0000000000a1bd80 0000000000000008 B WebPRescalerImportRowShrink
0000000000a1bd88 0000000000000010 b WebPInitUpsamplers_body_lock.1
0000000000a1bd98 0000000000000010 b WebPInitYUV444Converters_body_lock.3
0000000000a1bda8 0000000000000068 B WebPUpsamplers
0000000000a1be10 0000000000000068 B WebPYUV444Converters
0000000000a1be78 0000000000000008 B WebPConvertARGBToUV
0000000000a1be80 0000000000000008 B WebPConvertARGBToY
0000000000a1be88 0000000000000008 B WebPConvertBGR24ToY
0000000000a1be90 0000000000000008 B WebPConvertRGB24ToY
0000000000a1be98 0000000000000008 B WebPConvertRGBA32ToUV
0000000000a1bea0 0000000000000010 b WebPInitConvertARGBToYUV_body_lock.1
0000000000a1beb0 0000000000000010 b WebPInitSamplers_body_lock.3
0000000000a1bec0 0000000000000068 B WebPSamplers
0000000000a1bf28 0000000000000008 B WebPSharpYUVFilterRow
0000000000a1bf30 0000000000000008 B WebPSharpYUVUpdateRGB
0000000000a1bf38 0000000000000008 B WebPSharpYUVUpdateY
0000000000a1bf40 0000000000000004 b TTF_byteswapped
0000000000a1bf44 0000000000000004 b TTF_initialized
0000000000a1bf48 0000000000000008 b library
0000000000a1bf50 0000000000000020 b SDL_SubsystemRefCount
0000000000a1bf70 0000000000000004 b SDL_bInMainQuit
0000000000a1bf74 0000000000000004 b assertion_running.0
0000000000a1bf78 0000000000000004 b spinlock.1
0000000000a1bf80 0000000000000008 b assertion_userdata
0000000000a1bf88 0000000000000008 b assertion_mutex
0000000000a1bf90 0000000000000008 b triggered_assertions
0000000000a1bf98 0000000000000008 b SDL_hints
0000000000a1bfa0 0000000000000008 b log_function_mutex
0000000000a1bfa8 0000000000000008 b SDL_log_userdata
0000000000a1bfb0 0000000000000008 b SDL_loglevels
0000000000a1bfb8 0000000000000004 b format_idx_sub
0000000000a1bfbc 0000000000000004 b format_idx
0000000000a1bfc0 0000000000000080 b open_devices
0000000000a1c040 00000000000000c8 b current_audio
0000000000a1c108 0000000000000004 b converters_chosen.0
0000000000a1c110 0000000000000008 B SDL_Convert_F32_to_S32
0000000000a1c118 0000000000000008 B SDL_Convert_F32_to_U16
0000000000a1c120 0000000000000008 B SDL_Convert_F32_to_S16
0000000000a1c128 0000000000000008 B SDL_Convert_F32_to_U8
0000000000a1c130 0000000000000008 B SDL_Convert_F32_to_S8
0000000000a1c138 0000000000000008 B SDL_Convert_S32_to_F32
0000000000a1c140 0000000000000008 B SDL_Convert_U16_to_F32
0000000000a1c148 0000000000000008 B SDL_Convert_S16_to_F32
0000000000a1c150 0000000000000008 B SDL_Convert_U8_to_F32
0000000000a1c158 0000000000000008 B SDL_Convert_S8_to_F32
0000000000a1c160 0000000000000004 b checked.0
0000000000a1c164 0000000000000004 b SDL_EventLoggingVerbosity
0000000000a1c168 0000000000000040 b SDL_EventQ
0000000000a1c1b0 0000000000000800 b SDL_disabled_events
0000000000a1c9b0 0000000000000004 b SDL_sentinel_pending
0000000000a1c9b4 0000000000000004 b SDL_event_watchers_removed
0000000000a1c9b8 0000000000000004 b SDL_event_watchers_dispatching
0000000000a1c9bc 0000000000000004 b SDL_event_watchers_count
0000000000a1c9c0 0000000000000008 b SDL_event_watchers
0000000000a1c9c8 0000000000000018 b SDL_EventOK
0000000000a1c9e0 0000000000000008 b SDL_event_watchers_lock
0000000000a1c9e8 0000000000000004 b recordAll
0000000000a1c9ec 0000000000000004 b SDL_numGestureTouches
0000000000a1c9f0 0000000000000008 b SDL_gestureTouch
0000000000a1c9f8 0000000000000c18 b SDL_keyboard
0000000000a1d610 0000000000000004 b track_mouse_down
0000000000a1d618 0000000000000128 b SDL_mouse
0000000000a1d740 0000000000000004 b send_quit_pending
0000000000a1d748 0000000000000008 b track_touchid
0000000000a1d750 0000000000000008 b track_fingerid
0000000000a1d758 0000000000000004 b finger_touching
0000000000a1d760 0000000000000008 b SDL_touchDevices
0000000000a1d768 0000000000000004 b SDL_num_touch
0000000000a1d770 0000000000000008 b SDL_haptics
0000000000a1d778 0000000000000010 b SDL_ignored_controllers
0000000000a1d788 0000000000000010 b SDL_allowed_controllers
0000000000a1d798 0000000000000001 b gamecontroller_magic
0000000000a1d7a0 0000000000000008 b s_pDefaultMapping
0000000000a1d7a8 0000000000000008 b s_pSupportedControllers
0000000000a1d7b0 0000000000000010 b s_zeroGUID
0000000000a1d7c0 0000000000000008 b SDL_gamecontrollers
0000000000a1d7c8 0000000000000001 B SDL_joystick_magic
0000000000a1d7cc 0000000000000004 b SDL_joystick_allows_background_events
0000000000a1d7d0 0000000000000008 b SDL_joystick_players
0000000000a1d7d8 0000000000000004 b SDL_joystick_player_count
0000000000a1d7e0 0000000000000008 b SDL_joysticks
0000000000a1d7e8 0000000000000004 b SDL_joysticks_quitting
0000000000a1d7ec 0000000000000004 b SDL_joysticks_initialized
0000000000a1d7f0 0000000000000004 b SDL_joysticks_locked
0000000000a1d7f8 0000000000000004 b SDL_joystick_lock_pending
0000000000a1d800 0000000000000008 b SDL_joystick_lock
0000000000a1d808 0000000000000001 b texture_magic
0000000000a1d809 0000000000000001 b renderer_magic
0000000000a1d80c 0000000000000004 b SDL_updating_sensor
0000000000a1d810 0000000000000008 b SDL_sensors
0000000000a1d818 0000000000000008 b SDL_sensor_lock
0000000000a1d820 0000000000000080 b SDL_global_error_str.0
0000000000a1d8a0 0000000000000028 b SDL_global_error.1
0000000000a1d8c8 0000000000000004 b tls_lock.2
0000000000a1d8cc 0000000000000004 b tls_being_created.3
0000000000a1d8d0 0000000000000004 b tls_errbuf.4
0000000000a1d8d4 0000000000000004 b tls_lock.5
0000000000a1d8d8 0000000000000004 b SDL_tls_id.6
0000000000a1d8e0 0000000000000008 b SDL_generic_TLS
0000000000a1d8e8 0000000000000008 b SDL_generic_TLS_mutex
0000000000a1d8f0 00000000000000d0 b SDL_timer_data
0000000000a1d9c0 0000000000000004 b formats_lock
0000000000a1d9c8 0000000000000008 b formats
0000000000a1d9d0 0000000000000004 b SDL_messagebox_count
0000000000a1d9d8 0000000000000008 b _this
0000000000a1d9e0 0000000000000004 b lock.0
0000000000a1d9e4 0000000000000004 b generic_local_storage
0000000000a1d9e8 0000000000000004 b operationMode
0000000000a1d9f0 0000000000000008 b switch_window
0000000000a1d9f8 00000000000003c0 b state
0000000000a1ddb8 0000000000000008 b start
0000000000a1ddc0 0000000000000001 b started
0000000000a1ddc8 0000000000000008 b g_VJoys
0000000000a1ddd0 0000000000000200 b keys
0000000000a1dfd0 0000000000000008 b last_timestamp
0000000000a1dfd8 0000000000000008 b prev_buttons
0000000000a1dfe0 0000000000000001 b kbdShown
0000000000a1dfe1 0000000000000001 b kbdInited
0000000000a1dfe8 0000000000000048 b kbdAppearArg
0000000000a1e030 00000000000005d8 b kbd
0000000000a1e608 0000000000000290 b touchStateOld
0000000000a1e898 0000000000000290 b touchState
0000000000a1eb28 0000000000000030 b dummy_thread
0000000000a1eb58 0000000000000008 b _eglDriver
0000000000a1eb60 0000000000000010 b _eglModuleMutex
0000000000a1eb70 0000000000000010 b _eglGlobalMutex
0000000000a1eb80 0000000000000004 b drifb_ID
0000000000a1eb88 0000000000000010 b nouveau_screen_mutex
0000000000a1eb98 0000000000000004 b id.1
0000000000a1eb9c 0000000000000004 b id.0
0000000000a1eba0 0000000000000040 b rest.3
0000000000a1ebe0 0000000000000001 b value.7
0000000000a1ebf0 0000000000001000 b buf.10
0000000000a1fbf0 0000000000000001 b initialized.0
0000000000a1fbf8 0000000000000010 B OneTimeLock
0000000000a1fc10 0000000000000400 B _mesa_ubyte_to_float_color_tab
0000000000a20010 0000000000000004 b oom_msg_id.0
0000000000a20018 0000000000000010 b DynamicIDMutex
0000000000a20028 0000000000000001 b tableInitialized.70
0000000000a20030 000000000000063c b InstSize
0000000000a2066c 0000000000000004 b error_msg_id.1
0000000000a20670 0000000000000004 b numCalls.2
0000000000a20678 0000000000000008 b LogFile
0000000000a20680 0000000000000001 b warned.0
0000000000a20688 0000000000000088 b unrecognized_extensions
0000000000a20710 0000000000000110 B _mesa_extension_override_disables
0000000000a20820 0000000000000110 B _mesa_extension_override_enables
0000000000a20930 0000000000000004 b msg_id.1
0000000000a20934 0000000000000004 b msg_id.2
0000000000a20940 00000000000004d8 b IncompleteFramebuffer
0000000000a20e18 0000000000000058 b DummyRenderbuffer
0000000000a20e70 00000000000004d8 b DummyFramebuffer
0000000000a21348 0000000000000004 b format_array_format_table_exists
0000000000a21350 0000000000000008 b format_array_format_table
0000000000a21358 0000000000000004 b msg_id.0
0000000000a2135c 0000000000000001 b initialized.0
0000000000a21360 00000000000012c8 B driDispatchRemapTable
0000000000a22628 0000000000000008 b path.0
0000000000a22630 0000000000000001 b read_env_var.1
0000000000a22634 0000000000000004 b msg_id.1
0000000000a22640 0000000000000bc0 b table.0
0000000000a23200 0000000000000001 b initialized.1
0000000000a23210 0000000000000bc0 b table.2
0000000000a23dd0 0000000000000001 b initialized.3
0000000000a23de0 0000000000000014 b token_tmp
0000000000a23df4 0000000000000001 b value.0
0000000000a23df8 0000000000000008 b value.0
0000000000a23e00 0000000000000004 B ST_DEBUG
0000000000a23e04 0000000000000004 b builtin_users
0000000000a23e08 0000000000000010 b builtins_lock
0000000000a23e20 0000000000000010 b builtins
0000000000a23e30 0000000000000008 b guard variable for (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a23e40 0000000000000108 b (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a23f48 0000000000000001 B ir_variable::temporaries_allocate_names
0000000000a23f4c 0000000000000004 B glcpp_parser_debug
0000000000a23f50 0000000000000030 B glsl_type::_atomic_uint_type
0000000000a23f80 0000000000000030 B glsl_type::_usubpassInputMS_type
0000000000a23fb0 0000000000000030 B glsl_type::_usubpassInput_type
0000000000a23fe0 0000000000000030 B glsl_type::_isubpassInputMS_type
0000000000a24010 0000000000000030 B glsl_type::_isubpassInput_type
0000000000a24040 0000000000000030 B glsl_type::_subpassInputMS_type
0000000000a24070 0000000000000030 B glsl_type::_subpassInput_type
0000000000a240a0 0000000000000030 B glsl_type::_uimage2DMSArray_type
0000000000a240d0 0000000000000030 B glsl_type::_uimage2DMS_type
0000000000a24100 0000000000000030 B glsl_type::_uimageCubeArray_type
0000000000a24130 0000000000000030 B glsl_type::_uimage2DArray_type
0000000000a24160 0000000000000030 B glsl_type::_uimage1DArray_type
0000000000a24190 0000000000000030 B glsl_type::_uimageBuffer_type
0000000000a241c0 0000000000000030 B glsl_type::_uimageCube_type
0000000000a241f0 0000000000000030 B glsl_type::_uimage2DRect_type
0000000000a24220 0000000000000030 B glsl_type::_uimage3D_type
0000000000a24250 0000000000000030 B glsl_type::_uimage2D_type
0000000000a24280 0000000000000030 B glsl_type::_uimage1D_type
0000000000a242b0 0000000000000030 B glsl_type::_iimage2DMSArray_type
0000000000a242e0 0000000000000030 B glsl_type::_iimage2DMS_type
0000000000a24310 0000000000000030 B glsl_type::_iimageCubeArray_type
0000000000a24340 0000000000000030 B glsl_type::_iimage2DArray_type
0000000000a24370 0000000000000030 B glsl_type::_iimage1DArray_type
0000000000a243a0 0000000000000030 B glsl_type::_iimageBuffer_type
0000000000a243d0 0000000000000030 B glsl_type::_iimageCube_type
0000000000a24400 0000000000000030 B glsl_type::_iimage2DRect_type
0000000000a24430 0000000000000030 B glsl_type::_iimage3D_type
0000000000a24460 0000000000000030 B glsl_type::_iimage2D_type
0000000000a24490 0000000000000030 B glsl_type::_iimage1D_type
0000000000a244c0 0000000000000030 B glsl_type::_image2DMSArray_type
0000000000a244f0 0000000000000030 B glsl_type::_image2DMS_type
0000000000a24520 0000000000000030 B glsl_type::_imageCubeArray_type
0000000000a24550 0000000000000030 B glsl_type::_image2DArray_type
0000000000a24580 0000000000000030 B glsl_type::_image1DArray_type
0000000000a245b0 0000000000000030 B glsl_type::_imageBuffer_type
0000000000a245e0 0000000000000030 B glsl_type::_imageCube_type
0000000000a24610 0000000000000030 B glsl_type::_image2DRect_type
0000000000a24640 0000000000000030 B glsl_type::_image3D_type
0000000000a24670 0000000000000030 B glsl_type::_image2D_type
0000000000a246a0 0000000000000030 B glsl_type::_image1D_type
0000000000a246d0 0000000000000030 B glsl_type::_samplerExternalOES_type
0000000000a24700 0000000000000030 B glsl_type::_sampler2DRectShadow_type
0000000000a24730 0000000000000030 B glsl_type::_samplerCubeArrayShadow_type
0000000000a24760 0000000000000030 B glsl_type::_sampler2DArrayShadow_type
0000000000a24790 0000000000000030 B glsl_type::_sampler1DArrayShadow_type
0000000000a247c0 0000000000000030 B glsl_type::_samplerCubeShadow_type
0000000000a247f0 0000000000000030 B glsl_type::_sampler2DShadow_type
0000000000a24820 0000000000000030 B glsl_type::_sampler1DShadow_type
0000000000a24850 0000000000000030 B glsl_type::_usampler2DMSArray_type
0000000000a24880 0000000000000030 B glsl_type::_usampler2DMS_type
0000000000a248b0 0000000000000030 B glsl_type::_usamplerBuffer_type
0000000000a248e0 0000000000000030 B glsl_type::_usampler2DRect_type
0000000000a24910 0000000000000030 B glsl_type::_usamplerCubeArray_type
0000000000a24940 0000000000000030 B glsl_type::_usampler2DArray_type
0000000000a24970 0000000000000030 B glsl_type::_usampler1DArray_type
0000000000a249a0 0000000000000030 B glsl_type::_usamplerCube_type
0000000000a249d0 0000000000000030 B glsl_type::_usampler3D_type
0000000000a24a00 0000000000000030 B glsl_type::_usampler2D_type
0000000000a24a30 0000000000000030 B glsl_type::_usampler1D_type
0000000000a24a60 0000000000000030 B glsl_type::_isampler2DMSArray_type
0000000000a24a90 0000000000000030 B glsl_type::_isampler2DMS_type
0000000000a24ac0 0000000000000030 B glsl_type::_isamplerBuffer_type
0000000000a24af0 0000000000000030 B glsl_type::_isampler2DRect_type
0000000000a24b20 0000000000000030 B glsl_type::_isamplerCubeArray_type
0000000000a24b50 0000000000000030 B glsl_type::_isampler2DArray_type
0000000000a24b80 0000000000000030 B glsl_type::_isampler1DArray_type
0000000000a24bb0 0000000000000030 B glsl_type::_isamplerCube_type
0000000000a24be0 0000000000000030 B glsl_type::_isampler3D_type
0000000000a24c10 0000000000000030 B glsl_type::_isampler2D_type
0000000000a24c40 0000000000000030 B glsl_type::_isampler1D_type
0000000000a24c70 0000000000000030 B glsl_type::_sampler2DMSArray_type
0000000000a24ca0 0000000000000030 B glsl_type::_sampler2DMS_type
0000000000a24cd0 0000000000000030 B glsl_type::_samplerBuffer_type
0000000000a24d00 0000000000000030 B glsl_type::_sampler2DRect_type
0000000000a24d30 0000000000000030 B glsl_type::_samplerCubeArray_type
0000000000a24d60 0000000000000030 B glsl_type::_sampler2DArray_type
0000000000a24d90 0000000000000030 B glsl_type::_sampler1DArray_type
0000000000a24dc0 0000000000000030 B glsl_type::_samplerCube_type
0000000000a24df0 0000000000000030 B glsl_type::_sampler3D_type
0000000000a24e20 0000000000000030 B glsl_type::_sampler2D_type
0000000000a24e50 0000000000000030 B glsl_type::_sampler1D_type
0000000000a24e80 0000000000000030 B glsl_type::_sampler_type
0000000000a24eb0 0000000000000030 B glsl_type::_dmat4x3_type
0000000000a24ee0 0000000000000030 B glsl_type::_dmat4x2_type
0000000000a24f10 0000000000000030 B glsl_type::_dmat3x4_type
0000000000a24f40 0000000000000030 B glsl_type::_dmat3x2_type
0000000000a24f70 0000000000000030 B glsl_type::_dmat2x4_type
0000000000a24fa0 0000000000000030 B glsl_type::_dmat2x3_type
0000000000a24fd0 0000000000000030 B glsl_type::_dmat4_type
0000000000a25000 0000000000000030 B glsl_type::_dmat3_type
0000000000a25030 0000000000000030 B glsl_type::_dmat2_type
0000000000a25060 0000000000000030 B glsl_type::_f16mat4x3_type
0000000000a25090 0000000000000030 B glsl_type::_f16mat4x2_type
0000000000a250c0 0000000000000030 B glsl_type::_f16mat3x4_type
0000000000a250f0 0000000000000030 B glsl_type::_f16mat3x2_type
0000000000a25120 0000000000000030 B glsl_type::_f16mat2x4_type
0000000000a25150 0000000000000030 B glsl_type::_f16mat2x3_type
0000000000a25180 0000000000000030 B glsl_type::_f16mat4_type
0000000000a251b0 0000000000000030 B glsl_type::_f16mat3_type
0000000000a251e0 0000000000000030 B glsl_type::_f16mat2_type
0000000000a25210 0000000000000030 B glsl_type::_mat4x3_type
0000000000a25240 0000000000000030 B glsl_type::_mat4x2_type
0000000000a25270 0000000000000030 B glsl_type::_mat3x4_type
0000000000a252a0 0000000000000030 B glsl_type::_mat3x2_type
0000000000a252d0 0000000000000030 B glsl_type::_mat2x4_type
0000000000a25300 0000000000000030 B glsl_type::_mat2x3_type
0000000000a25330 0000000000000030 B glsl_type::_mat4_type
0000000000a25360 0000000000000030 B glsl_type::_mat3_type
0000000000a25390 0000000000000030 B glsl_type::_mat2_type
0000000000a253c0 0000000000000030 B glsl_type::_u8vec16_type
0000000000a253f0 0000000000000030 B glsl_type::_u8vec8_type
0000000000a25420 0000000000000030 B glsl_type::_u8vec4_type
0000000000a25450 0000000000000030 B glsl_type::_u8vec3_type
0000000000a25480 0000000000000030 B glsl_type::_u8vec2_type
0000000000a254b0 0000000000000030 B glsl_type::_uint8_t_type
0000000000a254e0 0000000000000030 B glsl_type::_i8vec16_type
0000000000a25510 0000000000000030 B glsl_type::_i8vec8_type
0000000000a25540 0000000000000030 B glsl_type::_i8vec4_type
0000000000a25570 0000000000000030 B glsl_type::_i8vec3_type
0000000000a255a0 0000000000000030 B glsl_type::_i8vec2_type
0000000000a255d0 0000000000000030 B glsl_type::_int8_t_type
0000000000a25600 0000000000000030 B glsl_type::_u16vec16_type
0000000000a25630 0000000000000030 B glsl_type::_u16vec8_type
0000000000a25660 0000000000000030 B glsl_type::_u16vec4_type
0000000000a25690 0000000000000030 B glsl_type::_u16vec3_type
0000000000a256c0 0000000000000030 B glsl_type::_u16vec2_type
0000000000a256f0 0000000000000030 B glsl_type::_uint16_t_type
0000000000a25720 0000000000000030 B glsl_type::_i16vec16_type
0000000000a25750 0000000000000030 B glsl_type::_i16vec8_type
0000000000a25780 0000000000000030 B glsl_type::_i16vec4_type
0000000000a257b0 0000000000000030 B glsl_type::_i16vec3_type
0000000000a257e0 0000000000000030 B glsl_type::_i16vec2_type
0000000000a25810 0000000000000030 B glsl_type::_int16_t_type
0000000000a25840 0000000000000030 B glsl_type::_u64vec16_type
0000000000a25870 0000000000000030 B glsl_type::_u64vec8_type
0000000000a258a0 0000000000000030 B glsl_type::_u64vec4_type
0000000000a258d0 0000000000000030 B glsl_type::_u64vec3_type
0000000000a25900 0000000000000030 B glsl_type::_u64vec2_type
0000000000a25930 0000000000000030 B glsl_type::_uint64_t_type
0000000000a25960 0000000000000030 B glsl_type::_i64vec16_type
0000000000a25990 0000000000000030 B glsl_type::_i64vec8_type
0000000000a259c0 0000000000000030 B glsl_type::_i64vec4_type
0000000000a259f0 0000000000000030 B glsl_type::_i64vec3_type
0000000000a25a20 0000000000000030 B glsl_type::_i64vec2_type
0000000000a25a50 0000000000000030 B glsl_type::_int64_t_type
0000000000a25a80 0000000000000030 B glsl_type::_dvec16_type
0000000000a25ab0 0000000000000030 B glsl_type::_dvec8_type
0000000000a25ae0 0000000000000030 B glsl_type::_dvec4_type
0000000000a25b10 0000000000000030 B glsl_type::_dvec3_type
0000000000a25b40 0000000000000030 B glsl_type::_dvec2_type
0000000000a25b70 0000000000000030 B glsl_type::_double_type
0000000000a25ba0 0000000000000030 B glsl_type::_f16vec16_type
0000000000a25bd0 0000000000000030 B glsl_type::_f16vec8_type
0000000000a25c00 0000000000000030 B glsl_type::_f16vec4_type
0000000000a25c30 0000000000000030 B glsl_type::_f16vec3_type
0000000000a25c60 0000000000000030 B glsl_type::_f16vec2_type
0000000000a25c90 0000000000000030 B glsl_type::_float16_t_type
0000000000a25cc0 0000000000000030 B glsl_type::_vec16_type
0000000000a25cf0 0000000000000030 B glsl_type::_vec8_type
0000000000a25d20 0000000000000030 B glsl_type::_vec4_type
0000000000a25d50 0000000000000030 B glsl_type::_vec3_type
0000000000a25d80 0000000000000030 B glsl_type::_vec2_type
0000000000a25db0 0000000000000030 B glsl_type::_float_type
0000000000a25de0 0000000000000030 B glsl_type::_uvec16_type
0000000000a25e10 0000000000000030 B glsl_type::_uvec8_type
0000000000a25e40 0000000000000030 B glsl_type::_uvec4_type
0000000000a25e70 0000000000000030 B glsl_type::_uvec3_type
0000000000a25ea0 0000000000000030 B glsl_type::_uvec2_type
0000000000a25ed0 0000000000000030 B glsl_type::_uint_type
0000000000a25f00 0000000000000030 B glsl_type::_ivec16_type
0000000000a25f30 0000000000000030 B glsl_type::_ivec8_type
0000000000a25f60 0000000000000030 B glsl_type::_ivec4_type
0000000000a25f90 0000000000000030 B glsl_type::_ivec3_type
0000000000a25fc0 0000000000000030 B glsl_type::_ivec2_type
0000000000a25ff0 0000000000000030 B glsl_type::_int_type
0000000000a26020 0000000000000030 B glsl_type::_bvec16_type
0000000000a26050 0000000000000030 B glsl_type::_bvec8_type
0000000000a26080 0000000000000030 B glsl_type::_bvec4_type
0000000000a260b0 0000000000000030 B glsl_type::_bvec3_type
0000000000a260e0 0000000000000030 B glsl_type::_bvec2_type
0000000000a26110 0000000000000030 B glsl_type::_bool_type
0000000000a26140 0000000000000030 B glsl_type::_void_type
0000000000a26170 0000000000000030 B glsl_type::_error_type
0000000000a261a0 0000000000000008 b guard variable for glsl_type::u8vec(unsigned int)::ts
0000000000a261b0 0000000000000030 b glsl_type::u8vec(unsigned int)::ts
0000000000a261e0 0000000000000008 b guard variable for glsl_type::i8vec(unsigned int)::ts
0000000000a261f0 0000000000000030 b glsl_type::i8vec(unsigned int)::ts
0000000000a26220 0000000000000008 b guard variable for glsl_type::u16vec(unsigned int)::ts
0000000000a26230 0000000000000030 b glsl_type::u16vec(unsigned int)::ts
0000000000a26260 0000000000000008 b guard variable for glsl_type::i16vec(unsigned int)::ts
0000000000a26270 0000000000000030 b glsl_type::i16vec(unsigned int)::ts
0000000000a262a0 0000000000000008 b guard variable for glsl_type::u64vec(unsigned int)::ts
0000000000a262b0 0000000000000030 b glsl_type::u64vec(unsigned int)::ts
0000000000a262e0 0000000000000008 b guard variable for glsl_type::i64vec(unsigned int)::ts
0000000000a262f0 0000000000000030 b glsl_type::i64vec(unsigned int)::ts
0000000000a26320 0000000000000008 b guard variable for glsl_type::bvec(unsigned int)::ts
0000000000a26330 0000000000000030 b glsl_type::bvec(unsigned int)::ts
0000000000a26360 0000000000000008 b guard variable for glsl_type::uvec(unsigned int)::ts
0000000000a26370 0000000000000030 b glsl_type::uvec(unsigned int)::ts
0000000000a263a0 0000000000000008 b guard variable for glsl_type::ivec(unsigned int)::ts
0000000000a263b0 0000000000000030 b glsl_type::ivec(unsigned int)::ts
0000000000a263e0 0000000000000008 b guard variable for glsl_type::dvec(unsigned int)::ts
0000000000a263f0 0000000000000030 b glsl_type::dvec(unsigned int)::ts
0000000000a26420 0000000000000008 b guard variable for glsl_type::f16vec(unsigned int)::ts
0000000000a26430 0000000000000030 b glsl_type::f16vec(unsigned int)::ts
0000000000a26460 0000000000000008 b guard variable for glsl_type::vec(unsigned int)::ts
0000000000a26470 0000000000000030 b glsl_type::vec(unsigned int)::ts
0000000000a264a0 0000000000000004 b glsl_type_users
0000000000a264a8 0000000000000008 B glsl_type::subroutine_types
0000000000a264b0 0000000000000008 B glsl_type::function_types
0000000000a264b8 0000000000000008 B glsl_type::interface_types
0000000000a264c0 0000000000000008 B glsl_type::struct_types
0000000000a264c8 0000000000000008 B glsl_type::array_types
0000000000a264d0 0000000000000008 B glsl_type::explicit_matrix_types
0000000000a264d8 0000000000000010 B glsl_type::hash_mutex
0000000000a264f0 0000000000000400 b views.0
0000000000a268f0 0000000000000100 b zeros.1
0000000000a269f0 0000000000000080 b error_tokens
0000000000a26a70 0000000000000004 b id.0
0000000000a26a80 0000000000000080 b buffer.1
0000000000a26b00 0000000000000004 B nouveau_mesa_debug
0000000000a26b04 0000000000000004 b id.1
0000000000a26b08 0000000000000004 b id.0
0000000000a26b10 0000000000000008 b fout.0
0000000000a26b18 0000000000000004 b cpu_once_flag
0000000000a26b20 0000000000000014 B util_cpu_caps
0000000000a26b38 0000000000000018 b address_reg
0000000000a26b50 0000000000000018 b undef_dst
0000000000a26b68 0000000000000018 b undef_src
0000000000a26b80 0000000000000050 b buf.0
0000000000a26bd0 0000000000000064 b str.3
0000000000a26c38 000000000000000a b s.4
0000000000a26c50 0000000000000014 b s.6
0000000000a26c70 0000000000000014 b s.9
0000000000a26c90 00000000000003f0 B _mesa_DummyProgram
0000000000a27080 00000000000000c8 b DummyShader
0000000000a27148 0000000000000004 b id.0
0000000000a2714c 0000000000000004 b id.1
0000000000a27150 0000000000000001 b disable.2
0000000000a27151 0000000000000001 b read.3
0000000000a27158 00000000000000a0 b DummyBufferObject
0000000000a271f8 0000000000000004 b warnCount.0
0000000000a27200 0000000000000004 b DummySemaphoreObject
0000000000a27204 0000000000000004 b count.0
0000000000a27210 0000000000000078 b inv_tab
0000000000a27288 0000000000000004 b NumCachedShaders
0000000000a27290 0000000000004800 b CachedShaders
0000000000a2ba90 0000000000000004 b glsl_to_tgsi_visitor::visit(ir_constant*)::in_array
0000000000a2ba98 0000000000000020 b sampler_reladdr
0000000000a2bab8 0000000000000020 b address_reg2
0000000000a2bad8 0000000000000020 b address_reg
0000000000a2baf8 0000000000000020 b undef_dst
0000000000a2bb18 0000000000000020 b undef_src
0000000000a2bb38 0000000000000030 B glsl_type::_struct_gl_FogParameters_type
0000000000a2bb68 0000000000000030 B glsl_type::_struct_gl_LightProducts_type
0000000000a2bb98 0000000000000030 B glsl_type::_struct_gl_LightModelProducts_type
0000000000a2bbc8 0000000000000030 B glsl_type::_struct_gl_LightModelParameters_type
0000000000a2bbf8 0000000000000030 B glsl_type::_struct_gl_LightSourceParameters_type
0000000000a2bc28 0000000000000030 B glsl_type::_struct_gl_MaterialParameters_type
0000000000a2bc58 0000000000000030 B glsl_type::_struct_gl_PointParameters_type
0000000000a2bc88 0000000000000030 B glsl_type::_struct_gl_DepthRangeParameters_type
0000000000a2bcc0 00000000000000f0 b gl_FogParameters_fields
0000000000a2bdb0 0000000000000090 b gl_LightProducts_fields
0000000000a2be40 0000000000000030 b gl_LightModelProducts_fields
0000000000a2be70 0000000000000030 b gl_LightModelParameters_fields
0000000000a2bea0 0000000000000240 b gl_LightSourceParameters_fields
0000000000a2c0e0 00000000000000f0 b gl_MaterialParameters_fields
0000000000a2c1d0 0000000000000150 b gl_PointParameters_fields
0000000000a2c320 0000000000000090 b gl_DepthRangeParameters_fields
0000000000a2c3b0 0000000000000008 b nv50_ir::colour
0000000000a2c3c0 0000000000000121 B nv50_ir::GCRA::relDegree
0000000000a2c4f0 0000000000000014 b s.0
0000000000a2c504 0000000000000001 b value.0
0000000000a2c508 0000000000000004 b (anonymous namespace)::get_static_cond()::once
0000000000a2c510 0000000000000010 b (anonymous namespace)::fake_cond
0000000000a2c520 0000000000000008 b (anonymous namespace)::static_cond
0000000000a2c528 0000000000000004 b (anonymous namespace)::get_static_mutex()::once
0000000000a2c530 0000000000000010 b (anonymous namespace)::fake_mutex
0000000000a2c540 0000000000000008 b (anonymous namespace)::static_mutex
0000000000a2c550 0000000000000028 b (anonymous namespace)::emergency_pool
0000000000a2c578 0000000000000008 b (anonymous namespace)::__new_handler
0000000000a2c580 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
0000000000a2c5a0 0000000000000004 b init
0000000000a2c5a4 0000000000000001 B __eh_globals_init::_S_init
0000000000a2c5a8 0000000000000010 b (anonymous namespace)::eh_globals
0000000000a2c5b8 0000000000000010 b dynamic_mutex.0
0000000000a2c5c8 0000000000000004 b flag.1
0000000000a2c5cc 0000000000000004 b num_dynamic_stubs
0000000000a2c5d0 0000000000001800 b dynamic_stubs
0000000000a2ddd0 0000000000000008 b nop_handler
0000000000a2ddd8 0000000000000008 b g_appletGuard
0000000000a2dde0 0000000000000001 b g_appletInfoInitialized
0000000000a2dde8 0000000000000050 b g_appletInfo
0000000000a2de38 0000000000000004 b g_appletCpuBoostMode
0000000000a2de3c 0000000000000004 b g_appletThemeColorType
0000000000a2de40 000000000000000c b g_appletLibraryAppletLaunchableEvent
0000000000a2de4c 0000000000000001 b g_appletSuspendedTickInitialized
0000000000a2de50 0000000000000008 b g_appletSuspendedTick
0000000000a2de58 0000000000000008 b g_appletInitTickBase
0000000000a2de60 000000000000000c b g_appletSuspendedTickEvent
0000000000a2de6c 0000000000000001 b g_appletCopyrightInitialized
0000000000a2de70 0000000000000028 b g_appletCopyrightTmem
0000000000a2de98 0000000000000004 b g_appletRecordingInitialized
0000000000a2dea0 0000000000000028 b g_appletRecordingTmem
0000000000a2dec8 0000000000000018 b g_appletFirstHook
0000000000a2dee0 0000000000000001 b g_appletNotifiedRunning
0000000000a2dee1 0000000000000001 b g_appletFocusState
0000000000a2dee4 0000000000000004 b g_appletPerformanceMode
0000000000a2dee8 0000000000000001 b g_appletOperationMode
0000000000a2def0 0000000000000008 b g_appletResourceUserId
0000000000a2def8 000000000000000c b g_appletMessageEvent
0000000000a2df08 0000000000000010 b g_appletIDebugFunctions
0000000000a2df18 0000000000000010 b g_appletIDisplayController
0000000000a2df28 0000000000000010 b g_appletIAudioController
0000000000a2df38 0000000000000010 b g_appletIWindowController
0000000000a2df48 0000000000000010 b g_appletISelfController
0000000000a2df58 0000000000000010 b g_appletICommonStateGetter
0000000000a2df68 0000000000000010 b g_appletILibraryAppletCreator
0000000000a2df78 0000000000000010 b g_appletIProcessWindingController
0000000000a2df88 0000000000000010 b g_appletILibraryAppletSelfAccessor
0000000000a2df98 0000000000000010 b g_appletIApplicationCreator
0000000000a2dfa8 0000000000000010 b g_appletIGlobalStateController
0000000000a2dfb8 0000000000000010 b g_appletIFunctions
0000000000a2dfc8 0000000000000010 b g_appletIAppletCommonFunctions
0000000000a2dfd8 0000000000000004 b g_appletExitProcessResult
0000000000a2dfdc 0000000000000001 b g_appletExitProcessFlag
0000000000a2dfdd 0000000000000001 b g_appletLeftInitialized
0000000000a2dfe0 0000000000000010 b g_appletProxySession
0000000000a2dff0 0000000000000010 b g_appletSrv
0000000000a2e000 0000000000000004 V __nx_applet_exit_mode
0000000000a2e008 0000000000000008 V __nx_applet_PerformanceConfiguration
0000000000a2e010 0000000000000080 V __nx_applet_AppletAttribute
0000000000a2e090 0000000000000008 b g_audrenGuard
0000000000a2e098 000000000000000c b g_audrenEvent
0000000000a2e0a8 0000000000000028 b g_audrenWorkBuf
0000000000a2e0d0 0000000000000010 b g_audrenIAudioRenderer
0000000000a2e0e0 0000000000000004 B g_audrenRevision
0000000000a2e0e8 0000000000000008 b g_hidGuard
0000000000a2e0f0 0000000000000008 b g_sevenSixAxisSensorBuffer
0000000000a2e0f8 0000000000000004 b g_hidVibrationMutex
0000000000a2e100 0000000000000020 b g_hidSharedmem
0000000000a2e120 0000000000000010 b g_hidIActiveVibrationDeviceList
0000000000a2e130 0000000000000010 b g_hidIAppletResource
0000000000a2e140 0000000000000010 b g_hidSrv
0000000000a2e150 0000000000000008 b g_nvGuard
0000000000a2e158 0000000000000028 b g_nvTransfermem
0000000000a2e180 0000000000000010 b g_nvSrvClone
0000000000a2e190 0000000000000010 b g_nvSrv
0000000000a2e1a0 0000000000000008 b g_psmGuard
0000000000a2e1a8 0000000000000010 b g_psmSrv
0000000000a2e1b8 0000000000000008 b g_smGuard
0000000000a2e1c0 0000000000000008 b g_smOverridesNum
0000000000a2e1c8 0000000000000180 b g_smOverrides
0000000000a2e348 0000000000000010 b g_smSrv
0000000000a2e358 0000000000000008 b g_nvFenceGuard
0000000000a2e360 0000000000000300 b g_NvEvents
0000000000a2e660 0000000000000008 b g_NvEventUsedMask
0000000000a2e668 0000000000000008 b g_nvGpuGuard
0000000000a2e670 0000000000000004 b g_tpc_masks
0000000000a2e678 0000000000000028 b g_zcull_info
0000000000a2e6a0 0000000000000004 b g_zcull_ctx_size
0000000000a2e6a8 00000000000000a0 b g_gpu_characteristics
0000000000a2e748 0000000000000008 b g_nvMapGuard
0000000000a2e750 0000000000000080 b g_defaultWin
0000000000a2e7d0 0000000000000010 b g_viLayer
0000000000a2e7e0 0000000000000050 b g_viDisplay
0000000000a2e830 0000000000000001 b g_libappletJumpFlag
0000000000a2e838 0000000000000008 b g_userIdStorage
0000000000a2e840 0000000000000010 b g_randomSeed
0000000000a2e850 0000000000000001 b g_hasRandomSeed
0000000000a2e854 0000000000000004 b g_lastLoadResult
0000000000a2e858 0000000000000008 b g_nextLoadArgv
0000000000a2e860 0000000000000008 b g_nextLoadPath
0000000000a2e868 0000000000000004 b g_processHandle
0000000000a2e870 0000000000000018 b g_syscallHints
0000000000a2e888 0000000000000008 b g_overrideArgv
0000000000a2e890 0000000000000008 b g_overrideHeapSize
0000000000a2e898 0000000000000008 b g_overrideHeapAddr
0000000000a2e8a0 0000000000000008 b g_loaderRetAddr
0000000000a2e8a8 0000000000000004 b g_mainThreadHandle
0000000000a2e8b0 0000000000000008 b g_loaderInfoSize
0000000000a2e8b8 0000000000000008 b g_loaderInfo
0000000000a2e8c0 0000000000000001 b g_isNso
0000000000a2e8c4 0000000000000004 b g_hosVersion
0000000000a2e8c8 0000000000000008 V __romfs_path
0000000000a2e8d0 0000000000003b00 b romfs_mounts
0000000000a323d0 0000000000000001 b romfs_initialised
0000000000a323d8 B __stack_top
0000000000a323e0 0000000000000001 b g_IsLegacyKernel
0000000000a323e8 0000000000000008 b g_Reservations
0000000000a323f0 0000000000000010 b g_StackRegion
0000000000a32400 0000000000000010 b g_AslrRegion
0000000000a32410 0000000000000010 b g_HeapRegion
0000000000a32420 0000000000000010 b g_AliasRegion
0000000000a32430 0000000000000004 b g_VirtmemMutex
0000000000a32438 0000000000000008 b g_apmGuard
0000000000a32440 0000000000000010 b g_apmISession
0000000000a32450 0000000000000010 b g_apmSrv
0000000000a32460 0000000000000054 b g_bsdSessionMgr
0000000000a324b8 0000000000000008 b g_fsGuard
0000000000a324c0 0000000000000054 b g_fsSessionMgr
0000000000a32518 0000000000000010 b g_fsSrv
0000000000a32528 0000000000000008 b g_viGuard
0000000000a32530 0000000000000010 b g_viIHOSBinderDriverIndirect
0000000000a32540 0000000000000010 b g_viIManagerDisplayService
0000000000a32550 0000000000000010 b g_viISystemDisplayService
0000000000a32560 0000000000000010 b g_viIHOSBinderDriverRelay
0000000000a32570 0000000000000010 b g_viIApplicationDisplayService
0000000000a32580 0000000000000010 b g_viRootService
0000000000a32590 0000000000000008 V __nx_vi_layer_id
0000000000a32598 0000000000000008 b g_argv_empty
0000000000a325a0 0000000000000008 B __system_argv
0000000000a325a8 0000000000000004 B __system_argc
0000000000a325b0 0000000000000340 B __nx_exceptiondump
0000000000a328f0 0000000000000004 V __nx_exception_ignoredebug
0000000000a32900 0000000000000400 V __nx_exception_stack
0000000000a32d00 0000000000000008 V __nx_heap_size
0000000000a32d08 0000000000000008 b __bootticks
0000000000a32d10 0000000000000008 b __boottime
0000000000a32d18 0000000000000004 V __nx_time_type
0000000000a32d20 0000000000000004 B __nxlink_host
0000000000a32d30 0000000000002800 b fsdev_fsdevices
0000000000a35530 0000000000000004 b fsdev_fsdevice_cwd
0000000000a35534 0000000000000001 b fsdev_initialised
0000000000a35538 0000000000000004 b g_randMutex
0000000000a3553c 0000000000000001 b g_randInit
0000000000a35540 0000000000000040 b g_chacha
0000000000a35580 00000000000000d8 b g_tlsDestructors
0000000000a35658 0000000000000008 b g_tlsUsageMask
0000000000a35660 0000000000000038 b g_mainThread
0000000000a35698 0000000000000008 b g_threadList
0000000000a356a0 0000000000000004 b g_threadMutex
0000000000a356a8 0000000000000008 b g_setsysGuard
0000000000a356b0 0000000000000010 b g_setsysSrv
0000000000a356c0 0000000000000008 b g_timeGuard
0000000000a356c8 0000000000000020 b g_timeSharedmem
0000000000a356e8 0000000000000010 b g_timeLocalSystemClock
0000000000a356f8 0000000000000010 b g_timeTimeZoneService
0000000000a35708 0000000000000010 b g_timeSteadyClock
0000000000a35718 0000000000000010 b g_timeNetworkSystemClock
0000000000a35728 0000000000000010 b g_timeUserSystemClock
0000000000a35738 0000000000000010 b g_timeSrv
0000000000a35748 0000000000000004 V __nx_time_service_type
0000000000a35750 0000000000000008 b hb_language_get_default::default_language
0000000000a35758 0000000000000008 b langs
0000000000a35760 0000000000000004 B _hb_options
0000000000a35768 0000000000000008 b static_ot_funcs
0000000000a35770 0000000000000001 b hb_ot_font_cmap_cache_user_data_key
0000000000a35778 0000000000000008 b static_outline_recording_pen_funcs
0000000000a35780 0000000000000008 b static_shapers
0000000000a35790 0000000000000280 B _hb_CrapPool
0000000000a35a10 0000000000000008 b static_ft_funcs
0000000000a35a18 0000000000000008 b static_paint_extents_funcs
0000000000a35a20 0000000000000008 b static_draw_extents_funcs
0000000000a35a28 0000000000000004 b hb_ot_tags_from_language(char const*, char const*, unsigned int*, unsigned int*)::last_tag_idx
0000000000a35a30 0000000000000008 b static_ucd_funcs
0000000000a35a38 0000000000000004 b once_regsizes.0
0000000000a35a40 0000000000000062 b dwarf_reg_size_table
0000000000a35aa8 0000000000000010 b object_mutex
0000000000a35ab8 0000000000000008 b seen_objects
0000000000a35ac0 0000000000000008 b unseen_objects
0000000000a35ac8 000000000000000c b __sfp_recursive_mutex
0000000000a35ad8 0000000000000228 B __sf
0000000000a35d00 0000000000000008 B __stdio_exit_handler
0000000000a35d08 0000000000000050 B __malloc_current_mallinfo
0000000000a35d58 0000000000000008 B __malloc_max_total_mem
0000000000a35d60 0000000000000008 B __malloc_max_sbrked_mem
0000000000a35d68 0000000000000008 B __malloc_top_pad
0000000000a35d70 000000000000000c b __malloc_recursive_mutex
0000000000a35d7c 0000000000000004 b alloced.0
0000000000a35d80 000000000000000c b __env_recursive_mutex
0000000000a35d90 0000000000000008 b initial_env
0000000000a35d98 0000000000000318 B __atexit0
0000000000a360b0 0000000000000008 B __atexit
0000000000a360b8 000000000000000c B __atexit_recursive_mutex
0000000000a360d0 0000000000000400 b temp_cwd
0000000000a364d0 0000000000000004 b __hndl_lock
0000000000a364d8 0000000000000008 B fake_heap_start
0000000000a364e0 0000000000000008 B fake_heap_end
0000000000a364e8 0000000000000004 b __pthread_once_cv
0000000000a364ec 0000000000000004 b __pthread_once_lock
0000000000a364f0 0000000000000008 b heap_start.0
0000000000a364f8 0000000000000020 B music_spec
0000000000a36518 0000000000000400 B master_drumset
0000000000a36918 0000000000000400 B master_tonebank
0000000000a36d18 b __tls_start
0000000000a37148 b __bss_end__
0000000000a37148 b __end__
0000000000a37148 b __tls_end
0000000000a38000 b __argdata__
